// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2022.1 (win64) Build 3526262 Mon Apr 18 15:48:16 MDT 2022
// Date        : Mon Dec  4 13:59:43 2023
// Host        : Tony-VPI4CJD running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ vc709_fmc_ep_sim_netlist.v
// Design      : vc709_fmc_ep
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7vx690tffg1761-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "vc709_fmc_ep,vc709_fmc_ep_pcie_3_0_7vx,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "vc709_fmc_ep_pcie_3_0_7vx,Vivado 2022.1" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (pci_exp_txn,
    pci_exp_txp,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_pclk_in,
    pipe_rxusrclk_in,
    pipe_rxoutclk_in,
    pipe_dclk_in,
    pipe_userclk1_in,
    pipe_userclk2_in,
    pipe_oobclk_in,
    pipe_mmcm_lock_in,
    pipe_txoutclk_out,
    pipe_rxoutclk_out,
    pipe_pclk_sel_out,
    pipe_gen3_out,
    pipe_mmcm_rst_n,
    mmcm_lock,
    user_clk,
    user_reset,
    user_lnk_up,
    user_app_rdy,
    s_axis_rq_tlast,
    s_axis_rq_tdata,
    s_axis_rq_tuser,
    s_axis_rq_tkeep,
    s_axis_rq_tready,
    s_axis_rq_tvalid,
    m_axis_rc_tdata,
    m_axis_rc_tuser,
    m_axis_rc_tlast,
    m_axis_rc_tkeep,
    m_axis_rc_tvalid,
    m_axis_rc_tready,
    m_axis_cq_tdata,
    m_axis_cq_tuser,
    m_axis_cq_tlast,
    m_axis_cq_tkeep,
    m_axis_cq_tvalid,
    m_axis_cq_tready,
    s_axis_cc_tdata,
    s_axis_cc_tuser,
    s_axis_cc_tlast,
    s_axis_cc_tkeep,
    s_axis_cc_tvalid,
    s_axis_cc_tready,
    pcie_rq_seq_num,
    pcie_rq_seq_num_vld,
    pcie_rq_tag,
    pcie_rq_tag_vld,
    pcie_tfc_nph_av,
    pcie_tfc_npd_av,
    pcie_cq_np_req,
    pcie_cq_np_req_count,
    cfg_phy_link_down,
    cfg_phy_link_status,
    cfg_negotiated_width,
    cfg_current_speed,
    cfg_max_payload,
    cfg_max_read_req,
    cfg_function_status,
    cfg_function_power_state,
    cfg_vf_status,
    cfg_vf_power_state,
    cfg_link_power_state,
    cfg_mgmt_addr,
    cfg_mgmt_write,
    cfg_mgmt_write_data,
    cfg_mgmt_byte_enable,
    cfg_mgmt_read,
    cfg_mgmt_read_data,
    cfg_mgmt_read_write_done,
    cfg_mgmt_type1_cfg_reg_access,
    cfg_err_cor_out,
    cfg_err_nonfatal_out,
    cfg_err_fatal_out,
    cfg_ltr_enable,
    cfg_ltssm_state,
    cfg_rcb_status,
    cfg_dpa_substate_change,
    cfg_obff_enable,
    cfg_pl_status_change,
    cfg_tph_requester_enable,
    cfg_tph_st_mode,
    cfg_vf_tph_requester_enable,
    cfg_vf_tph_st_mode,
    cfg_msg_received,
    cfg_msg_received_data,
    cfg_msg_received_type,
    cfg_msg_transmit,
    cfg_msg_transmit_type,
    cfg_msg_transmit_data,
    cfg_msg_transmit_done,
    cfg_fc_ph,
    cfg_fc_pd,
    cfg_fc_nph,
    cfg_fc_npd,
    cfg_fc_cplh,
    cfg_fc_cpld,
    cfg_fc_sel,
    cfg_per_func_status_control,
    cfg_per_func_status_data,
    cfg_per_function_number,
    cfg_per_function_output_request,
    cfg_per_function_update_done,
    cfg_subsys_vend_id,
    cfg_dsn,
    cfg_power_state_change_ack,
    cfg_power_state_change_interrupt,
    cfg_err_cor_in,
    cfg_err_uncor_in,
    cfg_flr_in_process,
    cfg_flr_done,
    cfg_vf_flr_in_process,
    cfg_vf_flr_done,
    cfg_link_training_enable,
    cfg_interrupt_int,
    cfg_interrupt_pending,
    cfg_interrupt_sent,
    cfg_interrupt_msi_enable,
    cfg_interrupt_msi_vf_enable,
    cfg_interrupt_msi_mmenable,
    cfg_interrupt_msi_mask_update,
    cfg_interrupt_msi_data,
    cfg_interrupt_msi_select,
    cfg_interrupt_msi_int,
    cfg_interrupt_msi_pending_status,
    cfg_interrupt_msi_sent,
    cfg_interrupt_msi_fail,
    cfg_interrupt_msi_attr,
    cfg_interrupt_msi_tph_present,
    cfg_interrupt_msi_tph_type,
    cfg_interrupt_msi_tph_st_tag,
    cfg_interrupt_msi_function_number,
    cfg_hot_reset_out,
    cfg_config_space_enable,
    cfg_req_pm_transition_l23_ready,
    cfg_hot_reset_in,
    cfg_ds_port_number,
    cfg_ds_bus_number,
    cfg_ds_device_number,
    cfg_ds_function_number,
    sys_clk,
    sys_reset);
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt txn" *) output [3:0]pci_exp_txn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt txp" *) output [3:0]pci_exp_txp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt rxn" *) input [3:0]pci_exp_rxn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt rxp" *) input [3:0]pci_exp_rxp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock pclk_in" *) input pipe_pclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock rxusrclk_in" *) input pipe_rxusrclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock rxoutclk_in" *) input [3:0]pipe_rxoutclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock dclk_in" *) input pipe_dclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock userclk1_in" *) input pipe_userclk1_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock userclk2_in" *) input pipe_userclk2_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock oobclk_in" *) input pipe_oobclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock mmcm_lock_in" *) input pipe_mmcm_lock_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock txoutclk_out" *) output pipe_txoutclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock rxoutclk_out" *) output [3:0]pipe_rxoutclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock pclk_sel_out" *) output [3:0]pipe_pclk_sel_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock gen3_out" *) output pipe_gen3_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock mmcm_rst_n" *) input pipe_mmcm_rst_n;
  output mmcm_lock;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.user_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.user_clk, ASSOCIATED_BUSIF m_axis_cq:s_axis_cc:s_axis_rq:m_axis_rc, FREQ_HZ 125000000, ASSOCIATED_RESET user_reset, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) output user_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.user_reset RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.user_reset, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output user_reset;
  output user_lnk_up;
  output user_app_rdy;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TLAST" *) input s_axis_rq_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TDATA" *) input [127:0]s_axis_rq_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TUSER" *) input [59:0]s_axis_rq_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TKEEP" *) input [3:0]s_axis_rq_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TREADY" *) output [3:0]s_axis_rq_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axis_rq, TDATA_NUM_BYTES 16, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 60, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.0, LAYERED_METADATA undef, INSERT_VIP 0" *) input s_axis_rq_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TDATA" *) output [127:0]m_axis_rc_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TUSER" *) output [74:0]m_axis_rc_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TLAST" *) output m_axis_rc_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TKEEP" *) output [3:0]m_axis_rc_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TVALID" *) output m_axis_rc_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis_rc, TDATA_NUM_BYTES 16, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 75, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.0, LAYERED_METADATA undef, INSERT_VIP 0" *) input m_axis_rc_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TDATA" *) output [127:0]m_axis_cq_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TUSER" *) output [84:0]m_axis_cq_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TLAST" *) output m_axis_cq_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TKEEP" *) output [3:0]m_axis_cq_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TVALID" *) output m_axis_cq_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis_cq, TDATA_NUM_BYTES 16, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 85, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.0, LAYERED_METADATA undef, INSERT_VIP 0" *) input m_axis_cq_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TDATA" *) input [127:0]s_axis_cc_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TUSER" *) input [32:0]s_axis_cc_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TLAST" *) input s_axis_cc_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TKEEP" *) input [3:0]s_axis_cc_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TVALID" *) input s_axis_cc_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axis_cc, TDATA_NUM_BYTES 16, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 33, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.0, LAYERED_METADATA undef, INSERT_VIP 0" *) output [3:0]s_axis_cc_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_seq_num" *) output [3:0]pcie_rq_seq_num;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_seq_num_vld" *) output pcie_rq_seq_num_vld;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_tag" *) output [5:0]pcie_rq_tag;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_tag_vld" *) output pcie_rq_tag_vld;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_transmit_fc:1.0 pcie3_transmit_fc nph_av" *) output [1:0]pcie_tfc_nph_av;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_transmit_fc:1.0 pcie3_transmit_fc npd_av" *) output [1:0]pcie_tfc_npd_av;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status cq_np_req" *) input pcie_cq_np_req;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status cq_np_req_count" *) output [5:0]pcie_cq_np_req_count;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status phy_link_down" *) output cfg_phy_link_down;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status phy_link_status" *) output [1:0]cfg_phy_link_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status negotiated_width" *) output [3:0]cfg_negotiated_width;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status current_speed" *) output [2:0]cfg_current_speed;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status max_payload" *) output [2:0]cfg_max_payload;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status max_read_req" *) output [2:0]cfg_max_read_req;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status function_status" *) output [7:0]cfg_function_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status function_power_state" *) output [5:0]cfg_function_power_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status vf_status" *) output [11:0]cfg_vf_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status vf_power_state" *) output [17:0]cfg_vf_power_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status link_power_state" *) output [1:0]cfg_link_power_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt ADDR" *) input [18:0]cfg_mgmt_addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt WRITE_EN" *) input cfg_mgmt_write;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt WRITE_DATA" *) input [31:0]cfg_mgmt_write_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt BYTE_EN" *) input [3:0]cfg_mgmt_byte_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_EN" *) input cfg_mgmt_read;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_DATA" *) output [31:0]cfg_mgmt_read_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_WRITE_DONE" *) output cfg_mgmt_read_write_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt TYPE1_CFG_REG_ACCESS" *) input cfg_mgmt_type1_cfg_reg_access;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status err_cor_out" *) output cfg_err_cor_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status err_nonfatal_out" *) output cfg_err_nonfatal_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status err_fatal_out" *) output cfg_err_fatal_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status ltr_enable" *) output cfg_ltr_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status ltssm_state" *) output [5:0]cfg_ltssm_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rcb_status" *) output [1:0]cfg_rcb_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status dpa_substate_change" *) output [1:0]cfg_dpa_substate_change;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status obff_enable" *) output [1:0]cfg_obff_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status pl_status_change" *) output cfg_pl_status_change;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status tph_requester_enable" *) output [1:0]cfg_tph_requester_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status tph_st_mode" *) output [5:0]cfg_tph_st_mode;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status vf_tph_requester_enable" *) output [5:0]cfg_vf_tph_requester_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status vf_tph_st_mode" *) output [17:0]cfg_vf_tph_st_mode;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msg_received:1.0 pcie3_cfg_mesg_rcvd recd" *) output cfg_msg_received;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msg_received:1.0 pcie3_cfg_mesg_rcvd recd_data" *) output [7:0]cfg_msg_received_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msg_received:1.0 pcie3_cfg_mesg_rcvd recd_type" *) output [4:0]cfg_msg_received_type;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_mesg_tx:1.0 pcie3_cfg_mesg_tx TRANSMIT" *) input cfg_msg_transmit;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_mesg_tx:1.0 pcie3_cfg_mesg_tx TRANSMIT_TYPE" *) input [2:0]cfg_msg_transmit_type;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_mesg_tx:1.0 pcie3_cfg_mesg_tx TRANSMIT_DATA" *) input [31:0]cfg_msg_transmit_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_mesg_tx:1.0 pcie3_cfg_mesg_tx TRANSMIT_DONE" *) output cfg_msg_transmit_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc PH" *) output [7:0]cfg_fc_ph;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc PD" *) output [11:0]cfg_fc_pd;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc NPH" *) output [7:0]cfg_fc_nph;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc NPD" *) output [11:0]cfg_fc_npd;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc CPLH" *) output [7:0]cfg_fc_cplh;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc CPLD" *) output [11:0]cfg_fc_cpld;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc SEL" *) input [2:0]cfg_fc_sel;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_per_func_status:1.0 pcie3_per_func_status STATUS_CONTROL" *) input [2:0]cfg_per_func_status_control;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_per_func_status:1.0 pcie3_per_func_status STATUS_DATA" *) output [15:0]cfg_per_func_status_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control per_function_number" *) input [2:0]cfg_per_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control per_function_output_request" *) input cfg_per_function_output_request;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control per_function_update_done" *) output cfg_per_function_update_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control subsys_vend_id" *) input [15:0]cfg_subsys_vend_id;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control dsn" *) input [63:0]cfg_dsn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control power_state_change_ack" *) input cfg_power_state_change_ack;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control power_state_change_interrupt" *) output cfg_power_state_change_interrupt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control err_cor_in" *) input cfg_err_cor_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control err_uncor_in" *) input cfg_err_uncor_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control flr_in_process" *) output [1:0]cfg_flr_in_process;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control flr_done" *) input [1:0]cfg_flr_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control vf_flr_in_process" *) output [5:0]cfg_vf_flr_in_process;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control vf_flr_done" *) input [5:0]cfg_vf_flr_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control link_training_enable" *) input cfg_link_training_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_interrupt:1.0 pcie3_cfg_interrupt INTx_VECTOR" *) input [3:0]cfg_interrupt_int;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_interrupt:1.0 pcie3_cfg_interrupt PENDING" *) input [1:0]cfg_interrupt_pending;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_interrupt:1.0 pcie3_cfg_interrupt SENT" *) output cfg_interrupt_sent;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi enable" *) output [1:0]cfg_interrupt_msi_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi vf_enable" *) output [5:0]cfg_interrupt_msi_vf_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi mmenable" *) output [5:0]cfg_interrupt_msi_mmenable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi mask_update" *) output cfg_interrupt_msi_mask_update;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi data" *) output [31:0]cfg_interrupt_msi_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi select" *) input [3:0]cfg_interrupt_msi_select;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi int_vector" *) input [31:0]cfg_interrupt_msi_int;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi pending_status" *) input [63:0]cfg_interrupt_msi_pending_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi sent" *) output cfg_interrupt_msi_sent;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi fail" *) output cfg_interrupt_msi_fail;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi attr" *) input [2:0]cfg_interrupt_msi_attr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi tph_present" *) input cfg_interrupt_msi_tph_present;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi tph_type" *) input [1:0]cfg_interrupt_msi_tph_type;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi tph_st_tag" *) input [8:0]cfg_interrupt_msi_tph_st_tag;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi function_number" *) input [2:0]cfg_interrupt_msi_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control hot_reset_out" *) output cfg_hot_reset_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control config_space_enable" *) input cfg_config_space_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control req_pm_transition_l23_ready" *) input cfg_req_pm_transition_l23_ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control hot_reset_in" *) input cfg_hot_reset_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control ds_port_number" *) input [7:0]cfg_ds_port_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control ds_bus_number" *) input [7:0]cfg_ds_bus_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control ds_device_number" *) input [4:0]cfg_ds_device_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control ds_function_number" *) input [2:0]cfg_ds_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.sys_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.sys_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input sys_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.sys_rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.sys_rst, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input sys_reset;

  wire \<const0> ;
  wire \<const1> ;
  wire cfg_config_space_enable;
  wire [2:0]cfg_current_speed;
  wire [1:0]cfg_dpa_substate_change;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [7:0]cfg_ds_port_number;
  wire [63:0]cfg_dsn;
  wire cfg_err_cor_in;
  wire cfg_err_cor_out;
  wire cfg_err_fatal_out;
  wire cfg_err_nonfatal_out;
  wire cfg_err_uncor_in;
  wire [11:0]cfg_fc_cpld;
  wire [7:0]cfg_fc_cplh;
  wire [11:0]cfg_fc_npd;
  wire [7:0]cfg_fc_nph;
  wire [11:0]cfg_fc_pd;
  wire [7:0]cfg_fc_ph;
  wire [2:0]cfg_fc_sel;
  wire [1:0]cfg_flr_done;
  wire [1:0]cfg_flr_in_process;
  wire [5:0]cfg_function_power_state;
  wire [7:0]cfg_function_status;
  wire cfg_hot_reset_in;
  wire cfg_hot_reset_out;
  wire [3:0]cfg_interrupt_int;
  wire [2:0]cfg_interrupt_msi_attr;
  wire [31:0]cfg_interrupt_msi_data;
  wire [1:0]cfg_interrupt_msi_enable;
  wire cfg_interrupt_msi_fail;
  wire [2:0]cfg_interrupt_msi_function_number;
  wire [31:0]cfg_interrupt_msi_int;
  wire cfg_interrupt_msi_mask_update;
  wire [5:0]cfg_interrupt_msi_mmenable;
  wire [63:0]cfg_interrupt_msi_pending_status;
  wire [3:0]cfg_interrupt_msi_select;
  wire cfg_interrupt_msi_sent;
  wire cfg_interrupt_msi_tph_present;
  wire [8:0]cfg_interrupt_msi_tph_st_tag;
  wire [1:0]cfg_interrupt_msi_tph_type;
  wire [5:0]cfg_interrupt_msi_vf_enable;
  wire [1:0]cfg_interrupt_pending;
  wire cfg_interrupt_sent;
  wire [1:0]cfg_link_power_state;
  wire cfg_link_training_enable;
  wire cfg_ltr_enable;
  wire [5:0]cfg_ltssm_state;
  wire [2:0]cfg_max_payload;
  wire [2:0]cfg_max_read_req;
  wire [18:0]cfg_mgmt_addr;
  wire [3:0]cfg_mgmt_byte_enable;
  wire cfg_mgmt_read;
  wire [31:0]cfg_mgmt_read_data;
  wire cfg_mgmt_read_write_done;
  wire cfg_mgmt_type1_cfg_reg_access;
  wire cfg_mgmt_write;
  wire [31:0]cfg_mgmt_write_data;
  wire cfg_msg_received;
  wire [7:0]cfg_msg_received_data;
  wire [4:0]cfg_msg_received_type;
  wire cfg_msg_transmit;
  wire [31:0]cfg_msg_transmit_data;
  wire cfg_msg_transmit_done;
  wire [2:0]cfg_msg_transmit_type;
  wire [3:0]cfg_negotiated_width;
  wire [1:0]cfg_obff_enable;
  wire [2:0]cfg_per_func_status_control;
  wire [15:0]cfg_per_func_status_data;
  wire [2:0]cfg_per_function_number;
  wire cfg_per_function_output_request;
  wire cfg_per_function_update_done;
  wire cfg_phy_link_down;
  wire [1:0]cfg_phy_link_status;
  wire cfg_pl_status_change;
  wire cfg_power_state_change_ack;
  wire cfg_power_state_change_interrupt;
  wire [1:0]cfg_rcb_status;
  wire cfg_req_pm_transition_l23_ready;
  wire [15:0]cfg_subsys_vend_id;
  wire [1:0]cfg_tph_requester_enable;
  wire [5:0]cfg_tph_st_mode;
  wire [5:0]cfg_vf_flr_done;
  wire [5:0]cfg_vf_flr_in_process;
  wire [17:0]cfg_vf_power_state;
  wire [11:0]cfg_vf_status;
  wire [5:0]cfg_vf_tph_requester_enable;
  wire [17:0]cfg_vf_tph_st_mode;
  wire [127:0]m_axis_cq_tdata;
  wire [3:0]m_axis_cq_tkeep;
  wire m_axis_cq_tlast;
  wire m_axis_cq_tready;
  wire [84:0]m_axis_cq_tuser;
  wire m_axis_cq_tvalid;
  wire [127:0]m_axis_rc_tdata;
  wire [3:0]m_axis_rc_tkeep;
  wire m_axis_rc_tlast;
  wire m_axis_rc_tready;
  wire [74:0]m_axis_rc_tuser;
  wire m_axis_rc_tvalid;
  wire mmcm_lock;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire pcie_cq_np_req;
  wire [5:0]pcie_cq_np_req_count;
  wire [3:0]pcie_rq_seq_num;
  wire pcie_rq_seq_num_vld;
  wire [5:0]pcie_rq_tag;
  wire pcie_rq_tag_vld;
  wire [1:0]pcie_tfc_npd_av;
  wire [1:0]pcie_tfc_nph_av;
  wire pipe_dclk_in;
  wire pipe_mmcm_lock_in;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire [3:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire pipe_txoutclk_out;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire [127:0]s_axis_cc_tdata;
  wire [3:0]s_axis_cc_tkeep;
  wire s_axis_cc_tlast;
  wire [3:0]s_axis_cc_tready;
  wire [32:0]s_axis_cc_tuser;
  wire s_axis_cc_tvalid;
  wire [127:0]s_axis_rq_tdata;
  wire [3:0]s_axis_rq_tkeep;
  wire s_axis_rq_tlast;
  wire [3:0]s_axis_rq_tready;
  wire [59:0]s_axis_rq_tuser;
  wire s_axis_rq_tvalid;
  wire sys_clk;
  wire sys_reset;
  wire user_clk;
  wire user_lnk_up;
  wire user_reset;
  wire NLW_inst_cfg_ext_read_received_UNCONNECTED;
  wire NLW_inst_cfg_ext_write_received_UNCONNECTED;
  wire NLW_inst_cfg_interrupt_msix_fail_UNCONNECTED;
  wire NLW_inst_cfg_interrupt_msix_sent_UNCONNECTED;
  wire NLW_inst_ext_ch_gt_drpclk_UNCONNECTED;
  wire NLW_inst_int_dclk_out_UNCONNECTED;
  wire NLW_inst_int_oobclk_out_UNCONNECTED;
  wire NLW_inst_int_pclk_out_slave_UNCONNECTED;
  wire NLW_inst_int_pipe_rxusrclk_out_UNCONNECTED;
  wire NLW_inst_int_userclk1_out_UNCONNECTED;
  wire NLW_inst_int_userclk2_out_UNCONNECTED;
  wire NLW_inst_pcie_drp_rdy_UNCONNECTED;
  wire NLW_inst_pipe_gen3_out_UNCONNECTED;
  wire NLW_inst_pipe_qrst_idle_UNCONNECTED;
  wire NLW_inst_pipe_rate_idle_UNCONNECTED;
  wire NLW_inst_pipe_rst_idle_UNCONNECTED;
  wire NLW_inst_qpll_drp_clk_UNCONNECTED;
  wire NLW_inst_qpll_drp_gen3_UNCONNECTED;
  wire NLW_inst_qpll_drp_ovrd_UNCONNECTED;
  wire NLW_inst_qpll_drp_rst_n_UNCONNECTED;
  wire NLW_inst_qpll_drp_start_UNCONNECTED;
  wire NLW_inst_qpll_qplld_UNCONNECTED;
  wire NLW_inst_startup_cfgclk_UNCONNECTED;
  wire NLW_inst_startup_cfgmclk_UNCONNECTED;
  wire NLW_inst_startup_eos_UNCONNECTED;
  wire NLW_inst_startup_preq_UNCONNECTED;
  wire NLW_inst_user_app_rdy_UNCONNECTED;
  wire NLW_inst_user_tph_stt_read_data_valid_UNCONNECTED;
  wire [7:0]NLW_inst_cfg_ext_function_number_UNCONNECTED;
  wire [9:0]NLW_inst_cfg_ext_register_number_UNCONNECTED;
  wire [3:0]NLW_inst_cfg_ext_write_byte_enable_UNCONNECTED;
  wire [31:0]NLW_inst_cfg_ext_write_data_UNCONNECTED;
  wire [1:0]NLW_inst_cfg_interrupt_msix_enable_UNCONNECTED;
  wire [1:0]NLW_inst_cfg_interrupt_msix_mask_UNCONNECTED;
  wire [5:0]NLW_inst_cfg_interrupt_msix_vf_enable_UNCONNECTED;
  wire [5:0]NLW_inst_cfg_interrupt_msix_vf_mask_UNCONNECTED;
  wire [25:0]NLW_inst_common_commands_out_UNCONNECTED;
  wire [63:0]NLW_inst_ext_ch_gt_drpdo_UNCONNECTED;
  wire [3:0]NLW_inst_ext_ch_gt_drprdy_UNCONNECTED;
  wire [3:0]NLW_inst_gt_ch_drp_rdy_UNCONNECTED;
  wire [31:0]NLW_inst_icap_o_UNCONNECTED;
  wire [1:0]NLW_inst_int_qplllock_out_UNCONNECTED;
  wire [1:0]NLW_inst_int_qplloutclk_out_UNCONNECTED;
  wire [1:0]NLW_inst_int_qplloutrefclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_int_rxoutclk_out_UNCONNECTED;
  wire [15:0]NLW_inst_pcie_drp_do_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_cpll_lock_UNCONNECTED;
  wire [31:0]NLW_inst_pipe_debug_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_0_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_1_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_2_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_3_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_4_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_5_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_6_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_7_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_8_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_9_UNCONNECTED;
  wire [59:0]NLW_inst_pipe_dmonitorout_UNCONNECTED;
  wire [27:0]NLW_inst_pipe_drp_fsm_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_eyescandataerror_UNCONNECTED;
  wire [0:0]NLW_inst_pipe_qpll_lock_UNCONNECTED;
  wire [11:0]NLW_inst_pipe_qrst_fsm_UNCONNECTED;
  wire [19:0]NLW_inst_pipe_rate_fsm_UNCONNECTED;
  wire [4:0]NLW_inst_pipe_rst_fsm_UNCONNECTED;
  wire [11:0]NLW_inst_pipe_rxbufstatus_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxcommadet_UNCONNECTED;
  wire [31:0]NLW_inst_pipe_rxdisperr_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxdlysresetdone_UNCONNECTED;
  wire [31:0]NLW_inst_pipe_rxnotintable_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxphaligndone_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxpmaresetdone_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxprbserr_UNCONNECTED;
  wire [11:0]NLW_inst_pipe_rxstatus_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxsyncdone_UNCONNECTED;
  wire [27:0]NLW_inst_pipe_sync_fsm_rx_UNCONNECTED;
  wire [23:0]NLW_inst_pipe_sync_fsm_tx_UNCONNECTED;
  wire [83:0]NLW_inst_pipe_tx_0_sigs_UNCONNECTED;
  wire [83:0]NLW_inst_pipe_tx_1_sigs_UNCONNECTED;
  wire [83:0]NLW_inst_pipe_tx_2_sigs_UNCONNECTED;
  wire [83:0]NLW_inst_pipe_tx_3_sigs_UNCONNECTED;
  wire [83:0]NLW_inst_pipe_tx_4_sigs_UNCONNECTED;
  wire [83:0]NLW_inst_pipe_tx_5_sigs_UNCONNECTED;
  wire [83:0]NLW_inst_pipe_tx_6_sigs_UNCONNECTED;
  wire [83:0]NLW_inst_pipe_tx_7_sigs_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_txdlysresetdone_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_txphaligndone_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_txphinitdone_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_qpllreset_UNCONNECTED;
  wire [31:0]NLW_inst_user_tph_stt_read_data_UNCONNECTED;

  assign pipe_gen3_out = \<const0> ;
  assign user_app_rdy = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  (* ARI_CAP_ENABLE = "FALSE" *) 
  (* AXISTEN_IF_CC_ALIGNMENT_MODE = "FALSE" *) 
  (* AXISTEN_IF_CC_PARITY_CHK = "FALSE" *) 
  (* AXISTEN_IF_CQ_ALIGNMENT_MODE = "FALSE" *) 
  (* AXISTEN_IF_ENABLE_CLIENT_TAG = "FALSE" *) 
  (* AXISTEN_IF_ENABLE_MSG_ROUTE = "18'b000000000000000000" *) 
  (* AXISTEN_IF_ENABLE_RX_MSG_INTFC = "FALSE" *) 
  (* AXISTEN_IF_RC_ALIGNMENT_MODE = "FALSE" *) 
  (* AXISTEN_IF_RC_STRADDLE = "FALSE" *) 
  (* AXISTEN_IF_RQ_ALIGNMENT_MODE = "FALSE" *) 
  (* AXISTEN_IF_RQ_PARITY_CHK = "FALSE" *) 
  (* AXISTEN_IF_WIDTH = "2'b01" *) 
  (* CFG_CTL_IF = "TRUE" *) 
  (* CFG_EXT_IF = "TRUE" *) 
  (* CFG_FC_IF = "TRUE" *) 
  (* CFG_MGMT_IF = "TRUE" *) 
  (* CFG_STATUS_IF = "TRUE" *) 
  (* CFG_TX_MSG_IF = "TRUE" *) 
  (* COMPLETION_SPACE = "16KB" *) 
  (* CRM_CORE_CLK_FREQ_500 = "FALSE" *) 
  (* CRM_USER_CLK_FREQ = "2'b01" *) 
  (* C_DATA_WIDTH = "128" *) 
  (* DBG_DESCRAMBLE_EN = "TRUE" *) 
  (* DEV_PORT_TYPE = "2'b00" *) 
  (* DNSTREAM_LINK_NUM = "8'b00000000" *) 
  (* ENABLE_FAST_SIM_TRAINING = "TRUE" *) 
  (* ENABLE_JTAG_DBG = "FALSE" *) 
  (* ENABLE_LTSSM_DBG = "FALSE" *) 
  (* EXT_CH_GT_DRP = "FALSE" *) 
  (* EXT_PIPE_INTERFACE = "FALSE" *) 
  (* EXT_PIPE_SIM = "FALSE" *) 
  (* EXT_STARTUP_PRIMITIVE = "FALSE" *) 
  (* GEN3_PCS_AUTO_REALIGN = "2'b01" *) 
  (* GEN3_PCS_RX_ELECIDLE_INTERNAL = "TRUE" *) 
  (* IMPL_TARGET = "HARD" *) 
  (* INTERFACE_SPEED = "250 MHZ" *) 
  (* KEEP_WIDTH = "4" *) 
  (* LL_ACK_TIMEOUT = "9'b000000000" *) 
  (* LL_ACK_TIMEOUT_EN = "FALSE" *) 
  (* LL_ACK_TIMEOUT_FUNC = "0" *) 
  (* LL_CPL_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
  (* LL_CPL_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
  (* LL_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
  (* LL_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
  (* LL_NP_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
  (* LL_NP_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
  (* LL_P_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
  (* LL_P_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
  (* LL_REPLAY_TIMEOUT = "9'b000000000" *) 
  (* LL_REPLAY_TIMEOUT_EN = "FALSE" *) 
  (* LL_REPLAY_TIMEOUT_FUNC = "0" *) 
  (* LTR_TX_MESSAGE_MINIMUM_INTERVAL = "10'b0011111010" *) 
  (* LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE = "FALSE" *) 
  (* LTR_TX_MESSAGE_ON_LTR_ENABLE = "FALSE" *) 
  (* MSIX_EN = "FALSE" *) 
  (* MSI_EN = "TRUE" *) 
  (* MULT_PF_DES = "TRUE" *) 
  (* NO_DECODE_LOGIC = "FALSE" *) 
  (* PCIE_ASYNC_EN = "FALSE" *) 
  (* PCIE_CHAN_BOND = "0" *) 
  (* PCIE_CHAN_BOND_EN = "FALSE" *) 
  (* PCIE_DRP = "FALSE" *) 
  (* PCIE_EXT_CLK = "TRUE" *) 
  (* PCIE_EXT_GT_COMMON = "FALSE" *) 
  (* PCIE_FAST_CONFIG = "NONE" *) 
  (* PCIE_GT_DEVICE = "GTH" *) 
  (* PCIE_LINK_SPEED = "3" *) 
  (* PCIE_LPM_DFE = "LPM" *) 
  (* PCIE_TXBUF_EN = "FALSE" *) 
  (* PCIE_USE_MODE = "2.1" *) 
  (* PER_FUNC_STATUS_IF = "TRUE" *) 
  (* PF0_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
  (* PF0_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) 
  (* PF0_AER_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_ARI_CAP_NEXT_FUNC = "8'b00000000" *) 
  (* PF0_ARI_CAP_VER = "4'b0001" *) 
  (* PF0_BAR0_APERTURE_SIZE = "5'b01101" *) 
  (* PF0_BAR0_CONTROL = "3'b100" *) 
  (* PF0_BAR1_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_BAR1_CONTROL = "3'b000" *) 
  (* PF0_BAR2_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_BAR2_CONTROL = "3'b000" *) 
  (* PF0_BAR3_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_BAR3_CONTROL = "3'b000" *) 
  (* PF0_BAR4_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_BAR4_CONTROL = "3'b000" *) 
  (* PF0_BAR5_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_BAR5_CONTROL = "3'b000" *) 
  (* PF0_BIST_REGISTER = "8'b00000000" *) 
  (* PF0_CAPABILITY_POINTER = "8'b10000000" *) 
  (* PF0_CLASS_CODE = "24'b000001011000000000000000" *) 
  (* PF0_DEVICE_ID = "16'b0111000000100100" *) 
  (* PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE = "TRUE" *) 
  (* PF0_DEV_CAP2_LTR_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP2_OBFF_SUPPORT = "2'b00" *) 
  (* PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP_ENDPOINT_L0S_LATENCY = "0" *) 
  (* PF0_DEV_CAP_ENDPOINT_L1_LATENCY = "0" *) 
  (* PF0_DEV_CAP_EXT_TAG_SUPPORTED = "FALSE" *) 
  (* PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE = "FALSE" *) 
  (* PF0_DEV_CAP_MAX_PAYLOAD_SIZE = "3'b010" *) 
  (* PF0_DPA_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) 
  (* PF0_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "8'b00000000" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "8'b00000000" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "8'b00000000" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "8'b00000000" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "8'b00000000" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "8'b00000000" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "8'b00000000" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "8'b00000000" *) 
  (* PF0_DPA_CAP_VER = "4'b0001" *) 
  (* PF0_DSN_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_EXPANSION_ROM_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_EXPANSION_ROM_ENABLE = "FALSE" *) 
  (* PF0_INTERRUPT_LINE = "8'b00000000" *) 
  (* PF0_INTERRUPT_PIN = "3'b001" *) 
  (* PF0_LINK_CAP_ASPM_SUPPORT = "0" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3 = "7" *) 
  (* PF0_LINK_STATUS_SLOT_CLOCK_CONFIG = "TRUE" *) 
  (* PF0_LTR_CAP_MAX_NOSNOOP_LAT = "10'b0000000000" *) 
  (* PF0_LTR_CAP_MAX_SNOOP_LAT = "10'b0000000000" *) 
  (* PF0_LTR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_LTR_CAP_VER = "4'b0001" *) 
  (* PF0_MSIX_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF0_MSIX_CAP_PBA_BIR = "0" *) 
  (* PF0_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) 
  (* PF0_MSIX_CAP_TABLE_BIR = "0" *) 
  (* PF0_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
  (* PF0_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* PF0_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* PF0_MSI_CAP_NEXTPTR = "8'b11000000" *) 
  (* PF0_PB_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
  (* PF0_PB_CAP_VER = "4'b0001" *) 
  (* PF0_PM_CAP_ID = "8'b00000001" *) 
  (* PF0_PM_CAP_NEXTPTR = "8'b10010000" *) 
  (* PF0_PM_CAP_PMESUPPORT_D0 = "FALSE" *) 
  (* PF0_PM_CAP_PMESUPPORT_D1 = "FALSE" *) 
  (* PF0_PM_CAP_PMESUPPORT_D3HOT = "FALSE" *) 
  (* PF0_PM_CAP_SUPP_D1_STATE = "FALSE" *) 
  (* PF0_PM_CAP_VER_ID = "3'b011" *) 
  (* PF0_PM_CSR_NOSOFTRESET = "TRUE" *) 
  (* PF0_RBAR_CAP_ENABLE = "FALSE" *) 
  (* PF0_RBAR_CAP_INDEX0 = "3'b000" *) 
  (* PF0_RBAR_CAP_INDEX1 = "3'b000" *) 
  (* PF0_RBAR_CAP_INDEX2 = "3'b000" *) 
  (* PF0_RBAR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_RBAR_CAP_SIZE0 = "20'b00000000000000000000" *) 
  (* PF0_RBAR_CAP_SIZE1 = "20'b00000000000000000000" *) 
  (* PF0_RBAR_CAP_SIZE2 = "20'b00000000000000000000" *) 
  (* PF0_RBAR_CAP_VER = "4'b0001" *) 
  (* PF0_RBAR_NUM = "3'b001" *) 
  (* PF0_REVISION_ID = "8'b00000000" *) 
  (* PF0_SRIOV_BAR0_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_SRIOV_BAR0_CONTROL = "3'b000" *) 
  (* PF0_SRIOV_BAR1_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_SRIOV_BAR1_CONTROL = "3'b000" *) 
  (* PF0_SRIOV_BAR2_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_SRIOV_BAR2_CONTROL = "3'b000" *) 
  (* PF0_SRIOV_BAR3_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_SRIOV_BAR3_CONTROL = "3'b000" *) 
  (* PF0_SRIOV_BAR4_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_SRIOV_BAR4_CONTROL = "3'b000" *) 
  (* PF0_SRIOV_BAR5_APERTURE_SIZE = "5'b00000" *) 
  (* PF0_SRIOV_BAR5_CONTROL = "3'b000" *) 
  (* PF0_SRIOV_CAP_INITIAL_VF = "16'b0000000000000000" *) 
  (* PF0_SRIOV_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_SRIOV_CAP_TOTAL_VF = "16'b0000000000000000" *) 
  (* PF0_SRIOV_CAP_VER = "4'b0000" *) 
  (* PF0_SRIOV_FIRST_VF_OFFSET = "16'b0000000000000000" *) 
  (* PF0_SRIOV_FUNC_DEP_LINK = "16'b0000000000000000" *) 
  (* PF0_SRIOV_SUPPORTED_PAGE_SIZE = "1363" *) 
  (* PF0_SRIOV_VF_DEVICE_ID = "16'b0000000000000000" *) 
  (* PF0_SUBSYSTEM_ID = "16'b0000000000000111" *) 
  (* PF0_SUBSYSTEM_VENDOR_ID = "16'b0001000011101110" *) 
  (* PF0_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* PF0_TPHR_CAP_ENABLE = "FALSE" *) 
  (* PF0_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* PF0_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* PF0_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* PF0_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* PF0_TPHR_CAP_VER = "4'b0001" *) 
  (* PF0_VC_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF0_VC_CAP_VER = "4'b0001" *) 
  (* PF0_VENDOR_ID = "16'b0001000011101111" *) 
  (* PF1_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
  (* PF1_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) 
  (* PF1_AER_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF1_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF1_ARI_CAP_NEXT_FUNC = "8'b00000000" *) 
  (* PF1_BAR0_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_BAR0_CONTROL = "3'b000" *) 
  (* PF1_BAR1_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_BAR1_CONTROL = "3'b000" *) 
  (* PF1_BAR2_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_BAR2_CONTROL = "3'b000" *) 
  (* PF1_BAR3_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_BAR3_CONTROL = "3'b000" *) 
  (* PF1_BAR4_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_BAR4_CONTROL = "3'b000" *) 
  (* PF1_BAR5_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_BAR5_CONTROL = "3'b000" *) 
  (* PF1_BIST_REGISTER = "8'b00000000" *) 
  (* PF1_CAPABILITY_POINTER = "8'b10000000" *) 
  (* PF1_CLASS_CODE = "24'b000001011000000000000000" *) 
  (* PF1_DEVICE_ID = "16'b0111000000010001" *) 
  (* PF1_DEV_CAP_MAX_PAYLOAD_SIZE = "3'b010" *) 
  (* PF1_DPA_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF1_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) 
  (* PF1_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "8'b00000000" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "8'b00000000" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "8'b00000000" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "8'b00000000" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "8'b00000000" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "8'b00000000" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "8'b00000000" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "8'b00000000" *) 
  (* PF1_DPA_CAP_VER = "4'b0001" *) 
  (* PF1_DSN_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF1_EXPANSION_ROM_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_EXPANSION_ROM_ENABLE = "FALSE" *) 
  (* PF1_INTERRUPT_LINE = "8'b00000000" *) 
  (* PF1_INTERRUPT_PIN = "3'b000" *) 
  (* PF1_MSIX_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF1_MSIX_CAP_PBA_BIR = "0" *) 
  (* PF1_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) 
  (* PF1_MSIX_CAP_TABLE_BIR = "0" *) 
  (* PF1_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
  (* PF1_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* PF1_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* PF1_MSI_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF1_PB_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF1_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
  (* PF1_PB_CAP_VER = "4'b0001" *) 
  (* PF1_PM_CAP_ID = "8'b00000001" *) 
  (* PF1_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF1_PM_CAP_VER_ID = "3'b011" *) 
  (* PF1_RBAR_CAP_ENABLE = "FALSE" *) 
  (* PF1_RBAR_CAP_INDEX0 = "3'b000" *) 
  (* PF1_RBAR_CAP_INDEX1 = "3'b000" *) 
  (* PF1_RBAR_CAP_INDEX2 = "3'b000" *) 
  (* PF1_RBAR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF1_RBAR_CAP_SIZE0 = "20'b00000000000000000000" *) 
  (* PF1_RBAR_CAP_SIZE1 = "20'b00000000000000000000" *) 
  (* PF1_RBAR_CAP_SIZE2 = "20'b00000000000000000000" *) 
  (* PF1_RBAR_CAP_VER = "4'b0001" *) 
  (* PF1_RBAR_NUM = "3'b001" *) 
  (* PF1_REVISION_ID = "8'b00000000" *) 
  (* PF1_SRIOV_BAR0_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_SRIOV_BAR0_CONTROL = "3'b000" *) 
  (* PF1_SRIOV_BAR1_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_SRIOV_BAR1_CONTROL = "3'b000" *) 
  (* PF1_SRIOV_BAR2_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_SRIOV_BAR2_CONTROL = "3'b000" *) 
  (* PF1_SRIOV_BAR3_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_SRIOV_BAR3_CONTROL = "3'b000" *) 
  (* PF1_SRIOV_BAR4_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_SRIOV_BAR4_CONTROL = "3'b000" *) 
  (* PF1_SRIOV_BAR5_APERTURE_SIZE = "5'b00000" *) 
  (* PF1_SRIOV_BAR5_CONTROL = "3'b000" *) 
  (* PF1_SRIOV_CAP_INITIAL_VF = "16'b0000000000000000" *) 
  (* PF1_SRIOV_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF1_SRIOV_CAP_TOTAL_VF = "16'b0000000000000000" *) 
  (* PF1_SRIOV_CAP_VER = "4'b0000" *) 
  (* PF1_SRIOV_FIRST_VF_OFFSET = "16'b0000000000000000" *) 
  (* PF1_SRIOV_FUNC_DEP_LINK = "16'b0000000000000001" *) 
  (* PF1_SRIOV_SUPPORTED_PAGE_SIZE = "1363" *) 
  (* PF1_SRIOV_VF_DEVICE_ID = "16'b0000000000000000" *) 
  (* PF1_SUBSYSTEM_ID = "16'b0000000000000111" *) 
  (* PF1_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* PF1_TPHR_CAP_ENABLE = "FALSE" *) 
  (* PF1_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* PF1_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF1_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* PF1_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* PF1_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* PF1_TPHR_CAP_VER = "4'b0001" *) 
  (* PIPE_PIPELINE_STAGES = "0" *) 
  (* PIPE_SIM = "FALSE" *) 
  (* PIPE_SIM_MODE = "FALSE" *) 
  (* PL_DISABLE_EI_INFER_IN_L0 = "FALSE" *) 
  (* PL_DISABLE_GEN3_DC_BALANCE = "FALSE" *) 
  (* PL_DISABLE_SCRAMBLING = "FALSE" *) 
  (* PL_DISABLE_UPCONFIG_CAPABLE = "FALSE" *) 
  (* PL_EQ_ADAPT_DISABLE_COEFF_CHECK = "FALSE" *) 
  (* PL_EQ_ADAPT_DISABLE_PRESET_CHECK = "FALSE" *) 
  (* PL_EQ_ADAPT_ITER_COUNT = "5'b00010" *) 
  (* PL_EQ_ADAPT_REJECT_RETRY_COUNT = "2'b01" *) 
  (* PL_EQ_BYPASS_PHASE23 = "FALSE" *) 
  (* PL_EQ_SHORT_ADAPT_PHASE = "FALSE" *) 
  (* PL_LANE0_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE1_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE2_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE3_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE4_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE5_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE6_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE7_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LINK_CAP_MAX_LINK_SPEED = "3'b010" *) 
  (* PL_LINK_CAP_MAX_LINK_WIDTH = "4'b0100" *) 
  (* PL_N_FTS_COMCLK_GEN1 = "255" *) 
  (* PL_N_FTS_COMCLK_GEN2 = "255" *) 
  (* PL_N_FTS_COMCLK_GEN3 = "255" *) 
  (* PL_N_FTS_GEN1 = "255" *) 
  (* PL_N_FTS_GEN2 = "255" *) 
  (* PL_N_FTS_GEN3 = "255" *) 
  (* PL_UPSTREAM_FACING = "TRUE" *) 
  (* PM_ASPML0S_TIMEOUT = "16'b0000010111011100" *) 
  (* PM_ASPML1_ENTRY_DELAY = "20'b00000001110101001100" *) 
  (* PM_ENABLE_SLOT_POWER_CAPTURE = "TRUE" *) 
  (* PM_L1_REENTRY_DELAY = "25000" *) 
  (* PM_PME_SERVICE_TIMEOUT_DELAY = "20'b00011000011010100000" *) 
  (* PM_PME_TURNOFF_ACK_DELAY = "16'b0000000001100100" *) 
  (* POWER_DOWN = "FALSE" *) 
  (* RCV_MSG_IF = "TRUE" *) 
  (* REF_CLK_FREQ = "0" *) 
  (* SHARED_LOGIC_IN_CORE = "FALSE" *) 
  (* SIM_VERSION = "1.0" *) 
  (* SPARE_BIT0 = "0" *) 
  (* SPARE_BIT1 = "0" *) 
  (* SPARE_BIT2 = "0" *) 
  (* SPARE_BIT3 = "0" *) 
  (* SPARE_BIT4 = "0" *) 
  (* SPARE_BIT5 = "0" *) 
  (* SPARE_BIT6 = "0" *) 
  (* SPARE_BIT7 = "0" *) 
  (* SPARE_BIT8 = "0" *) 
  (* SPARE_BYTE0 = "8'b00000000" *) 
  (* SPARE_BYTE1 = "8'b00000000" *) 
  (* SPARE_BYTE2 = "8'b00000000" *) 
  (* SPARE_BYTE3 = "8'b00000000" *) 
  (* SPARE_WORD0 = "0" *) 
  (* SPARE_WORD1 = "0" *) 
  (* SPARE_WORD2 = "0" *) 
  (* SPARE_WORD3 = "0" *) 
  (* SRIOV_CAP_ENABLE = "FALSE" *) 
  (* TCQ = "100" *) 
  (* TL_COMPL_TIMEOUT_REG0 = "24'b101111101011110000100000" *) 
  (* TL_COMPL_TIMEOUT_REG1 = "28'b0011001000010001011000100000" *) 
  (* TL_CREDITS_CD = "12'b000000000000" *) 
  (* TL_CREDITS_CH = "8'b00000000" *) 
  (* TL_CREDITS_NPD = "12'b000000101000" *) 
  (* TL_CREDITS_NPH = "8'b00100000" *) 
  (* TL_CREDITS_PD = "12'b000110011000" *) 
  (* TL_CREDITS_PH = "8'b00100000" *) 
  (* TL_ENABLE_MESSAGE_RID_CHECK_ENABLE = "TRUE" *) 
  (* TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE = "FALSE" *) 
  (* TL_LEGACY_CFG_EXTEND_INTERFACE_ENABLE = "FALSE" *) 
  (* TL_LEGACY_MODE_ENABLE = "FALSE" *) 
  (* TL_PF_ENABLE_REG = "FALSE" *) 
  (* TL_TAG_MGMT_ENABLE = "TRUE" *) 
  (* TRANSCEIVER_CTRL_STATUS_PORTS = "FALSE" *) 
  (* TX_FC_IF = "TRUE" *) 
  (* TX_MARGIN_FULL_0 = "7'b1001111" *) 
  (* TX_MARGIN_FULL_1 = "7'b1001110" *) 
  (* TX_MARGIN_FULL_2 = "7'b1001101" *) 
  (* TX_MARGIN_FULL_3 = "7'b1001100" *) 
  (* TX_MARGIN_FULL_4 = "7'b1000011" *) 
  (* TX_MARGIN_LOW_0 = "7'b1000101" *) 
  (* TX_MARGIN_LOW_1 = "7'b1000110" *) 
  (* TX_MARGIN_LOW_2 = "7'b1000011" *) 
  (* TX_MARGIN_LOW_3 = "7'b1000010" *) 
  (* TX_MARGIN_LOW_4 = "7'b1000000" *) 
  (* USER_CLK2_FREQ = "3" *) 
  (* USER_CLK_FREQ = "4" *) 
  (* VF0_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF0_CAPABILITY_POINTER = "8'b10000000" *) 
  (* VF0_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF0_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF0_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF0_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF0_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* VF0_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF0_PM_CAP_ID = "8'b00000001" *) 
  (* VF0_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* VF0_PM_CAP_VER_ID = "3'b011" *) 
  (* VF0_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF0_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF0_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF0_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF0_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* VF0_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* VF0_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* VF0_TPHR_CAP_VER = "4'b0001" *) 
  (* VF1_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF1_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF1_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF1_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF1_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF1_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* VF1_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF1_PM_CAP_ID = "8'b00000001" *) 
  (* VF1_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* VF1_PM_CAP_VER_ID = "3'b011" *) 
  (* VF1_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF1_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF1_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF1_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF1_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* VF1_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* VF1_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* VF1_TPHR_CAP_VER = "4'b0001" *) 
  (* VF2_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF2_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF2_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF2_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF2_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF2_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* VF2_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF2_PM_CAP_ID = "8'b00000001" *) 
  (* VF2_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* VF2_PM_CAP_VER_ID = "3'b011" *) 
  (* VF2_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF2_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF2_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF2_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF2_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* VF2_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* VF2_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* VF2_TPHR_CAP_VER = "4'b0001" *) 
  (* VF3_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF3_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF3_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF3_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF3_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF3_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* VF3_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF3_PM_CAP_ID = "8'b00000001" *) 
  (* VF3_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* VF3_PM_CAP_VER_ID = "3'b011" *) 
  (* VF3_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF3_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF3_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF3_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF3_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* VF3_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* VF3_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* VF3_TPHR_CAP_VER = "4'b0001" *) 
  (* VF4_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF4_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF4_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF4_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF4_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF4_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* VF4_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF4_PM_CAP_ID = "8'b00000001" *) 
  (* VF4_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* VF4_PM_CAP_VER_ID = "3'b011" *) 
  (* VF4_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF4_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF4_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF4_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF4_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* VF4_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* VF4_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* VF4_TPHR_CAP_VER = "4'b0001" *) 
  (* VF5_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF5_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF5_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF5_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF5_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
  (* VF5_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* VF5_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF5_PM_CAP_ID = "8'b00000001" *) 
  (* VF5_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* VF5_PM_CAP_VER_ID = "3'b011" *) 
  (* VF5_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF5_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF5_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF5_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF5_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* VF5_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* VF5_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* VF5_TPHR_CAP_VER = "4'b0001" *) 
  (* WIN10_INTEROP = "FALSE" *) 
  (* component_name = "pcie3_7x_v4_3_11" *) 
  (* gen_x0y0_ucf = "0" *) 
  (* gen_x0y1_ucf = "1" *) 
  (* gen_x0y2_ucf = "0" *) 
  (* gen_x0y3_ucf = "0" *) 
  (* pcie_blk_locn = "1" *) 
  (* silicon_revision = "Production" *) 
  (* xlnx_ref_board = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_3_0_7vx inst
       (.cfg_config_space_enable(cfg_config_space_enable),
        .cfg_current_speed(cfg_current_speed),
        .cfg_dpa_substate_change(cfg_dpa_substate_change),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_ds_port_number(cfg_ds_port_number),
        .cfg_dsn(cfg_dsn),
        .cfg_err_cor_in(cfg_err_cor_in),
        .cfg_err_cor_out(cfg_err_cor_out),
        .cfg_err_fatal_out(cfg_err_fatal_out),
        .cfg_err_nonfatal_out(cfg_err_nonfatal_out),
        .cfg_err_uncor_in(cfg_err_uncor_in),
        .cfg_ext_function_number(NLW_inst_cfg_ext_function_number_UNCONNECTED[7:0]),
        .cfg_ext_read_data({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .cfg_ext_read_data_valid(1'b0),
        .cfg_ext_read_received(NLW_inst_cfg_ext_read_received_UNCONNECTED),
        .cfg_ext_register_number(NLW_inst_cfg_ext_register_number_UNCONNECTED[9:0]),
        .cfg_ext_write_byte_enable(NLW_inst_cfg_ext_write_byte_enable_UNCONNECTED[3:0]),
        .cfg_ext_write_data(NLW_inst_cfg_ext_write_data_UNCONNECTED[31:0]),
        .cfg_ext_write_received(NLW_inst_cfg_ext_write_received_UNCONNECTED),
        .cfg_fc_cpld(cfg_fc_cpld),
        .cfg_fc_cplh(cfg_fc_cplh),
        .cfg_fc_npd(cfg_fc_npd),
        .cfg_fc_nph(cfg_fc_nph),
        .cfg_fc_pd(cfg_fc_pd),
        .cfg_fc_ph(cfg_fc_ph),
        .cfg_fc_sel(cfg_fc_sel),
        .cfg_flr_done(cfg_flr_done),
        .cfg_flr_in_process(cfg_flr_in_process),
        .cfg_function_power_state(cfg_function_power_state),
        .cfg_function_status(cfg_function_status),
        .cfg_hot_reset_in(cfg_hot_reset_in),
        .cfg_hot_reset_out(cfg_hot_reset_out),
        .cfg_interrupt_int(cfg_interrupt_int),
        .cfg_interrupt_msi_attr(cfg_interrupt_msi_attr),
        .cfg_interrupt_msi_data(cfg_interrupt_msi_data),
        .cfg_interrupt_msi_enable(cfg_interrupt_msi_enable),
        .cfg_interrupt_msi_fail(cfg_interrupt_msi_fail),
        .cfg_interrupt_msi_function_number(cfg_interrupt_msi_function_number),
        .cfg_interrupt_msi_int(cfg_interrupt_msi_int),
        .cfg_interrupt_msi_mask_update(cfg_interrupt_msi_mask_update),
        .cfg_interrupt_msi_mmenable(cfg_interrupt_msi_mmenable),
        .cfg_interrupt_msi_pending_status(cfg_interrupt_msi_pending_status),
        .cfg_interrupt_msi_select(cfg_interrupt_msi_select),
        .cfg_interrupt_msi_sent(cfg_interrupt_msi_sent),
        .cfg_interrupt_msi_tph_present(cfg_interrupt_msi_tph_present),
        .cfg_interrupt_msi_tph_st_tag(cfg_interrupt_msi_tph_st_tag),
        .cfg_interrupt_msi_tph_type(cfg_interrupt_msi_tph_type),
        .cfg_interrupt_msi_vf_enable(cfg_interrupt_msi_vf_enable),
        .cfg_interrupt_msix_address({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .cfg_interrupt_msix_data({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .cfg_interrupt_msix_enable(NLW_inst_cfg_interrupt_msix_enable_UNCONNECTED[1:0]),
        .cfg_interrupt_msix_fail(NLW_inst_cfg_interrupt_msix_fail_UNCONNECTED),
        .cfg_interrupt_msix_int(1'b0),
        .cfg_interrupt_msix_mask(NLW_inst_cfg_interrupt_msix_mask_UNCONNECTED[1:0]),
        .cfg_interrupt_msix_sent(NLW_inst_cfg_interrupt_msix_sent_UNCONNECTED),
        .cfg_interrupt_msix_vf_enable(NLW_inst_cfg_interrupt_msix_vf_enable_UNCONNECTED[5:0]),
        .cfg_interrupt_msix_vf_mask(NLW_inst_cfg_interrupt_msix_vf_mask_UNCONNECTED[5:0]),
        .cfg_interrupt_pending(cfg_interrupt_pending),
        .cfg_interrupt_sent(cfg_interrupt_sent),
        .cfg_link_power_state(cfg_link_power_state),
        .cfg_link_training_enable(cfg_link_training_enable),
        .cfg_ltr_enable(cfg_ltr_enable),
        .cfg_ltssm_state(cfg_ltssm_state),
        .cfg_max_payload(cfg_max_payload),
        .cfg_max_read_req(cfg_max_read_req),
        .cfg_mgmt_addr(cfg_mgmt_addr),
        .cfg_mgmt_byte_enable(cfg_mgmt_byte_enable),
        .cfg_mgmt_read(cfg_mgmt_read),
        .cfg_mgmt_read_data(cfg_mgmt_read_data),
        .cfg_mgmt_read_write_done(cfg_mgmt_read_write_done),
        .cfg_mgmt_type1_cfg_reg_access(cfg_mgmt_type1_cfg_reg_access),
        .cfg_mgmt_write(cfg_mgmt_write),
        .cfg_mgmt_write_data(cfg_mgmt_write_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_data(cfg_msg_received_data),
        .cfg_msg_received_type(cfg_msg_received_type),
        .cfg_msg_transmit(cfg_msg_transmit),
        .cfg_msg_transmit_data(cfg_msg_transmit_data),
        .cfg_msg_transmit_done(cfg_msg_transmit_done),
        .cfg_msg_transmit_type(cfg_msg_transmit_type),
        .cfg_negotiated_width(cfg_negotiated_width),
        .cfg_obff_enable(cfg_obff_enable),
        .cfg_per_func_status_control(cfg_per_func_status_control),
        .cfg_per_func_status_data(cfg_per_func_status_data),
        .cfg_per_function_number(cfg_per_function_number),
        .cfg_per_function_output_request(cfg_per_function_output_request),
        .cfg_per_function_update_done(cfg_per_function_update_done),
        .cfg_phy_link_down(cfg_phy_link_down),
        .cfg_phy_link_status(cfg_phy_link_status),
        .cfg_pl_status_change(cfg_pl_status_change),
        .cfg_power_state_change_ack(cfg_power_state_change_ack),
        .cfg_power_state_change_interrupt(cfg_power_state_change_interrupt),
        .cfg_rcb_status(cfg_rcb_status),
        .cfg_req_pm_transition_l23_ready(cfg_req_pm_transition_l23_ready),
        .cfg_subsys_vend_id(cfg_subsys_vend_id),
        .cfg_tph_requester_enable(cfg_tph_requester_enable),
        .cfg_tph_st_mode(cfg_tph_st_mode),
        .cfg_vf_flr_done(cfg_vf_flr_done),
        .cfg_vf_flr_in_process(cfg_vf_flr_in_process),
        .cfg_vf_power_state(cfg_vf_power_state),
        .cfg_vf_status(cfg_vf_status),
        .cfg_vf_tph_requester_enable(cfg_vf_tph_requester_enable),
        .cfg_vf_tph_st_mode(cfg_vf_tph_st_mode),
        .common_commands_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .common_commands_out(NLW_inst_common_commands_out_UNCONNECTED[25:0]),
        .cpllpd({1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpclk(NLW_inst_ext_ch_gt_drpclk_UNCONNECTED),
        .ext_ch_gt_drpdi({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpdo(NLW_inst_ext_ch_gt_drpdo_UNCONNECTED[63:0]),
        .ext_ch_gt_drpen({1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drprdy(NLW_inst_ext_ch_gt_drprdy_UNCONNECTED[3:0]),
        .ext_ch_gt_drpwe({1'b0,1'b0,1'b0,1'b0}),
        .free_run_clock(1'b0),
        .gt_ch_drp_rdy(NLW_inst_gt_ch_drp_rdy_UNCONNECTED[3:0]),
        .icap_clk(1'b0),
        .icap_csib(1'b1),
        .icap_i({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .icap_o(NLW_inst_icap_o_UNCONNECTED[31:0]),
        .icap_rdwrb(1'b1),
        .int_dclk_out(NLW_inst_int_dclk_out_UNCONNECTED),
        .int_oobclk_out(NLW_inst_int_oobclk_out_UNCONNECTED),
        .int_pclk_out_slave(NLW_inst_int_pclk_out_slave_UNCONNECTED),
        .int_pclk_sel_slave({1'b0,1'b0,1'b0,1'b0}),
        .int_pipe_rxusrclk_out(NLW_inst_int_pipe_rxusrclk_out_UNCONNECTED),
        .int_qplllock_out(NLW_inst_int_qplllock_out_UNCONNECTED[1:0]),
        .int_qplloutclk_out(NLW_inst_int_qplloutclk_out_UNCONNECTED[1:0]),
        .int_qplloutrefclk_out(NLW_inst_int_qplloutrefclk_out_UNCONNECTED[1:0]),
        .int_rxoutclk_out(NLW_inst_int_rxoutclk_out_UNCONNECTED[3:0]),
        .int_userclk1_out(NLW_inst_int_userclk1_out_UNCONNECTED),
        .int_userclk2_out(NLW_inst_int_userclk2_out_UNCONNECTED),
        .m_axis_cq_tdata(m_axis_cq_tdata),
        .m_axis_cq_tkeep(m_axis_cq_tkeep),
        .m_axis_cq_tlast(m_axis_cq_tlast),
        .m_axis_cq_tready(m_axis_cq_tready),
        .m_axis_cq_tuser(m_axis_cq_tuser),
        .m_axis_cq_tvalid(m_axis_cq_tvalid),
        .m_axis_rc_tdata(m_axis_rc_tdata),
        .m_axis_rc_tkeep(m_axis_rc_tkeep),
        .m_axis_rc_tlast(m_axis_rc_tlast),
        .m_axis_rc_tready(m_axis_rc_tready),
        .m_axis_rc_tuser(m_axis_rc_tuser),
        .m_axis_rc_tvalid(m_axis_rc_tvalid),
        .mmcm_lock(mmcm_lock),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pcie_cq_np_req(pcie_cq_np_req),
        .pcie_cq_np_req_count(pcie_cq_np_req_count),
        .pcie_drp_addr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcie_drp_clk(1'b1),
        .pcie_drp_di({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcie_drp_do(NLW_inst_pcie_drp_do_UNCONNECTED[15:0]),
        .pcie_drp_en(1'b0),
        .pcie_drp_rdy(NLW_inst_pcie_drp_rdy_UNCONNECTED),
        .pcie_drp_we(1'b0),
        .pcie_rq_seq_num(pcie_rq_seq_num),
        .pcie_rq_seq_num_vld(pcie_rq_seq_num_vld),
        .pcie_rq_tag(pcie_rq_tag),
        .pcie_rq_tag_vld(pcie_rq_tag_vld),
        .pcie_tfc_npd_av(pcie_tfc_npd_av),
        .pcie_tfc_nph_av(pcie_tfc_nph_av),
        .pipe_cpll_lock(NLW_inst_pipe_cpll_lock_UNCONNECTED[3:0]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_debug(NLW_inst_pipe_debug_UNCONNECTED[31:0]),
        .pipe_debug_0(NLW_inst_pipe_debug_0_UNCONNECTED[3:0]),
        .pipe_debug_1(NLW_inst_pipe_debug_1_UNCONNECTED[3:0]),
        .pipe_debug_2(NLW_inst_pipe_debug_2_UNCONNECTED[3:0]),
        .pipe_debug_3(NLW_inst_pipe_debug_3_UNCONNECTED[3:0]),
        .pipe_debug_4(NLW_inst_pipe_debug_4_UNCONNECTED[3:0]),
        .pipe_debug_5(NLW_inst_pipe_debug_5_UNCONNECTED[3:0]),
        .pipe_debug_6(NLW_inst_pipe_debug_6_UNCONNECTED[3:0]),
        .pipe_debug_7(NLW_inst_pipe_debug_7_UNCONNECTED[3:0]),
        .pipe_debug_8(NLW_inst_pipe_debug_8_UNCONNECTED[3:0]),
        .pipe_debug_9(NLW_inst_pipe_debug_9_UNCONNECTED[3:0]),
        .pipe_dmonitorout(NLW_inst_pipe_dmonitorout_UNCONNECTED[59:0]),
        .pipe_drp_fsm(NLW_inst_pipe_drp_fsm_UNCONNECTED[27:0]),
        .pipe_eyescandataerror(NLW_inst_pipe_eyescandataerror_UNCONNECTED[3:0]),
        .pipe_gen3_out(NLW_inst_pipe_gen3_out_UNCONNECTED),
        .pipe_loopback({1'b0,1'b0,1'b0}),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_mmcm_rst_n(1'b0),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out),
        .pipe_qpll_lock(NLW_inst_pipe_qpll_lock_UNCONNECTED[0]),
        .pipe_qrst_fsm(NLW_inst_pipe_qrst_fsm_UNCONNECTED[11:0]),
        .pipe_qrst_idle(NLW_inst_pipe_qrst_idle_UNCONNECTED),
        .pipe_rate_fsm(NLW_inst_pipe_rate_fsm_UNCONNECTED[19:0]),
        .pipe_rate_idle(NLW_inst_pipe_rate_idle_UNCONNECTED),
        .pipe_rst_fsm(NLW_inst_pipe_rst_fsm_UNCONNECTED[4:0]),
        .pipe_rst_idle(NLW_inst_pipe_rst_idle_UNCONNECTED),
        .pipe_rx_0_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_1_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_2_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_3_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_4_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_5_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_6_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_7_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rxbufstatus(NLW_inst_pipe_rxbufstatus_UNCONNECTED[11:0]),
        .pipe_rxcommadet(NLW_inst_pipe_rxcommadet_UNCONNECTED[3:0]),
        .pipe_rxdisperr(NLW_inst_pipe_rxdisperr_UNCONNECTED[31:0]),
        .pipe_rxdlysresetdone(NLW_inst_pipe_rxdlysresetdone_UNCONNECTED[3:0]),
        .pipe_rxnotintable(NLW_inst_pipe_rxnotintable_UNCONNECTED[31:0]),
        .pipe_rxoutclk_in({1'b0,1'b0,1'b0,1'b0}),
        .pipe_rxoutclk_out(pipe_rxoutclk_out),
        .pipe_rxphaligndone(NLW_inst_pipe_rxphaligndone_UNCONNECTED[3:0]),
        .pipe_rxpmaresetdone(NLW_inst_pipe_rxpmaresetdone_UNCONNECTED[3:0]),
        .pipe_rxprbscntreset(1'b0),
        .pipe_rxprbserr(NLW_inst_pipe_rxprbserr_UNCONNECTED[3:0]),
        .pipe_rxprbssel({1'b0,1'b0,1'b0}),
        .pipe_rxstatus(NLW_inst_pipe_rxstatus_UNCONNECTED[11:0]),
        .pipe_rxsyncdone(NLW_inst_pipe_rxsyncdone_UNCONNECTED[3:0]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_sync_fsm_rx(NLW_inst_pipe_sync_fsm_rx_UNCONNECTED[27:0]),
        .pipe_sync_fsm_tx(NLW_inst_pipe_sync_fsm_tx_UNCONNECTED[23:0]),
        .pipe_tx_0_sigs(NLW_inst_pipe_tx_0_sigs_UNCONNECTED[83:0]),
        .pipe_tx_1_sigs(NLW_inst_pipe_tx_1_sigs_UNCONNECTED[83:0]),
        .pipe_tx_2_sigs(NLW_inst_pipe_tx_2_sigs_UNCONNECTED[83:0]),
        .pipe_tx_3_sigs(NLW_inst_pipe_tx_3_sigs_UNCONNECTED[83:0]),
        .pipe_tx_4_sigs(NLW_inst_pipe_tx_4_sigs_UNCONNECTED[83:0]),
        .pipe_tx_5_sigs(NLW_inst_pipe_tx_5_sigs_UNCONNECTED[83:0]),
        .pipe_tx_6_sigs(NLW_inst_pipe_tx_6_sigs_UNCONNECTED[83:0]),
        .pipe_tx_7_sigs(NLW_inst_pipe_tx_7_sigs_UNCONNECTED[83:0]),
        .pipe_txdlysresetdone(NLW_inst_pipe_txdlysresetdone_UNCONNECTED[3:0]),
        .pipe_txinhibit({1'b0,1'b0,1'b0,1'b0}),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .pipe_txphaligndone(NLW_inst_pipe_txphaligndone_UNCONNECTED[3:0]),
        .pipe_txphinitdone(NLW_inst_pipe_txphinitdone_UNCONNECTED[3:0]),
        .pipe_txprbsforceerr(1'b0),
        .pipe_txprbssel({1'b0,1'b0,1'b0}),
        .pipe_userclk1_in(pipe_userclk1_in),
        .pipe_userclk2_in(pipe_userclk2_in),
        .powerdown(1'b0),
        .qpll_drp_clk(NLW_inst_qpll_drp_clk_UNCONNECTED),
        .qpll_drp_crscode({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll_drp_done({1'b0,1'b0}),
        .qpll_drp_fsm({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll_drp_gen3(NLW_inst_qpll_drp_gen3_UNCONNECTED),
        .qpll_drp_ovrd(NLW_inst_qpll_drp_ovrd_UNCONNECTED),
        .qpll_drp_reset({1'b0,1'b0}),
        .qpll_drp_rst_n(NLW_inst_qpll_drp_rst_n_UNCONNECTED),
        .qpll_drp_start(NLW_inst_qpll_drp_start_UNCONNECTED),
        .qpll_qplld(NLW_inst_qpll_qplld_UNCONNECTED),
        .qpll_qplllock({1'b0,1'b0}),
        .qpll_qplloutclk({1'b0,1'b0}),
        .qpll_qplloutrefclk({1'b0,1'b0}),
        .qpll_qpllreset(NLW_inst_qpll_qpllreset_UNCONNECTED[1:0]),
        .qpllpd(1'b0),
        .rxpd({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_cc_tdata(s_axis_cc_tdata),
        .s_axis_cc_tkeep(s_axis_cc_tkeep),
        .s_axis_cc_tlast(s_axis_cc_tlast),
        .s_axis_cc_tready(s_axis_cc_tready),
        .s_axis_cc_tuser(s_axis_cc_tuser),
        .s_axis_cc_tvalid(s_axis_cc_tvalid),
        .s_axis_rq_tdata(s_axis_rq_tdata),
        .s_axis_rq_tkeep(s_axis_rq_tkeep),
        .s_axis_rq_tlast(s_axis_rq_tlast),
        .s_axis_rq_tready(s_axis_rq_tready),
        .s_axis_rq_tuser(s_axis_rq_tuser),
        .s_axis_rq_tvalid(s_axis_rq_tvalid),
        .startup_cfgclk(NLW_inst_startup_cfgclk_UNCONNECTED),
        .startup_cfgmclk(NLW_inst_startup_cfgmclk_UNCONNECTED),
        .startup_clk(1'b0),
        .startup_eos(NLW_inst_startup_eos_UNCONNECTED),
        .startup_eos_in(1'b0),
        .startup_gsr(1'b0),
        .startup_gts(1'b0),
        .startup_keyclearb(1'b1),
        .startup_pack(1'b0),
        .startup_preq(NLW_inst_startup_preq_UNCONNECTED),
        .startup_usrcclko(1'b0),
        .startup_usrcclkts(1'b1),
        .startup_usrdoneo(1'b0),
        .startup_usrdonets(1'b1),
        .sys_clk(sys_clk),
        .sys_reset(sys_reset),
        .txdetectrx({1'b0,1'b0,1'b0,1'b0}),
        .txelecidle({1'b0,1'b0,1'b0,1'b0}),
        .txpd({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpdelecidlemode({1'b0,1'b0,1'b0,1'b0}),
        .user_app_rdy(NLW_inst_user_app_rdy_UNCONNECTED),
        .user_clk(user_clk),
        .user_lnk_up(user_lnk_up),
        .user_reset(user_reset),
        .user_tph_function_num({1'b0,1'b0,1'b0}),
        .user_tph_stt_address({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .user_tph_stt_read_data(NLW_inst_user_tph_stt_read_data_UNCONNECTED[31:0]),
        .user_tph_stt_read_data_valid(NLW_inst_user_tph_stt_read_data_valid_UNCONNECTED),
        .user_tph_stt_read_enable(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_common
   (QPLL_QPLLLOCK,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    QPLL_DRP_DONE,
    RST_DCLK_RESET,
    pipe_dclk_in,
    sys_clk,
    QPLL_QPLLPD,
    QPLL_QPLLRESET,
    QPLL_DRP_START,
    QPLL_DRP_GEN3);
  output QPLL_QPLLLOCK;
  output QPLL_QPLLOUTCLK;
  output QPLL_QPLLOUTREFCLK;
  output QPLL_DRP_DONE;
  input RST_DCLK_RESET;
  input pipe_dclk_in;
  input sys_clk;
  input QPLL_QPLLPD;
  input QPLL_QPLLRESET;
  input QPLL_DRP_START;
  input QPLL_DRP_GEN3;

  wire QPLL_DRP_DONE;
  wire QPLL_DRP_GEN3;
  wire QPLL_DRP_START;
  wire QPLL_QPLLLOCK;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire QPLL_QPLLPD;
  wire QPLL_QPLLRESET;
  wire RST_DCLK_RESET;
  wire pipe_dclk_in;
  wire [7:0]qpll_drp_addr;
  wire [15:0]qpll_drp_di;
  wire [15:0]qpll_drp_do;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  wire sys_clk;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_qpll_drp qpll_drp_i
       (.D(qpll_drp_do),
        .Q({qpll_drp_addr[7],qpll_drp_addr[5],qpll_drp_addr[2:0]}),
        .QPLL_DRP_DONE(QPLL_DRP_DONE),
        .QPLL_DRP_GEN3(QPLL_DRP_GEN3),
        .QPLL_DRP_START(QPLL_DRP_START),
        .QPLL_QPLLLOCK(QPLL_QPLLLOCK),
        .RST_DCLK_RESET(RST_DCLK_RESET),
        .\di_reg[15]_0 (qpll_drp_di),
        .pipe_dclk_in(pipe_dclk_in),
        .qpll_drp_en(qpll_drp_en),
        .qpll_drp_rdy(qpll_drp_rdy),
        .qpll_drp_we(qpll_drp_we));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_qpll_wrapper qpll_wrapper_i
       (.D(qpll_drp_do),
        .Q({qpll_drp_addr[7],qpll_drp_addr[5],qpll_drp_addr[2:0]}),
        .QPLL_QPLLLOCK(QPLL_QPLLLOCK),
        .QPLL_QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLL_QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .QPLL_QPLLPD(QPLL_QPLLPD),
        .QPLL_QPLLRESET(QPLL_QPLLRESET),
        .\gth_common.gthe2_common_i_0 (qpll_drp_di),
        .pipe_dclk_in(pipe_dclk_in),
        .qpll_drp_en(qpll_drp_en),
        .qpll_drp_rdy(qpll_drp_rdy),
        .qpll_drp_we(qpll_drp_we),
        .sys_clk(sys_clk));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_top
   (PIPERX0EQLPNEWTXCOEFFORPRESET,
    PIPERX1EQLPNEWTXCOEFFORPRESET,
    PIPERX2EQLPNEWTXCOEFFORPRESET,
    PIPERX3EQLPNEWTXCOEFFORPRESET,
    Q,
    PIPE_TXEQ_COEFF,
    PIPE_TXEQ_DONE,
    PIPE_RXEQ_DONE,
    pipe_rx0_eq_lffs_sel,
    pipe_rx0_eq_adapt_done,
    pipe_pclk_sel_out,
    PIPE_RXSTATUS,
    PIPE_GEN3_RDY,
    pipe_rx0_valid,
    pipe_rx0_phy_status,
    PIPE_RXELECIDLE,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rxoutclk_out,
    pipe_txoutclk_out,
    PIPE_RXDATA,
    PIPE_RXDATAK,
    pipe_rx1_eq_lffs_sel,
    USER_RXEQ_ADAPT_DONE,
    pipe_rx1_valid,
    pipe_rx1_phy_status,
    pipe_rx2_eq_lffs_sel,
    rxeq_adapt_done_reg,
    pipe_rx2_valid,
    pipe_rx2_phy_status,
    pipe_rx3_eq_lffs_sel,
    rxeq_adapt_done_reg_0,
    pipe_rx3_valid,
    pipe_rx3_phy_status,
    pipe_userclk2_in,
    pipe_pclk_in,
    PIPETXRATE,
    pipe_mmcm_lock_in,
    PIPE_TXEQ_CONTROL,
    PIPE_TXEQ_DEEMPH,
    PIPE_TXEQ_PRESET,
    PIPE_RXEQ_PRESET,
    PIPE_RXEQ_CONTROL,
    PIPE_RXEQ_TXPRESET,
    PIPE_RXEQ_LFFS,
    pipe_dclk_in,
    sys_clk,
    pipe_oobclk_in,
    PIPE_TXELECIDLE,
    PIPE_TXCOMPLIANCE,
    pipe_rxusrclk_in,
    pci_exp_rxn,
    pci_exp_rxp,
    PIPE_RXPOLARITY,
    PIPE_RXSLIDE,
    pipe_tx_deemph,
    pipe_tx_rcvr_det,
    pipe_tx_swing,
    PIPE_POWERDOWN,
    PIPETXMARGIN,
    PIPE_TXDATA,
    PIPE_TXDATAK,
    sys_reset);
  output [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  output [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  output [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  output [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  output [0:0]Q;
  output [63:0]PIPE_TXEQ_COEFF;
  output [3:0]PIPE_TXEQ_DONE;
  output [3:0]PIPE_RXEQ_DONE;
  output pipe_rx0_eq_lffs_sel;
  output pipe_rx0_eq_adapt_done;
  output [3:0]pipe_pclk_sel_out;
  output [11:0]PIPE_RXSTATUS;
  output [3:0]PIPE_GEN3_RDY;
  output pipe_rx0_valid;
  output pipe_rx0_phy_status;
  output [3:0]PIPE_RXELECIDLE;
  output [3:0]pci_exp_txn;
  output [3:0]pci_exp_txp;
  output [3:0]pipe_rxoutclk_out;
  output pipe_txoutclk_out;
  output [63:0]PIPE_RXDATA;
  output [7:0]PIPE_RXDATAK;
  output pipe_rx1_eq_lffs_sel;
  output USER_RXEQ_ADAPT_DONE;
  output pipe_rx1_valid;
  output pipe_rx1_phy_status;
  output pipe_rx2_eq_lffs_sel;
  output rxeq_adapt_done_reg;
  output pipe_rx2_valid;
  output pipe_rx2_phy_status;
  output pipe_rx3_eq_lffs_sel;
  output rxeq_adapt_done_reg_0;
  output pipe_rx3_valid;
  output pipe_rx3_phy_status;
  input pipe_userclk2_in;
  input pipe_pclk_in;
  input [1:0]PIPETXRATE;
  input pipe_mmcm_lock_in;
  input [7:0]PIPE_TXEQ_CONTROL;
  input [23:0]PIPE_TXEQ_DEEMPH;
  input [15:0]PIPE_TXEQ_PRESET;
  input [11:0]PIPE_RXEQ_PRESET;
  input [7:0]PIPE_RXEQ_CONTROL;
  input [15:0]PIPE_RXEQ_TXPRESET;
  input [23:0]PIPE_RXEQ_LFFS;
  input pipe_dclk_in;
  input sys_clk;
  input pipe_oobclk_in;
  input [3:0]PIPE_TXELECIDLE;
  input [3:0]PIPE_TXCOMPLIANCE;
  input pipe_rxusrclk_in;
  input [3:0]pci_exp_rxn;
  input [3:0]pci_exp_rxp;
  input [3:0]PIPE_RXPOLARITY;
  input [3:0]PIPE_RXSLIDE;
  input pipe_tx_deemph;
  input pipe_tx_rcvr_det;
  input pipe_tx_swing;
  input [7:0]PIPE_POWERDOWN;
  input [2:0]PIPETXMARGIN;
  input [63:0]PIPE_TXDATA;
  input [7:0]PIPE_TXDATAK;
  input sys_reset;

  wire [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  wire [2:0]PIPETXMARGIN;
  wire [1:0]PIPETXRATE;
  wire [3:0]PIPE_GEN3_RDY;
  wire [7:0]PIPE_POWERDOWN;
  wire [63:0]PIPE_RXDATA;
  wire [7:0]PIPE_RXDATAK;
  wire [3:0]PIPE_RXELECIDLE;
  wire [7:0]PIPE_RXEQ_CONTROL;
  wire [3:0]PIPE_RXEQ_DONE;
  wire [23:0]PIPE_RXEQ_LFFS;
  wire [11:0]PIPE_RXEQ_PRESET;
  wire [15:0]PIPE_RXEQ_TXPRESET;
  wire [3:0]PIPE_RXPOLARITY;
  wire [3:0]PIPE_RXSLIDE;
  wire [11:0]PIPE_RXSTATUS;
  wire [3:0]PIPE_TXCOMPLIANCE;
  wire [63:0]PIPE_TXDATA;
  wire [7:0]PIPE_TXDATAK;
  wire [3:0]PIPE_TXELECIDLE;
  wire [63:0]PIPE_TXEQ_COEFF;
  wire [7:0]PIPE_TXEQ_CONTROL;
  wire [23:0]PIPE_TXEQ_DEEMPH;
  wire [3:0]PIPE_TXEQ_DONE;
  wire [15:0]PIPE_TXEQ_PRESET;
  wire [0:0]Q;
  wire USER_RXEQ_ADAPT_DONE;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire \pipe_lane[0].gt_wrapper_i/CPLLPD0 ;
  wire \pipe_lane[0].gt_wrapper_i/cpllpd ;
  wire \pipe_lane[1].gt_wrapper_i/CPLLPD0 ;
  wire \pipe_lane[1].gt_wrapper_i/cpllpd ;
  wire \pipe_lane[2].gt_wrapper_i/CPLLPD0 ;
  wire \pipe_lane[2].gt_wrapper_i/cpllpd ;
  wire \pipe_lane[3].gt_wrapper_i/CPLLPD0 ;
  wire \pipe_lane[3].gt_wrapper_i/cpllpd ;
  wire pipe_mmcm_lock_in;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire pipe_rx0_eq_adapt_done;
  wire pipe_rx0_eq_lffs_sel;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_valid;
  wire pipe_rx1_eq_lffs_sel;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_valid;
  wire pipe_rx2_eq_lffs_sel;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_valid;
  wire pipe_rx3_eq_lffs_sel;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_valid;
  wire [3:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_swing;
  wire pipe_txoutclk_out;
  wire pipe_userclk2_in;
  wire pipe_wrapper_i_n_141;
  wire rate_cpllpd_0;
  wire rate_cpllpd_1;
  wire rate_cpllpd_2;
  wire rate_cpllpd_3;
  wire \reg_phy_rdy_reg_n_0_[0] ;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_0;
  wire sys_clk;
  wire sys_reset;

  LUT2 #(
    .INIT(4'hE)) 
    \gth_channel.gthe2_channel_i_i_1 
       (.I0(\pipe_lane[0].gt_wrapper_i/cpllpd ),
        .I1(rate_cpllpd_0),
        .O(\pipe_lane[0].gt_wrapper_i/CPLLPD0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gth_channel.gthe2_channel_i_i_1__0 
       (.I0(\pipe_lane[1].gt_wrapper_i/cpllpd ),
        .I1(rate_cpllpd_1),
        .O(\pipe_lane[1].gt_wrapper_i/CPLLPD0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gth_channel.gthe2_channel_i_i_1__1 
       (.I0(\pipe_lane[2].gt_wrapper_i/cpllpd ),
        .I1(rate_cpllpd_2),
        .O(\pipe_lane[2].gt_wrapper_i/CPLLPD0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gth_channel.gthe2_channel_i_i_1__2 
       (.I0(\pipe_lane[3].gt_wrapper_i/cpllpd ),
        .I1(rate_cpllpd_3),
        .O(\pipe_lane[3].gt_wrapper_i/CPLLPD0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_wrapper pipe_wrapper_i
       (.CPLLPD0(\pipe_lane[0].gt_wrapper_i/CPLLPD0 ),
        .CPLLPD0_3(\pipe_lane[1].gt_wrapper_i/CPLLPD0 ),
        .CPLLPD0_4(\pipe_lane[2].gt_wrapper_i/CPLLPD0 ),
        .CPLLPD0_5(\pipe_lane[3].gt_wrapper_i/CPLLPD0 ),
        .PIPERX0EQLPNEWTXCOEFFORPRESET(PIPERX0EQLPNEWTXCOEFFORPRESET),
        .PIPERX1EQLPNEWTXCOEFFORPRESET(PIPERX1EQLPNEWTXCOEFFORPRESET),
        .PIPERX2EQLPNEWTXCOEFFORPRESET(PIPERX2EQLPNEWTXCOEFFORPRESET),
        .PIPERX3EQLPNEWTXCOEFFORPRESET(PIPERX3EQLPNEWTXCOEFFORPRESET),
        .PIPETXMARGIN(PIPETXMARGIN),
        .PIPETXRATE(PIPETXRATE),
        .PIPE_GEN3_RDY(PIPE_GEN3_RDY),
        .PIPE_POWERDOWN(PIPE_POWERDOWN),
        .PIPE_RXDATA(PIPE_RXDATA),
        .PIPE_RXDATAK(PIPE_RXDATAK),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE),
        .PIPE_RXEQ_CONTROL(PIPE_RXEQ_CONTROL),
        .PIPE_RXEQ_DONE(PIPE_RXEQ_DONE),
        .PIPE_RXEQ_LFFS(PIPE_RXEQ_LFFS),
        .PIPE_RXEQ_PRESET(PIPE_RXEQ_PRESET),
        .PIPE_RXEQ_TXPRESET(PIPE_RXEQ_TXPRESET),
        .PIPE_RXPOLARITY(PIPE_RXPOLARITY),
        .PIPE_RXSLIDE(PIPE_RXSLIDE),
        .PIPE_RXSTATUS(PIPE_RXSTATUS),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE),
        .PIPE_TXDATA(PIPE_TXDATA),
        .PIPE_TXDATAK(PIPE_TXDATAK),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE),
        .PIPE_TXEQ_CONTROL(PIPE_TXEQ_CONTROL),
        .PIPE_TXEQ_DEEMPH(PIPE_TXEQ_DEEMPH),
        .PIPE_TXEQ_DONE(PIPE_TXEQ_DONE),
        .PIPE_TXEQ_PRESET(PIPE_TXEQ_PRESET),
        .Q(PIPE_TXEQ_COEFF[15:0]),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .cpllpd(\pipe_lane[0].gt_wrapper_i/cpllpd ),
        .cpllpd_0(\pipe_lane[1].gt_wrapper_i/cpllpd ),
        .cpllpd_1(\pipe_lane[2].gt_wrapper_i/cpllpd ),
        .cpllpd_2(\pipe_lane[3].gt_wrapper_i/cpllpd ),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out),
        .pipe_rx0_eq_adapt_done(pipe_rx0_eq_adapt_done),
        .pipe_rx0_eq_lffs_sel(pipe_rx0_eq_lffs_sel),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_rx1_eq_lffs_sel(pipe_rx1_eq_lffs_sel),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_valid(pipe_rx1_valid),
        .pipe_rx2_eq_lffs_sel(pipe_rx2_eq_lffs_sel),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_valid(pipe_rx2_valid),
        .pipe_rx3_eq_lffs_sel(pipe_rx3_eq_lffs_sel),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_valid(pipe_rx3_valid),
        .pipe_rxoutclk_out(pipe_rxoutclk_out),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_swing(pipe_tx_swing),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .rate_cpllpd_0(rate_cpllpd_0),
        .rate_cpllpd_1(rate_cpllpd_1),
        .rate_cpllpd_2(rate_cpllpd_2),
        .rate_cpllpd_3(rate_cpllpd_3),
        .rst_idle_reg2_reg(pipe_wrapper_i_n_141),
        .rxeq_adapt_done_reg(rxeq_adapt_done_reg),
        .rxeq_adapt_done_reg_0(rxeq_adapt_done_reg_0),
        .sys_clk(sys_clk),
        .sys_reset(sys_reset),
        .\txeq_txcoeff_reg[18] (PIPE_TXEQ_COEFF[31:16]),
        .\txeq_txcoeff_reg[18]_0 (PIPE_TXEQ_COEFF[47:32]),
        .\txeq_txcoeff_reg[18]_1 (PIPE_TXEQ_COEFF[63:48]));
  FDPE \reg_phy_rdy_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(pipe_wrapper_i_n_141),
        .Q(\reg_phy_rdy_reg_n_0_[0] ));
  FDPE \reg_phy_rdy_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\reg_phy_rdy_reg_n_0_[0] ),
        .PRE(pipe_wrapper_i_n_141),
        .Q(Q));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_wrapper
   (cpllpd,
    RATE_CPLLLOCK,
    DRP_RDY,
    pci_exp_txn,
    pci_exp_txp,
    D,
    gt_rxcdrlock_0,
    \gth_channel.gthe2_channel_i_0 ,
    PIPE_RXELECIDLE,
    pipe_rxoutclk_out,
    SYNC_RXPHALIGNDONE_M,
    RATE_RXPMARESETDONE,
    RATE_RXRATEDONE,
    RATE_RXRESETDONE,
    SYNC_RXSYNCDONE,
    gt_rxsyncout_0,
    gt_rxvalid_0,
    \gth_channel.gthe2_channel_i_1 ,
    pipe_txoutclk_out,
    \gth_channel.gthe2_channel_i_2 ,
    \gth_channel.gthe2_channel_i_3 ,
    RATE_TXRATEDONE,
    RATE_TXRESETDONE,
    SYNC_TXSYNCDONE,
    gt_txsyncout_0,
    \gth_channel.gthe2_channel_i_4 ,
    PIPE_RXSTATUS,
    PIPE_RXDATA,
    PIPE_RXDATAK,
    gt_cpllpdrefclk,
    CPLLPD0,
    pipe_dclk_in,
    \gth_channel.gthe2_channel_i_5 ,
    \gth_channel.gthe2_channel_i_6 ,
    pci_exp_rxn,
    pci_exp_rxp,
    sys_clk,
    DRP_GTXRESET,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    RX8B10BEN0,
    \gth_channel.gthe2_channel_i_7 ,
    rate_txpmareset_0,
    PIPE_RXPOLARITY,
    PIPE_RXSLIDE,
    rxsyncallin,
    rst_userrdy,
    pipe_rxusrclk_in,
    USER_OOBCLK,
    pipe_tx_deemph,
    pipe_tx_rcvr_det,
    sync_txdlyen_0,
    Q,
    PIPE_TXELECIDLE,
    pipe_tx_swing,
    \gth_channel.gthe2_channel_i_8 ,
    pipe_pclk_in,
    DRPDI,
    PIPE_POWERDOWN,
    RXSYSCLKSEL,
    RXRATE,
    PIPETXMARGIN,
    TXPOSTCURSOR,
    TXPRECURSOR,
    PIPE_TXDATA,
    TXMAINCURSOR,
    PIPE_TXCOMPLIANCE,
    PIPE_TXDATAK,
    DRPADDR,
    rate_cpllreset_0,
    RST_CPLLRESET);
  output cpllpd;
  output RATE_CPLLLOCK;
  output DRP_RDY;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output [0:0]D;
  output gt_rxcdrlock_0;
  output \gth_channel.gthe2_channel_i_0 ;
  output [0:0]PIPE_RXELECIDLE;
  output [0:0]pipe_rxoutclk_out;
  output SYNC_RXPHALIGNDONE_M;
  output RATE_RXPMARESETDONE;
  output RATE_RXRATEDONE;
  output RATE_RXRESETDONE;
  output SYNC_RXSYNCDONE;
  output gt_rxsyncout_0;
  output gt_rxvalid_0;
  output \gth_channel.gthe2_channel_i_1 ;
  output pipe_txoutclk_out;
  output \gth_channel.gthe2_channel_i_2 ;
  output \gth_channel.gthe2_channel_i_3 ;
  output RATE_TXRATEDONE;
  output RATE_TXRESETDONE;
  output SYNC_TXSYNCDONE;
  output gt_txsyncout_0;
  output [15:0]\gth_channel.gthe2_channel_i_4 ;
  output [2:0]PIPE_RXSTATUS;
  output [15:0]PIPE_RXDATA;
  output [1:0]PIPE_RXDATAK;
  input gt_cpllpdrefclk;
  input CPLLPD0;
  input pipe_dclk_in;
  input \gth_channel.gthe2_channel_i_5 ;
  input \gth_channel.gthe2_channel_i_6 ;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input sys_clk;
  input DRP_GTXRESET;
  input QPLL_QPLLOUTCLK;
  input QPLL_QPLLOUTREFCLK;
  input RX8B10BEN0;
  input \gth_channel.gthe2_channel_i_7 ;
  input rate_txpmareset_0;
  input [0:0]PIPE_RXPOLARITY;
  input [0:0]PIPE_RXSLIDE;
  input rxsyncallin;
  input rst_userrdy;
  input pipe_rxusrclk_in;
  input USER_OOBCLK;
  input pipe_tx_deemph;
  input pipe_tx_rcvr_det;
  input sync_txdlyen_0;
  input [2:0]Q;
  input [0:0]PIPE_TXELECIDLE;
  input pipe_tx_swing;
  input \gth_channel.gthe2_channel_i_8 ;
  input pipe_pclk_in;
  input [15:0]DRPDI;
  input [1:0]PIPE_POWERDOWN;
  input [0:0]RXSYSCLKSEL;
  input [0:0]RXRATE;
  input [2:0]PIPETXMARGIN;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [15:0]PIPE_TXDATA;
  input [6:0]TXMAINCURSOR;
  input [0:0]PIPE_TXCOMPLIANCE;
  input [1:0]PIPE_TXDATAK;
  input [7:0]DRPADDR;
  input rate_cpllreset_0;
  input RST_CPLLRESET;

  wire CPLLPD0;
  wire CPLLRESET0;
  wire [0:0]D;
  wire [7:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_GTXRESET;
  wire DRP_RDY;
  wire [2:0]PIPETXMARGIN;
  wire [1:0]PIPE_POWERDOWN;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [0:0]PIPE_RXELECIDLE;
  wire [0:0]PIPE_RXPOLARITY;
  wire [0:0]PIPE_RXSLIDE;
  wire [2:0]PIPE_RXSTATUS;
  wire [0:0]PIPE_TXCOMPLIANCE;
  wire [15:0]PIPE_TXDATA;
  wire [1:0]PIPE_TXDATAK;
  wire [0:0]PIPE_TXELECIDLE;
  wire [2:0]Q;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire RATE_CPLLLOCK;
  wire RATE_RXPMARESETDONE;
  wire RATE_RXRATEDONE;
  wire RATE_RXRESETDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXRESETDONE;
  wire RST_CPLLRESET;
  wire RX8B10BEN0;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXSYNCDONE;
  wire SYNC_TXSYNCDONE;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_OOBCLK;
  wire cpllpd;
  wire gt_cpllpdrefclk;
  wire gt_rxcdrlock_0;
  wire gt_rxsyncout_0;
  wire gt_rxvalid_0;
  wire gt_txsyncout_0;
  wire \gth_channel.gthe2_channel_i_0 ;
  wire \gth_channel.gthe2_channel_i_1 ;
  wire \gth_channel.gthe2_channel_i_2 ;
  wire \gth_channel.gthe2_channel_i_3 ;
  wire [15:0]\gth_channel.gthe2_channel_i_4 ;
  wire \gth_channel.gthe2_channel_i_5 ;
  wire \gth_channel.gthe2_channel_i_6 ;
  wire \gth_channel.gthe2_channel_i_7 ;
  wire \gth_channel.gthe2_channel_i_8 ;
  wire \gth_channel.gthe2_channel_i_n_10 ;
  wire \gth_channel.gthe2_channel_i_n_11 ;
  wire \gth_channel.gthe2_channel_i_n_114 ;
  wire \gth_channel.gthe2_channel_i_n_115 ;
  wire \gth_channel.gthe2_channel_i_n_116 ;
  wire \gth_channel.gthe2_channel_i_n_120 ;
  wire \gth_channel.gthe2_channel_i_n_121 ;
  wire \gth_channel.gthe2_channel_i_n_122 ;
  wire \gth_channel.gthe2_channel_i_n_123 ;
  wire \gth_channel.gthe2_channel_i_n_124 ;
  wire \gth_channel.gthe2_channel_i_n_14 ;
  wire \gth_channel.gthe2_channel_i_n_17 ;
  wire \gth_channel.gthe2_channel_i_n_173 ;
  wire \gth_channel.gthe2_channel_i_n_174 ;
  wire \gth_channel.gthe2_channel_i_n_175 ;
  wire \gth_channel.gthe2_channel_i_n_176 ;
  wire \gth_channel.gthe2_channel_i_n_177 ;
  wire \gth_channel.gthe2_channel_i_n_178 ;
  wire \gth_channel.gthe2_channel_i_n_179 ;
  wire \gth_channel.gthe2_channel_i_n_180 ;
  wire \gth_channel.gthe2_channel_i_n_181 ;
  wire \gth_channel.gthe2_channel_i_n_182 ;
  wire \gth_channel.gthe2_channel_i_n_183 ;
  wire \gth_channel.gthe2_channel_i_n_184 ;
  wire \gth_channel.gthe2_channel_i_n_185 ;
  wire \gth_channel.gthe2_channel_i_n_186 ;
  wire \gth_channel.gthe2_channel_i_n_187 ;
  wire \gth_channel.gthe2_channel_i_n_188 ;
  wire \gth_channel.gthe2_channel_i_n_216 ;
  wire \gth_channel.gthe2_channel_i_n_217 ;
  wire \gth_channel.gthe2_channel_i_n_218 ;
  wire \gth_channel.gthe2_channel_i_n_219 ;
  wire \gth_channel.gthe2_channel_i_n_224 ;
  wire \gth_channel.gthe2_channel_i_n_225 ;
  wire \gth_channel.gthe2_channel_i_n_228 ;
  wire \gth_channel.gthe2_channel_i_n_229 ;
  wire \gth_channel.gthe2_channel_i_n_230 ;
  wire \gth_channel.gthe2_channel_i_n_231 ;
  wire \gth_channel.gthe2_channel_i_n_232 ;
  wire \gth_channel.gthe2_channel_i_n_233 ;
  wire \gth_channel.gthe2_channel_i_n_234 ;
  wire \gth_channel.gthe2_channel_i_n_235 ;
  wire \gth_channel.gthe2_channel_i_n_236 ;
  wire \gth_channel.gthe2_channel_i_n_237 ;
  wire \gth_channel.gthe2_channel_i_n_238 ;
  wire \gth_channel.gthe2_channel_i_n_239 ;
  wire \gth_channel.gthe2_channel_i_n_240 ;
  wire \gth_channel.gthe2_channel_i_n_241 ;
  wire \gth_channel.gthe2_channel_i_n_242 ;
  wire \gth_channel.gthe2_channel_i_n_243 ;
  wire \gth_channel.gthe2_channel_i_n_34 ;
  wire \gth_channel.gthe2_channel_i_n_4 ;
  wire \gth_channel.gthe2_channel_i_n_57 ;
  wire \gth_channel.gthe2_channel_i_n_58 ;
  wire \gth_channel.gthe2_channel_i_n_59 ;
  wire \gth_channel.gthe2_channel_i_n_60 ;
  wire \gth_channel.gthe2_channel_i_n_61 ;
  wire \gth_channel.gthe2_channel_i_n_62 ;
  wire \gth_channel.gthe2_channel_i_n_63 ;
  wire \gth_channel.gthe2_channel_i_n_64 ;
  wire \gth_channel.gthe2_channel_i_n_65 ;
  wire \gth_channel.gthe2_channel_i_n_66 ;
  wire \gth_channel.gthe2_channel_i_n_67 ;
  wire \gth_channel.gthe2_channel_i_n_68 ;
  wire \gth_channel.gthe2_channel_i_n_69 ;
  wire \gth_channel.gthe2_channel_i_n_70 ;
  wire \gth_channel.gthe2_channel_i_n_71 ;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_swing;
  wire pipe_txoutclk_out;
  wire rate_cpllreset_0;
  wire rate_txpmareset_0;
  wire rst_userrdy;
  wire rxsyncallin;
  wire sync_txdlyen_0;
  wire sys_clk;
  wire \NLW_gth_channel.gthe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RSOSINTDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESTADAPTDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXQPISENN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXQPISENP_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXPMARESETDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXQPISENN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXQPISENP_UNCONNECTED ;
  wire [15:0]\NLW_gth_channel.gthe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [7:4]\NLW_gth_channel.gthe2_channel_i_RXCHARISCOMMA_UNCONNECTED ;
  wire [7:4]\NLW_gth_channel.gthe2_channel_i_RXCHARISK_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [63:32]\NLW_gth_channel.gthe2_channel_i_RXDATA_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire [5:0]\NLW_gth_channel.gthe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire [6:0]\NLW_gth_channel.gthe2_channel_i_RXMONITOROUT_UNCONNECTED ;
  wire [4:0]\NLW_gth_channel.gthe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gth_channel.gthe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gtx_cpllpd_ovrd_23 cpllPDInst
       (.CPLLRESET0(CPLLRESET0),
        .RST_CPLLRESET(RST_CPLLRESET),
        .cpllpd(cpllpd),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rate_cpllreset_0(rate_cpllreset_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SET_SPEEDUP_SIM_TRUE = "TRUE" *) 
  GTHE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'h00C10),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(42'h24800040E80),
    .CFOK_CFG2(6'b100000),
    .CFOK_CFG3(6'b100000),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(15),
    .CLK_COR_MIN_LAT(13),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(29'h00A407CC),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000AB1),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b1),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h000000000140),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'b00000000000000000000000010000000),
    .PMA_RSV2(32'b00011100000000000000000000001010),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(15'b000000000001000),
    .PMA_RSV5(4'b0000),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0002007FE2000C2080018),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00001000000000),
    .RXLPM_LF_CFG(18'b001001000000000000),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("FABRIC"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b11),
    .RXPI_CFG2(2'b11),
    .RXPI_CFG3(2'b11),
    .RXPI_CFG4(1'b0),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b100),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b1),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(24'b000011000000000000010000),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000011000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b0),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b00),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_AGC_CFG2(4'b0000),
    .RX_DFE_AGC_OVRDEN(1'b1),
    .RX_DFE_GAIN_CFG(23'h0020C0),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011100000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_H6_CFG(11'b00000100000),
    .RX_DFE_H7_CFG(11'b00000100000),
    .RX_DFE_KL_CFG(33'b000000000000000000000001100010000),
    .RX_DFE_KL_LPM_KH_CFG0(2'b10),
    .RX_DFE_KL_LPM_KH_CFG1(3'b010),
    .RX_DFE_KL_LPM_KH_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KH_OVRDEN(1'b1),
    .RX_DFE_KL_LPM_KL_CFG0(2'b10),
    .RX_DFE_KL_LPM_KL_CFG1(3'b010),
    .RX_DFE_KL_LPM_KL_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KL_OVRDEN(1'b1),
    .RX_DFE_LPM_CFG(16'h0080),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b1),
    .RX_DFE_ST_CFG(54'h00C100000C003F),
    .RX_DFE_UT_CFG(17'b00011100000000000),
    .RX_DFE_VP_CFG(17'b00011101010100011),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(4),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b1),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b100),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_PRECHARGE_TIME(17'h00001),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    \gth_channel.gthe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\NLW_gth_channel.gthe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ),
        .CPLLLOCK(RATE_CPLLLOCK),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(CPLLPD0),
        .CPLLREFCLKLOST(\NLW_gth_channel.gthe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(CPLLRESET0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gth_channel.gthe2_channel_i_n_57 ,\gth_channel.gthe2_channel_i_n_58 ,\gth_channel.gthe2_channel_i_n_59 ,\gth_channel.gthe2_channel_i_n_60 ,\gth_channel.gthe2_channel_i_n_61 ,\gth_channel.gthe2_channel_i_n_62 ,\gth_channel.gthe2_channel_i_n_63 ,\gth_channel.gthe2_channel_i_n_64 ,\gth_channel.gthe2_channel_i_n_65 ,\gth_channel.gthe2_channel_i_n_66 ,\gth_channel.gthe2_channel_i_n_67 ,\gth_channel.gthe2_channel_i_n_68 ,\gth_channel.gthe2_channel_i_n_69 ,\gth_channel.gthe2_channel_i_n_70 ,\gth_channel.gthe2_channel_i_n_71 }),
        .DRPADDR({1'b0,DRPADDR}),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(DRPDI),
        .DRPDO(\gth_channel.gthe2_channel_i_4 ),
        .DRPEN(\gth_channel.gthe2_channel_i_5 ),
        .DRPRDY(DRP_RDY),
        .DRPWE(\gth_channel.gthe2_channel_i_6 ),
        .EYESCANDATAERROR(\gth_channel.gthe2_channel_i_n_4 ),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTHRXN(pci_exp_rxn),
        .GTHRXP(pci_exp_rxp),
        .GTHTXN(pci_exp_txn),
        .GTHTXP(pci_exp_txp),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\NLW_gth_channel.gthe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(DRP_GTXRESET),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(DRP_GTXRESET),
        .LOOPBACK({1'b0,1'b0,1'b0}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gth_channel.gthe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(D),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(QPLL_QPLLOUTCLK),
        .QPLLREFCLK(QPLL_QPLLOUTREFCLK),
        .RESETOVRD(1'b0),
        .RSOSINTDONE(\NLW_gth_channel.gthe2_channel_i_RSOSINTDONE_UNCONNECTED ),
        .RX8B10BEN(RX8B10BEN0),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({\gth_channel.gthe2_channel_i_n_114 ,\gth_channel.gthe2_channel_i_n_115 ,\gth_channel.gthe2_channel_i_n_116 }),
        .RXBYTEISALIGNED(\gth_channel.gthe2_channel_i_n_10 ),
        .RXBYTEREALIGN(\gth_channel.gthe2_channel_i_n_11 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock_0),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gth_channel.gthe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(\gth_channel.gthe2_channel_i_n_14 ),
        .RXCHANREALIGN(\NLW_gth_channel.gthe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\NLW_gth_channel.gthe2_channel_i_RXCHARISCOMMA_UNCONNECTED [7:4],\gth_channel.gthe2_channel_i_n_216 ,\gth_channel.gthe2_channel_i_n_217 ,\gth_channel.gthe2_channel_i_n_218 ,\gth_channel.gthe2_channel_i_n_219 }),
        .RXCHARISK({\NLW_gth_channel.gthe2_channel_i_RXCHARISK_UNCONNECTED [7:4],\gth_channel.gthe2_channel_i_n_224 ,\gth_channel.gthe2_channel_i_n_225 ,PIPE_RXDATAK}),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gth_channel.gthe2_channel_i_n_120 ,\gth_channel.gthe2_channel_i_n_121 ,\gth_channel.gthe2_channel_i_n_122 ,\gth_channel.gthe2_channel_i_n_123 ,\gth_channel.gthe2_channel_i_n_124 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(\NLW_gth_channel.gthe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gth_channel.gthe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(\gth_channel.gthe2_channel_i_n_17 ),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gth_channel.gthe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gth_channel.gthe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\NLW_gth_channel.gthe2_channel_i_RXDATA_UNCONNECTED [63:32],\gth_channel.gthe2_channel_i_n_173 ,\gth_channel.gthe2_channel_i_n_174 ,\gth_channel.gthe2_channel_i_n_175 ,\gth_channel.gthe2_channel_i_n_176 ,\gth_channel.gthe2_channel_i_n_177 ,\gth_channel.gthe2_channel_i_n_178 ,\gth_channel.gthe2_channel_i_n_179 ,\gth_channel.gthe2_channel_i_n_180 ,\gth_channel.gthe2_channel_i_n_181 ,\gth_channel.gthe2_channel_i_n_182 ,\gth_channel.gthe2_channel_i_n_183 ,\gth_channel.gthe2_channel_i_n_184 ,\gth_channel.gthe2_channel_i_n_185 ,\gth_channel.gthe2_channel_i_n_186 ,\gth_channel.gthe2_channel_i_n_187 ,\gth_channel.gthe2_channel_i_n_188 ,PIPE_RXDATA}),
        .RXDATAVALID(\NLW_gth_channel.gthe2_channel_i_RXDATAVALID_UNCONNECTED [1:0]),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(\gth_channel.gthe2_channel_i_7 ),
        .RXDFEAGCOVRDEN(RX8B10BEN0),
        .RXDFEAGCTRL({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(\gth_channel.gthe2_channel_i_7 ),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFESLIDETAP({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPADAPTEN(1'b0),
        .RXDFESLIDETAPHOLD(1'b0),
        .RXDFESLIDETAPID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPINITOVRDEN(1'b0),
        .RXDFESLIDETAPONLYADAPTEN(1'b0),
        .RXDFESLIDETAPOVRDEN(1'b0),
        .RXDFESLIDETAPSTARTED(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTARTED_UNCONNECTED ),
        .RXDFESLIDETAPSTROBE(1'b0),
        .RXDFESLIDETAPSTROBEDONE(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED ),
        .RXDFESLIDETAPSTROBESTARTED(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED ),
        .RXDFESTADAPTDONE(\NLW_gth_channel.gthe2_channel_i_RXDFESTADAPTDONE_UNCONNECTED ),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDISPERR({\gth_channel.gthe2_channel_i_n_228 ,\gth_channel.gthe2_channel_i_n_229 ,\gth_channel.gthe2_channel_i_n_230 ,\gth_channel.gthe2_channel_i_n_231 ,\gth_channel.gthe2_channel_i_n_232 ,\gth_channel.gthe2_channel_i_n_233 ,\gth_channel.gthe2_channel_i_n_234 ,\gth_channel.gthe2_channel_i_n_235 }),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gth_channel.gthe2_channel_i_0 ),
        .RXELECIDLE(PIPE_RXELECIDLE),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gth_channel.gthe2_channel_i_RXHEADER_UNCONNECTED [5:0]),
        .RXHEADERVALID(\NLW_gth_channel.gthe2_channel_i_RXHEADERVALID_UNCONNECTED [1:0]),
        .RXLPMEN(RX8B10BEN0),
        .RXLPMHFHOLD(\gth_channel.gthe2_channel_i_7 ),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(\gth_channel.gthe2_channel_i_7 ),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(RX8B10BEN0),
        .RXMONITOROUT(\NLW_gth_channel.gthe2_channel_i_RXMONITOROUT_UNCONNECTED [6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE({\gth_channel.gthe2_channel_i_n_236 ,\gth_channel.gthe2_channel_i_n_237 ,\gth_channel.gthe2_channel_i_n_238 ,\gth_channel.gthe2_channel_i_n_239 ,\gth_channel.gthe2_channel_i_n_240 ,\gth_channel.gthe2_channel_i_n_241 ,\gth_channel.gthe2_channel_i_n_242 ,\gth_channel.gthe2_channel_i_n_243 }),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b1,1'b1,1'b0}),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTSTARTED(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTARTED_UNCONNECTED ),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ),
        .RXOSINTSTROBESTARTED(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(pipe_rxoutclk_out),
        .RXOUTCLKFABRIC(\NLW_gth_channel.gthe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gth_channel.gthe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(RX8B10BEN0),
        .RXPCSRESET(1'b0),
        .RXPD(PIPE_POWERDOWN),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(SYNC_RXPHALIGNDONE_M),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gth_channel.gthe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gth_channel.gthe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(rate_txpmareset_0),
        .RXPMARESETDONE(RATE_RXPMARESETDONE),
        .RXPOLARITY(PIPE_RXPOLARITY),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gth_channel.gthe2_channel_i_n_34 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0}),
        .RXQPIEN(1'b0),
        .RXQPISENN(\NLW_gth_channel.gthe2_channel_i_RXQPISENN_UNCONNECTED ),
        .RXQPISENP(\NLW_gth_channel.gthe2_channel_i_RXQPISENP_UNCONNECTED ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(RATE_RXRATEDONE),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(RATE_RXRESETDONE),
        .RXSLIDE(PIPE_RXSLIDE),
        .RXSTARTOFSEQ(\NLW_gth_channel.gthe2_channel_i_RXSTARTOFSEQ_UNCONNECTED [1:0]),
        .RXSTATUS(PIPE_RXSTATUS),
        .RXSYNCALLIN(rxsyncallin),
        .RXSYNCDONE(SYNC_RXSYNCDONE),
        .RXSYNCIN(gt_rxsyncout_0),
        .RXSYNCMODE(1'b1),
        .RXSYNCOUT(gt_rxsyncout_0),
        .RXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pipe_rxusrclk_in),
        .RXUSRCLK2(pipe_rxusrclk_in),
        .RXVALID(gt_rxvalid_0),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(USER_OOBCLK),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(RX8B10BEN0),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gth_channel.gthe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXCOMPLIANCE}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXDATAK}),
        .TXCOMFINISH(\NLW_gth_channel.gthe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXDATA}),
        .TXDEEMPH(pipe_tx_deemph),
        .TXDETECTRX(pipe_tx_rcvr_det),
        .TXDIFFCTRL({1'b1,1'b1,1'b1,1'b1}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(sync_txdlyen_0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(Q[0]),
        .TXDLYSRESETDONE(\gth_channel.gthe2_channel_i_1 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(PIPE_TXELECIDLE),
        .TXGEARBOXREADY(\NLW_gth_channel.gthe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(1'b0),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(PIPETXMARGIN),
        .TXOUTCLK(pipe_txoutclk_out),
        .TXOUTCLKFABRIC(\NLW_gth_channel.gthe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gth_channel.gthe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(1'b0),
        .TXPD(PIPE_POWERDOWN),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(Q[2]),
        .TXPHALIGNDONE(\gth_channel.gthe2_channel_i_2 ),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(Q[1]),
        .TXPHINITDONE(\gth_channel.gthe2_channel_i_3 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(rate_txpmareset_0),
        .TXPMARESETDONE(\NLW_gth_channel.gthe2_channel_i_TXPMARESETDONE_UNCONNECTED ),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0}),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\NLW_gth_channel.gthe2_channel_i_TXQPISENN_UNCONNECTED ),
        .TXQPISENP(\NLW_gth_channel.gthe2_channel_i_TXQPISENP_UNCONNECTED ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(RATE_TXRATEDONE),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(RATE_TXRESETDONE),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(pipe_tx_swing),
        .TXSYNCALLIN(\gth_channel.gthe2_channel_i_8 ),
        .TXSYNCDONE(SYNC_TXSYNCDONE),
        .TXSYNCIN(gt_txsyncout_0),
        .TXSYNCMODE(1'b1),
        .TXSYNCOUT(gt_txsyncout_0),
        .TXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pipe_pclk_in),
        .TXUSRCLK2(pipe_pclk_in));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_gt_wrapper" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_wrapper_0
   (cpllpd_0,
    RATE_CPLLLOCK,
    DRP_RDY,
    pci_exp_txn,
    pci_exp_txp,
    D,
    gt_rxcdrlock_1,
    \gth_channel.gthe2_channel_i_0 ,
    PIPE_RXELECIDLE,
    pipe_rxoutclk_out,
    \gth_channel.gthe2_channel_i_1 ,
    RATE_RXPMARESETDONE,
    RATE_RXRATEDONE,
    RATE_RXRESETDONE,
    SYNC_RXSYNCDONE,
    gt_rxvalid_1,
    \gth_channel.gthe2_channel_i_2 ,
    \gth_channel.gthe2_channel_i_3 ,
    \gth_channel.gthe2_channel_i_4 ,
    RATE_TXRATEDONE,
    RATE_TXRESETDONE,
    SYNC_TXSYNCDONE,
    \gth_channel.gthe2_channel_i_5 ,
    PIPE_RXSTATUS,
    PIPE_RXDATA,
    PIPE_RXDATAK,
    SYNC_RXPHALIGNDONE_S,
    gt_cpllpdrefclk,
    CPLLPD0_3,
    pipe_dclk_in,
    \gth_channel.gthe2_channel_i_6 ,
    \gth_channel.gthe2_channel_i_7 ,
    pci_exp_rxn,
    pci_exp_rxp,
    sys_clk,
    DRP_GTXRESET,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    RX8B10BEN0,
    \gth_channel.gthe2_channel_i_8 ,
    rate_txpmareset_1,
    PIPE_RXPOLARITY,
    PIPE_RXSLIDE,
    rxsyncallin,
    gt_rxsyncout_0,
    rst_userrdy,
    pipe_rxusrclk_in,
    USER_OOBCLK,
    pipe_tx_deemph,
    pipe_tx_rcvr_det,
    Q,
    PIPE_TXELECIDLE,
    pipe_tx_swing,
    \gth_channel.gthe2_channel_i_9 ,
    gt_txsyncout_0,
    pipe_pclk_in,
    DRPDI,
    PIPE_POWERDOWN,
    RXSYSCLKSEL,
    RXRATE,
    PIPETXMARGIN,
    TXPOSTCURSOR,
    TXPRECURSOR,
    PIPE_TXDATA,
    TXMAINCURSOR,
    PIPE_TXCOMPLIANCE,
    PIPE_TXDATAK,
    DRPADDR,
    rate_cpllreset_1,
    RST_CPLLRESET,
    rxphaligndone_s_reg1_reg,
    rxphaligndone_s_reg1_reg_0);
  output cpllpd_0;
  output RATE_CPLLLOCK;
  output DRP_RDY;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output [0:0]D;
  output gt_rxcdrlock_1;
  output \gth_channel.gthe2_channel_i_0 ;
  output [0:0]PIPE_RXELECIDLE;
  output [0:0]pipe_rxoutclk_out;
  output \gth_channel.gthe2_channel_i_1 ;
  output RATE_RXPMARESETDONE;
  output RATE_RXRATEDONE;
  output RATE_RXRESETDONE;
  output SYNC_RXSYNCDONE;
  output gt_rxvalid_1;
  output \gth_channel.gthe2_channel_i_2 ;
  output \gth_channel.gthe2_channel_i_3 ;
  output \gth_channel.gthe2_channel_i_4 ;
  output RATE_TXRATEDONE;
  output RATE_TXRESETDONE;
  output SYNC_TXSYNCDONE;
  output [15:0]\gth_channel.gthe2_channel_i_5 ;
  output [2:0]PIPE_RXSTATUS;
  output [15:0]PIPE_RXDATA;
  output [1:0]PIPE_RXDATAK;
  output SYNC_RXPHALIGNDONE_S;
  input gt_cpllpdrefclk;
  input CPLLPD0_3;
  input pipe_dclk_in;
  input \gth_channel.gthe2_channel_i_6 ;
  input \gth_channel.gthe2_channel_i_7 ;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input sys_clk;
  input DRP_GTXRESET;
  input QPLL_QPLLOUTCLK;
  input QPLL_QPLLOUTREFCLK;
  input RX8B10BEN0;
  input \gth_channel.gthe2_channel_i_8 ;
  input rate_txpmareset_1;
  input [0:0]PIPE_RXPOLARITY;
  input [0:0]PIPE_RXSLIDE;
  input rxsyncallin;
  input gt_rxsyncout_0;
  input rst_userrdy;
  input pipe_rxusrclk_in;
  input USER_OOBCLK;
  input pipe_tx_deemph;
  input pipe_tx_rcvr_det;
  input [2:0]Q;
  input [0:0]PIPE_TXELECIDLE;
  input pipe_tx_swing;
  input \gth_channel.gthe2_channel_i_9 ;
  input gt_txsyncout_0;
  input pipe_pclk_in;
  input [15:0]DRPDI;
  input [1:0]PIPE_POWERDOWN;
  input [0:0]RXSYSCLKSEL;
  input [0:0]RXRATE;
  input [2:0]PIPETXMARGIN;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [15:0]PIPE_TXDATA;
  input [6:0]TXMAINCURSOR;
  input [0:0]PIPE_TXCOMPLIANCE;
  input [1:0]PIPE_TXDATAK;
  input [7:0]DRPADDR;
  input rate_cpllreset_1;
  input RST_CPLLRESET;
  input rxphaligndone_s_reg1_reg;
  input rxphaligndone_s_reg1_reg_0;

  wire CPLLPD0_3;
  wire CPLLRESET0;
  wire [0:0]D;
  wire [7:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_GTXRESET;
  wire DRP_RDY;
  wire [2:0]PIPETXMARGIN;
  wire [1:0]PIPE_POWERDOWN;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [0:0]PIPE_RXELECIDLE;
  wire [0:0]PIPE_RXPOLARITY;
  wire [0:0]PIPE_RXSLIDE;
  wire [2:0]PIPE_RXSTATUS;
  wire [0:0]PIPE_TXCOMPLIANCE;
  wire [15:0]PIPE_TXDATA;
  wire [1:0]PIPE_TXDATAK;
  wire [0:0]PIPE_TXELECIDLE;
  wire [2:0]Q;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire RATE_CPLLLOCK;
  wire RATE_RXPMARESETDONE;
  wire RATE_RXRATEDONE;
  wire RATE_RXRESETDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXRESETDONE;
  wire RST_CPLLRESET;
  wire RX8B10BEN0;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_RXSYNCDONE;
  wire SYNC_TXSYNCDONE;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_OOBCLK;
  wire cpllpd_0;
  wire gt_cpllpdrefclk;
  wire gt_rxcdrlock_1;
  wire gt_rxsyncout_0;
  wire gt_rxvalid_1;
  wire gt_txsyncout_0;
  wire \gth_channel.gthe2_channel_i_0 ;
  wire \gth_channel.gthe2_channel_i_1 ;
  wire \gth_channel.gthe2_channel_i_2 ;
  wire \gth_channel.gthe2_channel_i_3 ;
  wire \gth_channel.gthe2_channel_i_4 ;
  wire [15:0]\gth_channel.gthe2_channel_i_5 ;
  wire \gth_channel.gthe2_channel_i_6 ;
  wire \gth_channel.gthe2_channel_i_7 ;
  wire \gth_channel.gthe2_channel_i_8 ;
  wire \gth_channel.gthe2_channel_i_9 ;
  wire \gth_channel.gthe2_channel_i_n_10 ;
  wire \gth_channel.gthe2_channel_i_n_11 ;
  wire \gth_channel.gthe2_channel_i_n_114 ;
  wire \gth_channel.gthe2_channel_i_n_115 ;
  wire \gth_channel.gthe2_channel_i_n_116 ;
  wire \gth_channel.gthe2_channel_i_n_120 ;
  wire \gth_channel.gthe2_channel_i_n_121 ;
  wire \gth_channel.gthe2_channel_i_n_122 ;
  wire \gth_channel.gthe2_channel_i_n_123 ;
  wire \gth_channel.gthe2_channel_i_n_124 ;
  wire \gth_channel.gthe2_channel_i_n_14 ;
  wire \gth_channel.gthe2_channel_i_n_17 ;
  wire \gth_channel.gthe2_channel_i_n_173 ;
  wire \gth_channel.gthe2_channel_i_n_174 ;
  wire \gth_channel.gthe2_channel_i_n_175 ;
  wire \gth_channel.gthe2_channel_i_n_176 ;
  wire \gth_channel.gthe2_channel_i_n_177 ;
  wire \gth_channel.gthe2_channel_i_n_178 ;
  wire \gth_channel.gthe2_channel_i_n_179 ;
  wire \gth_channel.gthe2_channel_i_n_180 ;
  wire \gth_channel.gthe2_channel_i_n_181 ;
  wire \gth_channel.gthe2_channel_i_n_182 ;
  wire \gth_channel.gthe2_channel_i_n_183 ;
  wire \gth_channel.gthe2_channel_i_n_184 ;
  wire \gth_channel.gthe2_channel_i_n_185 ;
  wire \gth_channel.gthe2_channel_i_n_186 ;
  wire \gth_channel.gthe2_channel_i_n_187 ;
  wire \gth_channel.gthe2_channel_i_n_188 ;
  wire \gth_channel.gthe2_channel_i_n_216 ;
  wire \gth_channel.gthe2_channel_i_n_217 ;
  wire \gth_channel.gthe2_channel_i_n_218 ;
  wire \gth_channel.gthe2_channel_i_n_219 ;
  wire \gth_channel.gthe2_channel_i_n_224 ;
  wire \gth_channel.gthe2_channel_i_n_225 ;
  wire \gth_channel.gthe2_channel_i_n_228 ;
  wire \gth_channel.gthe2_channel_i_n_229 ;
  wire \gth_channel.gthe2_channel_i_n_230 ;
  wire \gth_channel.gthe2_channel_i_n_231 ;
  wire \gth_channel.gthe2_channel_i_n_232 ;
  wire \gth_channel.gthe2_channel_i_n_233 ;
  wire \gth_channel.gthe2_channel_i_n_234 ;
  wire \gth_channel.gthe2_channel_i_n_235 ;
  wire \gth_channel.gthe2_channel_i_n_236 ;
  wire \gth_channel.gthe2_channel_i_n_237 ;
  wire \gth_channel.gthe2_channel_i_n_238 ;
  wire \gth_channel.gthe2_channel_i_n_239 ;
  wire \gth_channel.gthe2_channel_i_n_240 ;
  wire \gth_channel.gthe2_channel_i_n_241 ;
  wire \gth_channel.gthe2_channel_i_n_242 ;
  wire \gth_channel.gthe2_channel_i_n_243 ;
  wire \gth_channel.gthe2_channel_i_n_34 ;
  wire \gth_channel.gthe2_channel_i_n_4 ;
  wire \gth_channel.gthe2_channel_i_n_40 ;
  wire \gth_channel.gthe2_channel_i_n_45 ;
  wire \gth_channel.gthe2_channel_i_n_56 ;
  wire \gth_channel.gthe2_channel_i_n_57 ;
  wire \gth_channel.gthe2_channel_i_n_58 ;
  wire \gth_channel.gthe2_channel_i_n_59 ;
  wire \gth_channel.gthe2_channel_i_n_60 ;
  wire \gth_channel.gthe2_channel_i_n_61 ;
  wire \gth_channel.gthe2_channel_i_n_62 ;
  wire \gth_channel.gthe2_channel_i_n_63 ;
  wire \gth_channel.gthe2_channel_i_n_64 ;
  wire \gth_channel.gthe2_channel_i_n_65 ;
  wire \gth_channel.gthe2_channel_i_n_66 ;
  wire \gth_channel.gthe2_channel_i_n_67 ;
  wire \gth_channel.gthe2_channel_i_n_68 ;
  wire \gth_channel.gthe2_channel_i_n_69 ;
  wire \gth_channel.gthe2_channel_i_n_70 ;
  wire \gth_channel.gthe2_channel_i_n_71 ;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_swing;
  wire rate_cpllreset_1;
  wire rate_txpmareset_1;
  wire rst_userrdy;
  wire rxphaligndone_s_reg1_reg;
  wire rxphaligndone_s_reg1_reg_0;
  wire rxsyncallin;
  wire sys_clk;
  wire \NLW_gth_channel.gthe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RSOSINTDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESTADAPTDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXQPISENN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXQPISENP_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXPMARESETDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXQPISENN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXQPISENP_UNCONNECTED ;
  wire [15:0]\NLW_gth_channel.gthe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [7:4]\NLW_gth_channel.gthe2_channel_i_RXCHARISCOMMA_UNCONNECTED ;
  wire [7:4]\NLW_gth_channel.gthe2_channel_i_RXCHARISK_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [63:32]\NLW_gth_channel.gthe2_channel_i_RXDATA_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire [5:0]\NLW_gth_channel.gthe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire [6:0]\NLW_gth_channel.gthe2_channel_i_RXMONITOROUT_UNCONNECTED ;
  wire [4:0]\NLW_gth_channel.gthe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gth_channel.gthe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gtx_cpllpd_ovrd_21 cpllPDInst
       (.CPLLRESET0(CPLLRESET0),
        .RST_CPLLRESET(RST_CPLLRESET),
        .cpllpd_0(cpllpd_0),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rate_cpllreset_1(rate_cpllreset_1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SET_SPEEDUP_SIM_TRUE = "TRUE" *) 
  GTHE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'h00C10),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(42'h24800040E80),
    .CFOK_CFG2(6'b100000),
    .CFOK_CFG3(6'b100000),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(15),
    .CLK_COR_MIN_LAT(13),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(29'h00A407CC),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000AB1),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b1),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h000000000140),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'b00000000000000000000000010000000),
    .PMA_RSV2(32'b00011100000000000000000000001010),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(15'b000000000001000),
    .PMA_RSV5(4'b0000),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0002007FE2000C2080018),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00001000000000),
    .RXLPM_LF_CFG(18'b001001000000000000),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("FABRIC"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b11),
    .RXPI_CFG2(2'b11),
    .RXPI_CFG3(2'b11),
    .RXPI_CFG4(1'b0),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b100),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b1),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(24'b000011000000000000010000),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000011000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b0),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b00),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_AGC_CFG2(4'b0000),
    .RX_DFE_AGC_OVRDEN(1'b1),
    .RX_DFE_GAIN_CFG(23'h0020C0),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011100000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_H6_CFG(11'b00000100000),
    .RX_DFE_H7_CFG(11'b00000100000),
    .RX_DFE_KL_CFG(33'b000000000000000000000001100010000),
    .RX_DFE_KL_LPM_KH_CFG0(2'b10),
    .RX_DFE_KL_LPM_KH_CFG1(3'b010),
    .RX_DFE_KL_LPM_KH_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KH_OVRDEN(1'b1),
    .RX_DFE_KL_LPM_KL_CFG0(2'b10),
    .RX_DFE_KL_LPM_KL_CFG1(3'b010),
    .RX_DFE_KL_LPM_KL_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KL_OVRDEN(1'b1),
    .RX_DFE_LPM_CFG(16'h0080),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b1),
    .RX_DFE_ST_CFG(54'h00C100000C003F),
    .RX_DFE_UT_CFG(17'b00011100000000000),
    .RX_DFE_VP_CFG(17'b00011101010100011),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(4),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b1),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b100),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_PRECHARGE_TIME(17'h00001),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    \gth_channel.gthe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\NLW_gth_channel.gthe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ),
        .CPLLLOCK(RATE_CPLLLOCK),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(CPLLPD0_3),
        .CPLLREFCLKLOST(\NLW_gth_channel.gthe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(CPLLRESET0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gth_channel.gthe2_channel_i_n_57 ,\gth_channel.gthe2_channel_i_n_58 ,\gth_channel.gthe2_channel_i_n_59 ,\gth_channel.gthe2_channel_i_n_60 ,\gth_channel.gthe2_channel_i_n_61 ,\gth_channel.gthe2_channel_i_n_62 ,\gth_channel.gthe2_channel_i_n_63 ,\gth_channel.gthe2_channel_i_n_64 ,\gth_channel.gthe2_channel_i_n_65 ,\gth_channel.gthe2_channel_i_n_66 ,\gth_channel.gthe2_channel_i_n_67 ,\gth_channel.gthe2_channel_i_n_68 ,\gth_channel.gthe2_channel_i_n_69 ,\gth_channel.gthe2_channel_i_n_70 ,\gth_channel.gthe2_channel_i_n_71 }),
        .DRPADDR({1'b0,DRPADDR}),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(DRPDI),
        .DRPDO(\gth_channel.gthe2_channel_i_5 ),
        .DRPEN(\gth_channel.gthe2_channel_i_6 ),
        .DRPRDY(DRP_RDY),
        .DRPWE(\gth_channel.gthe2_channel_i_7 ),
        .EYESCANDATAERROR(\gth_channel.gthe2_channel_i_n_4 ),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTHRXN(pci_exp_rxn),
        .GTHRXP(pci_exp_rxp),
        .GTHTXN(pci_exp_txn),
        .GTHTXP(pci_exp_txp),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\NLW_gth_channel.gthe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(DRP_GTXRESET),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(DRP_GTXRESET),
        .LOOPBACK({1'b0,1'b0,1'b0}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gth_channel.gthe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(D),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(QPLL_QPLLOUTCLK),
        .QPLLREFCLK(QPLL_QPLLOUTREFCLK),
        .RESETOVRD(1'b0),
        .RSOSINTDONE(\NLW_gth_channel.gthe2_channel_i_RSOSINTDONE_UNCONNECTED ),
        .RX8B10BEN(RX8B10BEN0),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({\gth_channel.gthe2_channel_i_n_114 ,\gth_channel.gthe2_channel_i_n_115 ,\gth_channel.gthe2_channel_i_n_116 }),
        .RXBYTEISALIGNED(\gth_channel.gthe2_channel_i_n_10 ),
        .RXBYTEREALIGN(\gth_channel.gthe2_channel_i_n_11 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock_1),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gth_channel.gthe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(\gth_channel.gthe2_channel_i_n_14 ),
        .RXCHANREALIGN(\NLW_gth_channel.gthe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\NLW_gth_channel.gthe2_channel_i_RXCHARISCOMMA_UNCONNECTED [7:4],\gth_channel.gthe2_channel_i_n_216 ,\gth_channel.gthe2_channel_i_n_217 ,\gth_channel.gthe2_channel_i_n_218 ,\gth_channel.gthe2_channel_i_n_219 }),
        .RXCHARISK({\NLW_gth_channel.gthe2_channel_i_RXCHARISK_UNCONNECTED [7:4],\gth_channel.gthe2_channel_i_n_224 ,\gth_channel.gthe2_channel_i_n_225 ,PIPE_RXDATAK}),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gth_channel.gthe2_channel_i_n_120 ,\gth_channel.gthe2_channel_i_n_121 ,\gth_channel.gthe2_channel_i_n_122 ,\gth_channel.gthe2_channel_i_n_123 ,\gth_channel.gthe2_channel_i_n_124 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(\NLW_gth_channel.gthe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gth_channel.gthe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(\gth_channel.gthe2_channel_i_n_17 ),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gth_channel.gthe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gth_channel.gthe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\NLW_gth_channel.gthe2_channel_i_RXDATA_UNCONNECTED [63:32],\gth_channel.gthe2_channel_i_n_173 ,\gth_channel.gthe2_channel_i_n_174 ,\gth_channel.gthe2_channel_i_n_175 ,\gth_channel.gthe2_channel_i_n_176 ,\gth_channel.gthe2_channel_i_n_177 ,\gth_channel.gthe2_channel_i_n_178 ,\gth_channel.gthe2_channel_i_n_179 ,\gth_channel.gthe2_channel_i_n_180 ,\gth_channel.gthe2_channel_i_n_181 ,\gth_channel.gthe2_channel_i_n_182 ,\gth_channel.gthe2_channel_i_n_183 ,\gth_channel.gthe2_channel_i_n_184 ,\gth_channel.gthe2_channel_i_n_185 ,\gth_channel.gthe2_channel_i_n_186 ,\gth_channel.gthe2_channel_i_n_187 ,\gth_channel.gthe2_channel_i_n_188 ,PIPE_RXDATA}),
        .RXDATAVALID(\NLW_gth_channel.gthe2_channel_i_RXDATAVALID_UNCONNECTED [1:0]),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXDFEAGCOVRDEN(RX8B10BEN0),
        .RXDFEAGCTRL({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFESLIDETAP({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPADAPTEN(1'b0),
        .RXDFESLIDETAPHOLD(1'b0),
        .RXDFESLIDETAPID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPINITOVRDEN(1'b0),
        .RXDFESLIDETAPONLYADAPTEN(1'b0),
        .RXDFESLIDETAPOVRDEN(1'b0),
        .RXDFESLIDETAPSTARTED(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTARTED_UNCONNECTED ),
        .RXDFESLIDETAPSTROBE(1'b0),
        .RXDFESLIDETAPSTROBEDONE(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED ),
        .RXDFESLIDETAPSTROBESTARTED(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED ),
        .RXDFESTADAPTDONE(\NLW_gth_channel.gthe2_channel_i_RXDFESTADAPTDONE_UNCONNECTED ),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDISPERR({\gth_channel.gthe2_channel_i_n_228 ,\gth_channel.gthe2_channel_i_n_229 ,\gth_channel.gthe2_channel_i_n_230 ,\gth_channel.gthe2_channel_i_n_231 ,\gth_channel.gthe2_channel_i_n_232 ,\gth_channel.gthe2_channel_i_n_233 ,\gth_channel.gthe2_channel_i_n_234 ,\gth_channel.gthe2_channel_i_n_235 }),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gth_channel.gthe2_channel_i_0 ),
        .RXELECIDLE(PIPE_RXELECIDLE),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gth_channel.gthe2_channel_i_RXHEADER_UNCONNECTED [5:0]),
        .RXHEADERVALID(\NLW_gth_channel.gthe2_channel_i_RXHEADERVALID_UNCONNECTED [1:0]),
        .RXLPMEN(RX8B10BEN0),
        .RXLPMHFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(RX8B10BEN0),
        .RXMONITOROUT(\NLW_gth_channel.gthe2_channel_i_RXMONITOROUT_UNCONNECTED [6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE({\gth_channel.gthe2_channel_i_n_236 ,\gth_channel.gthe2_channel_i_n_237 ,\gth_channel.gthe2_channel_i_n_238 ,\gth_channel.gthe2_channel_i_n_239 ,\gth_channel.gthe2_channel_i_n_240 ,\gth_channel.gthe2_channel_i_n_241 ,\gth_channel.gthe2_channel_i_n_242 ,\gth_channel.gthe2_channel_i_n_243 }),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b1,1'b1,1'b0}),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTSTARTED(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTARTED_UNCONNECTED ),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ),
        .RXOSINTSTROBESTARTED(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(pipe_rxoutclk_out),
        .RXOUTCLKFABRIC(\NLW_gth_channel.gthe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gth_channel.gthe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(RX8B10BEN0),
        .RXPCSRESET(1'b0),
        .RXPD(PIPE_POWERDOWN),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gth_channel.gthe2_channel_i_1 ),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gth_channel.gthe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gth_channel.gthe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(rate_txpmareset_1),
        .RXPMARESETDONE(RATE_RXPMARESETDONE),
        .RXPOLARITY(PIPE_RXPOLARITY),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gth_channel.gthe2_channel_i_n_34 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0}),
        .RXQPIEN(1'b0),
        .RXQPISENN(\NLW_gth_channel.gthe2_channel_i_RXQPISENN_UNCONNECTED ),
        .RXQPISENP(\NLW_gth_channel.gthe2_channel_i_RXQPISENP_UNCONNECTED ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(RATE_RXRATEDONE),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(RATE_RXRESETDONE),
        .RXSLIDE(PIPE_RXSLIDE),
        .RXSTARTOFSEQ(\NLW_gth_channel.gthe2_channel_i_RXSTARTOFSEQ_UNCONNECTED [1:0]),
        .RXSTATUS(PIPE_RXSTATUS),
        .RXSYNCALLIN(rxsyncallin),
        .RXSYNCDONE(SYNC_RXSYNCDONE),
        .RXSYNCIN(gt_rxsyncout_0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gth_channel.gthe2_channel_i_n_40 ),
        .RXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pipe_rxusrclk_in),
        .RXUSRCLK2(pipe_rxusrclk_in),
        .RXVALID(gt_rxvalid_1),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(USER_OOBCLK),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(RX8B10BEN0),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gth_channel.gthe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXCOMPLIANCE}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXDATAK}),
        .TXCOMFINISH(\NLW_gth_channel.gthe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXDATA}),
        .TXDEEMPH(pipe_tx_deemph),
        .TXDETECTRX(pipe_tx_rcvr_det),
        .TXDIFFCTRL({1'b1,1'b1,1'b1,1'b1}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(Q[0]),
        .TXDLYSRESETDONE(\gth_channel.gthe2_channel_i_2 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(PIPE_TXELECIDLE),
        .TXGEARBOXREADY(\NLW_gth_channel.gthe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(1'b0),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(PIPETXMARGIN),
        .TXOUTCLK(\gth_channel.gthe2_channel_i_n_45 ),
        .TXOUTCLKFABRIC(\NLW_gth_channel.gthe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gth_channel.gthe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD(PIPE_POWERDOWN),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(Q[2]),
        .TXPHALIGNDONE(\gth_channel.gthe2_channel_i_3 ),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(Q[1]),
        .TXPHINITDONE(\gth_channel.gthe2_channel_i_4 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(rate_txpmareset_1),
        .TXPMARESETDONE(\NLW_gth_channel.gthe2_channel_i_TXPMARESETDONE_UNCONNECTED ),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0}),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\NLW_gth_channel.gthe2_channel_i_TXQPISENN_UNCONNECTED ),
        .TXQPISENP(\NLW_gth_channel.gthe2_channel_i_TXQPISENP_UNCONNECTED ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(RATE_TXRATEDONE),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(RATE_TXRESETDONE),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(pipe_tx_swing),
        .TXSYNCALLIN(\gth_channel.gthe2_channel_i_9 ),
        .TXSYNCDONE(SYNC_TXSYNCDONE),
        .TXSYNCIN(gt_txsyncout_0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gth_channel.gthe2_channel_i_n_56 ),
        .TXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pipe_pclk_in),
        .TXUSRCLK2(pipe_pclk_in));
  LUT3 #(
    .INIT(8'h80)) 
    rxphaligndone_s_reg1_i_1
       (.I0(\gth_channel.gthe2_channel_i_1 ),
        .I1(rxphaligndone_s_reg1_reg),
        .I2(rxphaligndone_s_reg1_reg_0),
        .O(SYNC_RXPHALIGNDONE_S));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_gt_wrapper" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_wrapper_12
   (cpllpd_2,
    RATE_CPLLLOCK,
    DRP_RDY,
    pci_exp_txn,
    pci_exp_txp,
    D,
    gt_rxcdrlock_3,
    \gth_channel.gthe2_channel_i_0 ,
    PIPE_RXELECIDLE,
    pipe_rxoutclk_out,
    \gth_channel.gthe2_channel_i_1 ,
    RATE_RXPMARESETDONE,
    RATE_RXRATEDONE,
    RATE_RXRESETDONE,
    SYNC_RXSYNCDONE,
    gt_rxvalid_3,
    \gth_channel.gthe2_channel_i_2 ,
    \gth_channel.gthe2_channel_i_3 ,
    \gth_channel.gthe2_channel_i_4 ,
    RATE_TXRATEDONE,
    RATE_TXRESETDONE,
    SYNC_TXSYNCDONE,
    \gth_channel.gthe2_channel_i_5 ,
    PIPE_RXSTATUS,
    PIPE_RXDATA,
    PIPE_RXDATAK,
    gt_cpllpdrefclk,
    CPLLPD0_5,
    pipe_dclk_in,
    \gth_channel.gthe2_channel_i_6 ,
    \gth_channel.gthe2_channel_i_7 ,
    pci_exp_rxn,
    pci_exp_rxp,
    sys_clk,
    DRP_GTXRESET,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    RX8B10BEN0,
    \gth_channel.gthe2_channel_i_8 ,
    rate_txpmareset_3,
    PIPE_RXPOLARITY,
    PIPE_RXSLIDE,
    rxsyncallin,
    gt_rxsyncout_0,
    rst_userrdy,
    pipe_rxusrclk_in,
    USER_OOBCLK,
    pipe_tx_deemph,
    pipe_tx_rcvr_det,
    Q,
    PIPE_TXELECIDLE,
    pipe_tx_swing,
    \gth_channel.gthe2_channel_i_9 ,
    gt_txsyncout_0,
    pipe_pclk_in,
    DRPDI,
    PIPE_POWERDOWN,
    RXSYSCLKSEL,
    RXRATE,
    PIPETXMARGIN,
    TXPOSTCURSOR,
    TXPRECURSOR,
    PIPE_TXDATA,
    TXMAINCURSOR,
    PIPE_TXCOMPLIANCE,
    PIPE_TXDATAK,
    DRPADDR,
    rate_cpllreset_3,
    RST_CPLLRESET);
  output cpllpd_2;
  output RATE_CPLLLOCK;
  output DRP_RDY;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output [0:0]D;
  output gt_rxcdrlock_3;
  output \gth_channel.gthe2_channel_i_0 ;
  output [0:0]PIPE_RXELECIDLE;
  output [0:0]pipe_rxoutclk_out;
  output \gth_channel.gthe2_channel_i_1 ;
  output RATE_RXPMARESETDONE;
  output RATE_RXRATEDONE;
  output RATE_RXRESETDONE;
  output SYNC_RXSYNCDONE;
  output gt_rxvalid_3;
  output \gth_channel.gthe2_channel_i_2 ;
  output \gth_channel.gthe2_channel_i_3 ;
  output \gth_channel.gthe2_channel_i_4 ;
  output RATE_TXRATEDONE;
  output RATE_TXRESETDONE;
  output SYNC_TXSYNCDONE;
  output [15:0]\gth_channel.gthe2_channel_i_5 ;
  output [2:0]PIPE_RXSTATUS;
  output [15:0]PIPE_RXDATA;
  output [1:0]PIPE_RXDATAK;
  input gt_cpllpdrefclk;
  input CPLLPD0_5;
  input pipe_dclk_in;
  input \gth_channel.gthe2_channel_i_6 ;
  input \gth_channel.gthe2_channel_i_7 ;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input sys_clk;
  input DRP_GTXRESET;
  input QPLL_QPLLOUTCLK;
  input QPLL_QPLLOUTREFCLK;
  input RX8B10BEN0;
  input \gth_channel.gthe2_channel_i_8 ;
  input rate_txpmareset_3;
  input [0:0]PIPE_RXPOLARITY;
  input [0:0]PIPE_RXSLIDE;
  input rxsyncallin;
  input gt_rxsyncout_0;
  input rst_userrdy;
  input pipe_rxusrclk_in;
  input USER_OOBCLK;
  input pipe_tx_deemph;
  input pipe_tx_rcvr_det;
  input [2:0]Q;
  input [0:0]PIPE_TXELECIDLE;
  input pipe_tx_swing;
  input \gth_channel.gthe2_channel_i_9 ;
  input gt_txsyncout_0;
  input pipe_pclk_in;
  input [15:0]DRPDI;
  input [1:0]PIPE_POWERDOWN;
  input [0:0]RXSYSCLKSEL;
  input [0:0]RXRATE;
  input [2:0]PIPETXMARGIN;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [15:0]PIPE_TXDATA;
  input [6:0]TXMAINCURSOR;
  input [0:0]PIPE_TXCOMPLIANCE;
  input [1:0]PIPE_TXDATAK;
  input [7:0]DRPADDR;
  input rate_cpllreset_3;
  input RST_CPLLRESET;

  wire CPLLPD0_5;
  wire CPLLRESET0;
  wire [0:0]D;
  wire [7:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_GTXRESET;
  wire DRP_RDY;
  wire [2:0]PIPETXMARGIN;
  wire [1:0]PIPE_POWERDOWN;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [0:0]PIPE_RXELECIDLE;
  wire [0:0]PIPE_RXPOLARITY;
  wire [0:0]PIPE_RXSLIDE;
  wire [2:0]PIPE_RXSTATUS;
  wire [0:0]PIPE_TXCOMPLIANCE;
  wire [15:0]PIPE_TXDATA;
  wire [1:0]PIPE_TXDATAK;
  wire [0:0]PIPE_TXELECIDLE;
  wire [2:0]Q;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire RATE_CPLLLOCK;
  wire RATE_RXPMARESETDONE;
  wire RATE_RXRATEDONE;
  wire RATE_RXRESETDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXRESETDONE;
  wire RST_CPLLRESET;
  wire RX8B10BEN0;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXSYNCDONE;
  wire SYNC_TXSYNCDONE;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_OOBCLK;
  wire cpllpd_2;
  wire gt_cpllpdrefclk;
  wire gt_rxcdrlock_3;
  wire gt_rxsyncout_0;
  wire gt_rxvalid_3;
  wire gt_txsyncout_0;
  wire \gth_channel.gthe2_channel_i_0 ;
  wire \gth_channel.gthe2_channel_i_1 ;
  wire \gth_channel.gthe2_channel_i_2 ;
  wire \gth_channel.gthe2_channel_i_3 ;
  wire \gth_channel.gthe2_channel_i_4 ;
  wire [15:0]\gth_channel.gthe2_channel_i_5 ;
  wire \gth_channel.gthe2_channel_i_6 ;
  wire \gth_channel.gthe2_channel_i_7 ;
  wire \gth_channel.gthe2_channel_i_8 ;
  wire \gth_channel.gthe2_channel_i_9 ;
  wire \gth_channel.gthe2_channel_i_n_10 ;
  wire \gth_channel.gthe2_channel_i_n_11 ;
  wire \gth_channel.gthe2_channel_i_n_114 ;
  wire \gth_channel.gthe2_channel_i_n_115 ;
  wire \gth_channel.gthe2_channel_i_n_116 ;
  wire \gth_channel.gthe2_channel_i_n_120 ;
  wire \gth_channel.gthe2_channel_i_n_121 ;
  wire \gth_channel.gthe2_channel_i_n_122 ;
  wire \gth_channel.gthe2_channel_i_n_123 ;
  wire \gth_channel.gthe2_channel_i_n_124 ;
  wire \gth_channel.gthe2_channel_i_n_14 ;
  wire \gth_channel.gthe2_channel_i_n_17 ;
  wire \gth_channel.gthe2_channel_i_n_173 ;
  wire \gth_channel.gthe2_channel_i_n_174 ;
  wire \gth_channel.gthe2_channel_i_n_175 ;
  wire \gth_channel.gthe2_channel_i_n_176 ;
  wire \gth_channel.gthe2_channel_i_n_177 ;
  wire \gth_channel.gthe2_channel_i_n_178 ;
  wire \gth_channel.gthe2_channel_i_n_179 ;
  wire \gth_channel.gthe2_channel_i_n_180 ;
  wire \gth_channel.gthe2_channel_i_n_181 ;
  wire \gth_channel.gthe2_channel_i_n_182 ;
  wire \gth_channel.gthe2_channel_i_n_183 ;
  wire \gth_channel.gthe2_channel_i_n_184 ;
  wire \gth_channel.gthe2_channel_i_n_185 ;
  wire \gth_channel.gthe2_channel_i_n_186 ;
  wire \gth_channel.gthe2_channel_i_n_187 ;
  wire \gth_channel.gthe2_channel_i_n_188 ;
  wire \gth_channel.gthe2_channel_i_n_216 ;
  wire \gth_channel.gthe2_channel_i_n_217 ;
  wire \gth_channel.gthe2_channel_i_n_218 ;
  wire \gth_channel.gthe2_channel_i_n_219 ;
  wire \gth_channel.gthe2_channel_i_n_224 ;
  wire \gth_channel.gthe2_channel_i_n_225 ;
  wire \gth_channel.gthe2_channel_i_n_228 ;
  wire \gth_channel.gthe2_channel_i_n_229 ;
  wire \gth_channel.gthe2_channel_i_n_230 ;
  wire \gth_channel.gthe2_channel_i_n_231 ;
  wire \gth_channel.gthe2_channel_i_n_232 ;
  wire \gth_channel.gthe2_channel_i_n_233 ;
  wire \gth_channel.gthe2_channel_i_n_234 ;
  wire \gth_channel.gthe2_channel_i_n_235 ;
  wire \gth_channel.gthe2_channel_i_n_236 ;
  wire \gth_channel.gthe2_channel_i_n_237 ;
  wire \gth_channel.gthe2_channel_i_n_238 ;
  wire \gth_channel.gthe2_channel_i_n_239 ;
  wire \gth_channel.gthe2_channel_i_n_240 ;
  wire \gth_channel.gthe2_channel_i_n_241 ;
  wire \gth_channel.gthe2_channel_i_n_242 ;
  wire \gth_channel.gthe2_channel_i_n_243 ;
  wire \gth_channel.gthe2_channel_i_n_34 ;
  wire \gth_channel.gthe2_channel_i_n_4 ;
  wire \gth_channel.gthe2_channel_i_n_40 ;
  wire \gth_channel.gthe2_channel_i_n_45 ;
  wire \gth_channel.gthe2_channel_i_n_56 ;
  wire \gth_channel.gthe2_channel_i_n_57 ;
  wire \gth_channel.gthe2_channel_i_n_58 ;
  wire \gth_channel.gthe2_channel_i_n_59 ;
  wire \gth_channel.gthe2_channel_i_n_60 ;
  wire \gth_channel.gthe2_channel_i_n_61 ;
  wire \gth_channel.gthe2_channel_i_n_62 ;
  wire \gth_channel.gthe2_channel_i_n_63 ;
  wire \gth_channel.gthe2_channel_i_n_64 ;
  wire \gth_channel.gthe2_channel_i_n_65 ;
  wire \gth_channel.gthe2_channel_i_n_66 ;
  wire \gth_channel.gthe2_channel_i_n_67 ;
  wire \gth_channel.gthe2_channel_i_n_68 ;
  wire \gth_channel.gthe2_channel_i_n_69 ;
  wire \gth_channel.gthe2_channel_i_n_70 ;
  wire \gth_channel.gthe2_channel_i_n_71 ;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_swing;
  wire rate_cpllreset_3;
  wire rate_txpmareset_3;
  wire rst_userrdy;
  wire rxsyncallin;
  wire sys_clk;
  wire \NLW_gth_channel.gthe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RSOSINTDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESTADAPTDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXQPISENN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXQPISENP_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXPMARESETDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXQPISENN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXQPISENP_UNCONNECTED ;
  wire [15:0]\NLW_gth_channel.gthe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [7:4]\NLW_gth_channel.gthe2_channel_i_RXCHARISCOMMA_UNCONNECTED ;
  wire [7:4]\NLW_gth_channel.gthe2_channel_i_RXCHARISK_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [63:32]\NLW_gth_channel.gthe2_channel_i_RXDATA_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire [5:0]\NLW_gth_channel.gthe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire [6:0]\NLW_gth_channel.gthe2_channel_i_RXMONITOROUT_UNCONNECTED ;
  wire [4:0]\NLW_gth_channel.gthe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gth_channel.gthe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gtx_cpllpd_ovrd cpllPDInst
       (.CPLLRESET0(CPLLRESET0),
        .RST_CPLLRESET(RST_CPLLRESET),
        .cpllpd_2(cpllpd_2),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rate_cpllreset_3(rate_cpllreset_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SET_SPEEDUP_SIM_TRUE = "TRUE" *) 
  GTHE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'h00C10),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(42'h24800040E80),
    .CFOK_CFG2(6'b100000),
    .CFOK_CFG3(6'b100000),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(15),
    .CLK_COR_MIN_LAT(13),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(29'h00A407CC),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000AB1),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b1),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h000000000140),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'b00000000000000000000000010000000),
    .PMA_RSV2(32'b00011100000000000000000000001010),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(15'b000000000001000),
    .PMA_RSV5(4'b0000),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0002007FE2000C2080018),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00001000000000),
    .RXLPM_LF_CFG(18'b001001000000000000),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("FABRIC"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b11),
    .RXPI_CFG2(2'b11),
    .RXPI_CFG3(2'b11),
    .RXPI_CFG4(1'b0),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b100),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b1),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(24'b000011000000000000010000),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000011000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b0),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b00),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_AGC_CFG2(4'b0000),
    .RX_DFE_AGC_OVRDEN(1'b1),
    .RX_DFE_GAIN_CFG(23'h0020C0),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011100000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_H6_CFG(11'b00000100000),
    .RX_DFE_H7_CFG(11'b00000100000),
    .RX_DFE_KL_CFG(33'b000000000000000000000001100010000),
    .RX_DFE_KL_LPM_KH_CFG0(2'b10),
    .RX_DFE_KL_LPM_KH_CFG1(3'b010),
    .RX_DFE_KL_LPM_KH_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KH_OVRDEN(1'b1),
    .RX_DFE_KL_LPM_KL_CFG0(2'b10),
    .RX_DFE_KL_LPM_KL_CFG1(3'b010),
    .RX_DFE_KL_LPM_KL_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KL_OVRDEN(1'b1),
    .RX_DFE_LPM_CFG(16'h0080),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b1),
    .RX_DFE_ST_CFG(54'h00C100000C003F),
    .RX_DFE_UT_CFG(17'b00011100000000000),
    .RX_DFE_VP_CFG(17'b00011101010100011),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(4),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b1),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b100),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_PRECHARGE_TIME(17'h00001),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    \gth_channel.gthe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\NLW_gth_channel.gthe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ),
        .CPLLLOCK(RATE_CPLLLOCK),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(CPLLPD0_5),
        .CPLLREFCLKLOST(\NLW_gth_channel.gthe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(CPLLRESET0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gth_channel.gthe2_channel_i_n_57 ,\gth_channel.gthe2_channel_i_n_58 ,\gth_channel.gthe2_channel_i_n_59 ,\gth_channel.gthe2_channel_i_n_60 ,\gth_channel.gthe2_channel_i_n_61 ,\gth_channel.gthe2_channel_i_n_62 ,\gth_channel.gthe2_channel_i_n_63 ,\gth_channel.gthe2_channel_i_n_64 ,\gth_channel.gthe2_channel_i_n_65 ,\gth_channel.gthe2_channel_i_n_66 ,\gth_channel.gthe2_channel_i_n_67 ,\gth_channel.gthe2_channel_i_n_68 ,\gth_channel.gthe2_channel_i_n_69 ,\gth_channel.gthe2_channel_i_n_70 ,\gth_channel.gthe2_channel_i_n_71 }),
        .DRPADDR({1'b0,DRPADDR}),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(DRPDI),
        .DRPDO(\gth_channel.gthe2_channel_i_5 ),
        .DRPEN(\gth_channel.gthe2_channel_i_6 ),
        .DRPRDY(DRP_RDY),
        .DRPWE(\gth_channel.gthe2_channel_i_7 ),
        .EYESCANDATAERROR(\gth_channel.gthe2_channel_i_n_4 ),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTHRXN(pci_exp_rxn),
        .GTHRXP(pci_exp_rxp),
        .GTHTXN(pci_exp_txn),
        .GTHTXP(pci_exp_txp),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\NLW_gth_channel.gthe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(DRP_GTXRESET),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(DRP_GTXRESET),
        .LOOPBACK({1'b0,1'b0,1'b0}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gth_channel.gthe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(D),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(QPLL_QPLLOUTCLK),
        .QPLLREFCLK(QPLL_QPLLOUTREFCLK),
        .RESETOVRD(1'b0),
        .RSOSINTDONE(\NLW_gth_channel.gthe2_channel_i_RSOSINTDONE_UNCONNECTED ),
        .RX8B10BEN(RX8B10BEN0),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({\gth_channel.gthe2_channel_i_n_114 ,\gth_channel.gthe2_channel_i_n_115 ,\gth_channel.gthe2_channel_i_n_116 }),
        .RXBYTEISALIGNED(\gth_channel.gthe2_channel_i_n_10 ),
        .RXBYTEREALIGN(\gth_channel.gthe2_channel_i_n_11 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock_3),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gth_channel.gthe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(\gth_channel.gthe2_channel_i_n_14 ),
        .RXCHANREALIGN(\NLW_gth_channel.gthe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\NLW_gth_channel.gthe2_channel_i_RXCHARISCOMMA_UNCONNECTED [7:4],\gth_channel.gthe2_channel_i_n_216 ,\gth_channel.gthe2_channel_i_n_217 ,\gth_channel.gthe2_channel_i_n_218 ,\gth_channel.gthe2_channel_i_n_219 }),
        .RXCHARISK({\NLW_gth_channel.gthe2_channel_i_RXCHARISK_UNCONNECTED [7:4],\gth_channel.gthe2_channel_i_n_224 ,\gth_channel.gthe2_channel_i_n_225 ,PIPE_RXDATAK}),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gth_channel.gthe2_channel_i_n_120 ,\gth_channel.gthe2_channel_i_n_121 ,\gth_channel.gthe2_channel_i_n_122 ,\gth_channel.gthe2_channel_i_n_123 ,\gth_channel.gthe2_channel_i_n_124 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(\NLW_gth_channel.gthe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gth_channel.gthe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(\gth_channel.gthe2_channel_i_n_17 ),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gth_channel.gthe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gth_channel.gthe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\NLW_gth_channel.gthe2_channel_i_RXDATA_UNCONNECTED [63:32],\gth_channel.gthe2_channel_i_n_173 ,\gth_channel.gthe2_channel_i_n_174 ,\gth_channel.gthe2_channel_i_n_175 ,\gth_channel.gthe2_channel_i_n_176 ,\gth_channel.gthe2_channel_i_n_177 ,\gth_channel.gthe2_channel_i_n_178 ,\gth_channel.gthe2_channel_i_n_179 ,\gth_channel.gthe2_channel_i_n_180 ,\gth_channel.gthe2_channel_i_n_181 ,\gth_channel.gthe2_channel_i_n_182 ,\gth_channel.gthe2_channel_i_n_183 ,\gth_channel.gthe2_channel_i_n_184 ,\gth_channel.gthe2_channel_i_n_185 ,\gth_channel.gthe2_channel_i_n_186 ,\gth_channel.gthe2_channel_i_n_187 ,\gth_channel.gthe2_channel_i_n_188 ,PIPE_RXDATA}),
        .RXDATAVALID(\NLW_gth_channel.gthe2_channel_i_RXDATAVALID_UNCONNECTED [1:0]),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXDFEAGCOVRDEN(RX8B10BEN0),
        .RXDFEAGCTRL({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFESLIDETAP({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPADAPTEN(1'b0),
        .RXDFESLIDETAPHOLD(1'b0),
        .RXDFESLIDETAPID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPINITOVRDEN(1'b0),
        .RXDFESLIDETAPONLYADAPTEN(1'b0),
        .RXDFESLIDETAPOVRDEN(1'b0),
        .RXDFESLIDETAPSTARTED(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTARTED_UNCONNECTED ),
        .RXDFESLIDETAPSTROBE(1'b0),
        .RXDFESLIDETAPSTROBEDONE(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED ),
        .RXDFESLIDETAPSTROBESTARTED(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED ),
        .RXDFESTADAPTDONE(\NLW_gth_channel.gthe2_channel_i_RXDFESTADAPTDONE_UNCONNECTED ),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDISPERR({\gth_channel.gthe2_channel_i_n_228 ,\gth_channel.gthe2_channel_i_n_229 ,\gth_channel.gthe2_channel_i_n_230 ,\gth_channel.gthe2_channel_i_n_231 ,\gth_channel.gthe2_channel_i_n_232 ,\gth_channel.gthe2_channel_i_n_233 ,\gth_channel.gthe2_channel_i_n_234 ,\gth_channel.gthe2_channel_i_n_235 }),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gth_channel.gthe2_channel_i_0 ),
        .RXELECIDLE(PIPE_RXELECIDLE),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gth_channel.gthe2_channel_i_RXHEADER_UNCONNECTED [5:0]),
        .RXHEADERVALID(\NLW_gth_channel.gthe2_channel_i_RXHEADERVALID_UNCONNECTED [1:0]),
        .RXLPMEN(RX8B10BEN0),
        .RXLPMHFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(RX8B10BEN0),
        .RXMONITOROUT(\NLW_gth_channel.gthe2_channel_i_RXMONITOROUT_UNCONNECTED [6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE({\gth_channel.gthe2_channel_i_n_236 ,\gth_channel.gthe2_channel_i_n_237 ,\gth_channel.gthe2_channel_i_n_238 ,\gth_channel.gthe2_channel_i_n_239 ,\gth_channel.gthe2_channel_i_n_240 ,\gth_channel.gthe2_channel_i_n_241 ,\gth_channel.gthe2_channel_i_n_242 ,\gth_channel.gthe2_channel_i_n_243 }),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b1,1'b1,1'b0}),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTSTARTED(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTARTED_UNCONNECTED ),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ),
        .RXOSINTSTROBESTARTED(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(pipe_rxoutclk_out),
        .RXOUTCLKFABRIC(\NLW_gth_channel.gthe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gth_channel.gthe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(RX8B10BEN0),
        .RXPCSRESET(1'b0),
        .RXPD(PIPE_POWERDOWN),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gth_channel.gthe2_channel_i_1 ),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gth_channel.gthe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gth_channel.gthe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(rate_txpmareset_3),
        .RXPMARESETDONE(RATE_RXPMARESETDONE),
        .RXPOLARITY(PIPE_RXPOLARITY),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gth_channel.gthe2_channel_i_n_34 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0}),
        .RXQPIEN(1'b0),
        .RXQPISENN(\NLW_gth_channel.gthe2_channel_i_RXQPISENN_UNCONNECTED ),
        .RXQPISENP(\NLW_gth_channel.gthe2_channel_i_RXQPISENP_UNCONNECTED ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(RATE_RXRATEDONE),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(RATE_RXRESETDONE),
        .RXSLIDE(PIPE_RXSLIDE),
        .RXSTARTOFSEQ(\NLW_gth_channel.gthe2_channel_i_RXSTARTOFSEQ_UNCONNECTED [1:0]),
        .RXSTATUS(PIPE_RXSTATUS),
        .RXSYNCALLIN(rxsyncallin),
        .RXSYNCDONE(SYNC_RXSYNCDONE),
        .RXSYNCIN(gt_rxsyncout_0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gth_channel.gthe2_channel_i_n_40 ),
        .RXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pipe_rxusrclk_in),
        .RXUSRCLK2(pipe_rxusrclk_in),
        .RXVALID(gt_rxvalid_3),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(USER_OOBCLK),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(RX8B10BEN0),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gth_channel.gthe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXCOMPLIANCE}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXDATAK}),
        .TXCOMFINISH(\NLW_gth_channel.gthe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXDATA}),
        .TXDEEMPH(pipe_tx_deemph),
        .TXDETECTRX(pipe_tx_rcvr_det),
        .TXDIFFCTRL({1'b1,1'b1,1'b1,1'b1}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(Q[0]),
        .TXDLYSRESETDONE(\gth_channel.gthe2_channel_i_2 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(PIPE_TXELECIDLE),
        .TXGEARBOXREADY(\NLW_gth_channel.gthe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(1'b0),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(PIPETXMARGIN),
        .TXOUTCLK(\gth_channel.gthe2_channel_i_n_45 ),
        .TXOUTCLKFABRIC(\NLW_gth_channel.gthe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gth_channel.gthe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD(PIPE_POWERDOWN),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(Q[2]),
        .TXPHALIGNDONE(\gth_channel.gthe2_channel_i_3 ),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(Q[1]),
        .TXPHINITDONE(\gth_channel.gthe2_channel_i_4 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(rate_txpmareset_3),
        .TXPMARESETDONE(\NLW_gth_channel.gthe2_channel_i_TXPMARESETDONE_UNCONNECTED ),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0}),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\NLW_gth_channel.gthe2_channel_i_TXQPISENN_UNCONNECTED ),
        .TXQPISENP(\NLW_gth_channel.gthe2_channel_i_TXQPISENP_UNCONNECTED ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(RATE_TXRATEDONE),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(RATE_TXRESETDONE),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(pipe_tx_swing),
        .TXSYNCALLIN(\gth_channel.gthe2_channel_i_9 ),
        .TXSYNCDONE(SYNC_TXSYNCDONE),
        .TXSYNCIN(gt_txsyncout_0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gth_channel.gthe2_channel_i_n_56 ),
        .TXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pipe_pclk_in),
        .TXUSRCLK2(pipe_pclk_in));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_gt_wrapper" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_wrapper_6
   (cpllpd_1,
    RATE_CPLLLOCK,
    DRP_RDY,
    pci_exp_txn,
    pci_exp_txp,
    D,
    gt_rxcdrlock_2,
    \gth_channel.gthe2_channel_i_0 ,
    PIPE_RXELECIDLE,
    pipe_rxoutclk_out,
    \gth_channel.gthe2_channel_i_1 ,
    RATE_RXPMARESETDONE,
    RATE_RXRATEDONE,
    RATE_RXRESETDONE,
    SYNC_RXSYNCDONE,
    gt_rxvalid_2,
    \gth_channel.gthe2_channel_i_2 ,
    \gth_channel.gthe2_channel_i_3 ,
    \gth_channel.gthe2_channel_i_4 ,
    RATE_TXRATEDONE,
    RATE_TXRESETDONE,
    SYNC_TXSYNCDONE,
    \gth_channel.gthe2_channel_i_5 ,
    PIPE_RXSTATUS,
    PIPE_RXDATA,
    PIPE_RXDATAK,
    gt_cpllpdrefclk,
    CPLLPD0_4,
    pipe_dclk_in,
    \gth_channel.gthe2_channel_i_6 ,
    \gth_channel.gthe2_channel_i_7 ,
    pci_exp_rxn,
    pci_exp_rxp,
    sys_clk,
    DRP_GTXRESET,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    RX8B10BEN0,
    \gth_channel.gthe2_channel_i_8 ,
    rate_txpmareset_2,
    PIPE_RXPOLARITY,
    PIPE_RXSLIDE,
    rxsyncallin,
    gt_rxsyncout_0,
    rst_userrdy,
    pipe_rxusrclk_in,
    USER_OOBCLK,
    pipe_tx_deemph,
    pipe_tx_rcvr_det,
    Q,
    PIPE_TXELECIDLE,
    pipe_tx_swing,
    \gth_channel.gthe2_channel_i_9 ,
    gt_txsyncout_0,
    pipe_pclk_in,
    DRPDI,
    PIPE_POWERDOWN,
    RXSYSCLKSEL,
    RXRATE,
    PIPETXMARGIN,
    TXPOSTCURSOR,
    TXPRECURSOR,
    PIPE_TXDATA,
    TXMAINCURSOR,
    PIPE_TXCOMPLIANCE,
    PIPE_TXDATAK,
    DRPADDR,
    rate_cpllreset_2,
    RST_CPLLRESET);
  output cpllpd_1;
  output RATE_CPLLLOCK;
  output DRP_RDY;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output [0:0]D;
  output gt_rxcdrlock_2;
  output \gth_channel.gthe2_channel_i_0 ;
  output [0:0]PIPE_RXELECIDLE;
  output [0:0]pipe_rxoutclk_out;
  output \gth_channel.gthe2_channel_i_1 ;
  output RATE_RXPMARESETDONE;
  output RATE_RXRATEDONE;
  output RATE_RXRESETDONE;
  output SYNC_RXSYNCDONE;
  output gt_rxvalid_2;
  output \gth_channel.gthe2_channel_i_2 ;
  output \gth_channel.gthe2_channel_i_3 ;
  output \gth_channel.gthe2_channel_i_4 ;
  output RATE_TXRATEDONE;
  output RATE_TXRESETDONE;
  output SYNC_TXSYNCDONE;
  output [15:0]\gth_channel.gthe2_channel_i_5 ;
  output [2:0]PIPE_RXSTATUS;
  output [15:0]PIPE_RXDATA;
  output [1:0]PIPE_RXDATAK;
  input gt_cpllpdrefclk;
  input CPLLPD0_4;
  input pipe_dclk_in;
  input \gth_channel.gthe2_channel_i_6 ;
  input \gth_channel.gthe2_channel_i_7 ;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input sys_clk;
  input DRP_GTXRESET;
  input QPLL_QPLLOUTCLK;
  input QPLL_QPLLOUTREFCLK;
  input RX8B10BEN0;
  input \gth_channel.gthe2_channel_i_8 ;
  input rate_txpmareset_2;
  input [0:0]PIPE_RXPOLARITY;
  input [0:0]PIPE_RXSLIDE;
  input rxsyncallin;
  input gt_rxsyncout_0;
  input rst_userrdy;
  input pipe_rxusrclk_in;
  input USER_OOBCLK;
  input pipe_tx_deemph;
  input pipe_tx_rcvr_det;
  input [2:0]Q;
  input [0:0]PIPE_TXELECIDLE;
  input pipe_tx_swing;
  input \gth_channel.gthe2_channel_i_9 ;
  input gt_txsyncout_0;
  input pipe_pclk_in;
  input [15:0]DRPDI;
  input [1:0]PIPE_POWERDOWN;
  input [0:0]RXSYSCLKSEL;
  input [0:0]RXRATE;
  input [2:0]PIPETXMARGIN;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [15:0]PIPE_TXDATA;
  input [6:0]TXMAINCURSOR;
  input [0:0]PIPE_TXCOMPLIANCE;
  input [1:0]PIPE_TXDATAK;
  input [7:0]DRPADDR;
  input rate_cpllreset_2;
  input RST_CPLLRESET;

  wire CPLLPD0_4;
  wire CPLLRESET0;
  wire [0:0]D;
  wire [7:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_GTXRESET;
  wire DRP_RDY;
  wire [2:0]PIPETXMARGIN;
  wire [1:0]PIPE_POWERDOWN;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [0:0]PIPE_RXELECIDLE;
  wire [0:0]PIPE_RXPOLARITY;
  wire [0:0]PIPE_RXSLIDE;
  wire [2:0]PIPE_RXSTATUS;
  wire [0:0]PIPE_TXCOMPLIANCE;
  wire [15:0]PIPE_TXDATA;
  wire [1:0]PIPE_TXDATAK;
  wire [0:0]PIPE_TXELECIDLE;
  wire [2:0]Q;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire RATE_CPLLLOCK;
  wire RATE_RXPMARESETDONE;
  wire RATE_RXRATEDONE;
  wire RATE_RXRESETDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXRESETDONE;
  wire RST_CPLLRESET;
  wire RX8B10BEN0;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXSYNCDONE;
  wire SYNC_TXSYNCDONE;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_OOBCLK;
  wire cpllpd_1;
  wire gt_cpllpdrefclk;
  wire gt_rxcdrlock_2;
  wire gt_rxsyncout_0;
  wire gt_rxvalid_2;
  wire gt_txsyncout_0;
  wire \gth_channel.gthe2_channel_i_0 ;
  wire \gth_channel.gthe2_channel_i_1 ;
  wire \gth_channel.gthe2_channel_i_2 ;
  wire \gth_channel.gthe2_channel_i_3 ;
  wire \gth_channel.gthe2_channel_i_4 ;
  wire [15:0]\gth_channel.gthe2_channel_i_5 ;
  wire \gth_channel.gthe2_channel_i_6 ;
  wire \gth_channel.gthe2_channel_i_7 ;
  wire \gth_channel.gthe2_channel_i_8 ;
  wire \gth_channel.gthe2_channel_i_9 ;
  wire \gth_channel.gthe2_channel_i_n_10 ;
  wire \gth_channel.gthe2_channel_i_n_11 ;
  wire \gth_channel.gthe2_channel_i_n_114 ;
  wire \gth_channel.gthe2_channel_i_n_115 ;
  wire \gth_channel.gthe2_channel_i_n_116 ;
  wire \gth_channel.gthe2_channel_i_n_120 ;
  wire \gth_channel.gthe2_channel_i_n_121 ;
  wire \gth_channel.gthe2_channel_i_n_122 ;
  wire \gth_channel.gthe2_channel_i_n_123 ;
  wire \gth_channel.gthe2_channel_i_n_124 ;
  wire \gth_channel.gthe2_channel_i_n_14 ;
  wire \gth_channel.gthe2_channel_i_n_17 ;
  wire \gth_channel.gthe2_channel_i_n_173 ;
  wire \gth_channel.gthe2_channel_i_n_174 ;
  wire \gth_channel.gthe2_channel_i_n_175 ;
  wire \gth_channel.gthe2_channel_i_n_176 ;
  wire \gth_channel.gthe2_channel_i_n_177 ;
  wire \gth_channel.gthe2_channel_i_n_178 ;
  wire \gth_channel.gthe2_channel_i_n_179 ;
  wire \gth_channel.gthe2_channel_i_n_180 ;
  wire \gth_channel.gthe2_channel_i_n_181 ;
  wire \gth_channel.gthe2_channel_i_n_182 ;
  wire \gth_channel.gthe2_channel_i_n_183 ;
  wire \gth_channel.gthe2_channel_i_n_184 ;
  wire \gth_channel.gthe2_channel_i_n_185 ;
  wire \gth_channel.gthe2_channel_i_n_186 ;
  wire \gth_channel.gthe2_channel_i_n_187 ;
  wire \gth_channel.gthe2_channel_i_n_188 ;
  wire \gth_channel.gthe2_channel_i_n_216 ;
  wire \gth_channel.gthe2_channel_i_n_217 ;
  wire \gth_channel.gthe2_channel_i_n_218 ;
  wire \gth_channel.gthe2_channel_i_n_219 ;
  wire \gth_channel.gthe2_channel_i_n_224 ;
  wire \gth_channel.gthe2_channel_i_n_225 ;
  wire \gth_channel.gthe2_channel_i_n_228 ;
  wire \gth_channel.gthe2_channel_i_n_229 ;
  wire \gth_channel.gthe2_channel_i_n_230 ;
  wire \gth_channel.gthe2_channel_i_n_231 ;
  wire \gth_channel.gthe2_channel_i_n_232 ;
  wire \gth_channel.gthe2_channel_i_n_233 ;
  wire \gth_channel.gthe2_channel_i_n_234 ;
  wire \gth_channel.gthe2_channel_i_n_235 ;
  wire \gth_channel.gthe2_channel_i_n_236 ;
  wire \gth_channel.gthe2_channel_i_n_237 ;
  wire \gth_channel.gthe2_channel_i_n_238 ;
  wire \gth_channel.gthe2_channel_i_n_239 ;
  wire \gth_channel.gthe2_channel_i_n_240 ;
  wire \gth_channel.gthe2_channel_i_n_241 ;
  wire \gth_channel.gthe2_channel_i_n_242 ;
  wire \gth_channel.gthe2_channel_i_n_243 ;
  wire \gth_channel.gthe2_channel_i_n_34 ;
  wire \gth_channel.gthe2_channel_i_n_4 ;
  wire \gth_channel.gthe2_channel_i_n_40 ;
  wire \gth_channel.gthe2_channel_i_n_45 ;
  wire \gth_channel.gthe2_channel_i_n_56 ;
  wire \gth_channel.gthe2_channel_i_n_57 ;
  wire \gth_channel.gthe2_channel_i_n_58 ;
  wire \gth_channel.gthe2_channel_i_n_59 ;
  wire \gth_channel.gthe2_channel_i_n_60 ;
  wire \gth_channel.gthe2_channel_i_n_61 ;
  wire \gth_channel.gthe2_channel_i_n_62 ;
  wire \gth_channel.gthe2_channel_i_n_63 ;
  wire \gth_channel.gthe2_channel_i_n_64 ;
  wire \gth_channel.gthe2_channel_i_n_65 ;
  wire \gth_channel.gthe2_channel_i_n_66 ;
  wire \gth_channel.gthe2_channel_i_n_67 ;
  wire \gth_channel.gthe2_channel_i_n_68 ;
  wire \gth_channel.gthe2_channel_i_n_69 ;
  wire \gth_channel.gthe2_channel_i_n_70 ;
  wire \gth_channel.gthe2_channel_i_n_71 ;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_swing;
  wire rate_cpllreset_2;
  wire rate_txpmareset_2;
  wire rst_userrdy;
  wire rxsyncallin;
  wire sys_clk;
  wire \NLW_gth_channel.gthe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RSOSINTDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXDFESTADAPTDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXQPISENN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_RXQPISENP_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXPMARESETDONE_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXQPISENN_UNCONNECTED ;
  wire \NLW_gth_channel.gthe2_channel_i_TXQPISENP_UNCONNECTED ;
  wire [15:0]\NLW_gth_channel.gthe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [7:4]\NLW_gth_channel.gthe2_channel_i_RXCHARISCOMMA_UNCONNECTED ;
  wire [7:4]\NLW_gth_channel.gthe2_channel_i_RXCHARISK_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [63:32]\NLW_gth_channel.gthe2_channel_i_RXDATA_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire [5:0]\NLW_gth_channel.gthe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire [6:0]\NLW_gth_channel.gthe2_channel_i_RXMONITOROUT_UNCONNECTED ;
  wire [4:0]\NLW_gth_channel.gthe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gth_channel.gthe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire [1:0]\NLW_gth_channel.gthe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gtx_cpllpd_ovrd_19 cpllPDInst
       (.CPLLRESET0(CPLLRESET0),
        .RST_CPLLRESET(RST_CPLLRESET),
        .cpllpd_1(cpllpd_1),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rate_cpllreset_2(rate_cpllreset_2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SET_SPEEDUP_SIM_TRUE = "TRUE" *) 
  GTHE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'h00C10),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(42'h24800040E80),
    .CFOK_CFG2(6'b100000),
    .CFOK_CFG3(6'b100000),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(15),
    .CLK_COR_MIN_LAT(13),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(29'h00A407CC),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000AB1),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b1),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h000000000140),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'b00000000000000000000000010000000),
    .PMA_RSV2(32'b00011100000000000000000000001010),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(15'b000000000001000),
    .PMA_RSV5(4'b0000),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0002007FE2000C2080018),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00001000000000),
    .RXLPM_LF_CFG(18'b001001000000000000),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("FABRIC"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b11),
    .RXPI_CFG2(2'b11),
    .RXPI_CFG3(2'b11),
    .RXPI_CFG4(1'b0),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b100),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b1),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(24'b000011000000000000010000),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000011000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b0),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b00),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_AGC_CFG2(4'b0000),
    .RX_DFE_AGC_OVRDEN(1'b1),
    .RX_DFE_GAIN_CFG(23'h0020C0),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011100000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_H6_CFG(11'b00000100000),
    .RX_DFE_H7_CFG(11'b00000100000),
    .RX_DFE_KL_CFG(33'b000000000000000000000001100010000),
    .RX_DFE_KL_LPM_KH_CFG0(2'b10),
    .RX_DFE_KL_LPM_KH_CFG1(3'b010),
    .RX_DFE_KL_LPM_KH_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KH_OVRDEN(1'b1),
    .RX_DFE_KL_LPM_KL_CFG0(2'b10),
    .RX_DFE_KL_LPM_KL_CFG1(3'b010),
    .RX_DFE_KL_LPM_KL_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KL_OVRDEN(1'b1),
    .RX_DFE_LPM_CFG(16'h0080),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b1),
    .RX_DFE_ST_CFG(54'h00C100000C003F),
    .RX_DFE_UT_CFG(17'b00011100000000000),
    .RX_DFE_VP_CFG(17'b00011101010100011),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(4),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b1),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b100),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_PRECHARGE_TIME(17'h00001),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    \gth_channel.gthe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\NLW_gth_channel.gthe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ),
        .CPLLLOCK(RATE_CPLLLOCK),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(CPLLPD0_4),
        .CPLLREFCLKLOST(\NLW_gth_channel.gthe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(CPLLRESET0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gth_channel.gthe2_channel_i_n_57 ,\gth_channel.gthe2_channel_i_n_58 ,\gth_channel.gthe2_channel_i_n_59 ,\gth_channel.gthe2_channel_i_n_60 ,\gth_channel.gthe2_channel_i_n_61 ,\gth_channel.gthe2_channel_i_n_62 ,\gth_channel.gthe2_channel_i_n_63 ,\gth_channel.gthe2_channel_i_n_64 ,\gth_channel.gthe2_channel_i_n_65 ,\gth_channel.gthe2_channel_i_n_66 ,\gth_channel.gthe2_channel_i_n_67 ,\gth_channel.gthe2_channel_i_n_68 ,\gth_channel.gthe2_channel_i_n_69 ,\gth_channel.gthe2_channel_i_n_70 ,\gth_channel.gthe2_channel_i_n_71 }),
        .DRPADDR({1'b0,DRPADDR}),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(DRPDI),
        .DRPDO(\gth_channel.gthe2_channel_i_5 ),
        .DRPEN(\gth_channel.gthe2_channel_i_6 ),
        .DRPRDY(DRP_RDY),
        .DRPWE(\gth_channel.gthe2_channel_i_7 ),
        .EYESCANDATAERROR(\gth_channel.gthe2_channel_i_n_4 ),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTHRXN(pci_exp_rxn),
        .GTHRXP(pci_exp_rxp),
        .GTHTXN(pci_exp_txn),
        .GTHTXP(pci_exp_txp),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\NLW_gth_channel.gthe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(DRP_GTXRESET),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(DRP_GTXRESET),
        .LOOPBACK({1'b0,1'b0,1'b0}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gth_channel.gthe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(D),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(QPLL_QPLLOUTCLK),
        .QPLLREFCLK(QPLL_QPLLOUTREFCLK),
        .RESETOVRD(1'b0),
        .RSOSINTDONE(\NLW_gth_channel.gthe2_channel_i_RSOSINTDONE_UNCONNECTED ),
        .RX8B10BEN(RX8B10BEN0),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({\gth_channel.gthe2_channel_i_n_114 ,\gth_channel.gthe2_channel_i_n_115 ,\gth_channel.gthe2_channel_i_n_116 }),
        .RXBYTEISALIGNED(\gth_channel.gthe2_channel_i_n_10 ),
        .RXBYTEREALIGN(\gth_channel.gthe2_channel_i_n_11 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock_2),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gth_channel.gthe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(\gth_channel.gthe2_channel_i_n_14 ),
        .RXCHANREALIGN(\NLW_gth_channel.gthe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\NLW_gth_channel.gthe2_channel_i_RXCHARISCOMMA_UNCONNECTED [7:4],\gth_channel.gthe2_channel_i_n_216 ,\gth_channel.gthe2_channel_i_n_217 ,\gth_channel.gthe2_channel_i_n_218 ,\gth_channel.gthe2_channel_i_n_219 }),
        .RXCHARISK({\NLW_gth_channel.gthe2_channel_i_RXCHARISK_UNCONNECTED [7:4],\gth_channel.gthe2_channel_i_n_224 ,\gth_channel.gthe2_channel_i_n_225 ,PIPE_RXDATAK}),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gth_channel.gthe2_channel_i_n_120 ,\gth_channel.gthe2_channel_i_n_121 ,\gth_channel.gthe2_channel_i_n_122 ,\gth_channel.gthe2_channel_i_n_123 ,\gth_channel.gthe2_channel_i_n_124 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(\NLW_gth_channel.gthe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gth_channel.gthe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(\gth_channel.gthe2_channel_i_n_17 ),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gth_channel.gthe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gth_channel.gthe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\NLW_gth_channel.gthe2_channel_i_RXDATA_UNCONNECTED [63:32],\gth_channel.gthe2_channel_i_n_173 ,\gth_channel.gthe2_channel_i_n_174 ,\gth_channel.gthe2_channel_i_n_175 ,\gth_channel.gthe2_channel_i_n_176 ,\gth_channel.gthe2_channel_i_n_177 ,\gth_channel.gthe2_channel_i_n_178 ,\gth_channel.gthe2_channel_i_n_179 ,\gth_channel.gthe2_channel_i_n_180 ,\gth_channel.gthe2_channel_i_n_181 ,\gth_channel.gthe2_channel_i_n_182 ,\gth_channel.gthe2_channel_i_n_183 ,\gth_channel.gthe2_channel_i_n_184 ,\gth_channel.gthe2_channel_i_n_185 ,\gth_channel.gthe2_channel_i_n_186 ,\gth_channel.gthe2_channel_i_n_187 ,\gth_channel.gthe2_channel_i_n_188 ,PIPE_RXDATA}),
        .RXDATAVALID(\NLW_gth_channel.gthe2_channel_i_RXDATAVALID_UNCONNECTED [1:0]),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXDFEAGCOVRDEN(RX8B10BEN0),
        .RXDFEAGCTRL({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFESLIDETAP({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPADAPTEN(1'b0),
        .RXDFESLIDETAPHOLD(1'b0),
        .RXDFESLIDETAPID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPINITOVRDEN(1'b0),
        .RXDFESLIDETAPONLYADAPTEN(1'b0),
        .RXDFESLIDETAPOVRDEN(1'b0),
        .RXDFESLIDETAPSTARTED(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTARTED_UNCONNECTED ),
        .RXDFESLIDETAPSTROBE(1'b0),
        .RXDFESLIDETAPSTROBEDONE(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED ),
        .RXDFESLIDETAPSTROBESTARTED(\NLW_gth_channel.gthe2_channel_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED ),
        .RXDFESTADAPTDONE(\NLW_gth_channel.gthe2_channel_i_RXDFESTADAPTDONE_UNCONNECTED ),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDISPERR({\gth_channel.gthe2_channel_i_n_228 ,\gth_channel.gthe2_channel_i_n_229 ,\gth_channel.gthe2_channel_i_n_230 ,\gth_channel.gthe2_channel_i_n_231 ,\gth_channel.gthe2_channel_i_n_232 ,\gth_channel.gthe2_channel_i_n_233 ,\gth_channel.gthe2_channel_i_n_234 ,\gth_channel.gthe2_channel_i_n_235 }),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gth_channel.gthe2_channel_i_0 ),
        .RXELECIDLE(PIPE_RXELECIDLE),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gth_channel.gthe2_channel_i_RXHEADER_UNCONNECTED [5:0]),
        .RXHEADERVALID(\NLW_gth_channel.gthe2_channel_i_RXHEADERVALID_UNCONNECTED [1:0]),
        .RXLPMEN(RX8B10BEN0),
        .RXLPMHFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(\gth_channel.gthe2_channel_i_8 ),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(RX8B10BEN0),
        .RXMONITOROUT(\NLW_gth_channel.gthe2_channel_i_RXMONITOROUT_UNCONNECTED [6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE({\gth_channel.gthe2_channel_i_n_236 ,\gth_channel.gthe2_channel_i_n_237 ,\gth_channel.gthe2_channel_i_n_238 ,\gth_channel.gthe2_channel_i_n_239 ,\gth_channel.gthe2_channel_i_n_240 ,\gth_channel.gthe2_channel_i_n_241 ,\gth_channel.gthe2_channel_i_n_242 ,\gth_channel.gthe2_channel_i_n_243 }),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b1,1'b1,1'b0}),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTSTARTED(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTARTED_UNCONNECTED ),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ),
        .RXOSINTSTROBESTARTED(\NLW_gth_channel.gthe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(pipe_rxoutclk_out),
        .RXOUTCLKFABRIC(\NLW_gth_channel.gthe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gth_channel.gthe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(RX8B10BEN0),
        .RXPCSRESET(1'b0),
        .RXPD(PIPE_POWERDOWN),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gth_channel.gthe2_channel_i_1 ),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gth_channel.gthe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gth_channel.gthe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(rate_txpmareset_2),
        .RXPMARESETDONE(RATE_RXPMARESETDONE),
        .RXPOLARITY(PIPE_RXPOLARITY),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gth_channel.gthe2_channel_i_n_34 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0}),
        .RXQPIEN(1'b0),
        .RXQPISENN(\NLW_gth_channel.gthe2_channel_i_RXQPISENN_UNCONNECTED ),
        .RXQPISENP(\NLW_gth_channel.gthe2_channel_i_RXQPISENP_UNCONNECTED ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(RATE_RXRATEDONE),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(RATE_RXRESETDONE),
        .RXSLIDE(PIPE_RXSLIDE),
        .RXSTARTOFSEQ(\NLW_gth_channel.gthe2_channel_i_RXSTARTOFSEQ_UNCONNECTED [1:0]),
        .RXSTATUS(PIPE_RXSTATUS),
        .RXSYNCALLIN(rxsyncallin),
        .RXSYNCDONE(SYNC_RXSYNCDONE),
        .RXSYNCIN(gt_rxsyncout_0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gth_channel.gthe2_channel_i_n_40 ),
        .RXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pipe_rxusrclk_in),
        .RXUSRCLK2(pipe_rxusrclk_in),
        .RXVALID(gt_rxvalid_2),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(USER_OOBCLK),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(RX8B10BEN0),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gth_channel.gthe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXCOMPLIANCE}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXDATAK}),
        .TXCOMFINISH(\NLW_gth_channel.gthe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPE_TXDATA}),
        .TXDEEMPH(pipe_tx_deemph),
        .TXDETECTRX(pipe_tx_rcvr_det),
        .TXDIFFCTRL({1'b1,1'b1,1'b1,1'b1}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(Q[0]),
        .TXDLYSRESETDONE(\gth_channel.gthe2_channel_i_2 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(PIPE_TXELECIDLE),
        .TXGEARBOXREADY(\NLW_gth_channel.gthe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(1'b0),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(PIPETXMARGIN),
        .TXOUTCLK(\gth_channel.gthe2_channel_i_n_45 ),
        .TXOUTCLKFABRIC(\NLW_gth_channel.gthe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gth_channel.gthe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD(PIPE_POWERDOWN),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(Q[2]),
        .TXPHALIGNDONE(\gth_channel.gthe2_channel_i_3 ),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(Q[1]),
        .TXPHINITDONE(\gth_channel.gthe2_channel_i_4 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(rate_txpmareset_2),
        .TXPMARESETDONE(\NLW_gth_channel.gthe2_channel_i_TXPMARESETDONE_UNCONNECTED ),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0}),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\NLW_gth_channel.gthe2_channel_i_TXQPISENN_UNCONNECTED ),
        .TXQPISENP(\NLW_gth_channel.gthe2_channel_i_TXQPISENP_UNCONNECTED ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(RATE_TXRATEDONE),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(RATE_TXRESETDONE),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(pipe_tx_swing),
        .TXSYNCALLIN(\gth_channel.gthe2_channel_i_9 ),
        .TXSYNCDONE(SYNC_TXSYNCDONE),
        .TXSYNCIN(gt_txsyncout_0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gth_channel.gthe2_channel_i_n_56 ),
        .TXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pipe_pclk_in),
        .TXUSRCLK2(pipe_pclk_in));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gtx_cpllpd_ovrd
   (cpllpd_2,
    CPLLRESET0,
    gt_cpllpdrefclk,
    rate_cpllreset_3,
    RST_CPLLRESET);
  output cpllpd_2;
  output CPLLRESET0;
  input gt_cpllpdrefclk;
  input rate_cpllreset_3;
  input RST_CPLLRESET;

  wire CPLLRESET0;
  wire RST_CPLLRESET;
  wire cpllpd_2;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rate_cpllreset_3;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd_2),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_channel.gthe2_channel_i_i_2__2 
       (.I0(cpllrst),
        .I1(rate_cpllreset_3),
        .I2(RST_CPLLRESET),
        .O(CPLLRESET0));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_gtx_cpllpd_ovrd" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gtx_cpllpd_ovrd_19
   (cpllpd_1,
    CPLLRESET0,
    gt_cpllpdrefclk,
    rate_cpllreset_2,
    RST_CPLLRESET);
  output cpllpd_1;
  output CPLLRESET0;
  input gt_cpllpdrefclk;
  input rate_cpllreset_2;
  input RST_CPLLRESET;

  wire CPLLRESET0;
  wire RST_CPLLRESET;
  wire cpllpd_1;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rate_cpllreset_2;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd_1),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_channel.gthe2_channel_i_i_2__1 
       (.I0(cpllrst),
        .I1(rate_cpllreset_2),
        .I2(RST_CPLLRESET),
        .O(CPLLRESET0));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_gtx_cpllpd_ovrd" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gtx_cpllpd_ovrd_21
   (cpllpd_0,
    CPLLRESET0,
    gt_cpllpdrefclk,
    rate_cpllreset_1,
    RST_CPLLRESET);
  output cpllpd_0;
  output CPLLRESET0;
  input gt_cpllpdrefclk;
  input rate_cpllreset_1;
  input RST_CPLLRESET;

  wire CPLLRESET0;
  wire RST_CPLLRESET;
  wire cpllpd_0;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rate_cpllreset_1;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd_0),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_channel.gthe2_channel_i_i_2__0 
       (.I0(cpllrst),
        .I1(rate_cpllreset_1),
        .I2(RST_CPLLRESET),
        .O(CPLLRESET0));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_gtx_cpllpd_ovrd" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gtx_cpllpd_ovrd_23
   (cpllpd,
    CPLLRESET0,
    gt_cpllpdrefclk,
    rate_cpllreset_0,
    RST_CPLLRESET);
  output cpllpd;
  output CPLLRESET0;
  input gt_cpllpdrefclk;
  input rate_cpllreset_0;
  input RST_CPLLRESET;

  wire CPLLRESET0;
  wire RST_CPLLRESET;
  wire cpllpd;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rate_cpllreset_0;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_channel.gthe2_channel_i_i_2 
       (.I0(cpllrst),
        .I1(rate_cpllreset_0),
        .I2(RST_CPLLRESET),
        .O(CPLLRESET0));
endmodule

(* ARI_CAP_ENABLE = "FALSE" *) (* AXISTEN_IF_CC_ALIGNMENT_MODE = "FALSE" *) (* AXISTEN_IF_CC_PARITY_CHK = "FALSE" *) 
(* AXISTEN_IF_CQ_ALIGNMENT_MODE = "FALSE" *) (* AXISTEN_IF_ENABLE_CLIENT_TAG = "FALSE" *) (* AXISTEN_IF_ENABLE_MSG_ROUTE = "18'b000000000000000000" *) 
(* AXISTEN_IF_ENABLE_RX_MSG_INTFC = "FALSE" *) (* AXISTEN_IF_RC_ALIGNMENT_MODE = "FALSE" *) (* AXISTEN_IF_RC_STRADDLE = "FALSE" *) 
(* AXISTEN_IF_RQ_ALIGNMENT_MODE = "FALSE" *) (* AXISTEN_IF_RQ_PARITY_CHK = "FALSE" *) (* AXISTEN_IF_WIDTH = "2'b01" *) 
(* CFG_CTL_IF = "TRUE" *) (* CFG_EXT_IF = "TRUE" *) (* CFG_FC_IF = "TRUE" *) 
(* CFG_MGMT_IF = "TRUE" *) (* CFG_STATUS_IF = "TRUE" *) (* CFG_TX_MSG_IF = "TRUE" *) 
(* COMPLETION_SPACE = "16KB" *) (* CRM_CORE_CLK_FREQ_500 = "FALSE" *) (* CRM_USER_CLK_FREQ = "2'b01" *) 
(* C_DATA_WIDTH = "128" *) (* DBG_DESCRAMBLE_EN = "TRUE" *) (* DEV_PORT_TYPE = "2'b00" *) 
(* DNSTREAM_LINK_NUM = "8'b00000000" *) (* ENABLE_FAST_SIM_TRAINING = "TRUE" *) (* ENABLE_JTAG_DBG = "FALSE" *) 
(* ENABLE_LTSSM_DBG = "FALSE" *) (* EXT_CH_GT_DRP = "FALSE" *) (* EXT_PIPE_INTERFACE = "FALSE" *) 
(* EXT_PIPE_SIM = "FALSE" *) (* EXT_STARTUP_PRIMITIVE = "FALSE" *) (* GEN3_PCS_AUTO_REALIGN = "2'b01" *) 
(* GEN3_PCS_RX_ELECIDLE_INTERNAL = "TRUE" *) (* IMPL_TARGET = "HARD" *) (* INTERFACE_SPEED = "250 MHZ" *) 
(* KEEP_WIDTH = "4" *) (* LL_ACK_TIMEOUT = "9'b000000000" *) (* LL_ACK_TIMEOUT_EN = "FALSE" *) 
(* LL_ACK_TIMEOUT_FUNC = "0" *) (* LL_CPL_FC_UPDATE_TIMER = "16'b0000000000000000" *) (* LL_CPL_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
(* LL_FC_UPDATE_TIMER = "16'b0000000000000000" *) (* LL_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) (* LL_NP_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
(* LL_NP_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) (* LL_P_FC_UPDATE_TIMER = "16'b0000000000000000" *) (* LL_P_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
(* LL_REPLAY_TIMEOUT = "9'b000000000" *) (* LL_REPLAY_TIMEOUT_EN = "FALSE" *) (* LL_REPLAY_TIMEOUT_FUNC = "0" *) 
(* LTR_TX_MESSAGE_MINIMUM_INTERVAL = "10'b0011111010" *) (* LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE = "FALSE" *) (* LTR_TX_MESSAGE_ON_LTR_ENABLE = "FALSE" *) 
(* MSIX_EN = "FALSE" *) (* MSI_EN = "TRUE" *) (* MULT_PF_DES = "TRUE" *) 
(* NO_DECODE_LOGIC = "FALSE" *) (* PCIE_ASYNC_EN = "FALSE" *) (* PCIE_CHAN_BOND = "0" *) 
(* PCIE_CHAN_BOND_EN = "FALSE" *) (* PCIE_DRP = "FALSE" *) (* PCIE_EXT_CLK = "TRUE" *) 
(* PCIE_EXT_GT_COMMON = "FALSE" *) (* PCIE_FAST_CONFIG = "NONE" *) (* PCIE_GT_DEVICE = "GTH" *) 
(* PCIE_LINK_SPEED = "3" *) (* PCIE_LPM_DFE = "LPM" *) (* PCIE_TXBUF_EN = "FALSE" *) 
(* PCIE_USE_MODE = "2.1" *) (* PER_FUNC_STATUS_IF = "TRUE" *) (* PF0_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
(* PF0_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) (* PF0_AER_CAP_NEXTPTR = "12'b000000000000" *) (* PF0_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF0_ARI_CAP_NEXT_FUNC = "8'b00000000" *) (* PF0_ARI_CAP_VER = "4'b0001" *) (* PF0_BAR0_APERTURE_SIZE = "5'b01101" *) 
(* PF0_BAR0_CONTROL = "3'b100" *) (* PF0_BAR1_APERTURE_SIZE = "5'b00000" *) (* PF0_BAR1_CONTROL = "3'b000" *) 
(* PF0_BAR2_APERTURE_SIZE = "5'b00000" *) (* PF0_BAR2_CONTROL = "3'b000" *) (* PF0_BAR3_APERTURE_SIZE = "5'b00000" *) 
(* PF0_BAR3_CONTROL = "3'b000" *) (* PF0_BAR4_APERTURE_SIZE = "5'b00000" *) (* PF0_BAR4_CONTROL = "3'b000" *) 
(* PF0_BAR5_APERTURE_SIZE = "5'b00000" *) (* PF0_BAR5_CONTROL = "3'b000" *) (* PF0_BIST_REGISTER = "8'b00000000" *) 
(* PF0_CAPABILITY_POINTER = "8'b10000000" *) (* PF0_CLASS_CODE = "24'b000001011000000000000000" *) (* PF0_DEVICE_ID = "16'b0111000000100100" *) 
(* PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) (* PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) (* PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) 
(* PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE = "TRUE" *) (* PF0_DEV_CAP2_LTR_SUPPORT = "FALSE" *) (* PF0_DEV_CAP2_OBFF_SUPPORT = "2'b00" *) 
(* PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT = "FALSE" *) (* PF0_DEV_CAP_ENDPOINT_L0S_LATENCY = "0" *) (* PF0_DEV_CAP_ENDPOINT_L1_LATENCY = "0" *) 
(* PF0_DEV_CAP_EXT_TAG_SUPPORTED = "FALSE" *) (* PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE = "FALSE" *) (* PF0_DEV_CAP_MAX_PAYLOAD_SIZE = "3'b010" *) 
(* PF0_DPA_CAP_NEXTPTR = "12'b000000000000" *) (* PF0_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) (* PF0_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
(* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "8'b00000000" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "8'b00000000" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "8'b00000000" *) 
(* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "8'b00000000" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "8'b00000000" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "8'b00000000" *) 
(* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "8'b00000000" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "8'b00000000" *) (* PF0_DPA_CAP_VER = "4'b0001" *) 
(* PF0_DSN_CAP_NEXTPTR = "12'b000000000000" *) (* PF0_EXPANSION_ROM_APERTURE_SIZE = "5'b00000" *) (* PF0_EXPANSION_ROM_ENABLE = "FALSE" *) 
(* PF0_INTERRUPT_LINE = "8'b00000000" *) (* PF0_INTERRUPT_PIN = "3'b001" *) (* PF0_LINK_CAP_ASPM_SUPPORT = "0" *) 
(* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1 = "7" *) (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2 = "7" *) (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3 = "7" *) 
(* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1 = "7" *) (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2 = "7" *) (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3 = "7" *) 
(* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1 = "7" *) (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2 = "7" *) (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3 = "7" *) 
(* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1 = "7" *) (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2 = "7" *) (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3 = "7" *) 
(* PF0_LINK_STATUS_SLOT_CLOCK_CONFIG = "TRUE" *) (* PF0_LTR_CAP_MAX_NOSNOOP_LAT = "10'b0000000000" *) (* PF0_LTR_CAP_MAX_SNOOP_LAT = "10'b0000000000" *) 
(* PF0_LTR_CAP_NEXTPTR = "12'b000000000000" *) (* PF0_LTR_CAP_VER = "4'b0001" *) (* PF0_MSIX_CAP_NEXTPTR = "8'b00000000" *) 
(* PF0_MSIX_CAP_PBA_BIR = "0" *) (* PF0_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) (* PF0_MSIX_CAP_TABLE_BIR = "0" *) 
(* PF0_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) (* PF0_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* PF0_MSI_CAP_MULTIMSGCAP = "0" *) 
(* PF0_MSI_CAP_NEXTPTR = "8'b11000000" *) (* PF0_PB_CAP_NEXTPTR = "12'b000000000000" *) (* PF0_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
(* PF0_PB_CAP_VER = "4'b0001" *) (* PF0_PM_CAP_ID = "8'b00000001" *) (* PF0_PM_CAP_NEXTPTR = "8'b10010000" *) 
(* PF0_PM_CAP_PMESUPPORT_D0 = "FALSE" *) (* PF0_PM_CAP_PMESUPPORT_D1 = "FALSE" *) (* PF0_PM_CAP_PMESUPPORT_D3HOT = "FALSE" *) 
(* PF0_PM_CAP_SUPP_D1_STATE = "FALSE" *) (* PF0_PM_CAP_VER_ID = "3'b011" *) (* PF0_PM_CSR_NOSOFTRESET = "TRUE" *) 
(* PF0_RBAR_CAP_ENABLE = "FALSE" *) (* PF0_RBAR_CAP_INDEX0 = "3'b000" *) (* PF0_RBAR_CAP_INDEX1 = "3'b000" *) 
(* PF0_RBAR_CAP_INDEX2 = "3'b000" *) (* PF0_RBAR_CAP_NEXTPTR = "12'b000000000000" *) (* PF0_RBAR_CAP_SIZE0 = "20'b00000000000000000000" *) 
(* PF0_RBAR_CAP_SIZE1 = "20'b00000000000000000000" *) (* PF0_RBAR_CAP_SIZE2 = "20'b00000000000000000000" *) (* PF0_RBAR_CAP_VER = "4'b0001" *) 
(* PF0_RBAR_NUM = "3'b001" *) (* PF0_REVISION_ID = "8'b00000000" *) (* PF0_SRIOV_BAR0_APERTURE_SIZE = "5'b00000" *) 
(* PF0_SRIOV_BAR0_CONTROL = "3'b000" *) (* PF0_SRIOV_BAR1_APERTURE_SIZE = "5'b00000" *) (* PF0_SRIOV_BAR1_CONTROL = "3'b000" *) 
(* PF0_SRIOV_BAR2_APERTURE_SIZE = "5'b00000" *) (* PF0_SRIOV_BAR2_CONTROL = "3'b000" *) (* PF0_SRIOV_BAR3_APERTURE_SIZE = "5'b00000" *) 
(* PF0_SRIOV_BAR3_CONTROL = "3'b000" *) (* PF0_SRIOV_BAR4_APERTURE_SIZE = "5'b00000" *) (* PF0_SRIOV_BAR4_CONTROL = "3'b000" *) 
(* PF0_SRIOV_BAR5_APERTURE_SIZE = "5'b00000" *) (* PF0_SRIOV_BAR5_CONTROL = "3'b000" *) (* PF0_SRIOV_CAP_INITIAL_VF = "16'b0000000000000000" *) 
(* PF0_SRIOV_CAP_NEXTPTR = "12'b000000000000" *) (* PF0_SRIOV_CAP_TOTAL_VF = "16'b0000000000000000" *) (* PF0_SRIOV_CAP_VER = "4'b0000" *) 
(* PF0_SRIOV_FIRST_VF_OFFSET = "16'b0000000000000000" *) (* PF0_SRIOV_FUNC_DEP_LINK = "16'b0000000000000000" *) (* PF0_SRIOV_SUPPORTED_PAGE_SIZE = "1363" *) 
(* PF0_SRIOV_VF_DEVICE_ID = "16'b0000000000000000" *) (* PF0_SUBSYSTEM_ID = "16'b0000000000000111" *) (* PF0_SUBSYSTEM_VENDOR_ID = "16'b0001000011101110" *) 
(* PF0_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* PF0_TPHR_CAP_ENABLE = "FALSE" *) (* PF0_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
(* PF0_TPHR_CAP_NEXTPTR = "12'b000000000000" *) (* PF0_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* PF0_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
(* PF0_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) (* PF0_TPHR_CAP_VER = "4'b0001" *) (* PF0_VC_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF0_VC_CAP_VER = "4'b0001" *) (* PF0_VENDOR_ID = "16'b0001000011101111" *) (* PF1_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
(* PF1_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) (* PF1_AER_CAP_NEXTPTR = "12'b000000000000" *) (* PF1_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF1_ARI_CAP_NEXT_FUNC = "8'b00000000" *) (* PF1_BAR0_APERTURE_SIZE = "5'b00000" *) (* PF1_BAR0_CONTROL = "3'b000" *) 
(* PF1_BAR1_APERTURE_SIZE = "5'b00000" *) (* PF1_BAR1_CONTROL = "3'b000" *) (* PF1_BAR2_APERTURE_SIZE = "5'b00000" *) 
(* PF1_BAR2_CONTROL = "3'b000" *) (* PF1_BAR3_APERTURE_SIZE = "5'b00000" *) (* PF1_BAR3_CONTROL = "3'b000" *) 
(* PF1_BAR4_APERTURE_SIZE = "5'b00000" *) (* PF1_BAR4_CONTROL = "3'b000" *) (* PF1_BAR5_APERTURE_SIZE = "5'b00000" *) 
(* PF1_BAR5_CONTROL = "3'b000" *) (* PF1_BIST_REGISTER = "8'b00000000" *) (* PF1_CAPABILITY_POINTER = "8'b10000000" *) 
(* PF1_CLASS_CODE = "24'b000001011000000000000000" *) (* PF1_DEVICE_ID = "16'b0111000000010001" *) (* PF1_DEV_CAP_MAX_PAYLOAD_SIZE = "3'b010" *) 
(* PF1_DPA_CAP_NEXTPTR = "12'b000000000000" *) (* PF1_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) (* PF1_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
(* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "8'b00000000" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "8'b00000000" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "8'b00000000" *) 
(* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "8'b00000000" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "8'b00000000" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "8'b00000000" *) 
(* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "8'b00000000" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "8'b00000000" *) (* PF1_DPA_CAP_VER = "4'b0001" *) 
(* PF1_DSN_CAP_NEXTPTR = "12'b000000000000" *) (* PF1_EXPANSION_ROM_APERTURE_SIZE = "5'b00000" *) (* PF1_EXPANSION_ROM_ENABLE = "FALSE" *) 
(* PF1_INTERRUPT_LINE = "8'b00000000" *) (* PF1_INTERRUPT_PIN = "3'b000" *) (* PF1_MSIX_CAP_NEXTPTR = "8'b00000000" *) 
(* PF1_MSIX_CAP_PBA_BIR = "0" *) (* PF1_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) (* PF1_MSIX_CAP_TABLE_BIR = "0" *) 
(* PF1_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) (* PF1_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* PF1_MSI_CAP_MULTIMSGCAP = "0" *) 
(* PF1_MSI_CAP_NEXTPTR = "8'b00000000" *) (* PF1_PB_CAP_NEXTPTR = "12'b000000000000" *) (* PF1_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
(* PF1_PB_CAP_VER = "4'b0001" *) (* PF1_PM_CAP_ID = "8'b00000001" *) (* PF1_PM_CAP_NEXTPTR = "8'b00000000" *) 
(* PF1_PM_CAP_VER_ID = "3'b011" *) (* PF1_RBAR_CAP_ENABLE = "FALSE" *) (* PF1_RBAR_CAP_INDEX0 = "3'b000" *) 
(* PF1_RBAR_CAP_INDEX1 = "3'b000" *) (* PF1_RBAR_CAP_INDEX2 = "3'b000" *) (* PF1_RBAR_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF1_RBAR_CAP_SIZE0 = "20'b00000000000000000000" *) (* PF1_RBAR_CAP_SIZE1 = "20'b00000000000000000000" *) (* PF1_RBAR_CAP_SIZE2 = "20'b00000000000000000000" *) 
(* PF1_RBAR_CAP_VER = "4'b0001" *) (* PF1_RBAR_NUM = "3'b001" *) (* PF1_REVISION_ID = "8'b00000000" *) 
(* PF1_SRIOV_BAR0_APERTURE_SIZE = "5'b00000" *) (* PF1_SRIOV_BAR0_CONTROL = "3'b000" *) (* PF1_SRIOV_BAR1_APERTURE_SIZE = "5'b00000" *) 
(* PF1_SRIOV_BAR1_CONTROL = "3'b000" *) (* PF1_SRIOV_BAR2_APERTURE_SIZE = "5'b00000" *) (* PF1_SRIOV_BAR2_CONTROL = "3'b000" *) 
(* PF1_SRIOV_BAR3_APERTURE_SIZE = "5'b00000" *) (* PF1_SRIOV_BAR3_CONTROL = "3'b000" *) (* PF1_SRIOV_BAR4_APERTURE_SIZE = "5'b00000" *) 
(* PF1_SRIOV_BAR4_CONTROL = "3'b000" *) (* PF1_SRIOV_BAR5_APERTURE_SIZE = "5'b00000" *) (* PF1_SRIOV_BAR5_CONTROL = "3'b000" *) 
(* PF1_SRIOV_CAP_INITIAL_VF = "16'b0000000000000000" *) (* PF1_SRIOV_CAP_NEXTPTR = "12'b000000000000" *) (* PF1_SRIOV_CAP_TOTAL_VF = "16'b0000000000000000" *) 
(* PF1_SRIOV_CAP_VER = "4'b0000" *) (* PF1_SRIOV_FIRST_VF_OFFSET = "16'b0000000000000000" *) (* PF1_SRIOV_FUNC_DEP_LINK = "16'b0000000000000001" *) 
(* PF1_SRIOV_SUPPORTED_PAGE_SIZE = "1363" *) (* PF1_SRIOV_VF_DEVICE_ID = "16'b0000000000000000" *) (* PF1_SUBSYSTEM_ID = "16'b0000000000000111" *) 
(* PF1_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* PF1_TPHR_CAP_ENABLE = "FALSE" *) (* PF1_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
(* PF1_TPHR_CAP_NEXTPTR = "12'b000000000000" *) (* PF1_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* PF1_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
(* PF1_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) (* PF1_TPHR_CAP_VER = "4'b0001" *) (* PIPE_PIPELINE_STAGES = "0" *) 
(* PIPE_SIM = "FALSE" *) (* PIPE_SIM_MODE = "FALSE" *) (* PL_DISABLE_EI_INFER_IN_L0 = "FALSE" *) 
(* PL_DISABLE_GEN3_DC_BALANCE = "FALSE" *) (* PL_DISABLE_SCRAMBLING = "FALSE" *) (* PL_DISABLE_UPCONFIG_CAPABLE = "FALSE" *) 
(* PL_EQ_ADAPT_DISABLE_COEFF_CHECK = "FALSE" *) (* PL_EQ_ADAPT_DISABLE_PRESET_CHECK = "FALSE" *) (* PL_EQ_ADAPT_ITER_COUNT = "5'b00010" *) 
(* PL_EQ_ADAPT_REJECT_RETRY_COUNT = "2'b01" *) (* PL_EQ_BYPASS_PHASE23 = "FALSE" *) (* PL_EQ_SHORT_ADAPT_PHASE = "FALSE" *) 
(* PL_LANE0_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE1_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE2_EQ_CONTROL = "16'b0011010000000000" *) 
(* PL_LANE3_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE4_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE5_EQ_CONTROL = "16'b0011010000000000" *) 
(* PL_LANE6_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE7_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LINK_CAP_MAX_LINK_SPEED = "3'b010" *) 
(* PL_LINK_CAP_MAX_LINK_WIDTH = "4'b0100" *) (* PL_N_FTS_COMCLK_GEN1 = "255" *) (* PL_N_FTS_COMCLK_GEN2 = "255" *) 
(* PL_N_FTS_COMCLK_GEN3 = "255" *) (* PL_N_FTS_GEN1 = "255" *) (* PL_N_FTS_GEN2 = "255" *) 
(* PL_N_FTS_GEN3 = "255" *) (* PL_UPSTREAM_FACING = "TRUE" *) (* PM_ASPML0S_TIMEOUT = "16'b0000010111011100" *) 
(* PM_ASPML1_ENTRY_DELAY = "20'b00000001110101001100" *) (* PM_ENABLE_SLOT_POWER_CAPTURE = "TRUE" *) (* PM_L1_REENTRY_DELAY = "25000" *) 
(* PM_PME_SERVICE_TIMEOUT_DELAY = "20'b00011000011010100000" *) (* PM_PME_TURNOFF_ACK_DELAY = "16'b0000000001100100" *) (* POWER_DOWN = "FALSE" *) 
(* RCV_MSG_IF = "TRUE" *) (* REF_CLK_FREQ = "0" *) (* SHARED_LOGIC_IN_CORE = "FALSE" *) 
(* SIM_VERSION = "1.0" *) (* SPARE_BIT0 = "0" *) (* SPARE_BIT1 = "0" *) 
(* SPARE_BIT2 = "0" *) (* SPARE_BIT3 = "0" *) (* SPARE_BIT4 = "0" *) 
(* SPARE_BIT5 = "0" *) (* SPARE_BIT6 = "0" *) (* SPARE_BIT7 = "0" *) 
(* SPARE_BIT8 = "0" *) (* SPARE_BYTE0 = "8'b00000000" *) (* SPARE_BYTE1 = "8'b00000000" *) 
(* SPARE_BYTE2 = "8'b00000000" *) (* SPARE_BYTE3 = "8'b00000000" *) (* SPARE_WORD0 = "0" *) 
(* SPARE_WORD1 = "0" *) (* SPARE_WORD2 = "0" *) (* SPARE_WORD3 = "0" *) 
(* SRIOV_CAP_ENABLE = "FALSE" *) (* TCQ = "100" *) (* TL_COMPL_TIMEOUT_REG0 = "24'b101111101011110000100000" *) 
(* TL_COMPL_TIMEOUT_REG1 = "28'b0011001000010001011000100000" *) (* TL_CREDITS_CD = "12'b000000000000" *) (* TL_CREDITS_CH = "8'b00000000" *) 
(* TL_CREDITS_NPD = "12'b000000101000" *) (* TL_CREDITS_NPH = "8'b00100000" *) (* TL_CREDITS_PD = "12'b000110011000" *) 
(* TL_CREDITS_PH = "8'b00100000" *) (* TL_ENABLE_MESSAGE_RID_CHECK_ENABLE = "TRUE" *) (* TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE = "FALSE" *) 
(* TL_LEGACY_CFG_EXTEND_INTERFACE_ENABLE = "FALSE" *) (* TL_LEGACY_MODE_ENABLE = "FALSE" *) (* TL_PF_ENABLE_REG = "FALSE" *) 
(* TL_TAG_MGMT_ENABLE = "TRUE" *) (* TRANSCEIVER_CTRL_STATUS_PORTS = "FALSE" *) (* TX_FC_IF = "TRUE" *) 
(* TX_MARGIN_FULL_0 = "7'b1001111" *) (* TX_MARGIN_FULL_1 = "7'b1001110" *) (* TX_MARGIN_FULL_2 = "7'b1001101" *) 
(* TX_MARGIN_FULL_3 = "7'b1001100" *) (* TX_MARGIN_FULL_4 = "7'b1000011" *) (* TX_MARGIN_LOW_0 = "7'b1000101" *) 
(* TX_MARGIN_LOW_1 = "7'b1000110" *) (* TX_MARGIN_LOW_2 = "7'b1000011" *) (* TX_MARGIN_LOW_3 = "7'b1000010" *) 
(* TX_MARGIN_LOW_4 = "7'b1000000" *) (* USER_CLK2_FREQ = "3" *) (* USER_CLK_FREQ = "4" *) 
(* VF0_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* VF0_CAPABILITY_POINTER = "8'b10000000" *) (* VF0_MSIX_CAP_PBA_BIR = "0" *) 
(* VF0_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) (* VF0_MSIX_CAP_TABLE_BIR = "0" *) (* VF0_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
(* VF0_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* VF0_MSI_CAP_MULTIMSGCAP = "0" *) (* VF0_PM_CAP_ID = "8'b00000001" *) 
(* VF0_PM_CAP_NEXTPTR = "8'b00000000" *) (* VF0_PM_CAP_VER_ID = "3'b011" *) (* VF0_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
(* VF0_TPHR_CAP_ENABLE = "FALSE" *) (* VF0_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF0_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
(* VF0_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* VF0_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* VF0_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
(* VF0_TPHR_CAP_VER = "4'b0001" *) (* VF1_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* VF1_MSIX_CAP_PBA_BIR = "0" *) 
(* VF1_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) (* VF1_MSIX_CAP_TABLE_BIR = "0" *) (* VF1_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
(* VF1_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* VF1_MSI_CAP_MULTIMSGCAP = "0" *) (* VF1_PM_CAP_ID = "8'b00000001" *) 
(* VF1_PM_CAP_NEXTPTR = "8'b00000000" *) (* VF1_PM_CAP_VER_ID = "3'b011" *) (* VF1_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
(* VF1_TPHR_CAP_ENABLE = "FALSE" *) (* VF1_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF1_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
(* VF1_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* VF1_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* VF1_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
(* VF1_TPHR_CAP_VER = "4'b0001" *) (* VF2_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* VF2_MSIX_CAP_PBA_BIR = "0" *) 
(* VF2_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) (* VF2_MSIX_CAP_TABLE_BIR = "0" *) (* VF2_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
(* VF2_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* VF2_MSI_CAP_MULTIMSGCAP = "0" *) (* VF2_PM_CAP_ID = "8'b00000001" *) 
(* VF2_PM_CAP_NEXTPTR = "8'b00000000" *) (* VF2_PM_CAP_VER_ID = "3'b011" *) (* VF2_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
(* VF2_TPHR_CAP_ENABLE = "FALSE" *) (* VF2_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF2_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
(* VF2_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* VF2_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* VF2_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
(* VF2_TPHR_CAP_VER = "4'b0001" *) (* VF3_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* VF3_MSIX_CAP_PBA_BIR = "0" *) 
(* VF3_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) (* VF3_MSIX_CAP_TABLE_BIR = "0" *) (* VF3_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
(* VF3_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* VF3_MSI_CAP_MULTIMSGCAP = "0" *) (* VF3_PM_CAP_ID = "8'b00000001" *) 
(* VF3_PM_CAP_NEXTPTR = "8'b00000000" *) (* VF3_PM_CAP_VER_ID = "3'b011" *) (* VF3_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
(* VF3_TPHR_CAP_ENABLE = "FALSE" *) (* VF3_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF3_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
(* VF3_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* VF3_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* VF3_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
(* VF3_TPHR_CAP_VER = "4'b0001" *) (* VF4_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* VF4_MSIX_CAP_PBA_BIR = "0" *) 
(* VF4_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) (* VF4_MSIX_CAP_TABLE_BIR = "0" *) (* VF4_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
(* VF4_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* VF4_MSI_CAP_MULTIMSGCAP = "0" *) (* VF4_PM_CAP_ID = "8'b00000001" *) 
(* VF4_PM_CAP_NEXTPTR = "8'b00000000" *) (* VF4_PM_CAP_VER_ID = "3'b011" *) (* VF4_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
(* VF4_TPHR_CAP_ENABLE = "FALSE" *) (* VF4_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF4_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
(* VF4_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* VF4_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* VF4_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
(* VF4_TPHR_CAP_VER = "4'b0001" *) (* VF5_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* VF5_MSIX_CAP_PBA_BIR = "0" *) 
(* VF5_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000000000000" *) (* VF5_MSIX_CAP_TABLE_BIR = "0" *) (* VF5_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000000000000" *) 
(* VF5_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* VF5_MSI_CAP_MULTIMSGCAP = "0" *) (* VF5_PM_CAP_ID = "8'b00000001" *) 
(* VF5_PM_CAP_NEXTPTR = "8'b00000000" *) (* VF5_PM_CAP_VER_ID = "3'b011" *) (* VF5_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
(* VF5_TPHR_CAP_ENABLE = "FALSE" *) (* VF5_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF5_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
(* VF5_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* VF5_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* VF5_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
(* VF5_TPHR_CAP_VER = "4'b0001" *) (* WIN10_INTEROP = "FALSE" *) (* component_name = "pcie3_7x_v4_3_11" *) 
(* gen_x0y0_ucf = "0" *) (* gen_x0y1_ucf = "1" *) (* gen_x0y2_ucf = "0" *) 
(* gen_x0y3_ucf = "0" *) (* pcie_blk_locn = "1" *) (* silicon_revision = "Production" *) 
(* xlnx_ref_board = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_3_0_7vx
   (pci_exp_txn,
    pci_exp_txp,
    pci_exp_rxn,
    pci_exp_rxp,
    int_pclk_out_slave,
    int_pipe_rxusrclk_out,
    int_rxoutclk_out,
    int_dclk_out,
    int_userclk1_out,
    int_userclk2_out,
    int_oobclk_out,
    int_qplllock_out,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    int_pclk_sel_slave,
    pipe_pclk_in,
    pipe_rxusrclk_in,
    pipe_rxoutclk_in,
    pipe_dclk_in,
    pipe_userclk1_in,
    pipe_userclk2_in,
    pipe_oobclk_in,
    pipe_mmcm_lock_in,
    pipe_txoutclk_out,
    pipe_rxoutclk_out,
    pipe_pclk_sel_out,
    pipe_gen3_out,
    qpll_drp_crscode,
    qpll_drp_fsm,
    qpll_drp_done,
    qpll_drp_reset,
    qpll_qplllock,
    qpll_qplloutclk,
    qpll_qplloutrefclk,
    qpll_qplld,
    qpll_qpllreset,
    qpll_drp_clk,
    qpll_drp_rst_n,
    qpll_drp_ovrd,
    qpll_drp_gen3,
    qpll_drp_start,
    mmcm_lock,
    user_clk,
    user_reset,
    user_lnk_up,
    user_app_rdy,
    s_axis_rq_tlast,
    s_axis_rq_tdata,
    s_axis_rq_tuser,
    s_axis_rq_tkeep,
    s_axis_rq_tready,
    s_axis_rq_tvalid,
    m_axis_rc_tdata,
    m_axis_rc_tuser,
    m_axis_rc_tlast,
    m_axis_rc_tkeep,
    m_axis_rc_tvalid,
    m_axis_rc_tready,
    m_axis_cq_tdata,
    m_axis_cq_tuser,
    m_axis_cq_tlast,
    m_axis_cq_tkeep,
    m_axis_cq_tvalid,
    m_axis_cq_tready,
    s_axis_cc_tdata,
    s_axis_cc_tuser,
    s_axis_cc_tlast,
    s_axis_cc_tkeep,
    s_axis_cc_tvalid,
    s_axis_cc_tready,
    pcie_rq_seq_num,
    pcie_rq_seq_num_vld,
    pcie_rq_tag,
    pcie_rq_tag_vld,
    pcie_tfc_nph_av,
    pcie_tfc_npd_av,
    pcie_cq_np_req,
    pcie_cq_np_req_count,
    cfg_phy_link_down,
    cfg_phy_link_status,
    cfg_negotiated_width,
    cfg_current_speed,
    cfg_max_payload,
    cfg_max_read_req,
    cfg_function_status,
    cfg_function_power_state,
    cfg_vf_status,
    cfg_vf_power_state,
    cfg_link_power_state,
    cfg_mgmt_addr,
    cfg_mgmt_write,
    cfg_mgmt_write_data,
    cfg_mgmt_byte_enable,
    cfg_mgmt_read,
    cfg_mgmt_read_data,
    cfg_mgmt_read_write_done,
    cfg_mgmt_type1_cfg_reg_access,
    cfg_err_cor_out,
    cfg_err_nonfatal_out,
    cfg_err_fatal_out,
    cfg_ltr_enable,
    cfg_ltssm_state,
    cfg_rcb_status,
    cfg_dpa_substate_change,
    cfg_obff_enable,
    cfg_pl_status_change,
    cfg_tph_requester_enable,
    cfg_tph_st_mode,
    cfg_vf_tph_requester_enable,
    cfg_vf_tph_st_mode,
    cfg_msg_received,
    cfg_msg_received_data,
    cfg_msg_received_type,
    cfg_msg_transmit,
    cfg_msg_transmit_type,
    cfg_msg_transmit_data,
    cfg_msg_transmit_done,
    cfg_fc_ph,
    cfg_fc_pd,
    cfg_fc_nph,
    cfg_fc_npd,
    cfg_fc_cplh,
    cfg_fc_cpld,
    cfg_fc_sel,
    cfg_per_func_status_control,
    cfg_per_func_status_data,
    cfg_per_function_number,
    cfg_per_function_output_request,
    cfg_per_function_update_done,
    cfg_subsys_vend_id,
    cfg_dsn,
    cfg_power_state_change_ack,
    cfg_power_state_change_interrupt,
    cfg_err_cor_in,
    cfg_err_uncor_in,
    cfg_flr_in_process,
    cfg_flr_done,
    cfg_vf_flr_in_process,
    cfg_vf_flr_done,
    cfg_link_training_enable,
    cfg_ext_read_received,
    cfg_ext_write_received,
    cfg_ext_register_number,
    cfg_ext_function_number,
    cfg_ext_write_data,
    cfg_ext_write_byte_enable,
    cfg_ext_read_data,
    cfg_ext_read_data_valid,
    cfg_interrupt_int,
    cfg_interrupt_pending,
    cfg_interrupt_sent,
    cfg_interrupt_msi_enable,
    cfg_interrupt_msi_vf_enable,
    cfg_interrupt_msi_mmenable,
    cfg_interrupt_msi_mask_update,
    cfg_interrupt_msi_data,
    cfg_interrupt_msi_select,
    cfg_interrupt_msi_int,
    cfg_interrupt_msi_pending_status,
    cfg_interrupt_msi_sent,
    cfg_interrupt_msi_fail,
    cfg_interrupt_msix_enable,
    cfg_interrupt_msix_mask,
    cfg_interrupt_msix_vf_enable,
    cfg_interrupt_msix_vf_mask,
    cfg_interrupt_msix_data,
    cfg_interrupt_msix_address,
    cfg_interrupt_msix_int,
    cfg_interrupt_msix_sent,
    cfg_interrupt_msix_fail,
    cfg_interrupt_msi_attr,
    cfg_interrupt_msi_tph_present,
    cfg_interrupt_msi_tph_type,
    cfg_interrupt_msi_tph_st_tag,
    cfg_interrupt_msi_function_number,
    cfg_hot_reset_out,
    cfg_config_space_enable,
    cfg_req_pm_transition_l23_ready,
    cfg_hot_reset_in,
    cfg_ds_port_number,
    cfg_ds_bus_number,
    cfg_ds_device_number,
    cfg_ds_function_number,
    user_tph_stt_address,
    user_tph_function_num,
    user_tph_stt_read_data,
    user_tph_stt_read_data_valid,
    user_tph_stt_read_enable,
    sys_clk,
    sys_reset,
    pipe_mmcm_rst_n,
    pipe_txprbssel,
    pipe_rxprbssel,
    pipe_txprbsforceerr,
    pipe_rxprbscntreset,
    pipe_loopback,
    pipe_rxprbserr,
    pipe_txinhibit,
    pipe_rst_fsm,
    pipe_qrst_fsm,
    pipe_rate_fsm,
    pipe_sync_fsm_tx,
    pipe_sync_fsm_rx,
    pipe_drp_fsm,
    pipe_rst_idle,
    pipe_qrst_idle,
    pipe_rate_idle,
    pipe_eyescandataerror,
    pipe_rxstatus,
    pipe_dmonitorout,
    pipe_cpll_lock,
    pipe_qpll_lock,
    pipe_rxpmaresetdone,
    pipe_rxbufstatus,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_txdlysresetdone,
    pipe_rxphaligndone,
    pipe_rxdlysresetdone,
    pipe_rxsyncdone,
    pipe_rxdisperr,
    pipe_rxnotintable,
    pipe_rxcommadet,
    gt_ch_drp_rdy,
    pipe_debug_0,
    pipe_debug_1,
    pipe_debug_2,
    pipe_debug_3,
    pipe_debug_4,
    pipe_debug_5,
    pipe_debug_6,
    pipe_debug_7,
    pipe_debug_8,
    pipe_debug_9,
    pipe_debug,
    free_run_clock,
    common_commands_in,
    pipe_rx_0_sigs,
    pipe_rx_1_sigs,
    pipe_rx_2_sigs,
    pipe_rx_3_sigs,
    pipe_rx_4_sigs,
    pipe_rx_5_sigs,
    pipe_rx_6_sigs,
    pipe_rx_7_sigs,
    common_commands_out,
    pipe_tx_0_sigs,
    pipe_tx_1_sigs,
    pipe_tx_2_sigs,
    pipe_tx_3_sigs,
    pipe_tx_4_sigs,
    pipe_tx_5_sigs,
    pipe_tx_6_sigs,
    pipe_tx_7_sigs,
    ext_ch_gt_drpclk,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpen,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe,
    ext_ch_gt_drpdo,
    ext_ch_gt_drprdy,
    icap_clk,
    icap_csib,
    icap_rdwrb,
    icap_i,
    icap_o,
    pcie_drp_rdy,
    pcie_drp_do,
    pcie_drp_clk,
    pcie_drp_en,
    pcie_drp_we,
    pcie_drp_addr,
    pcie_drp_di,
    startup_eos_in,
    startup_cfgclk,
    startup_cfgmclk,
    startup_eos,
    startup_preq,
    startup_clk,
    startup_gsr,
    startup_gts,
    startup_keyclearb,
    startup_pack,
    startup_usrcclko,
    startup_usrcclkts,
    startup_usrdoneo,
    startup_usrdonets,
    cpllpd,
    txpd,
    rxpd,
    txpdelecidlemode,
    txdetectrx,
    txelecidle,
    qpllpd,
    powerdown);
  output [3:0]pci_exp_txn;
  output [3:0]pci_exp_txp;
  input [3:0]pci_exp_rxn;
  input [3:0]pci_exp_rxp;
  output int_pclk_out_slave;
  output int_pipe_rxusrclk_out;
  output [3:0]int_rxoutclk_out;
  output int_dclk_out;
  output int_userclk1_out;
  output int_userclk2_out;
  output int_oobclk_out;
  output [1:0]int_qplllock_out;
  output [1:0]int_qplloutclk_out;
  output [1:0]int_qplloutrefclk_out;
  input [3:0]int_pclk_sel_slave;
  input pipe_pclk_in;
  input pipe_rxusrclk_in;
  input [3:0]pipe_rxoutclk_in;
  input pipe_dclk_in;
  input pipe_userclk1_in;
  input pipe_userclk2_in;
  input pipe_oobclk_in;
  input pipe_mmcm_lock_in;
  output pipe_txoutclk_out;
  output [3:0]pipe_rxoutclk_out;
  output [3:0]pipe_pclk_sel_out;
  output pipe_gen3_out;
  input [11:0]qpll_drp_crscode;
  input [17:0]qpll_drp_fsm;
  input [1:0]qpll_drp_done;
  input [1:0]qpll_drp_reset;
  input [1:0]qpll_qplllock;
  input [1:0]qpll_qplloutclk;
  input [1:0]qpll_qplloutrefclk;
  output qpll_qplld;
  output [1:0]qpll_qpllreset;
  output qpll_drp_clk;
  output qpll_drp_rst_n;
  output qpll_drp_ovrd;
  output qpll_drp_gen3;
  output qpll_drp_start;
  output mmcm_lock;
  output user_clk;
  output user_reset;
  output user_lnk_up;
  output user_app_rdy;
  input s_axis_rq_tlast;
  input [127:0]s_axis_rq_tdata;
  input [59:0]s_axis_rq_tuser;
  input [3:0]s_axis_rq_tkeep;
  output [3:0]s_axis_rq_tready;
  input s_axis_rq_tvalid;
  output [127:0]m_axis_rc_tdata;
  output [74:0]m_axis_rc_tuser;
  output m_axis_rc_tlast;
  output [3:0]m_axis_rc_tkeep;
  output m_axis_rc_tvalid;
  input m_axis_rc_tready;
  output [127:0]m_axis_cq_tdata;
  output [84:0]m_axis_cq_tuser;
  output m_axis_cq_tlast;
  output [3:0]m_axis_cq_tkeep;
  output m_axis_cq_tvalid;
  input m_axis_cq_tready;
  input [127:0]s_axis_cc_tdata;
  input [32:0]s_axis_cc_tuser;
  input s_axis_cc_tlast;
  input [3:0]s_axis_cc_tkeep;
  input s_axis_cc_tvalid;
  output [3:0]s_axis_cc_tready;
  output [3:0]pcie_rq_seq_num;
  output pcie_rq_seq_num_vld;
  output [5:0]pcie_rq_tag;
  output pcie_rq_tag_vld;
  output [1:0]pcie_tfc_nph_av;
  output [1:0]pcie_tfc_npd_av;
  input pcie_cq_np_req;
  output [5:0]pcie_cq_np_req_count;
  output cfg_phy_link_down;
  output [1:0]cfg_phy_link_status;
  output [3:0]cfg_negotiated_width;
  output [2:0]cfg_current_speed;
  output [2:0]cfg_max_payload;
  output [2:0]cfg_max_read_req;
  output [7:0]cfg_function_status;
  output [5:0]cfg_function_power_state;
  output [11:0]cfg_vf_status;
  output [17:0]cfg_vf_power_state;
  output [1:0]cfg_link_power_state;
  input [18:0]cfg_mgmt_addr;
  input cfg_mgmt_write;
  input [31:0]cfg_mgmt_write_data;
  input [3:0]cfg_mgmt_byte_enable;
  input cfg_mgmt_read;
  output [31:0]cfg_mgmt_read_data;
  output cfg_mgmt_read_write_done;
  input cfg_mgmt_type1_cfg_reg_access;
  output cfg_err_cor_out;
  output cfg_err_nonfatal_out;
  output cfg_err_fatal_out;
  output cfg_ltr_enable;
  output [5:0]cfg_ltssm_state;
  output [1:0]cfg_rcb_status;
  output [1:0]cfg_dpa_substate_change;
  output [1:0]cfg_obff_enable;
  output cfg_pl_status_change;
  output [1:0]cfg_tph_requester_enable;
  output [5:0]cfg_tph_st_mode;
  output [5:0]cfg_vf_tph_requester_enable;
  output [17:0]cfg_vf_tph_st_mode;
  output cfg_msg_received;
  output [7:0]cfg_msg_received_data;
  output [4:0]cfg_msg_received_type;
  input cfg_msg_transmit;
  input [2:0]cfg_msg_transmit_type;
  input [31:0]cfg_msg_transmit_data;
  output cfg_msg_transmit_done;
  output [7:0]cfg_fc_ph;
  output [11:0]cfg_fc_pd;
  output [7:0]cfg_fc_nph;
  output [11:0]cfg_fc_npd;
  output [7:0]cfg_fc_cplh;
  output [11:0]cfg_fc_cpld;
  input [2:0]cfg_fc_sel;
  input [2:0]cfg_per_func_status_control;
  output [15:0]cfg_per_func_status_data;
  input [2:0]cfg_per_function_number;
  input cfg_per_function_output_request;
  output cfg_per_function_update_done;
  input [15:0]cfg_subsys_vend_id;
  input [63:0]cfg_dsn;
  input cfg_power_state_change_ack;
  output cfg_power_state_change_interrupt;
  input cfg_err_cor_in;
  input cfg_err_uncor_in;
  output [1:0]cfg_flr_in_process;
  input [1:0]cfg_flr_done;
  output [5:0]cfg_vf_flr_in_process;
  input [5:0]cfg_vf_flr_done;
  input cfg_link_training_enable;
  output cfg_ext_read_received;
  output cfg_ext_write_received;
  output [9:0]cfg_ext_register_number;
  output [7:0]cfg_ext_function_number;
  output [31:0]cfg_ext_write_data;
  output [3:0]cfg_ext_write_byte_enable;
  input [31:0]cfg_ext_read_data;
  input cfg_ext_read_data_valid;
  input [3:0]cfg_interrupt_int;
  input [1:0]cfg_interrupt_pending;
  output cfg_interrupt_sent;
  output [1:0]cfg_interrupt_msi_enable;
  output [5:0]cfg_interrupt_msi_vf_enable;
  output [5:0]cfg_interrupt_msi_mmenable;
  output cfg_interrupt_msi_mask_update;
  output [31:0]cfg_interrupt_msi_data;
  input [3:0]cfg_interrupt_msi_select;
  input [31:0]cfg_interrupt_msi_int;
  input [63:0]cfg_interrupt_msi_pending_status;
  output cfg_interrupt_msi_sent;
  output cfg_interrupt_msi_fail;
  output [1:0]cfg_interrupt_msix_enable;
  output [1:0]cfg_interrupt_msix_mask;
  output [5:0]cfg_interrupt_msix_vf_enable;
  output [5:0]cfg_interrupt_msix_vf_mask;
  input [31:0]cfg_interrupt_msix_data;
  input [63:0]cfg_interrupt_msix_address;
  input cfg_interrupt_msix_int;
  output cfg_interrupt_msix_sent;
  output cfg_interrupt_msix_fail;
  input [2:0]cfg_interrupt_msi_attr;
  input cfg_interrupt_msi_tph_present;
  input [1:0]cfg_interrupt_msi_tph_type;
  input [8:0]cfg_interrupt_msi_tph_st_tag;
  input [2:0]cfg_interrupt_msi_function_number;
  output cfg_hot_reset_out;
  input cfg_config_space_enable;
  input cfg_req_pm_transition_l23_ready;
  input cfg_hot_reset_in;
  input [7:0]cfg_ds_port_number;
  input [7:0]cfg_ds_bus_number;
  input [4:0]cfg_ds_device_number;
  input [2:0]cfg_ds_function_number;
  input [4:0]user_tph_stt_address;
  input [2:0]user_tph_function_num;
  output [31:0]user_tph_stt_read_data;
  output user_tph_stt_read_data_valid;
  input user_tph_stt_read_enable;
  input sys_clk;
  input sys_reset;
  input pipe_mmcm_rst_n;
  input [2:0]pipe_txprbssel;
  input [2:0]pipe_rxprbssel;
  input pipe_txprbsforceerr;
  input pipe_rxprbscntreset;
  input [2:0]pipe_loopback;
  output [3:0]pipe_rxprbserr;
  input [3:0]pipe_txinhibit;
  output [4:0]pipe_rst_fsm;
  output [11:0]pipe_qrst_fsm;
  output [19:0]pipe_rate_fsm;
  output [23:0]pipe_sync_fsm_tx;
  output [27:0]pipe_sync_fsm_rx;
  output [27:0]pipe_drp_fsm;
  output pipe_rst_idle;
  output pipe_qrst_idle;
  output pipe_rate_idle;
  output [3:0]pipe_eyescandataerror;
  output [11:0]pipe_rxstatus;
  output [59:0]pipe_dmonitorout;
  output [3:0]pipe_cpll_lock;
  output [0:0]pipe_qpll_lock;
  output [3:0]pipe_rxpmaresetdone;
  output [11:0]pipe_rxbufstatus;
  output [3:0]pipe_txphaligndone;
  output [3:0]pipe_txphinitdone;
  output [3:0]pipe_txdlysresetdone;
  output [3:0]pipe_rxphaligndone;
  output [3:0]pipe_rxdlysresetdone;
  output [3:0]pipe_rxsyncdone;
  output [31:0]pipe_rxdisperr;
  output [31:0]pipe_rxnotintable;
  output [3:0]pipe_rxcommadet;
  output [3:0]gt_ch_drp_rdy;
  output [3:0]pipe_debug_0;
  output [3:0]pipe_debug_1;
  output [3:0]pipe_debug_2;
  output [3:0]pipe_debug_3;
  output [3:0]pipe_debug_4;
  output [3:0]pipe_debug_5;
  output [3:0]pipe_debug_6;
  output [3:0]pipe_debug_7;
  output [3:0]pipe_debug_8;
  output [3:0]pipe_debug_9;
  output [31:0]pipe_debug;
  input free_run_clock;
  input [25:0]common_commands_in;
  input [83:0]pipe_rx_0_sigs;
  input [83:0]pipe_rx_1_sigs;
  input [83:0]pipe_rx_2_sigs;
  input [83:0]pipe_rx_3_sigs;
  input [83:0]pipe_rx_4_sigs;
  input [83:0]pipe_rx_5_sigs;
  input [83:0]pipe_rx_6_sigs;
  input [83:0]pipe_rx_7_sigs;
  output [25:0]common_commands_out;
  output [83:0]pipe_tx_0_sigs;
  output [83:0]pipe_tx_1_sigs;
  output [83:0]pipe_tx_2_sigs;
  output [83:0]pipe_tx_3_sigs;
  output [83:0]pipe_tx_4_sigs;
  output [83:0]pipe_tx_5_sigs;
  output [83:0]pipe_tx_6_sigs;
  output [83:0]pipe_tx_7_sigs;
  output ext_ch_gt_drpclk;
  input [35:0]ext_ch_gt_drpaddr;
  input [3:0]ext_ch_gt_drpen;
  input [63:0]ext_ch_gt_drpdi;
  input [3:0]ext_ch_gt_drpwe;
  output [63:0]ext_ch_gt_drpdo;
  output [3:0]ext_ch_gt_drprdy;
  input icap_clk;
  input icap_csib;
  input icap_rdwrb;
  input [31:0]icap_i;
  output [31:0]icap_o;
  output pcie_drp_rdy;
  output [15:0]pcie_drp_do;
  input pcie_drp_clk;
  input pcie_drp_en;
  input pcie_drp_we;
  input [10:0]pcie_drp_addr;
  input [15:0]pcie_drp_di;
  input startup_eos_in;
  output startup_cfgclk;
  output startup_cfgmclk;
  output startup_eos;
  output startup_preq;
  input startup_clk;
  input startup_gsr;
  input startup_gts;
  input startup_keyclearb;
  input startup_pack;
  input startup_usrcclko;
  input startup_usrcclkts;
  input startup_usrdoneo;
  input startup_usrdonets;
  input [3:0]cpllpd;
  input [7:0]txpd;
  input [7:0]rxpd;
  input [3:0]txpdelecidlemode;
  input [3:0]txdetectrx;
  input [3:0]txelecidle;
  input [0:0]qpllpd;
  input powerdown;

  wire \<const0> ;
  wire cfg_config_space_enable;
  wire [2:0]cfg_current_speed;
  wire [1:0]cfg_dpa_substate_change;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [7:0]cfg_ds_port_number;
  wire [63:0]cfg_dsn;
  wire cfg_err_cor_in;
  wire cfg_err_cor_out;
  wire cfg_err_fatal_out;
  wire cfg_err_nonfatal_out;
  wire cfg_err_uncor_in;
  wire [11:0]cfg_fc_cpld;
  wire [7:0]cfg_fc_cplh;
  wire [11:0]cfg_fc_npd;
  wire [7:0]cfg_fc_nph;
  wire [11:0]cfg_fc_pd;
  wire [7:0]cfg_fc_ph;
  wire [2:0]cfg_fc_sel;
  wire [1:0]cfg_flr_done;
  wire [1:0]cfg_flr_in_process;
  wire [5:0]cfg_function_power_state;
  wire [7:0]cfg_function_status;
  wire cfg_hot_reset_in;
  wire cfg_hot_reset_out;
  wire [3:0]cfg_interrupt_int;
  wire [2:0]cfg_interrupt_msi_attr;
  wire [31:0]cfg_interrupt_msi_data;
  wire [1:0]cfg_interrupt_msi_enable;
  wire cfg_interrupt_msi_fail;
  wire [2:0]cfg_interrupt_msi_function_number;
  wire [31:0]cfg_interrupt_msi_int;
  wire cfg_interrupt_msi_mask_update;
  wire [5:0]cfg_interrupt_msi_mmenable;
  wire [63:0]cfg_interrupt_msi_pending_status;
  wire [3:0]cfg_interrupt_msi_select;
  wire cfg_interrupt_msi_sent;
  wire cfg_interrupt_msi_tph_present;
  wire [8:0]cfg_interrupt_msi_tph_st_tag;
  wire [1:0]cfg_interrupt_msi_tph_type;
  wire [5:0]cfg_interrupt_msi_vf_enable;
  wire [1:0]cfg_interrupt_pending;
  wire cfg_interrupt_sent;
  wire [1:0]cfg_link_power_state;
  wire cfg_link_training_enable;
  wire cfg_ltr_enable;
  wire [5:0]cfg_ltssm_state;
  wire [2:0]cfg_max_payload;
  wire [2:0]cfg_max_read_req;
  wire [18:0]cfg_mgmt_addr;
  wire [3:0]cfg_mgmt_byte_enable;
  wire cfg_mgmt_read;
  wire [31:0]cfg_mgmt_read_data;
  wire cfg_mgmt_read_write_done;
  wire cfg_mgmt_type1_cfg_reg_access;
  wire cfg_mgmt_write;
  wire [31:0]cfg_mgmt_write_data;
  wire cfg_msg_received;
  wire [7:0]cfg_msg_received_data;
  wire [4:0]cfg_msg_received_type;
  wire cfg_msg_transmit;
  wire [31:0]cfg_msg_transmit_data;
  wire cfg_msg_transmit_done;
  wire [2:0]cfg_msg_transmit_type;
  wire [3:0]cfg_negotiated_width;
  wire [1:0]cfg_obff_enable;
  wire [2:0]cfg_per_func_status_control;
  wire [15:0]cfg_per_func_status_data;
  wire [2:0]cfg_per_function_number;
  wire cfg_per_function_output_request;
  wire cfg_per_function_update_done;
  wire cfg_phy_link_down;
  wire [1:0]cfg_phy_link_status;
  wire cfg_pl_status_change;
  wire cfg_power_state_change_ack;
  wire cfg_power_state_change_interrupt;
  wire [1:0]cfg_rcb_status;
  wire cfg_req_pm_transition_l23_ready;
  wire [15:0]cfg_subsys_vend_id;
  wire [1:0]cfg_tph_requester_enable;
  wire [5:0]cfg_tph_st_mode;
  wire [5:0]cfg_vf_flr_done;
  wire [5:0]cfg_vf_flr_in_process;
  wire [17:0]cfg_vf_power_state;
  wire [11:0]cfg_vf_status;
  wire [5:0]cfg_vf_tph_requester_enable;
  wire [17:0]cfg_vf_tph_st_mode;
  wire gt_top_i_n_0;
  wire gt_top_i_n_1;
  wire gt_top_i_n_10;
  wire gt_top_i_n_11;
  wire gt_top_i_n_12;
  wire gt_top_i_n_13;
  wire gt_top_i_n_14;
  wire gt_top_i_n_151;
  wire gt_top_i_n_152;
  wire gt_top_i_n_153;
  wire gt_top_i_n_154;
  wire gt_top_i_n_155;
  wire gt_top_i_n_156;
  wire gt_top_i_n_157;
  wire gt_top_i_n_158;
  wire gt_top_i_n_159;
  wire gt_top_i_n_16;
  wire gt_top_i_n_160;
  wire gt_top_i_n_161;
  wire gt_top_i_n_162;
  wire gt_top_i_n_17;
  wire gt_top_i_n_18;
  wire gt_top_i_n_19;
  wire gt_top_i_n_2;
  wire gt_top_i_n_20;
  wire gt_top_i_n_21;
  wire gt_top_i_n_22;
  wire gt_top_i_n_23;
  wire gt_top_i_n_24;
  wire gt_top_i_n_25;
  wire gt_top_i_n_26;
  wire gt_top_i_n_27;
  wire gt_top_i_n_28;
  wire gt_top_i_n_29;
  wire gt_top_i_n_3;
  wire gt_top_i_n_30;
  wire gt_top_i_n_31;
  wire gt_top_i_n_32;
  wire gt_top_i_n_34;
  wire gt_top_i_n_35;
  wire gt_top_i_n_36;
  wire gt_top_i_n_37;
  wire gt_top_i_n_38;
  wire gt_top_i_n_39;
  wire gt_top_i_n_4;
  wire gt_top_i_n_40;
  wire gt_top_i_n_41;
  wire gt_top_i_n_42;
  wire gt_top_i_n_43;
  wire gt_top_i_n_44;
  wire gt_top_i_n_45;
  wire gt_top_i_n_46;
  wire gt_top_i_n_47;
  wire gt_top_i_n_48;
  wire gt_top_i_n_49;
  wire gt_top_i_n_5;
  wire gt_top_i_n_50;
  wire gt_top_i_n_52;
  wire gt_top_i_n_53;
  wire gt_top_i_n_54;
  wire gt_top_i_n_55;
  wire gt_top_i_n_56;
  wire gt_top_i_n_57;
  wire gt_top_i_n_58;
  wire gt_top_i_n_59;
  wire gt_top_i_n_6;
  wire gt_top_i_n_60;
  wire gt_top_i_n_61;
  wire gt_top_i_n_62;
  wire gt_top_i_n_63;
  wire gt_top_i_n_64;
  wire gt_top_i_n_65;
  wire gt_top_i_n_66;
  wire gt_top_i_n_67;
  wire gt_top_i_n_68;
  wire gt_top_i_n_7;
  wire gt_top_i_n_70;
  wire gt_top_i_n_71;
  wire gt_top_i_n_72;
  wire gt_top_i_n_8;
  wire gt_top_i_n_9;
  wire [127:0]m_axis_cq_tdata;
  wire [3:0]m_axis_cq_tkeep;
  wire m_axis_cq_tlast;
  wire m_axis_cq_tready;
  wire [84:0]m_axis_cq_tuser;
  wire m_axis_cq_tvalid;
  wire [127:0]m_axis_rc_tdata;
  wire [3:0]m_axis_rc_tkeep;
  wire m_axis_rc_tlast;
  wire m_axis_rc_tready;
  wire [74:0]m_axis_rc_tuser;
  wire m_axis_rc_tvalid;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire pcie_cq_np_req;
  wire [5:0]pcie_cq_np_req_count;
  wire [3:0]pcie_rq_seq_num;
  wire pcie_rq_seq_num_vld;
  wire [5:0]pcie_rq_tag;
  wire pcie_rq_tag_vld;
  wire [1:0]pcie_tfc_npd_av;
  wire [1:0]pcie_tfc_nph_av;
  wire pcie_top_i_n_959;
  wire pcie_top_i_n_960;
  wire pipe_dclk_in;
  wire pipe_mmcm_lock_in;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire [1:0]pipe_rx0_char_is_k;
  wire [15:0]pipe_rx0_data;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_eq_adapt_done;
  wire [5:0]pipe_rx0_eq_lffs;
  wire pipe_rx0_eq_lffs_sel;
  wire [2:2]pipe_rx0_eq_new_txcoeff;
  wire [3:0]pipe_rx0_eq_txpreset;
  wire [1:0]pipe_rx0_eqcontrol;
  wire pipe_rx0_eqdone;
  wire [2:0]pipe_rx0_eqpreset;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_valid;
  wire [1:0]pipe_rx1_char_is_k;
  wire [15:0]pipe_rx1_data;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_eq_adapt_done;
  wire [5:0]pipe_rx1_eq_lffs;
  wire pipe_rx1_eq_lffs_sel;
  wire [2:2]pipe_rx1_eq_new_txcoeff;
  wire [3:0]pipe_rx1_eq_txpreset;
  wire [1:0]pipe_rx1_eqcontrol;
  wire pipe_rx1_eqdone;
  wire [2:0]pipe_rx1_eqpreset;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_polarity;
  wire pipe_rx1_valid;
  wire [1:0]pipe_rx2_char_is_k;
  wire [15:0]pipe_rx2_data;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_eq_adapt_done;
  wire [5:0]pipe_rx2_eq_lffs;
  wire pipe_rx2_eq_lffs_sel;
  wire [2:2]pipe_rx2_eq_new_txcoeff;
  wire [3:0]pipe_rx2_eq_txpreset;
  wire [1:0]pipe_rx2_eqcontrol;
  wire pipe_rx2_eqdone;
  wire [2:0]pipe_rx2_eqpreset;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_polarity;
  wire pipe_rx2_valid;
  wire [1:0]pipe_rx3_char_is_k;
  wire [15:0]pipe_rx3_data;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_eq_adapt_done;
  wire [5:0]pipe_rx3_eq_lffs;
  wire pipe_rx3_eq_lffs_sel;
  wire [2:2]pipe_rx3_eq_new_txcoeff;
  wire [3:0]pipe_rx3_eq_txpreset;
  wire [1:0]pipe_rx3_eqcontrol;
  wire pipe_rx3_eqdone;
  wire [2:0]pipe_rx3_eqpreset;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_polarity;
  wire pipe_rx3_valid;
  wire [3:0]pipe_rx_slide;
  wire [3:0]pipe_rx_syncdone;
  wire [3:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire [1:0]pipe_tx0_char_is_k;
  wire pipe_tx0_compliance;
  wire [15:0]pipe_tx0_data;
  wire pipe_tx0_elec_idle;
  wire [16:0]pipe_tx0_eqcoeff;
  wire [1:0]pipe_tx0_eqcontrol;
  wire [5:0]pipe_tx0_eqdeemph;
  wire pipe_tx0_eqdone;
  wire [3:0]pipe_tx0_eqpreset;
  wire [1:0]pipe_tx0_powerdown;
  wire [1:0]pipe_tx1_char_is_k;
  wire pipe_tx1_compliance;
  wire [15:0]pipe_tx1_data;
  wire pipe_tx1_elec_idle;
  wire [16:0]pipe_tx1_eqcoeff;
  wire [1:0]pipe_tx1_eqcontrol;
  wire [5:0]pipe_tx1_eqdeemph;
  wire pipe_tx1_eqdone;
  wire [3:0]pipe_tx1_eqpreset;
  wire [1:0]pipe_tx1_powerdown;
  wire [1:0]pipe_tx2_char_is_k;
  wire pipe_tx2_compliance;
  wire [15:0]pipe_tx2_data;
  wire pipe_tx2_elec_idle;
  wire [16:0]pipe_tx2_eqcoeff;
  wire [1:0]pipe_tx2_eqcontrol;
  wire [5:0]pipe_tx2_eqdeemph;
  wire pipe_tx2_eqdone;
  wire [3:0]pipe_tx2_eqpreset;
  wire [1:0]pipe_tx2_powerdown;
  wire [1:0]pipe_tx3_char_is_k;
  wire pipe_tx3_compliance;
  wire [15:0]pipe_tx3_data;
  wire pipe_tx3_elec_idle;
  wire [16:0]pipe_tx3_eqcoeff;
  wire [1:0]pipe_tx3_eqcontrol;
  wire [5:0]pipe_tx3_eqdeemph;
  wire pipe_tx3_eqdone;
  wire [3:0]pipe_tx3_eqpreset;
  wire [1:0]pipe_tx3_powerdown;
  wire pipe_tx_deemph;
  wire [2:0]pipe_tx_margin;
  wire [1:0]pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_swing;
  wire pipe_txoutclk_out;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire [127:0]s_axis_cc_tdata;
  wire [3:0]s_axis_cc_tkeep;
  wire s_axis_cc_tlast;
  wire [3:0]s_axis_cc_tready;
  wire [32:0]s_axis_cc_tuser;
  wire s_axis_cc_tvalid;
  wire [127:0]s_axis_rq_tdata;
  wire [3:0]s_axis_rq_tkeep;
  wire s_axis_rq_tlast;
  wire [3:0]s_axis_rq_tready;
  wire [59:0]s_axis_rq_tuser;
  wire s_axis_rq_tvalid;
  wire sys_clk;
  wire sys_reset;
  wire user_lnk_up;
  wire user_reset;
  wire user_reset_int;

  assign cfg_ext_function_number[7] = \<const0> ;
  assign cfg_ext_function_number[6] = \<const0> ;
  assign cfg_ext_function_number[5] = \<const0> ;
  assign cfg_ext_function_number[4] = \<const0> ;
  assign cfg_ext_function_number[3] = \<const0> ;
  assign cfg_ext_function_number[2] = \<const0> ;
  assign cfg_ext_function_number[1] = \<const0> ;
  assign cfg_ext_function_number[0] = \<const0> ;
  assign cfg_ext_read_received = \<const0> ;
  assign cfg_ext_register_number[9] = \<const0> ;
  assign cfg_ext_register_number[8] = \<const0> ;
  assign cfg_ext_register_number[7] = \<const0> ;
  assign cfg_ext_register_number[6] = \<const0> ;
  assign cfg_ext_register_number[5] = \<const0> ;
  assign cfg_ext_register_number[4] = \<const0> ;
  assign cfg_ext_register_number[3] = \<const0> ;
  assign cfg_ext_register_number[2] = \<const0> ;
  assign cfg_ext_register_number[1] = \<const0> ;
  assign cfg_ext_register_number[0] = \<const0> ;
  assign cfg_ext_write_byte_enable[3] = \<const0> ;
  assign cfg_ext_write_byte_enable[2] = \<const0> ;
  assign cfg_ext_write_byte_enable[1] = \<const0> ;
  assign cfg_ext_write_byte_enable[0] = \<const0> ;
  assign cfg_ext_write_data[31] = \<const0> ;
  assign cfg_ext_write_data[30] = \<const0> ;
  assign cfg_ext_write_data[29] = \<const0> ;
  assign cfg_ext_write_data[28] = \<const0> ;
  assign cfg_ext_write_data[27] = \<const0> ;
  assign cfg_ext_write_data[26] = \<const0> ;
  assign cfg_ext_write_data[25] = \<const0> ;
  assign cfg_ext_write_data[24] = \<const0> ;
  assign cfg_ext_write_data[23] = \<const0> ;
  assign cfg_ext_write_data[22] = \<const0> ;
  assign cfg_ext_write_data[21] = \<const0> ;
  assign cfg_ext_write_data[20] = \<const0> ;
  assign cfg_ext_write_data[19] = \<const0> ;
  assign cfg_ext_write_data[18] = \<const0> ;
  assign cfg_ext_write_data[17] = \<const0> ;
  assign cfg_ext_write_data[16] = \<const0> ;
  assign cfg_ext_write_data[15] = \<const0> ;
  assign cfg_ext_write_data[14] = \<const0> ;
  assign cfg_ext_write_data[13] = \<const0> ;
  assign cfg_ext_write_data[12] = \<const0> ;
  assign cfg_ext_write_data[11] = \<const0> ;
  assign cfg_ext_write_data[10] = \<const0> ;
  assign cfg_ext_write_data[9] = \<const0> ;
  assign cfg_ext_write_data[8] = \<const0> ;
  assign cfg_ext_write_data[7] = \<const0> ;
  assign cfg_ext_write_data[6] = \<const0> ;
  assign cfg_ext_write_data[5] = \<const0> ;
  assign cfg_ext_write_data[4] = \<const0> ;
  assign cfg_ext_write_data[3] = \<const0> ;
  assign cfg_ext_write_data[2] = \<const0> ;
  assign cfg_ext_write_data[1] = \<const0> ;
  assign cfg_ext_write_data[0] = \<const0> ;
  assign cfg_ext_write_received = \<const0> ;
  assign cfg_interrupt_msix_enable[1] = \<const0> ;
  assign cfg_interrupt_msix_enable[0] = \<const0> ;
  assign cfg_interrupt_msix_fail = \<const0> ;
  assign cfg_interrupt_msix_mask[1] = \<const0> ;
  assign cfg_interrupt_msix_mask[0] = \<const0> ;
  assign cfg_interrupt_msix_sent = \<const0> ;
  assign cfg_interrupt_msix_vf_enable[5] = \<const0> ;
  assign cfg_interrupt_msix_vf_enable[4] = \<const0> ;
  assign cfg_interrupt_msix_vf_enable[3] = \<const0> ;
  assign cfg_interrupt_msix_vf_enable[2] = \<const0> ;
  assign cfg_interrupt_msix_vf_enable[1] = \<const0> ;
  assign cfg_interrupt_msix_vf_enable[0] = \<const0> ;
  assign cfg_interrupt_msix_vf_mask[5] = \<const0> ;
  assign cfg_interrupt_msix_vf_mask[4] = \<const0> ;
  assign cfg_interrupt_msix_vf_mask[3] = \<const0> ;
  assign cfg_interrupt_msix_vf_mask[2] = \<const0> ;
  assign cfg_interrupt_msix_vf_mask[1] = \<const0> ;
  assign cfg_interrupt_msix_vf_mask[0] = \<const0> ;
  assign common_commands_out[25] = \<const0> ;
  assign common_commands_out[24] = \<const0> ;
  assign common_commands_out[23] = \<const0> ;
  assign common_commands_out[22] = \<const0> ;
  assign common_commands_out[21] = \<const0> ;
  assign common_commands_out[20] = \<const0> ;
  assign common_commands_out[19] = \<const0> ;
  assign common_commands_out[18] = \<const0> ;
  assign common_commands_out[17] = \<const0> ;
  assign common_commands_out[16] = \<const0> ;
  assign common_commands_out[15] = \<const0> ;
  assign common_commands_out[14] = \<const0> ;
  assign common_commands_out[13] = \<const0> ;
  assign common_commands_out[12] = \<const0> ;
  assign common_commands_out[11] = \<const0> ;
  assign common_commands_out[10] = \<const0> ;
  assign common_commands_out[9] = \<const0> ;
  assign common_commands_out[8] = \<const0> ;
  assign common_commands_out[7] = \<const0> ;
  assign common_commands_out[6] = \<const0> ;
  assign common_commands_out[5] = \<const0> ;
  assign common_commands_out[4] = \<const0> ;
  assign common_commands_out[3] = \<const0> ;
  assign common_commands_out[2] = \<const0> ;
  assign common_commands_out[1] = \<const0> ;
  assign common_commands_out[0] = \<const0> ;
  assign ext_ch_gt_drpclk = \<const0> ;
  assign ext_ch_gt_drpdo[63] = \<const0> ;
  assign ext_ch_gt_drpdo[62] = \<const0> ;
  assign ext_ch_gt_drpdo[61] = \<const0> ;
  assign ext_ch_gt_drpdo[60] = \<const0> ;
  assign ext_ch_gt_drpdo[59] = \<const0> ;
  assign ext_ch_gt_drpdo[58] = \<const0> ;
  assign ext_ch_gt_drpdo[57] = \<const0> ;
  assign ext_ch_gt_drpdo[56] = \<const0> ;
  assign ext_ch_gt_drpdo[55] = \<const0> ;
  assign ext_ch_gt_drpdo[54] = \<const0> ;
  assign ext_ch_gt_drpdo[53] = \<const0> ;
  assign ext_ch_gt_drpdo[52] = \<const0> ;
  assign ext_ch_gt_drpdo[51] = \<const0> ;
  assign ext_ch_gt_drpdo[50] = \<const0> ;
  assign ext_ch_gt_drpdo[49] = \<const0> ;
  assign ext_ch_gt_drpdo[48] = \<const0> ;
  assign ext_ch_gt_drpdo[47] = \<const0> ;
  assign ext_ch_gt_drpdo[46] = \<const0> ;
  assign ext_ch_gt_drpdo[45] = \<const0> ;
  assign ext_ch_gt_drpdo[44] = \<const0> ;
  assign ext_ch_gt_drpdo[43] = \<const0> ;
  assign ext_ch_gt_drpdo[42] = \<const0> ;
  assign ext_ch_gt_drpdo[41] = \<const0> ;
  assign ext_ch_gt_drpdo[40] = \<const0> ;
  assign ext_ch_gt_drpdo[39] = \<const0> ;
  assign ext_ch_gt_drpdo[38] = \<const0> ;
  assign ext_ch_gt_drpdo[37] = \<const0> ;
  assign ext_ch_gt_drpdo[36] = \<const0> ;
  assign ext_ch_gt_drpdo[35] = \<const0> ;
  assign ext_ch_gt_drpdo[34] = \<const0> ;
  assign ext_ch_gt_drpdo[33] = \<const0> ;
  assign ext_ch_gt_drpdo[32] = \<const0> ;
  assign ext_ch_gt_drpdo[31] = \<const0> ;
  assign ext_ch_gt_drpdo[30] = \<const0> ;
  assign ext_ch_gt_drpdo[29] = \<const0> ;
  assign ext_ch_gt_drpdo[28] = \<const0> ;
  assign ext_ch_gt_drpdo[27] = \<const0> ;
  assign ext_ch_gt_drpdo[26] = \<const0> ;
  assign ext_ch_gt_drpdo[25] = \<const0> ;
  assign ext_ch_gt_drpdo[24] = \<const0> ;
  assign ext_ch_gt_drpdo[23] = \<const0> ;
  assign ext_ch_gt_drpdo[22] = \<const0> ;
  assign ext_ch_gt_drpdo[21] = \<const0> ;
  assign ext_ch_gt_drpdo[20] = \<const0> ;
  assign ext_ch_gt_drpdo[19] = \<const0> ;
  assign ext_ch_gt_drpdo[18] = \<const0> ;
  assign ext_ch_gt_drpdo[17] = \<const0> ;
  assign ext_ch_gt_drpdo[16] = \<const0> ;
  assign ext_ch_gt_drpdo[15] = \<const0> ;
  assign ext_ch_gt_drpdo[14] = \<const0> ;
  assign ext_ch_gt_drpdo[13] = \<const0> ;
  assign ext_ch_gt_drpdo[12] = \<const0> ;
  assign ext_ch_gt_drpdo[11] = \<const0> ;
  assign ext_ch_gt_drpdo[10] = \<const0> ;
  assign ext_ch_gt_drpdo[9] = \<const0> ;
  assign ext_ch_gt_drpdo[8] = \<const0> ;
  assign ext_ch_gt_drpdo[7] = \<const0> ;
  assign ext_ch_gt_drpdo[6] = \<const0> ;
  assign ext_ch_gt_drpdo[5] = \<const0> ;
  assign ext_ch_gt_drpdo[4] = \<const0> ;
  assign ext_ch_gt_drpdo[3] = \<const0> ;
  assign ext_ch_gt_drpdo[2] = \<const0> ;
  assign ext_ch_gt_drpdo[1] = \<const0> ;
  assign ext_ch_gt_drpdo[0] = \<const0> ;
  assign ext_ch_gt_drprdy[3] = \<const0> ;
  assign ext_ch_gt_drprdy[2] = \<const0> ;
  assign ext_ch_gt_drprdy[1] = \<const0> ;
  assign ext_ch_gt_drprdy[0] = \<const0> ;
  assign gt_ch_drp_rdy[3] = \<const0> ;
  assign gt_ch_drp_rdy[2] = \<const0> ;
  assign gt_ch_drp_rdy[1] = \<const0> ;
  assign gt_ch_drp_rdy[0] = \<const0> ;
  assign icap_o[31] = \<const0> ;
  assign icap_o[30] = \<const0> ;
  assign icap_o[29] = \<const0> ;
  assign icap_o[28] = \<const0> ;
  assign icap_o[27] = \<const0> ;
  assign icap_o[26] = \<const0> ;
  assign icap_o[25] = \<const0> ;
  assign icap_o[24] = \<const0> ;
  assign icap_o[23] = \<const0> ;
  assign icap_o[22] = \<const0> ;
  assign icap_o[21] = \<const0> ;
  assign icap_o[20] = \<const0> ;
  assign icap_o[19] = \<const0> ;
  assign icap_o[18] = \<const0> ;
  assign icap_o[17] = \<const0> ;
  assign icap_o[16] = \<const0> ;
  assign icap_o[15] = \<const0> ;
  assign icap_o[14] = \<const0> ;
  assign icap_o[13] = \<const0> ;
  assign icap_o[12] = \<const0> ;
  assign icap_o[11] = \<const0> ;
  assign icap_o[10] = \<const0> ;
  assign icap_o[9] = \<const0> ;
  assign icap_o[8] = \<const0> ;
  assign icap_o[7] = \<const0> ;
  assign icap_o[6] = \<const0> ;
  assign icap_o[5] = \<const0> ;
  assign icap_o[4] = \<const0> ;
  assign icap_o[3] = \<const0> ;
  assign icap_o[2] = \<const0> ;
  assign icap_o[1] = \<const0> ;
  assign icap_o[0] = \<const0> ;
  assign int_dclk_out = \<const0> ;
  assign int_oobclk_out = \<const0> ;
  assign int_pclk_out_slave = \<const0> ;
  assign int_pipe_rxusrclk_out = \<const0> ;
  assign int_qplllock_out[1] = \<const0> ;
  assign int_qplllock_out[0] = \<const0> ;
  assign int_qplloutclk_out[1] = \<const0> ;
  assign int_qplloutclk_out[0] = \<const0> ;
  assign int_qplloutrefclk_out[1] = \<const0> ;
  assign int_qplloutrefclk_out[0] = \<const0> ;
  assign int_rxoutclk_out[3] = \<const0> ;
  assign int_rxoutclk_out[2] = \<const0> ;
  assign int_rxoutclk_out[1] = \<const0> ;
  assign int_rxoutclk_out[0] = \<const0> ;
  assign int_userclk1_out = \<const0> ;
  assign int_userclk2_out = \<const0> ;
  assign mmcm_lock = pipe_mmcm_lock_in;
  assign pcie_drp_do[15] = \<const0> ;
  assign pcie_drp_do[14] = \<const0> ;
  assign pcie_drp_do[13] = \<const0> ;
  assign pcie_drp_do[12] = \<const0> ;
  assign pcie_drp_do[11] = \<const0> ;
  assign pcie_drp_do[10] = \<const0> ;
  assign pcie_drp_do[9] = \<const0> ;
  assign pcie_drp_do[8] = \<const0> ;
  assign pcie_drp_do[7] = \<const0> ;
  assign pcie_drp_do[6] = \<const0> ;
  assign pcie_drp_do[5] = \<const0> ;
  assign pcie_drp_do[4] = \<const0> ;
  assign pcie_drp_do[3] = \<const0> ;
  assign pcie_drp_do[2] = \<const0> ;
  assign pcie_drp_do[1] = \<const0> ;
  assign pcie_drp_do[0] = \<const0> ;
  assign pcie_drp_rdy = \<const0> ;
  assign pipe_cpll_lock[3] = \<const0> ;
  assign pipe_cpll_lock[2] = \<const0> ;
  assign pipe_cpll_lock[1] = \<const0> ;
  assign pipe_cpll_lock[0] = \<const0> ;
  assign pipe_debug[31] = \<const0> ;
  assign pipe_debug[30] = \<const0> ;
  assign pipe_debug[29] = \<const0> ;
  assign pipe_debug[28] = \<const0> ;
  assign pipe_debug[27] = \<const0> ;
  assign pipe_debug[26] = \<const0> ;
  assign pipe_debug[25] = \<const0> ;
  assign pipe_debug[24] = \<const0> ;
  assign pipe_debug[23] = \<const0> ;
  assign pipe_debug[22] = \<const0> ;
  assign pipe_debug[21] = \<const0> ;
  assign pipe_debug[20] = \<const0> ;
  assign pipe_debug[19] = \<const0> ;
  assign pipe_debug[18] = \<const0> ;
  assign pipe_debug[17] = \<const0> ;
  assign pipe_debug[16] = \<const0> ;
  assign pipe_debug[15] = \<const0> ;
  assign pipe_debug[14] = \<const0> ;
  assign pipe_debug[13] = \<const0> ;
  assign pipe_debug[12] = \<const0> ;
  assign pipe_debug[11] = \<const0> ;
  assign pipe_debug[10] = \<const0> ;
  assign pipe_debug[9] = \<const0> ;
  assign pipe_debug[8] = \<const0> ;
  assign pipe_debug[7] = \<const0> ;
  assign pipe_debug[6] = \<const0> ;
  assign pipe_debug[5] = \<const0> ;
  assign pipe_debug[4] = \<const0> ;
  assign pipe_debug[3] = \<const0> ;
  assign pipe_debug[2] = \<const0> ;
  assign pipe_debug[1] = \<const0> ;
  assign pipe_debug[0] = \<const0> ;
  assign pipe_debug_0[3] = \<const0> ;
  assign pipe_debug_0[2] = \<const0> ;
  assign pipe_debug_0[1] = \<const0> ;
  assign pipe_debug_0[0] = \<const0> ;
  assign pipe_debug_1[3] = \<const0> ;
  assign pipe_debug_1[2] = \<const0> ;
  assign pipe_debug_1[1] = \<const0> ;
  assign pipe_debug_1[0] = \<const0> ;
  assign pipe_debug_2[3] = \<const0> ;
  assign pipe_debug_2[2] = \<const0> ;
  assign pipe_debug_2[1] = \<const0> ;
  assign pipe_debug_2[0] = \<const0> ;
  assign pipe_debug_3[3] = \<const0> ;
  assign pipe_debug_3[2] = \<const0> ;
  assign pipe_debug_3[1] = \<const0> ;
  assign pipe_debug_3[0] = \<const0> ;
  assign pipe_debug_4[3] = \<const0> ;
  assign pipe_debug_4[2] = \<const0> ;
  assign pipe_debug_4[1] = \<const0> ;
  assign pipe_debug_4[0] = \<const0> ;
  assign pipe_debug_5[3] = \<const0> ;
  assign pipe_debug_5[2] = \<const0> ;
  assign pipe_debug_5[1] = \<const0> ;
  assign pipe_debug_5[0] = \<const0> ;
  assign pipe_debug_6[3] = \<const0> ;
  assign pipe_debug_6[2] = \<const0> ;
  assign pipe_debug_6[1] = \<const0> ;
  assign pipe_debug_6[0] = \<const0> ;
  assign pipe_debug_7[3] = \<const0> ;
  assign pipe_debug_7[2] = \<const0> ;
  assign pipe_debug_7[1] = \<const0> ;
  assign pipe_debug_7[0] = \<const0> ;
  assign pipe_debug_8[3] = \<const0> ;
  assign pipe_debug_8[2] = \<const0> ;
  assign pipe_debug_8[1] = \<const0> ;
  assign pipe_debug_8[0] = \<const0> ;
  assign pipe_debug_9[3] = \<const0> ;
  assign pipe_debug_9[2] = \<const0> ;
  assign pipe_debug_9[1] = \<const0> ;
  assign pipe_debug_9[0] = \<const0> ;
  assign pipe_dmonitorout[59] = \<const0> ;
  assign pipe_dmonitorout[58] = \<const0> ;
  assign pipe_dmonitorout[57] = \<const0> ;
  assign pipe_dmonitorout[56] = \<const0> ;
  assign pipe_dmonitorout[55] = \<const0> ;
  assign pipe_dmonitorout[54] = \<const0> ;
  assign pipe_dmonitorout[53] = \<const0> ;
  assign pipe_dmonitorout[52] = \<const0> ;
  assign pipe_dmonitorout[51] = \<const0> ;
  assign pipe_dmonitorout[50] = \<const0> ;
  assign pipe_dmonitorout[49] = \<const0> ;
  assign pipe_dmonitorout[48] = \<const0> ;
  assign pipe_dmonitorout[47] = \<const0> ;
  assign pipe_dmonitorout[46] = \<const0> ;
  assign pipe_dmonitorout[45] = \<const0> ;
  assign pipe_dmonitorout[44] = \<const0> ;
  assign pipe_dmonitorout[43] = \<const0> ;
  assign pipe_dmonitorout[42] = \<const0> ;
  assign pipe_dmonitorout[41] = \<const0> ;
  assign pipe_dmonitorout[40] = \<const0> ;
  assign pipe_dmonitorout[39] = \<const0> ;
  assign pipe_dmonitorout[38] = \<const0> ;
  assign pipe_dmonitorout[37] = \<const0> ;
  assign pipe_dmonitorout[36] = \<const0> ;
  assign pipe_dmonitorout[35] = \<const0> ;
  assign pipe_dmonitorout[34] = \<const0> ;
  assign pipe_dmonitorout[33] = \<const0> ;
  assign pipe_dmonitorout[32] = \<const0> ;
  assign pipe_dmonitorout[31] = \<const0> ;
  assign pipe_dmonitorout[30] = \<const0> ;
  assign pipe_dmonitorout[29] = \<const0> ;
  assign pipe_dmonitorout[28] = \<const0> ;
  assign pipe_dmonitorout[27] = \<const0> ;
  assign pipe_dmonitorout[26] = \<const0> ;
  assign pipe_dmonitorout[25] = \<const0> ;
  assign pipe_dmonitorout[24] = \<const0> ;
  assign pipe_dmonitorout[23] = \<const0> ;
  assign pipe_dmonitorout[22] = \<const0> ;
  assign pipe_dmonitorout[21] = \<const0> ;
  assign pipe_dmonitorout[20] = \<const0> ;
  assign pipe_dmonitorout[19] = \<const0> ;
  assign pipe_dmonitorout[18] = \<const0> ;
  assign pipe_dmonitorout[17] = \<const0> ;
  assign pipe_dmonitorout[16] = \<const0> ;
  assign pipe_dmonitorout[15] = \<const0> ;
  assign pipe_dmonitorout[14] = \<const0> ;
  assign pipe_dmonitorout[13] = \<const0> ;
  assign pipe_dmonitorout[12] = \<const0> ;
  assign pipe_dmonitorout[11] = \<const0> ;
  assign pipe_dmonitorout[10] = \<const0> ;
  assign pipe_dmonitorout[9] = \<const0> ;
  assign pipe_dmonitorout[8] = \<const0> ;
  assign pipe_dmonitorout[7] = \<const0> ;
  assign pipe_dmonitorout[6] = \<const0> ;
  assign pipe_dmonitorout[5] = \<const0> ;
  assign pipe_dmonitorout[4] = \<const0> ;
  assign pipe_dmonitorout[3] = \<const0> ;
  assign pipe_dmonitorout[2] = \<const0> ;
  assign pipe_dmonitorout[1] = \<const0> ;
  assign pipe_dmonitorout[0] = \<const0> ;
  assign pipe_drp_fsm[27] = \<const0> ;
  assign pipe_drp_fsm[26] = \<const0> ;
  assign pipe_drp_fsm[25] = \<const0> ;
  assign pipe_drp_fsm[24] = \<const0> ;
  assign pipe_drp_fsm[23] = \<const0> ;
  assign pipe_drp_fsm[22] = \<const0> ;
  assign pipe_drp_fsm[21] = \<const0> ;
  assign pipe_drp_fsm[20] = \<const0> ;
  assign pipe_drp_fsm[19] = \<const0> ;
  assign pipe_drp_fsm[18] = \<const0> ;
  assign pipe_drp_fsm[17] = \<const0> ;
  assign pipe_drp_fsm[16] = \<const0> ;
  assign pipe_drp_fsm[15] = \<const0> ;
  assign pipe_drp_fsm[14] = \<const0> ;
  assign pipe_drp_fsm[13] = \<const0> ;
  assign pipe_drp_fsm[12] = \<const0> ;
  assign pipe_drp_fsm[11] = \<const0> ;
  assign pipe_drp_fsm[10] = \<const0> ;
  assign pipe_drp_fsm[9] = \<const0> ;
  assign pipe_drp_fsm[8] = \<const0> ;
  assign pipe_drp_fsm[7] = \<const0> ;
  assign pipe_drp_fsm[6] = \<const0> ;
  assign pipe_drp_fsm[5] = \<const0> ;
  assign pipe_drp_fsm[4] = \<const0> ;
  assign pipe_drp_fsm[3] = \<const0> ;
  assign pipe_drp_fsm[2] = \<const0> ;
  assign pipe_drp_fsm[1] = \<const0> ;
  assign pipe_drp_fsm[0] = \<const0> ;
  assign pipe_eyescandataerror[3] = \<const0> ;
  assign pipe_eyescandataerror[2] = \<const0> ;
  assign pipe_eyescandataerror[1] = \<const0> ;
  assign pipe_eyescandataerror[0] = \<const0> ;
  assign pipe_gen3_out = \<const0> ;
  assign pipe_qpll_lock[0] = \<const0> ;
  assign pipe_qrst_fsm[11] = \<const0> ;
  assign pipe_qrst_fsm[10] = \<const0> ;
  assign pipe_qrst_fsm[9] = \<const0> ;
  assign pipe_qrst_fsm[8] = \<const0> ;
  assign pipe_qrst_fsm[7] = \<const0> ;
  assign pipe_qrst_fsm[6] = \<const0> ;
  assign pipe_qrst_fsm[5] = \<const0> ;
  assign pipe_qrst_fsm[4] = \<const0> ;
  assign pipe_qrst_fsm[3] = \<const0> ;
  assign pipe_qrst_fsm[2] = \<const0> ;
  assign pipe_qrst_fsm[1] = \<const0> ;
  assign pipe_qrst_fsm[0] = \<const0> ;
  assign pipe_qrst_idle = \<const0> ;
  assign pipe_rate_fsm[19] = \<const0> ;
  assign pipe_rate_fsm[18] = \<const0> ;
  assign pipe_rate_fsm[17] = \<const0> ;
  assign pipe_rate_fsm[16] = \<const0> ;
  assign pipe_rate_fsm[15] = \<const0> ;
  assign pipe_rate_fsm[14] = \<const0> ;
  assign pipe_rate_fsm[13] = \<const0> ;
  assign pipe_rate_fsm[12] = \<const0> ;
  assign pipe_rate_fsm[11] = \<const0> ;
  assign pipe_rate_fsm[10] = \<const0> ;
  assign pipe_rate_fsm[9] = \<const0> ;
  assign pipe_rate_fsm[8] = \<const0> ;
  assign pipe_rate_fsm[7] = \<const0> ;
  assign pipe_rate_fsm[6] = \<const0> ;
  assign pipe_rate_fsm[5] = \<const0> ;
  assign pipe_rate_fsm[4] = \<const0> ;
  assign pipe_rate_fsm[3] = \<const0> ;
  assign pipe_rate_fsm[2] = \<const0> ;
  assign pipe_rate_fsm[1] = \<const0> ;
  assign pipe_rate_fsm[0] = \<const0> ;
  assign pipe_rate_idle = \<const0> ;
  assign pipe_rst_fsm[4] = \<const0> ;
  assign pipe_rst_fsm[3] = \<const0> ;
  assign pipe_rst_fsm[2] = \<const0> ;
  assign pipe_rst_fsm[1] = \<const0> ;
  assign pipe_rst_fsm[0] = \<const0> ;
  assign pipe_rst_idle = \<const0> ;
  assign pipe_rxbufstatus[11] = \<const0> ;
  assign pipe_rxbufstatus[10] = \<const0> ;
  assign pipe_rxbufstatus[9] = \<const0> ;
  assign pipe_rxbufstatus[8] = \<const0> ;
  assign pipe_rxbufstatus[7] = \<const0> ;
  assign pipe_rxbufstatus[6] = \<const0> ;
  assign pipe_rxbufstatus[5] = \<const0> ;
  assign pipe_rxbufstatus[4] = \<const0> ;
  assign pipe_rxbufstatus[3] = \<const0> ;
  assign pipe_rxbufstatus[2] = \<const0> ;
  assign pipe_rxbufstatus[1] = \<const0> ;
  assign pipe_rxbufstatus[0] = \<const0> ;
  assign pipe_rxcommadet[3] = \<const0> ;
  assign pipe_rxcommadet[2] = \<const0> ;
  assign pipe_rxcommadet[1] = \<const0> ;
  assign pipe_rxcommadet[0] = \<const0> ;
  assign pipe_rxdisperr[31] = \<const0> ;
  assign pipe_rxdisperr[30] = \<const0> ;
  assign pipe_rxdisperr[29] = \<const0> ;
  assign pipe_rxdisperr[28] = \<const0> ;
  assign pipe_rxdisperr[27] = \<const0> ;
  assign pipe_rxdisperr[26] = \<const0> ;
  assign pipe_rxdisperr[25] = \<const0> ;
  assign pipe_rxdisperr[24] = \<const0> ;
  assign pipe_rxdisperr[23] = \<const0> ;
  assign pipe_rxdisperr[22] = \<const0> ;
  assign pipe_rxdisperr[21] = \<const0> ;
  assign pipe_rxdisperr[20] = \<const0> ;
  assign pipe_rxdisperr[19] = \<const0> ;
  assign pipe_rxdisperr[18] = \<const0> ;
  assign pipe_rxdisperr[17] = \<const0> ;
  assign pipe_rxdisperr[16] = \<const0> ;
  assign pipe_rxdisperr[15] = \<const0> ;
  assign pipe_rxdisperr[14] = \<const0> ;
  assign pipe_rxdisperr[13] = \<const0> ;
  assign pipe_rxdisperr[12] = \<const0> ;
  assign pipe_rxdisperr[11] = \<const0> ;
  assign pipe_rxdisperr[10] = \<const0> ;
  assign pipe_rxdisperr[9] = \<const0> ;
  assign pipe_rxdisperr[8] = \<const0> ;
  assign pipe_rxdisperr[7] = \<const0> ;
  assign pipe_rxdisperr[6] = \<const0> ;
  assign pipe_rxdisperr[5] = \<const0> ;
  assign pipe_rxdisperr[4] = \<const0> ;
  assign pipe_rxdisperr[3] = \<const0> ;
  assign pipe_rxdisperr[2] = \<const0> ;
  assign pipe_rxdisperr[1] = \<const0> ;
  assign pipe_rxdisperr[0] = \<const0> ;
  assign pipe_rxdlysresetdone[3] = \<const0> ;
  assign pipe_rxdlysresetdone[2] = \<const0> ;
  assign pipe_rxdlysresetdone[1] = \<const0> ;
  assign pipe_rxdlysresetdone[0] = \<const0> ;
  assign pipe_rxnotintable[31] = \<const0> ;
  assign pipe_rxnotintable[30] = \<const0> ;
  assign pipe_rxnotintable[29] = \<const0> ;
  assign pipe_rxnotintable[28] = \<const0> ;
  assign pipe_rxnotintable[27] = \<const0> ;
  assign pipe_rxnotintable[26] = \<const0> ;
  assign pipe_rxnotintable[25] = \<const0> ;
  assign pipe_rxnotintable[24] = \<const0> ;
  assign pipe_rxnotintable[23] = \<const0> ;
  assign pipe_rxnotintable[22] = \<const0> ;
  assign pipe_rxnotintable[21] = \<const0> ;
  assign pipe_rxnotintable[20] = \<const0> ;
  assign pipe_rxnotintable[19] = \<const0> ;
  assign pipe_rxnotintable[18] = \<const0> ;
  assign pipe_rxnotintable[17] = \<const0> ;
  assign pipe_rxnotintable[16] = \<const0> ;
  assign pipe_rxnotintable[15] = \<const0> ;
  assign pipe_rxnotintable[14] = \<const0> ;
  assign pipe_rxnotintable[13] = \<const0> ;
  assign pipe_rxnotintable[12] = \<const0> ;
  assign pipe_rxnotintable[11] = \<const0> ;
  assign pipe_rxnotintable[10] = \<const0> ;
  assign pipe_rxnotintable[9] = \<const0> ;
  assign pipe_rxnotintable[8] = \<const0> ;
  assign pipe_rxnotintable[7] = \<const0> ;
  assign pipe_rxnotintable[6] = \<const0> ;
  assign pipe_rxnotintable[5] = \<const0> ;
  assign pipe_rxnotintable[4] = \<const0> ;
  assign pipe_rxnotintable[3] = \<const0> ;
  assign pipe_rxnotintable[2] = \<const0> ;
  assign pipe_rxnotintable[1] = \<const0> ;
  assign pipe_rxnotintable[0] = \<const0> ;
  assign pipe_rxphaligndone[3] = \<const0> ;
  assign pipe_rxphaligndone[2] = \<const0> ;
  assign pipe_rxphaligndone[1] = \<const0> ;
  assign pipe_rxphaligndone[0] = \<const0> ;
  assign pipe_rxpmaresetdone[3] = \<const0> ;
  assign pipe_rxpmaresetdone[2] = \<const0> ;
  assign pipe_rxpmaresetdone[1] = \<const0> ;
  assign pipe_rxpmaresetdone[0] = \<const0> ;
  assign pipe_rxprbserr[3] = \<const0> ;
  assign pipe_rxprbserr[2] = \<const0> ;
  assign pipe_rxprbserr[1] = \<const0> ;
  assign pipe_rxprbserr[0] = \<const0> ;
  assign pipe_rxstatus[11] = \<const0> ;
  assign pipe_rxstatus[10] = \<const0> ;
  assign pipe_rxstatus[9] = \<const0> ;
  assign pipe_rxstatus[8] = \<const0> ;
  assign pipe_rxstatus[7] = \<const0> ;
  assign pipe_rxstatus[6] = \<const0> ;
  assign pipe_rxstatus[5] = \<const0> ;
  assign pipe_rxstatus[4] = \<const0> ;
  assign pipe_rxstatus[3] = \<const0> ;
  assign pipe_rxstatus[2] = \<const0> ;
  assign pipe_rxstatus[1] = \<const0> ;
  assign pipe_rxstatus[0] = \<const0> ;
  assign pipe_rxsyncdone[3] = \<const0> ;
  assign pipe_rxsyncdone[2] = \<const0> ;
  assign pipe_rxsyncdone[1] = \<const0> ;
  assign pipe_rxsyncdone[0] = \<const0> ;
  assign pipe_sync_fsm_rx[27] = \<const0> ;
  assign pipe_sync_fsm_rx[26] = \<const0> ;
  assign pipe_sync_fsm_rx[25] = \<const0> ;
  assign pipe_sync_fsm_rx[24] = \<const0> ;
  assign pipe_sync_fsm_rx[23] = \<const0> ;
  assign pipe_sync_fsm_rx[22] = \<const0> ;
  assign pipe_sync_fsm_rx[21] = \<const0> ;
  assign pipe_sync_fsm_rx[20] = \<const0> ;
  assign pipe_sync_fsm_rx[19] = \<const0> ;
  assign pipe_sync_fsm_rx[18] = \<const0> ;
  assign pipe_sync_fsm_rx[17] = \<const0> ;
  assign pipe_sync_fsm_rx[16] = \<const0> ;
  assign pipe_sync_fsm_rx[15] = \<const0> ;
  assign pipe_sync_fsm_rx[14] = \<const0> ;
  assign pipe_sync_fsm_rx[13] = \<const0> ;
  assign pipe_sync_fsm_rx[12] = \<const0> ;
  assign pipe_sync_fsm_rx[11] = \<const0> ;
  assign pipe_sync_fsm_rx[10] = \<const0> ;
  assign pipe_sync_fsm_rx[9] = \<const0> ;
  assign pipe_sync_fsm_rx[8] = \<const0> ;
  assign pipe_sync_fsm_rx[7] = \<const0> ;
  assign pipe_sync_fsm_rx[6] = \<const0> ;
  assign pipe_sync_fsm_rx[5] = \<const0> ;
  assign pipe_sync_fsm_rx[4] = \<const0> ;
  assign pipe_sync_fsm_rx[3] = \<const0> ;
  assign pipe_sync_fsm_rx[2] = \<const0> ;
  assign pipe_sync_fsm_rx[1] = \<const0> ;
  assign pipe_sync_fsm_rx[0] = \<const0> ;
  assign pipe_sync_fsm_tx[23] = \<const0> ;
  assign pipe_sync_fsm_tx[22] = \<const0> ;
  assign pipe_sync_fsm_tx[21] = \<const0> ;
  assign pipe_sync_fsm_tx[20] = \<const0> ;
  assign pipe_sync_fsm_tx[19] = \<const0> ;
  assign pipe_sync_fsm_tx[18] = \<const0> ;
  assign pipe_sync_fsm_tx[17] = \<const0> ;
  assign pipe_sync_fsm_tx[16] = \<const0> ;
  assign pipe_sync_fsm_tx[15] = \<const0> ;
  assign pipe_sync_fsm_tx[14] = \<const0> ;
  assign pipe_sync_fsm_tx[13] = \<const0> ;
  assign pipe_sync_fsm_tx[12] = \<const0> ;
  assign pipe_sync_fsm_tx[11] = \<const0> ;
  assign pipe_sync_fsm_tx[10] = \<const0> ;
  assign pipe_sync_fsm_tx[9] = \<const0> ;
  assign pipe_sync_fsm_tx[8] = \<const0> ;
  assign pipe_sync_fsm_tx[7] = \<const0> ;
  assign pipe_sync_fsm_tx[6] = \<const0> ;
  assign pipe_sync_fsm_tx[5] = \<const0> ;
  assign pipe_sync_fsm_tx[4] = \<const0> ;
  assign pipe_sync_fsm_tx[3] = \<const0> ;
  assign pipe_sync_fsm_tx[2] = \<const0> ;
  assign pipe_sync_fsm_tx[1] = \<const0> ;
  assign pipe_sync_fsm_tx[0] = \<const0> ;
  assign pipe_tx_0_sigs[83] = \<const0> ;
  assign pipe_tx_0_sigs[82] = \<const0> ;
  assign pipe_tx_0_sigs[81] = \<const0> ;
  assign pipe_tx_0_sigs[80] = \<const0> ;
  assign pipe_tx_0_sigs[79] = \<const0> ;
  assign pipe_tx_0_sigs[78] = \<const0> ;
  assign pipe_tx_0_sigs[77] = \<const0> ;
  assign pipe_tx_0_sigs[76] = \<const0> ;
  assign pipe_tx_0_sigs[75] = \<const0> ;
  assign pipe_tx_0_sigs[74] = \<const0> ;
  assign pipe_tx_0_sigs[73] = \<const0> ;
  assign pipe_tx_0_sigs[72] = \<const0> ;
  assign pipe_tx_0_sigs[71] = \<const0> ;
  assign pipe_tx_0_sigs[70] = \<const0> ;
  assign pipe_tx_0_sigs[69] = \<const0> ;
  assign pipe_tx_0_sigs[68] = \<const0> ;
  assign pipe_tx_0_sigs[67] = \<const0> ;
  assign pipe_tx_0_sigs[66] = \<const0> ;
  assign pipe_tx_0_sigs[65] = \<const0> ;
  assign pipe_tx_0_sigs[64] = \<const0> ;
  assign pipe_tx_0_sigs[63] = \<const0> ;
  assign pipe_tx_0_sigs[62] = \<const0> ;
  assign pipe_tx_0_sigs[61] = \<const0> ;
  assign pipe_tx_0_sigs[60] = \<const0> ;
  assign pipe_tx_0_sigs[59] = \<const0> ;
  assign pipe_tx_0_sigs[58] = \<const0> ;
  assign pipe_tx_0_sigs[57] = \<const0> ;
  assign pipe_tx_0_sigs[56] = \<const0> ;
  assign pipe_tx_0_sigs[55] = \<const0> ;
  assign pipe_tx_0_sigs[54] = \<const0> ;
  assign pipe_tx_0_sigs[53] = \<const0> ;
  assign pipe_tx_0_sigs[52] = \<const0> ;
  assign pipe_tx_0_sigs[51] = \<const0> ;
  assign pipe_tx_0_sigs[50] = \<const0> ;
  assign pipe_tx_0_sigs[49] = \<const0> ;
  assign pipe_tx_0_sigs[48] = \<const0> ;
  assign pipe_tx_0_sigs[47] = \<const0> ;
  assign pipe_tx_0_sigs[46] = \<const0> ;
  assign pipe_tx_0_sigs[45] = \<const0> ;
  assign pipe_tx_0_sigs[44] = \<const0> ;
  assign pipe_tx_0_sigs[43] = \<const0> ;
  assign pipe_tx_0_sigs[42] = \<const0> ;
  assign pipe_tx_0_sigs[41] = \<const0> ;
  assign pipe_tx_0_sigs[40] = \<const0> ;
  assign pipe_tx_0_sigs[39] = \<const0> ;
  assign pipe_tx_0_sigs[38] = \<const0> ;
  assign pipe_tx_0_sigs[37] = \<const0> ;
  assign pipe_tx_0_sigs[36] = \<const0> ;
  assign pipe_tx_0_sigs[35] = \<const0> ;
  assign pipe_tx_0_sigs[34] = \<const0> ;
  assign pipe_tx_0_sigs[33] = \<const0> ;
  assign pipe_tx_0_sigs[32] = \<const0> ;
  assign pipe_tx_0_sigs[31] = \<const0> ;
  assign pipe_tx_0_sigs[30] = \<const0> ;
  assign pipe_tx_0_sigs[29] = \<const0> ;
  assign pipe_tx_0_sigs[28] = \<const0> ;
  assign pipe_tx_0_sigs[27] = \<const0> ;
  assign pipe_tx_0_sigs[26] = \<const0> ;
  assign pipe_tx_0_sigs[25] = \<const0> ;
  assign pipe_tx_0_sigs[24] = \<const0> ;
  assign pipe_tx_0_sigs[23] = \<const0> ;
  assign pipe_tx_0_sigs[22] = \<const0> ;
  assign pipe_tx_0_sigs[21] = \<const0> ;
  assign pipe_tx_0_sigs[20] = \<const0> ;
  assign pipe_tx_0_sigs[19] = \<const0> ;
  assign pipe_tx_0_sigs[18] = \<const0> ;
  assign pipe_tx_0_sigs[17] = \<const0> ;
  assign pipe_tx_0_sigs[16] = \<const0> ;
  assign pipe_tx_0_sigs[15] = \<const0> ;
  assign pipe_tx_0_sigs[14] = \<const0> ;
  assign pipe_tx_0_sigs[13] = \<const0> ;
  assign pipe_tx_0_sigs[12] = \<const0> ;
  assign pipe_tx_0_sigs[11] = \<const0> ;
  assign pipe_tx_0_sigs[10] = \<const0> ;
  assign pipe_tx_0_sigs[9] = \<const0> ;
  assign pipe_tx_0_sigs[8] = \<const0> ;
  assign pipe_tx_0_sigs[7] = \<const0> ;
  assign pipe_tx_0_sigs[6] = \<const0> ;
  assign pipe_tx_0_sigs[5] = \<const0> ;
  assign pipe_tx_0_sigs[4] = \<const0> ;
  assign pipe_tx_0_sigs[3] = \<const0> ;
  assign pipe_tx_0_sigs[2] = \<const0> ;
  assign pipe_tx_0_sigs[1] = \<const0> ;
  assign pipe_tx_0_sigs[0] = \<const0> ;
  assign pipe_tx_1_sigs[83] = \<const0> ;
  assign pipe_tx_1_sigs[82] = \<const0> ;
  assign pipe_tx_1_sigs[81] = \<const0> ;
  assign pipe_tx_1_sigs[80] = \<const0> ;
  assign pipe_tx_1_sigs[79] = \<const0> ;
  assign pipe_tx_1_sigs[78] = \<const0> ;
  assign pipe_tx_1_sigs[77] = \<const0> ;
  assign pipe_tx_1_sigs[76] = \<const0> ;
  assign pipe_tx_1_sigs[75] = \<const0> ;
  assign pipe_tx_1_sigs[74] = \<const0> ;
  assign pipe_tx_1_sigs[73] = \<const0> ;
  assign pipe_tx_1_sigs[72] = \<const0> ;
  assign pipe_tx_1_sigs[71] = \<const0> ;
  assign pipe_tx_1_sigs[70] = \<const0> ;
  assign pipe_tx_1_sigs[69] = \<const0> ;
  assign pipe_tx_1_sigs[68] = \<const0> ;
  assign pipe_tx_1_sigs[67] = \<const0> ;
  assign pipe_tx_1_sigs[66] = \<const0> ;
  assign pipe_tx_1_sigs[65] = \<const0> ;
  assign pipe_tx_1_sigs[64] = \<const0> ;
  assign pipe_tx_1_sigs[63] = \<const0> ;
  assign pipe_tx_1_sigs[62] = \<const0> ;
  assign pipe_tx_1_sigs[61] = \<const0> ;
  assign pipe_tx_1_sigs[60] = \<const0> ;
  assign pipe_tx_1_sigs[59] = \<const0> ;
  assign pipe_tx_1_sigs[58] = \<const0> ;
  assign pipe_tx_1_sigs[57] = \<const0> ;
  assign pipe_tx_1_sigs[56] = \<const0> ;
  assign pipe_tx_1_sigs[55] = \<const0> ;
  assign pipe_tx_1_sigs[54] = \<const0> ;
  assign pipe_tx_1_sigs[53] = \<const0> ;
  assign pipe_tx_1_sigs[52] = \<const0> ;
  assign pipe_tx_1_sigs[51] = \<const0> ;
  assign pipe_tx_1_sigs[50] = \<const0> ;
  assign pipe_tx_1_sigs[49] = \<const0> ;
  assign pipe_tx_1_sigs[48] = \<const0> ;
  assign pipe_tx_1_sigs[47] = \<const0> ;
  assign pipe_tx_1_sigs[46] = \<const0> ;
  assign pipe_tx_1_sigs[45] = \<const0> ;
  assign pipe_tx_1_sigs[44] = \<const0> ;
  assign pipe_tx_1_sigs[43] = \<const0> ;
  assign pipe_tx_1_sigs[42] = \<const0> ;
  assign pipe_tx_1_sigs[41] = \<const0> ;
  assign pipe_tx_1_sigs[40] = \<const0> ;
  assign pipe_tx_1_sigs[39] = \<const0> ;
  assign pipe_tx_1_sigs[38] = \<const0> ;
  assign pipe_tx_1_sigs[37] = \<const0> ;
  assign pipe_tx_1_sigs[36] = \<const0> ;
  assign pipe_tx_1_sigs[35] = \<const0> ;
  assign pipe_tx_1_sigs[34] = \<const0> ;
  assign pipe_tx_1_sigs[33] = \<const0> ;
  assign pipe_tx_1_sigs[32] = \<const0> ;
  assign pipe_tx_1_sigs[31] = \<const0> ;
  assign pipe_tx_1_sigs[30] = \<const0> ;
  assign pipe_tx_1_sigs[29] = \<const0> ;
  assign pipe_tx_1_sigs[28] = \<const0> ;
  assign pipe_tx_1_sigs[27] = \<const0> ;
  assign pipe_tx_1_sigs[26] = \<const0> ;
  assign pipe_tx_1_sigs[25] = \<const0> ;
  assign pipe_tx_1_sigs[24] = \<const0> ;
  assign pipe_tx_1_sigs[23] = \<const0> ;
  assign pipe_tx_1_sigs[22] = \<const0> ;
  assign pipe_tx_1_sigs[21] = \<const0> ;
  assign pipe_tx_1_sigs[20] = \<const0> ;
  assign pipe_tx_1_sigs[19] = \<const0> ;
  assign pipe_tx_1_sigs[18] = \<const0> ;
  assign pipe_tx_1_sigs[17] = \<const0> ;
  assign pipe_tx_1_sigs[16] = \<const0> ;
  assign pipe_tx_1_sigs[15] = \<const0> ;
  assign pipe_tx_1_sigs[14] = \<const0> ;
  assign pipe_tx_1_sigs[13] = \<const0> ;
  assign pipe_tx_1_sigs[12] = \<const0> ;
  assign pipe_tx_1_sigs[11] = \<const0> ;
  assign pipe_tx_1_sigs[10] = \<const0> ;
  assign pipe_tx_1_sigs[9] = \<const0> ;
  assign pipe_tx_1_sigs[8] = \<const0> ;
  assign pipe_tx_1_sigs[7] = \<const0> ;
  assign pipe_tx_1_sigs[6] = \<const0> ;
  assign pipe_tx_1_sigs[5] = \<const0> ;
  assign pipe_tx_1_sigs[4] = \<const0> ;
  assign pipe_tx_1_sigs[3] = \<const0> ;
  assign pipe_tx_1_sigs[2] = \<const0> ;
  assign pipe_tx_1_sigs[1] = \<const0> ;
  assign pipe_tx_1_sigs[0] = \<const0> ;
  assign pipe_tx_2_sigs[83] = \<const0> ;
  assign pipe_tx_2_sigs[82] = \<const0> ;
  assign pipe_tx_2_sigs[81] = \<const0> ;
  assign pipe_tx_2_sigs[80] = \<const0> ;
  assign pipe_tx_2_sigs[79] = \<const0> ;
  assign pipe_tx_2_sigs[78] = \<const0> ;
  assign pipe_tx_2_sigs[77] = \<const0> ;
  assign pipe_tx_2_sigs[76] = \<const0> ;
  assign pipe_tx_2_sigs[75] = \<const0> ;
  assign pipe_tx_2_sigs[74] = \<const0> ;
  assign pipe_tx_2_sigs[73] = \<const0> ;
  assign pipe_tx_2_sigs[72] = \<const0> ;
  assign pipe_tx_2_sigs[71] = \<const0> ;
  assign pipe_tx_2_sigs[70] = \<const0> ;
  assign pipe_tx_2_sigs[69] = \<const0> ;
  assign pipe_tx_2_sigs[68] = \<const0> ;
  assign pipe_tx_2_sigs[67] = \<const0> ;
  assign pipe_tx_2_sigs[66] = \<const0> ;
  assign pipe_tx_2_sigs[65] = \<const0> ;
  assign pipe_tx_2_sigs[64] = \<const0> ;
  assign pipe_tx_2_sigs[63] = \<const0> ;
  assign pipe_tx_2_sigs[62] = \<const0> ;
  assign pipe_tx_2_sigs[61] = \<const0> ;
  assign pipe_tx_2_sigs[60] = \<const0> ;
  assign pipe_tx_2_sigs[59] = \<const0> ;
  assign pipe_tx_2_sigs[58] = \<const0> ;
  assign pipe_tx_2_sigs[57] = \<const0> ;
  assign pipe_tx_2_sigs[56] = \<const0> ;
  assign pipe_tx_2_sigs[55] = \<const0> ;
  assign pipe_tx_2_sigs[54] = \<const0> ;
  assign pipe_tx_2_sigs[53] = \<const0> ;
  assign pipe_tx_2_sigs[52] = \<const0> ;
  assign pipe_tx_2_sigs[51] = \<const0> ;
  assign pipe_tx_2_sigs[50] = \<const0> ;
  assign pipe_tx_2_sigs[49] = \<const0> ;
  assign pipe_tx_2_sigs[48] = \<const0> ;
  assign pipe_tx_2_sigs[47] = \<const0> ;
  assign pipe_tx_2_sigs[46] = \<const0> ;
  assign pipe_tx_2_sigs[45] = \<const0> ;
  assign pipe_tx_2_sigs[44] = \<const0> ;
  assign pipe_tx_2_sigs[43] = \<const0> ;
  assign pipe_tx_2_sigs[42] = \<const0> ;
  assign pipe_tx_2_sigs[41] = \<const0> ;
  assign pipe_tx_2_sigs[40] = \<const0> ;
  assign pipe_tx_2_sigs[39] = \<const0> ;
  assign pipe_tx_2_sigs[38] = \<const0> ;
  assign pipe_tx_2_sigs[37] = \<const0> ;
  assign pipe_tx_2_sigs[36] = \<const0> ;
  assign pipe_tx_2_sigs[35] = \<const0> ;
  assign pipe_tx_2_sigs[34] = \<const0> ;
  assign pipe_tx_2_sigs[33] = \<const0> ;
  assign pipe_tx_2_sigs[32] = \<const0> ;
  assign pipe_tx_2_sigs[31] = \<const0> ;
  assign pipe_tx_2_sigs[30] = \<const0> ;
  assign pipe_tx_2_sigs[29] = \<const0> ;
  assign pipe_tx_2_sigs[28] = \<const0> ;
  assign pipe_tx_2_sigs[27] = \<const0> ;
  assign pipe_tx_2_sigs[26] = \<const0> ;
  assign pipe_tx_2_sigs[25] = \<const0> ;
  assign pipe_tx_2_sigs[24] = \<const0> ;
  assign pipe_tx_2_sigs[23] = \<const0> ;
  assign pipe_tx_2_sigs[22] = \<const0> ;
  assign pipe_tx_2_sigs[21] = \<const0> ;
  assign pipe_tx_2_sigs[20] = \<const0> ;
  assign pipe_tx_2_sigs[19] = \<const0> ;
  assign pipe_tx_2_sigs[18] = \<const0> ;
  assign pipe_tx_2_sigs[17] = \<const0> ;
  assign pipe_tx_2_sigs[16] = \<const0> ;
  assign pipe_tx_2_sigs[15] = \<const0> ;
  assign pipe_tx_2_sigs[14] = \<const0> ;
  assign pipe_tx_2_sigs[13] = \<const0> ;
  assign pipe_tx_2_sigs[12] = \<const0> ;
  assign pipe_tx_2_sigs[11] = \<const0> ;
  assign pipe_tx_2_sigs[10] = \<const0> ;
  assign pipe_tx_2_sigs[9] = \<const0> ;
  assign pipe_tx_2_sigs[8] = \<const0> ;
  assign pipe_tx_2_sigs[7] = \<const0> ;
  assign pipe_tx_2_sigs[6] = \<const0> ;
  assign pipe_tx_2_sigs[5] = \<const0> ;
  assign pipe_tx_2_sigs[4] = \<const0> ;
  assign pipe_tx_2_sigs[3] = \<const0> ;
  assign pipe_tx_2_sigs[2] = \<const0> ;
  assign pipe_tx_2_sigs[1] = \<const0> ;
  assign pipe_tx_2_sigs[0] = \<const0> ;
  assign pipe_tx_3_sigs[83] = \<const0> ;
  assign pipe_tx_3_sigs[82] = \<const0> ;
  assign pipe_tx_3_sigs[81] = \<const0> ;
  assign pipe_tx_3_sigs[80] = \<const0> ;
  assign pipe_tx_3_sigs[79] = \<const0> ;
  assign pipe_tx_3_sigs[78] = \<const0> ;
  assign pipe_tx_3_sigs[77] = \<const0> ;
  assign pipe_tx_3_sigs[76] = \<const0> ;
  assign pipe_tx_3_sigs[75] = \<const0> ;
  assign pipe_tx_3_sigs[74] = \<const0> ;
  assign pipe_tx_3_sigs[73] = \<const0> ;
  assign pipe_tx_3_sigs[72] = \<const0> ;
  assign pipe_tx_3_sigs[71] = \<const0> ;
  assign pipe_tx_3_sigs[70] = \<const0> ;
  assign pipe_tx_3_sigs[69] = \<const0> ;
  assign pipe_tx_3_sigs[68] = \<const0> ;
  assign pipe_tx_3_sigs[67] = \<const0> ;
  assign pipe_tx_3_sigs[66] = \<const0> ;
  assign pipe_tx_3_sigs[65] = \<const0> ;
  assign pipe_tx_3_sigs[64] = \<const0> ;
  assign pipe_tx_3_sigs[63] = \<const0> ;
  assign pipe_tx_3_sigs[62] = \<const0> ;
  assign pipe_tx_3_sigs[61] = \<const0> ;
  assign pipe_tx_3_sigs[60] = \<const0> ;
  assign pipe_tx_3_sigs[59] = \<const0> ;
  assign pipe_tx_3_sigs[58] = \<const0> ;
  assign pipe_tx_3_sigs[57] = \<const0> ;
  assign pipe_tx_3_sigs[56] = \<const0> ;
  assign pipe_tx_3_sigs[55] = \<const0> ;
  assign pipe_tx_3_sigs[54] = \<const0> ;
  assign pipe_tx_3_sigs[53] = \<const0> ;
  assign pipe_tx_3_sigs[52] = \<const0> ;
  assign pipe_tx_3_sigs[51] = \<const0> ;
  assign pipe_tx_3_sigs[50] = \<const0> ;
  assign pipe_tx_3_sigs[49] = \<const0> ;
  assign pipe_tx_3_sigs[48] = \<const0> ;
  assign pipe_tx_3_sigs[47] = \<const0> ;
  assign pipe_tx_3_sigs[46] = \<const0> ;
  assign pipe_tx_3_sigs[45] = \<const0> ;
  assign pipe_tx_3_sigs[44] = \<const0> ;
  assign pipe_tx_3_sigs[43] = \<const0> ;
  assign pipe_tx_3_sigs[42] = \<const0> ;
  assign pipe_tx_3_sigs[41] = \<const0> ;
  assign pipe_tx_3_sigs[40] = \<const0> ;
  assign pipe_tx_3_sigs[39] = \<const0> ;
  assign pipe_tx_3_sigs[38] = \<const0> ;
  assign pipe_tx_3_sigs[37] = \<const0> ;
  assign pipe_tx_3_sigs[36] = \<const0> ;
  assign pipe_tx_3_sigs[35] = \<const0> ;
  assign pipe_tx_3_sigs[34] = \<const0> ;
  assign pipe_tx_3_sigs[33] = \<const0> ;
  assign pipe_tx_3_sigs[32] = \<const0> ;
  assign pipe_tx_3_sigs[31] = \<const0> ;
  assign pipe_tx_3_sigs[30] = \<const0> ;
  assign pipe_tx_3_sigs[29] = \<const0> ;
  assign pipe_tx_3_sigs[28] = \<const0> ;
  assign pipe_tx_3_sigs[27] = \<const0> ;
  assign pipe_tx_3_sigs[26] = \<const0> ;
  assign pipe_tx_3_sigs[25] = \<const0> ;
  assign pipe_tx_3_sigs[24] = \<const0> ;
  assign pipe_tx_3_sigs[23] = \<const0> ;
  assign pipe_tx_3_sigs[22] = \<const0> ;
  assign pipe_tx_3_sigs[21] = \<const0> ;
  assign pipe_tx_3_sigs[20] = \<const0> ;
  assign pipe_tx_3_sigs[19] = \<const0> ;
  assign pipe_tx_3_sigs[18] = \<const0> ;
  assign pipe_tx_3_sigs[17] = \<const0> ;
  assign pipe_tx_3_sigs[16] = \<const0> ;
  assign pipe_tx_3_sigs[15] = \<const0> ;
  assign pipe_tx_3_sigs[14] = \<const0> ;
  assign pipe_tx_3_sigs[13] = \<const0> ;
  assign pipe_tx_3_sigs[12] = \<const0> ;
  assign pipe_tx_3_sigs[11] = \<const0> ;
  assign pipe_tx_3_sigs[10] = \<const0> ;
  assign pipe_tx_3_sigs[9] = \<const0> ;
  assign pipe_tx_3_sigs[8] = \<const0> ;
  assign pipe_tx_3_sigs[7] = \<const0> ;
  assign pipe_tx_3_sigs[6] = \<const0> ;
  assign pipe_tx_3_sigs[5] = \<const0> ;
  assign pipe_tx_3_sigs[4] = \<const0> ;
  assign pipe_tx_3_sigs[3] = \<const0> ;
  assign pipe_tx_3_sigs[2] = \<const0> ;
  assign pipe_tx_3_sigs[1] = \<const0> ;
  assign pipe_tx_3_sigs[0] = \<const0> ;
  assign pipe_tx_4_sigs[83] = \<const0> ;
  assign pipe_tx_4_sigs[82] = \<const0> ;
  assign pipe_tx_4_sigs[81] = \<const0> ;
  assign pipe_tx_4_sigs[80] = \<const0> ;
  assign pipe_tx_4_sigs[79] = \<const0> ;
  assign pipe_tx_4_sigs[78] = \<const0> ;
  assign pipe_tx_4_sigs[77] = \<const0> ;
  assign pipe_tx_4_sigs[76] = \<const0> ;
  assign pipe_tx_4_sigs[75] = \<const0> ;
  assign pipe_tx_4_sigs[74] = \<const0> ;
  assign pipe_tx_4_sigs[73] = \<const0> ;
  assign pipe_tx_4_sigs[72] = \<const0> ;
  assign pipe_tx_4_sigs[71] = \<const0> ;
  assign pipe_tx_4_sigs[70] = \<const0> ;
  assign pipe_tx_4_sigs[69] = \<const0> ;
  assign pipe_tx_4_sigs[68] = \<const0> ;
  assign pipe_tx_4_sigs[67] = \<const0> ;
  assign pipe_tx_4_sigs[66] = \<const0> ;
  assign pipe_tx_4_sigs[65] = \<const0> ;
  assign pipe_tx_4_sigs[64] = \<const0> ;
  assign pipe_tx_4_sigs[63] = \<const0> ;
  assign pipe_tx_4_sigs[62] = \<const0> ;
  assign pipe_tx_4_sigs[61] = \<const0> ;
  assign pipe_tx_4_sigs[60] = \<const0> ;
  assign pipe_tx_4_sigs[59] = \<const0> ;
  assign pipe_tx_4_sigs[58] = \<const0> ;
  assign pipe_tx_4_sigs[57] = \<const0> ;
  assign pipe_tx_4_sigs[56] = \<const0> ;
  assign pipe_tx_4_sigs[55] = \<const0> ;
  assign pipe_tx_4_sigs[54] = \<const0> ;
  assign pipe_tx_4_sigs[53] = \<const0> ;
  assign pipe_tx_4_sigs[52] = \<const0> ;
  assign pipe_tx_4_sigs[51] = \<const0> ;
  assign pipe_tx_4_sigs[50] = \<const0> ;
  assign pipe_tx_4_sigs[49] = \<const0> ;
  assign pipe_tx_4_sigs[48] = \<const0> ;
  assign pipe_tx_4_sigs[47] = \<const0> ;
  assign pipe_tx_4_sigs[46] = \<const0> ;
  assign pipe_tx_4_sigs[45] = \<const0> ;
  assign pipe_tx_4_sigs[44] = \<const0> ;
  assign pipe_tx_4_sigs[43] = \<const0> ;
  assign pipe_tx_4_sigs[42] = \<const0> ;
  assign pipe_tx_4_sigs[41] = \<const0> ;
  assign pipe_tx_4_sigs[40] = \<const0> ;
  assign pipe_tx_4_sigs[39] = \<const0> ;
  assign pipe_tx_4_sigs[38] = \<const0> ;
  assign pipe_tx_4_sigs[37] = \<const0> ;
  assign pipe_tx_4_sigs[36] = \<const0> ;
  assign pipe_tx_4_sigs[35] = \<const0> ;
  assign pipe_tx_4_sigs[34] = \<const0> ;
  assign pipe_tx_4_sigs[33] = \<const0> ;
  assign pipe_tx_4_sigs[32] = \<const0> ;
  assign pipe_tx_4_sigs[31] = \<const0> ;
  assign pipe_tx_4_sigs[30] = \<const0> ;
  assign pipe_tx_4_sigs[29] = \<const0> ;
  assign pipe_tx_4_sigs[28] = \<const0> ;
  assign pipe_tx_4_sigs[27] = \<const0> ;
  assign pipe_tx_4_sigs[26] = \<const0> ;
  assign pipe_tx_4_sigs[25] = \<const0> ;
  assign pipe_tx_4_sigs[24] = \<const0> ;
  assign pipe_tx_4_sigs[23] = \<const0> ;
  assign pipe_tx_4_sigs[22] = \<const0> ;
  assign pipe_tx_4_sigs[21] = \<const0> ;
  assign pipe_tx_4_sigs[20] = \<const0> ;
  assign pipe_tx_4_sigs[19] = \<const0> ;
  assign pipe_tx_4_sigs[18] = \<const0> ;
  assign pipe_tx_4_sigs[17] = \<const0> ;
  assign pipe_tx_4_sigs[16] = \<const0> ;
  assign pipe_tx_4_sigs[15] = \<const0> ;
  assign pipe_tx_4_sigs[14] = \<const0> ;
  assign pipe_tx_4_sigs[13] = \<const0> ;
  assign pipe_tx_4_sigs[12] = \<const0> ;
  assign pipe_tx_4_sigs[11] = \<const0> ;
  assign pipe_tx_4_sigs[10] = \<const0> ;
  assign pipe_tx_4_sigs[9] = \<const0> ;
  assign pipe_tx_4_sigs[8] = \<const0> ;
  assign pipe_tx_4_sigs[7] = \<const0> ;
  assign pipe_tx_4_sigs[6] = \<const0> ;
  assign pipe_tx_4_sigs[5] = \<const0> ;
  assign pipe_tx_4_sigs[4] = \<const0> ;
  assign pipe_tx_4_sigs[3] = \<const0> ;
  assign pipe_tx_4_sigs[2] = \<const0> ;
  assign pipe_tx_4_sigs[1] = \<const0> ;
  assign pipe_tx_4_sigs[0] = \<const0> ;
  assign pipe_tx_5_sigs[83] = \<const0> ;
  assign pipe_tx_5_sigs[82] = \<const0> ;
  assign pipe_tx_5_sigs[81] = \<const0> ;
  assign pipe_tx_5_sigs[80] = \<const0> ;
  assign pipe_tx_5_sigs[79] = \<const0> ;
  assign pipe_tx_5_sigs[78] = \<const0> ;
  assign pipe_tx_5_sigs[77] = \<const0> ;
  assign pipe_tx_5_sigs[76] = \<const0> ;
  assign pipe_tx_5_sigs[75] = \<const0> ;
  assign pipe_tx_5_sigs[74] = \<const0> ;
  assign pipe_tx_5_sigs[73] = \<const0> ;
  assign pipe_tx_5_sigs[72] = \<const0> ;
  assign pipe_tx_5_sigs[71] = \<const0> ;
  assign pipe_tx_5_sigs[70] = \<const0> ;
  assign pipe_tx_5_sigs[69] = \<const0> ;
  assign pipe_tx_5_sigs[68] = \<const0> ;
  assign pipe_tx_5_sigs[67] = \<const0> ;
  assign pipe_tx_5_sigs[66] = \<const0> ;
  assign pipe_tx_5_sigs[65] = \<const0> ;
  assign pipe_tx_5_sigs[64] = \<const0> ;
  assign pipe_tx_5_sigs[63] = \<const0> ;
  assign pipe_tx_5_sigs[62] = \<const0> ;
  assign pipe_tx_5_sigs[61] = \<const0> ;
  assign pipe_tx_5_sigs[60] = \<const0> ;
  assign pipe_tx_5_sigs[59] = \<const0> ;
  assign pipe_tx_5_sigs[58] = \<const0> ;
  assign pipe_tx_5_sigs[57] = \<const0> ;
  assign pipe_tx_5_sigs[56] = \<const0> ;
  assign pipe_tx_5_sigs[55] = \<const0> ;
  assign pipe_tx_5_sigs[54] = \<const0> ;
  assign pipe_tx_5_sigs[53] = \<const0> ;
  assign pipe_tx_5_sigs[52] = \<const0> ;
  assign pipe_tx_5_sigs[51] = \<const0> ;
  assign pipe_tx_5_sigs[50] = \<const0> ;
  assign pipe_tx_5_sigs[49] = \<const0> ;
  assign pipe_tx_5_sigs[48] = \<const0> ;
  assign pipe_tx_5_sigs[47] = \<const0> ;
  assign pipe_tx_5_sigs[46] = \<const0> ;
  assign pipe_tx_5_sigs[45] = \<const0> ;
  assign pipe_tx_5_sigs[44] = \<const0> ;
  assign pipe_tx_5_sigs[43] = \<const0> ;
  assign pipe_tx_5_sigs[42] = \<const0> ;
  assign pipe_tx_5_sigs[41] = \<const0> ;
  assign pipe_tx_5_sigs[40] = \<const0> ;
  assign pipe_tx_5_sigs[39] = \<const0> ;
  assign pipe_tx_5_sigs[38] = \<const0> ;
  assign pipe_tx_5_sigs[37] = \<const0> ;
  assign pipe_tx_5_sigs[36] = \<const0> ;
  assign pipe_tx_5_sigs[35] = \<const0> ;
  assign pipe_tx_5_sigs[34] = \<const0> ;
  assign pipe_tx_5_sigs[33] = \<const0> ;
  assign pipe_tx_5_sigs[32] = \<const0> ;
  assign pipe_tx_5_sigs[31] = \<const0> ;
  assign pipe_tx_5_sigs[30] = \<const0> ;
  assign pipe_tx_5_sigs[29] = \<const0> ;
  assign pipe_tx_5_sigs[28] = \<const0> ;
  assign pipe_tx_5_sigs[27] = \<const0> ;
  assign pipe_tx_5_sigs[26] = \<const0> ;
  assign pipe_tx_5_sigs[25] = \<const0> ;
  assign pipe_tx_5_sigs[24] = \<const0> ;
  assign pipe_tx_5_sigs[23] = \<const0> ;
  assign pipe_tx_5_sigs[22] = \<const0> ;
  assign pipe_tx_5_sigs[21] = \<const0> ;
  assign pipe_tx_5_sigs[20] = \<const0> ;
  assign pipe_tx_5_sigs[19] = \<const0> ;
  assign pipe_tx_5_sigs[18] = \<const0> ;
  assign pipe_tx_5_sigs[17] = \<const0> ;
  assign pipe_tx_5_sigs[16] = \<const0> ;
  assign pipe_tx_5_sigs[15] = \<const0> ;
  assign pipe_tx_5_sigs[14] = \<const0> ;
  assign pipe_tx_5_sigs[13] = \<const0> ;
  assign pipe_tx_5_sigs[12] = \<const0> ;
  assign pipe_tx_5_sigs[11] = \<const0> ;
  assign pipe_tx_5_sigs[10] = \<const0> ;
  assign pipe_tx_5_sigs[9] = \<const0> ;
  assign pipe_tx_5_sigs[8] = \<const0> ;
  assign pipe_tx_5_sigs[7] = \<const0> ;
  assign pipe_tx_5_sigs[6] = \<const0> ;
  assign pipe_tx_5_sigs[5] = \<const0> ;
  assign pipe_tx_5_sigs[4] = \<const0> ;
  assign pipe_tx_5_sigs[3] = \<const0> ;
  assign pipe_tx_5_sigs[2] = \<const0> ;
  assign pipe_tx_5_sigs[1] = \<const0> ;
  assign pipe_tx_5_sigs[0] = \<const0> ;
  assign pipe_tx_6_sigs[83] = \<const0> ;
  assign pipe_tx_6_sigs[82] = \<const0> ;
  assign pipe_tx_6_sigs[81] = \<const0> ;
  assign pipe_tx_6_sigs[80] = \<const0> ;
  assign pipe_tx_6_sigs[79] = \<const0> ;
  assign pipe_tx_6_sigs[78] = \<const0> ;
  assign pipe_tx_6_sigs[77] = \<const0> ;
  assign pipe_tx_6_sigs[76] = \<const0> ;
  assign pipe_tx_6_sigs[75] = \<const0> ;
  assign pipe_tx_6_sigs[74] = \<const0> ;
  assign pipe_tx_6_sigs[73] = \<const0> ;
  assign pipe_tx_6_sigs[72] = \<const0> ;
  assign pipe_tx_6_sigs[71] = \<const0> ;
  assign pipe_tx_6_sigs[70] = \<const0> ;
  assign pipe_tx_6_sigs[69] = \<const0> ;
  assign pipe_tx_6_sigs[68] = \<const0> ;
  assign pipe_tx_6_sigs[67] = \<const0> ;
  assign pipe_tx_6_sigs[66] = \<const0> ;
  assign pipe_tx_6_sigs[65] = \<const0> ;
  assign pipe_tx_6_sigs[64] = \<const0> ;
  assign pipe_tx_6_sigs[63] = \<const0> ;
  assign pipe_tx_6_sigs[62] = \<const0> ;
  assign pipe_tx_6_sigs[61] = \<const0> ;
  assign pipe_tx_6_sigs[60] = \<const0> ;
  assign pipe_tx_6_sigs[59] = \<const0> ;
  assign pipe_tx_6_sigs[58] = \<const0> ;
  assign pipe_tx_6_sigs[57] = \<const0> ;
  assign pipe_tx_6_sigs[56] = \<const0> ;
  assign pipe_tx_6_sigs[55] = \<const0> ;
  assign pipe_tx_6_sigs[54] = \<const0> ;
  assign pipe_tx_6_sigs[53] = \<const0> ;
  assign pipe_tx_6_sigs[52] = \<const0> ;
  assign pipe_tx_6_sigs[51] = \<const0> ;
  assign pipe_tx_6_sigs[50] = \<const0> ;
  assign pipe_tx_6_sigs[49] = \<const0> ;
  assign pipe_tx_6_sigs[48] = \<const0> ;
  assign pipe_tx_6_sigs[47] = \<const0> ;
  assign pipe_tx_6_sigs[46] = \<const0> ;
  assign pipe_tx_6_sigs[45] = \<const0> ;
  assign pipe_tx_6_sigs[44] = \<const0> ;
  assign pipe_tx_6_sigs[43] = \<const0> ;
  assign pipe_tx_6_sigs[42] = \<const0> ;
  assign pipe_tx_6_sigs[41] = \<const0> ;
  assign pipe_tx_6_sigs[40] = \<const0> ;
  assign pipe_tx_6_sigs[39] = \<const0> ;
  assign pipe_tx_6_sigs[38] = \<const0> ;
  assign pipe_tx_6_sigs[37] = \<const0> ;
  assign pipe_tx_6_sigs[36] = \<const0> ;
  assign pipe_tx_6_sigs[35] = \<const0> ;
  assign pipe_tx_6_sigs[34] = \<const0> ;
  assign pipe_tx_6_sigs[33] = \<const0> ;
  assign pipe_tx_6_sigs[32] = \<const0> ;
  assign pipe_tx_6_sigs[31] = \<const0> ;
  assign pipe_tx_6_sigs[30] = \<const0> ;
  assign pipe_tx_6_sigs[29] = \<const0> ;
  assign pipe_tx_6_sigs[28] = \<const0> ;
  assign pipe_tx_6_sigs[27] = \<const0> ;
  assign pipe_tx_6_sigs[26] = \<const0> ;
  assign pipe_tx_6_sigs[25] = \<const0> ;
  assign pipe_tx_6_sigs[24] = \<const0> ;
  assign pipe_tx_6_sigs[23] = \<const0> ;
  assign pipe_tx_6_sigs[22] = \<const0> ;
  assign pipe_tx_6_sigs[21] = \<const0> ;
  assign pipe_tx_6_sigs[20] = \<const0> ;
  assign pipe_tx_6_sigs[19] = \<const0> ;
  assign pipe_tx_6_sigs[18] = \<const0> ;
  assign pipe_tx_6_sigs[17] = \<const0> ;
  assign pipe_tx_6_sigs[16] = \<const0> ;
  assign pipe_tx_6_sigs[15] = \<const0> ;
  assign pipe_tx_6_sigs[14] = \<const0> ;
  assign pipe_tx_6_sigs[13] = \<const0> ;
  assign pipe_tx_6_sigs[12] = \<const0> ;
  assign pipe_tx_6_sigs[11] = \<const0> ;
  assign pipe_tx_6_sigs[10] = \<const0> ;
  assign pipe_tx_6_sigs[9] = \<const0> ;
  assign pipe_tx_6_sigs[8] = \<const0> ;
  assign pipe_tx_6_sigs[7] = \<const0> ;
  assign pipe_tx_6_sigs[6] = \<const0> ;
  assign pipe_tx_6_sigs[5] = \<const0> ;
  assign pipe_tx_6_sigs[4] = \<const0> ;
  assign pipe_tx_6_sigs[3] = \<const0> ;
  assign pipe_tx_6_sigs[2] = \<const0> ;
  assign pipe_tx_6_sigs[1] = \<const0> ;
  assign pipe_tx_6_sigs[0] = \<const0> ;
  assign pipe_tx_7_sigs[83] = \<const0> ;
  assign pipe_tx_7_sigs[82] = \<const0> ;
  assign pipe_tx_7_sigs[81] = \<const0> ;
  assign pipe_tx_7_sigs[80] = \<const0> ;
  assign pipe_tx_7_sigs[79] = \<const0> ;
  assign pipe_tx_7_sigs[78] = \<const0> ;
  assign pipe_tx_7_sigs[77] = \<const0> ;
  assign pipe_tx_7_sigs[76] = \<const0> ;
  assign pipe_tx_7_sigs[75] = \<const0> ;
  assign pipe_tx_7_sigs[74] = \<const0> ;
  assign pipe_tx_7_sigs[73] = \<const0> ;
  assign pipe_tx_7_sigs[72] = \<const0> ;
  assign pipe_tx_7_sigs[71] = \<const0> ;
  assign pipe_tx_7_sigs[70] = \<const0> ;
  assign pipe_tx_7_sigs[69] = \<const0> ;
  assign pipe_tx_7_sigs[68] = \<const0> ;
  assign pipe_tx_7_sigs[67] = \<const0> ;
  assign pipe_tx_7_sigs[66] = \<const0> ;
  assign pipe_tx_7_sigs[65] = \<const0> ;
  assign pipe_tx_7_sigs[64] = \<const0> ;
  assign pipe_tx_7_sigs[63] = \<const0> ;
  assign pipe_tx_7_sigs[62] = \<const0> ;
  assign pipe_tx_7_sigs[61] = \<const0> ;
  assign pipe_tx_7_sigs[60] = \<const0> ;
  assign pipe_tx_7_sigs[59] = \<const0> ;
  assign pipe_tx_7_sigs[58] = \<const0> ;
  assign pipe_tx_7_sigs[57] = \<const0> ;
  assign pipe_tx_7_sigs[56] = \<const0> ;
  assign pipe_tx_7_sigs[55] = \<const0> ;
  assign pipe_tx_7_sigs[54] = \<const0> ;
  assign pipe_tx_7_sigs[53] = \<const0> ;
  assign pipe_tx_7_sigs[52] = \<const0> ;
  assign pipe_tx_7_sigs[51] = \<const0> ;
  assign pipe_tx_7_sigs[50] = \<const0> ;
  assign pipe_tx_7_sigs[49] = \<const0> ;
  assign pipe_tx_7_sigs[48] = \<const0> ;
  assign pipe_tx_7_sigs[47] = \<const0> ;
  assign pipe_tx_7_sigs[46] = \<const0> ;
  assign pipe_tx_7_sigs[45] = \<const0> ;
  assign pipe_tx_7_sigs[44] = \<const0> ;
  assign pipe_tx_7_sigs[43] = \<const0> ;
  assign pipe_tx_7_sigs[42] = \<const0> ;
  assign pipe_tx_7_sigs[41] = \<const0> ;
  assign pipe_tx_7_sigs[40] = \<const0> ;
  assign pipe_tx_7_sigs[39] = \<const0> ;
  assign pipe_tx_7_sigs[38] = \<const0> ;
  assign pipe_tx_7_sigs[37] = \<const0> ;
  assign pipe_tx_7_sigs[36] = \<const0> ;
  assign pipe_tx_7_sigs[35] = \<const0> ;
  assign pipe_tx_7_sigs[34] = \<const0> ;
  assign pipe_tx_7_sigs[33] = \<const0> ;
  assign pipe_tx_7_sigs[32] = \<const0> ;
  assign pipe_tx_7_sigs[31] = \<const0> ;
  assign pipe_tx_7_sigs[30] = \<const0> ;
  assign pipe_tx_7_sigs[29] = \<const0> ;
  assign pipe_tx_7_sigs[28] = \<const0> ;
  assign pipe_tx_7_sigs[27] = \<const0> ;
  assign pipe_tx_7_sigs[26] = \<const0> ;
  assign pipe_tx_7_sigs[25] = \<const0> ;
  assign pipe_tx_7_sigs[24] = \<const0> ;
  assign pipe_tx_7_sigs[23] = \<const0> ;
  assign pipe_tx_7_sigs[22] = \<const0> ;
  assign pipe_tx_7_sigs[21] = \<const0> ;
  assign pipe_tx_7_sigs[20] = \<const0> ;
  assign pipe_tx_7_sigs[19] = \<const0> ;
  assign pipe_tx_7_sigs[18] = \<const0> ;
  assign pipe_tx_7_sigs[17] = \<const0> ;
  assign pipe_tx_7_sigs[16] = \<const0> ;
  assign pipe_tx_7_sigs[15] = \<const0> ;
  assign pipe_tx_7_sigs[14] = \<const0> ;
  assign pipe_tx_7_sigs[13] = \<const0> ;
  assign pipe_tx_7_sigs[12] = \<const0> ;
  assign pipe_tx_7_sigs[11] = \<const0> ;
  assign pipe_tx_7_sigs[10] = \<const0> ;
  assign pipe_tx_7_sigs[9] = \<const0> ;
  assign pipe_tx_7_sigs[8] = \<const0> ;
  assign pipe_tx_7_sigs[7] = \<const0> ;
  assign pipe_tx_7_sigs[6] = \<const0> ;
  assign pipe_tx_7_sigs[5] = \<const0> ;
  assign pipe_tx_7_sigs[4] = \<const0> ;
  assign pipe_tx_7_sigs[3] = \<const0> ;
  assign pipe_tx_7_sigs[2] = \<const0> ;
  assign pipe_tx_7_sigs[1] = \<const0> ;
  assign pipe_tx_7_sigs[0] = \<const0> ;
  assign pipe_txdlysresetdone[3] = \<const0> ;
  assign pipe_txdlysresetdone[2] = \<const0> ;
  assign pipe_txdlysresetdone[1] = \<const0> ;
  assign pipe_txdlysresetdone[0] = \<const0> ;
  assign pipe_txphaligndone[3] = \<const0> ;
  assign pipe_txphaligndone[2] = \<const0> ;
  assign pipe_txphaligndone[1] = \<const0> ;
  assign pipe_txphaligndone[0] = \<const0> ;
  assign pipe_txphinitdone[3] = \<const0> ;
  assign pipe_txphinitdone[2] = \<const0> ;
  assign pipe_txphinitdone[1] = \<const0> ;
  assign pipe_txphinitdone[0] = \<const0> ;
  assign qpll_drp_clk = \<const0> ;
  assign qpll_drp_gen3 = \<const0> ;
  assign qpll_drp_ovrd = \<const0> ;
  assign qpll_drp_rst_n = \<const0> ;
  assign qpll_drp_start = \<const0> ;
  assign qpll_qplld = \<const0> ;
  assign qpll_qpllreset[1] = \<const0> ;
  assign qpll_qpllreset[0] = \<const0> ;
  assign startup_cfgclk = \<const0> ;
  assign startup_cfgmclk = \<const0> ;
  assign startup_eos = \<const0> ;
  assign startup_preq = \<const0> ;
  assign user_app_rdy = \<const0> ;
  assign user_clk = pipe_userclk2_in;
  assign user_tph_stt_read_data[31] = \<const0> ;
  assign user_tph_stt_read_data[30] = \<const0> ;
  assign user_tph_stt_read_data[29] = \<const0> ;
  assign user_tph_stt_read_data[28] = \<const0> ;
  assign user_tph_stt_read_data[27] = \<const0> ;
  assign user_tph_stt_read_data[26] = \<const0> ;
  assign user_tph_stt_read_data[25] = \<const0> ;
  assign user_tph_stt_read_data[24] = \<const0> ;
  assign user_tph_stt_read_data[23] = \<const0> ;
  assign user_tph_stt_read_data[22] = \<const0> ;
  assign user_tph_stt_read_data[21] = \<const0> ;
  assign user_tph_stt_read_data[20] = \<const0> ;
  assign user_tph_stt_read_data[19] = \<const0> ;
  assign user_tph_stt_read_data[18] = \<const0> ;
  assign user_tph_stt_read_data[17] = \<const0> ;
  assign user_tph_stt_read_data[16] = \<const0> ;
  assign user_tph_stt_read_data[15] = \<const0> ;
  assign user_tph_stt_read_data[14] = \<const0> ;
  assign user_tph_stt_read_data[13] = \<const0> ;
  assign user_tph_stt_read_data[12] = \<const0> ;
  assign user_tph_stt_read_data[11] = \<const0> ;
  assign user_tph_stt_read_data[10] = \<const0> ;
  assign user_tph_stt_read_data[9] = \<const0> ;
  assign user_tph_stt_read_data[8] = \<const0> ;
  assign user_tph_stt_read_data[7] = \<const0> ;
  assign user_tph_stt_read_data[6] = \<const0> ;
  assign user_tph_stt_read_data[5] = \<const0> ;
  assign user_tph_stt_read_data[4] = \<const0> ;
  assign user_tph_stt_read_data[3] = \<const0> ;
  assign user_tph_stt_read_data[2] = \<const0> ;
  assign user_tph_stt_read_data[1] = \<const0> ;
  assign user_tph_stt_read_data[0] = \<const0> ;
  assign user_tph_stt_read_data_valid = \<const0> ;
  GND GND
       (.G(\<const0> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_top gt_top_i
       (.PIPERX0EQLPNEWTXCOEFFORPRESET({gt_top_i_n_0,gt_top_i_n_1,gt_top_i_n_2,gt_top_i_n_3,gt_top_i_n_4,gt_top_i_n_5,gt_top_i_n_6,gt_top_i_n_7,gt_top_i_n_8,gt_top_i_n_9,gt_top_i_n_10,gt_top_i_n_11,gt_top_i_n_12,gt_top_i_n_13,gt_top_i_n_14,pipe_rx0_eq_new_txcoeff,gt_top_i_n_16,gt_top_i_n_17}),
        .PIPERX1EQLPNEWTXCOEFFORPRESET({gt_top_i_n_18,gt_top_i_n_19,gt_top_i_n_20,gt_top_i_n_21,gt_top_i_n_22,gt_top_i_n_23,gt_top_i_n_24,gt_top_i_n_25,gt_top_i_n_26,gt_top_i_n_27,gt_top_i_n_28,gt_top_i_n_29,gt_top_i_n_30,gt_top_i_n_31,gt_top_i_n_32,pipe_rx1_eq_new_txcoeff,gt_top_i_n_34,gt_top_i_n_35}),
        .PIPERX2EQLPNEWTXCOEFFORPRESET({gt_top_i_n_36,gt_top_i_n_37,gt_top_i_n_38,gt_top_i_n_39,gt_top_i_n_40,gt_top_i_n_41,gt_top_i_n_42,gt_top_i_n_43,gt_top_i_n_44,gt_top_i_n_45,gt_top_i_n_46,gt_top_i_n_47,gt_top_i_n_48,gt_top_i_n_49,gt_top_i_n_50,pipe_rx2_eq_new_txcoeff,gt_top_i_n_52,gt_top_i_n_53}),
        .PIPERX3EQLPNEWTXCOEFFORPRESET({gt_top_i_n_54,gt_top_i_n_55,gt_top_i_n_56,gt_top_i_n_57,gt_top_i_n_58,gt_top_i_n_59,gt_top_i_n_60,gt_top_i_n_61,gt_top_i_n_62,gt_top_i_n_63,gt_top_i_n_64,gt_top_i_n_65,gt_top_i_n_66,gt_top_i_n_67,gt_top_i_n_68,pipe_rx3_eq_new_txcoeff,gt_top_i_n_70,gt_top_i_n_71}),
        .PIPETXMARGIN(pipe_tx_margin),
        .PIPETXRATE(pipe_tx_rate),
        .PIPE_GEN3_RDY(pipe_rx_syncdone),
        .PIPE_POWERDOWN({pipe_tx3_powerdown,pipe_tx2_powerdown,pipe_tx1_powerdown,pipe_tx0_powerdown}),
        .PIPE_RXDATA({pipe_rx3_data,pipe_rx2_data,pipe_rx1_data,pipe_rx0_data}),
        .PIPE_RXDATAK({pipe_rx3_char_is_k,pipe_rx2_char_is_k,pipe_rx1_char_is_k,pipe_rx0_char_is_k}),
        .PIPE_RXELECIDLE({pipe_rx3_elec_idle,pipe_rx2_elec_idle,pipe_rx1_elec_idle,pipe_rx0_elec_idle}),
        .PIPE_RXEQ_CONTROL({pipe_rx3_eqcontrol,pipe_rx2_eqcontrol,pipe_rx1_eqcontrol,pipe_rx0_eqcontrol}),
        .PIPE_RXEQ_DONE({pipe_rx3_eqdone,pipe_rx2_eqdone,pipe_rx1_eqdone,pipe_rx0_eqdone}),
        .PIPE_RXEQ_LFFS({pipe_rx3_eq_lffs,pipe_rx2_eq_lffs,pipe_rx1_eq_lffs,pipe_rx0_eq_lffs}),
        .PIPE_RXEQ_PRESET({pipe_rx3_eqpreset,pipe_rx2_eqpreset,pipe_rx1_eqpreset,pipe_rx0_eqpreset}),
        .PIPE_RXEQ_TXPRESET({pipe_rx3_eq_txpreset,pipe_rx2_eq_txpreset,pipe_rx1_eq_txpreset,pipe_rx0_eq_txpreset}),
        .PIPE_RXPOLARITY({pipe_rx3_polarity,pipe_rx2_polarity,pipe_rx1_polarity,pipe_rx0_polarity}),
        .PIPE_RXSLIDE(pipe_rx_slide),
        .PIPE_RXSTATUS({gt_top_i_n_151,gt_top_i_n_152,gt_top_i_n_153,gt_top_i_n_154,gt_top_i_n_155,gt_top_i_n_156,gt_top_i_n_157,gt_top_i_n_158,gt_top_i_n_159,gt_top_i_n_160,gt_top_i_n_161,gt_top_i_n_162}),
        .PIPE_TXCOMPLIANCE({pipe_tx3_compliance,pipe_tx2_compliance,pipe_tx1_compliance,pipe_tx0_compliance}),
        .PIPE_TXDATA({pipe_tx3_data,pipe_tx2_data,pipe_tx1_data,pipe_tx0_data}),
        .PIPE_TXDATAK({pipe_tx3_char_is_k,pipe_tx2_char_is_k,pipe_tx1_char_is_k,pipe_tx0_char_is_k}),
        .PIPE_TXELECIDLE({pipe_tx3_elec_idle,pipe_tx2_elec_idle,pipe_tx1_elec_idle,pipe_tx0_elec_idle}),
        .PIPE_TXEQ_COEFF({pipe_tx3_eqcoeff[16:6],pipe_tx3_eqcoeff[4:0],pipe_tx2_eqcoeff[16:6],pipe_tx2_eqcoeff[4:0],pipe_tx1_eqcoeff[16:6],pipe_tx1_eqcoeff[4:0],pipe_tx0_eqcoeff[16:6],pipe_tx0_eqcoeff[4:0]}),
        .PIPE_TXEQ_CONTROL({pipe_tx3_eqcontrol,pipe_tx2_eqcontrol,pipe_tx1_eqcontrol,pipe_tx0_eqcontrol}),
        .PIPE_TXEQ_DEEMPH({pipe_tx3_eqdeemph,pipe_tx2_eqdeemph,pipe_tx1_eqdeemph,pipe_tx0_eqdeemph}),
        .PIPE_TXEQ_DONE({pipe_tx3_eqdone,pipe_tx2_eqdone,pipe_tx1_eqdone,pipe_tx0_eqdone}),
        .PIPE_TXEQ_PRESET({pipe_tx3_eqpreset,pipe_tx2_eqpreset,pipe_tx1_eqpreset,pipe_tx0_eqpreset}),
        .Q(gt_top_i_n_72),
        .USER_RXEQ_ADAPT_DONE(pipe_rx1_eq_adapt_done),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out),
        .pipe_rx0_eq_adapt_done(pipe_rx0_eq_adapt_done),
        .pipe_rx0_eq_lffs_sel(pipe_rx0_eq_lffs_sel),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_rx1_eq_lffs_sel(pipe_rx1_eq_lffs_sel),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_valid(pipe_rx1_valid),
        .pipe_rx2_eq_lffs_sel(pipe_rx2_eq_lffs_sel),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_valid(pipe_rx2_valid),
        .pipe_rx3_eq_lffs_sel(pipe_rx3_eq_lffs_sel),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_valid(pipe_rx3_valid),
        .pipe_rxoutclk_out(pipe_rxoutclk_out),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_swing(pipe_tx_swing),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .pipe_userclk2_in(pipe_userclk2_in),
        .rxeq_adapt_done_reg(pipe_rx2_eq_adapt_done),
        .rxeq_adapt_done_reg_0(pipe_rx3_eq_adapt_done),
        .sys_clk(sys_clk),
        .sys_reset(sys_reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_top pcie_top_i
       (.PCIE_3_0_i(pipe_rx2_eq_adapt_done),
        .PCIE_3_0_i_0(pipe_rx3_eq_adapt_done),
        .PIPERX0EQLPNEWTXCOEFFORPRESET({gt_top_i_n_0,gt_top_i_n_1,gt_top_i_n_2,gt_top_i_n_3,gt_top_i_n_4,gt_top_i_n_5,gt_top_i_n_6,gt_top_i_n_7,gt_top_i_n_8,gt_top_i_n_9,gt_top_i_n_10,gt_top_i_n_11,gt_top_i_n_12,gt_top_i_n_13,gt_top_i_n_14,pipe_rx0_eq_new_txcoeff,gt_top_i_n_16,gt_top_i_n_17}),
        .PIPERX1EQLPNEWTXCOEFFORPRESET({gt_top_i_n_18,gt_top_i_n_19,gt_top_i_n_20,gt_top_i_n_21,gt_top_i_n_22,gt_top_i_n_23,gt_top_i_n_24,gt_top_i_n_25,gt_top_i_n_26,gt_top_i_n_27,gt_top_i_n_28,gt_top_i_n_29,gt_top_i_n_30,gt_top_i_n_31,gt_top_i_n_32,pipe_rx1_eq_new_txcoeff,gt_top_i_n_34,gt_top_i_n_35}),
        .PIPERX2EQLPNEWTXCOEFFORPRESET({gt_top_i_n_36,gt_top_i_n_37,gt_top_i_n_38,gt_top_i_n_39,gt_top_i_n_40,gt_top_i_n_41,gt_top_i_n_42,gt_top_i_n_43,gt_top_i_n_44,gt_top_i_n_45,gt_top_i_n_46,gt_top_i_n_47,gt_top_i_n_48,gt_top_i_n_49,gt_top_i_n_50,pipe_rx2_eq_new_txcoeff,gt_top_i_n_52,gt_top_i_n_53}),
        .PIPERX3EQLPNEWTXCOEFFORPRESET({gt_top_i_n_54,gt_top_i_n_55,gt_top_i_n_56,gt_top_i_n_57,gt_top_i_n_58,gt_top_i_n_59,gt_top_i_n_60,gt_top_i_n_61,gt_top_i_n_62,gt_top_i_n_63,gt_top_i_n_64,gt_top_i_n_65,gt_top_i_n_66,gt_top_i_n_67,gt_top_i_n_68,pipe_rx3_eq_new_txcoeff,gt_top_i_n_70,gt_top_i_n_71}),
        .PIPETXMARGIN(pipe_tx_margin),
        .PIPETXRATE(pipe_tx_rate),
        .PIPE_GEN3_RDY(pipe_rx_syncdone),
        .PIPE_POWERDOWN({pipe_tx3_powerdown,pipe_tx2_powerdown,pipe_tx1_powerdown,pipe_tx0_powerdown}),
        .PIPE_RXDATA({pipe_rx3_data,pipe_rx2_data,pipe_rx1_data,pipe_rx0_data}),
        .PIPE_RXDATAK({pipe_rx3_char_is_k,pipe_rx2_char_is_k,pipe_rx1_char_is_k,pipe_rx0_char_is_k}),
        .PIPE_RXELECIDLE({pipe_rx3_elec_idle,pipe_rx2_elec_idle,pipe_rx1_elec_idle,pipe_rx0_elec_idle}),
        .PIPE_RXEQ_CONTROL({pipe_rx3_eqcontrol,pipe_rx2_eqcontrol,pipe_rx1_eqcontrol,pipe_rx0_eqcontrol}),
        .PIPE_RXEQ_DONE({pipe_rx3_eqdone,pipe_rx2_eqdone,pipe_rx1_eqdone,pipe_rx0_eqdone}),
        .PIPE_RXEQ_LFFS({pipe_rx3_eq_lffs,pipe_rx2_eq_lffs,pipe_rx1_eq_lffs,pipe_rx0_eq_lffs}),
        .PIPE_RXEQ_PRESET({pipe_rx3_eqpreset,pipe_rx2_eqpreset,pipe_rx1_eqpreset,pipe_rx0_eqpreset}),
        .PIPE_RXEQ_TXPRESET({pipe_rx3_eq_txpreset,pipe_rx2_eq_txpreset,pipe_rx1_eq_txpreset,pipe_rx0_eq_txpreset}),
        .PIPE_RXPOLARITY({pipe_rx3_polarity,pipe_rx2_polarity,pipe_rx1_polarity,pipe_rx0_polarity}),
        .PIPE_RXSLIDE(pipe_rx_slide),
        .PIPE_RXSTATUS({gt_top_i_n_151,gt_top_i_n_152,gt_top_i_n_153,gt_top_i_n_154,gt_top_i_n_155,gt_top_i_n_156,gt_top_i_n_157,gt_top_i_n_158,gt_top_i_n_159,gt_top_i_n_160,gt_top_i_n_161,gt_top_i_n_162}),
        .PIPE_TXCOMPLIANCE({pipe_tx3_compliance,pipe_tx2_compliance,pipe_tx1_compliance,pipe_tx0_compliance}),
        .PIPE_TXDATA({pipe_tx3_data,pipe_tx2_data,pipe_tx1_data,pipe_tx0_data}),
        .PIPE_TXDATAK({pipe_tx3_char_is_k,pipe_tx2_char_is_k,pipe_tx1_char_is_k,pipe_tx0_char_is_k}),
        .PIPE_TXELECIDLE({pipe_tx3_elec_idle,pipe_tx2_elec_idle,pipe_tx1_elec_idle,pipe_tx0_elec_idle}),
        .PIPE_TXEQ_COEFF({pipe_tx3_eqcoeff[16:6],pipe_tx3_eqcoeff[4:0],pipe_tx2_eqcoeff[16:6],pipe_tx2_eqcoeff[4:0],pipe_tx1_eqcoeff[16:6],pipe_tx1_eqcoeff[4:0],pipe_tx0_eqcoeff[16:6],pipe_tx0_eqcoeff[4:0]}),
        .PIPE_TXEQ_CONTROL({pipe_tx3_eqcontrol,pipe_tx2_eqcontrol,pipe_tx1_eqcontrol,pipe_tx0_eqcontrol}),
        .PIPE_TXEQ_DEEMPH({pipe_tx3_eqdeemph,pipe_tx2_eqdeemph,pipe_tx1_eqdeemph,pipe_tx0_eqdeemph}),
        .PIPE_TXEQ_DONE({pipe_tx3_eqdone,pipe_tx2_eqdone,pipe_tx1_eqdone,pipe_tx0_eqdone}),
        .PIPE_TXEQ_PRESET({pipe_tx3_eqpreset,pipe_tx2_eqpreset,pipe_tx1_eqpreset,pipe_tx0_eqpreset}),
        .Q(gt_top_i_n_72),
        .USER_RXEQ_ADAPT_DONE(pipe_rx1_eq_adapt_done),
        .cfg_config_space_enable(cfg_config_space_enable),
        .cfg_current_speed(cfg_current_speed),
        .cfg_dpa_substate_change(cfg_dpa_substate_change),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_ds_port_number(cfg_ds_port_number),
        .cfg_dsn(cfg_dsn),
        .cfg_err_cor_in(cfg_err_cor_in),
        .cfg_err_cor_out(cfg_err_cor_out),
        .cfg_err_fatal_out(cfg_err_fatal_out),
        .cfg_err_nonfatal_out(cfg_err_nonfatal_out),
        .cfg_err_uncor_in(cfg_err_uncor_in),
        .cfg_fc_cpld(cfg_fc_cpld),
        .cfg_fc_cplh(cfg_fc_cplh),
        .cfg_fc_npd(cfg_fc_npd),
        .cfg_fc_nph(cfg_fc_nph),
        .cfg_fc_pd(cfg_fc_pd),
        .cfg_fc_ph(cfg_fc_ph),
        .cfg_fc_sel(cfg_fc_sel),
        .cfg_flr_done(cfg_flr_done),
        .cfg_flr_in_process(cfg_flr_in_process),
        .cfg_function_power_state(cfg_function_power_state),
        .cfg_function_status(cfg_function_status),
        .cfg_hot_reset_in(cfg_hot_reset_in),
        .cfg_hot_reset_out(cfg_hot_reset_out),
        .cfg_interrupt_int(cfg_interrupt_int),
        .cfg_interrupt_msi_attr(cfg_interrupt_msi_attr),
        .cfg_interrupt_msi_data(cfg_interrupt_msi_data),
        .cfg_interrupt_msi_enable(cfg_interrupt_msi_enable),
        .cfg_interrupt_msi_fail(cfg_interrupt_msi_fail),
        .cfg_interrupt_msi_function_number(cfg_interrupt_msi_function_number),
        .cfg_interrupt_msi_int(cfg_interrupt_msi_int),
        .cfg_interrupt_msi_mask_update(cfg_interrupt_msi_mask_update),
        .cfg_interrupt_msi_mmenable(cfg_interrupt_msi_mmenable),
        .cfg_interrupt_msi_pending_status(cfg_interrupt_msi_pending_status),
        .cfg_interrupt_msi_select(cfg_interrupt_msi_select),
        .cfg_interrupt_msi_sent(cfg_interrupt_msi_sent),
        .cfg_interrupt_msi_tph_present(cfg_interrupt_msi_tph_present),
        .cfg_interrupt_msi_tph_st_tag(cfg_interrupt_msi_tph_st_tag),
        .cfg_interrupt_msi_tph_type(cfg_interrupt_msi_tph_type),
        .cfg_interrupt_msi_vf_enable(cfg_interrupt_msi_vf_enable),
        .cfg_interrupt_pending(cfg_interrupt_pending),
        .cfg_interrupt_sent(cfg_interrupt_sent),
        .cfg_link_power_state(cfg_link_power_state),
        .cfg_link_training_enable(cfg_link_training_enable),
        .cfg_ltr_enable(cfg_ltr_enable),
        .cfg_ltssm_state(cfg_ltssm_state),
        .cfg_max_payload(cfg_max_payload),
        .cfg_max_read_req(cfg_max_read_req),
        .cfg_mgmt_addr(cfg_mgmt_addr),
        .cfg_mgmt_byte_enable(cfg_mgmt_byte_enable),
        .cfg_mgmt_read(cfg_mgmt_read),
        .cfg_mgmt_read_data(cfg_mgmt_read_data),
        .cfg_mgmt_read_write_done(cfg_mgmt_read_write_done),
        .cfg_mgmt_type1_cfg_reg_access(cfg_mgmt_type1_cfg_reg_access),
        .cfg_mgmt_write(cfg_mgmt_write),
        .cfg_mgmt_write_data(cfg_mgmt_write_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_data(cfg_msg_received_data),
        .cfg_msg_received_type(cfg_msg_received_type),
        .cfg_msg_transmit(cfg_msg_transmit),
        .cfg_msg_transmit_data(cfg_msg_transmit_data),
        .cfg_msg_transmit_done(cfg_msg_transmit_done),
        .cfg_msg_transmit_type(cfg_msg_transmit_type),
        .cfg_negotiated_width(cfg_negotiated_width),
        .cfg_obff_enable(cfg_obff_enable),
        .cfg_per_func_status_control(cfg_per_func_status_control),
        .cfg_per_func_status_data(cfg_per_func_status_data),
        .cfg_per_function_number(cfg_per_function_number),
        .cfg_per_function_output_request(cfg_per_function_output_request),
        .cfg_per_function_update_done(cfg_per_function_update_done),
        .cfg_phy_link_down(cfg_phy_link_down),
        .cfg_phy_link_status(cfg_phy_link_status),
        .cfg_pl_status_change(cfg_pl_status_change),
        .cfg_power_state_change_ack(cfg_power_state_change_ack),
        .cfg_power_state_change_interrupt(cfg_power_state_change_interrupt),
        .cfg_rcb_status(cfg_rcb_status),
        .cfg_req_pm_transition_l23_ready(cfg_req_pm_transition_l23_ready),
        .cfg_subsys_vend_id(cfg_subsys_vend_id),
        .cfg_tph_requester_enable(cfg_tph_requester_enable),
        .cfg_tph_st_mode(cfg_tph_st_mode),
        .cfg_vf_flr_done(cfg_vf_flr_done),
        .cfg_vf_flr_in_process(cfg_vf_flr_in_process),
        .cfg_vf_power_state(cfg_vf_power_state),
        .cfg_vf_status(cfg_vf_status),
        .cfg_vf_tph_requester_enable(cfg_vf_tph_requester_enable),
        .cfg_vf_tph_st_mode(cfg_vf_tph_st_mode),
        .m_axis_cq_tdata(m_axis_cq_tdata),
        .m_axis_cq_tkeep(m_axis_cq_tkeep),
        .m_axis_cq_tlast(m_axis_cq_tlast),
        .m_axis_cq_tready(m_axis_cq_tready),
        .m_axis_cq_tuser(m_axis_cq_tuser),
        .m_axis_cq_tvalid(m_axis_cq_tvalid),
        .m_axis_rc_tdata(m_axis_rc_tdata),
        .m_axis_rc_tkeep(m_axis_rc_tkeep),
        .m_axis_rc_tlast(m_axis_rc_tlast),
        .m_axis_rc_tready(m_axis_rc_tready),
        .m_axis_rc_tuser(m_axis_rc_tuser),
        .m_axis_rc_tvalid(m_axis_rc_tvalid),
        .pcie_cq_np_req(pcie_cq_np_req),
        .pcie_cq_np_req_count(pcie_cq_np_req_count),
        .pcie_rq_seq_num(pcie_rq_seq_num),
        .pcie_rq_seq_num_vld(pcie_rq_seq_num_vld),
        .pcie_rq_tag(pcie_rq_tag),
        .pcie_rq_tag_vld(pcie_rq_tag_vld),
        .pcie_tfc_npd_av(pcie_tfc_npd_av),
        .pcie_tfc_nph_av(pcie_tfc_nph_av),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_eq_adapt_done(pipe_rx0_eq_adapt_done),
        .pipe_rx0_eq_lffs_sel(pipe_rx0_eq_lffs_sel),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_rx1_eq_lffs_sel(pipe_rx1_eq_lffs_sel),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_valid(pipe_rx1_valid),
        .pipe_rx2_eq_lffs_sel(pipe_rx2_eq_lffs_sel),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_valid(pipe_rx2_valid),
        .pipe_rx3_eq_lffs_sel(pipe_rx3_eq_lffs_sel),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_valid(pipe_rx3_valid),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_swing(pipe_tx_swing),
        .pipe_userclk1_in(pipe_userclk1_in),
        .pipe_userclk2_in(pipe_userclk2_in),
        .s_axis_cc_tdata(s_axis_cc_tdata),
        .s_axis_cc_tkeep(s_axis_cc_tkeep),
        .s_axis_cc_tlast(s_axis_cc_tlast),
        .s_axis_cc_tready(s_axis_cc_tready),
        .s_axis_cc_tuser(s_axis_cc_tuser),
        .s_axis_cc_tvalid(s_axis_cc_tvalid),
        .s_axis_rq_tdata(s_axis_rq_tdata),
        .s_axis_rq_tkeep(s_axis_rq_tkeep),
        .s_axis_rq_tlast(s_axis_rq_tlast),
        .s_axis_rq_tready(s_axis_rq_tready),
        .s_axis_rq_tuser(s_axis_rq_tuser),
        .s_axis_rq_tvalid(s_axis_rq_tvalid),
        .sys_reset(sys_reset),
        .sys_reset_0(pcie_top_i_n_960),
        .user_lnk_up(user_lnk_up),
        .user_reset_int(user_reset_int),
        .user_reset_int_reg(pcie_top_i_n_959));
  FDPE user_reset_int_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pcie_top_i_n_959),
        .PRE(pcie_top_i_n_960),
        .Q(user_reset_int));
  FDPE user_reset_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(user_reset_int),
        .PRE(pcie_top_i_n_960),
        .Q(user_reset));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_7vx
   (cfg_err_cor_out,
    cfg_err_fatal_out,
    cfg_err_nonfatal_out,
    cfg_hot_reset_out,
    cfg_input_update_done,
    cfg_interrupt_msi_fail,
    cfg_interrupt_msi_mask_update,
    cfg_interrupt_msi_sent,
    cfg_interrupt_sent,
    cfg_ltr_enable,
    cfg_mc_update_done,
    cfg_mgmt_read_write_done,
    cfg_msg_received,
    cfg_msg_transmit_done,
    cfg_per_function_update_done,
    cfg_phy_link_down,
    cfg_pl_status_change,
    cfg_power_state_change_interrupt,
    cfg_tph_stt_read_enable,
    cfg_tph_stt_write_enable,
    m_axis_cq_tlast,
    m_axis_cq_tvalid,
    m_axis_rc_tlast,
    m_axis_rc_tvalid,
    pcie_rq_seq_num_vld,
    pcie_rq_tag_vld,
    PIPE_RXPOLARITY,
    PIPE_TXCOMPLIANCE,
    PIPE_TXELECIDLE,
    pipe_tx_deemph,
    pipe_tx_rcvr_det,
    pipe_tx_swing,
    cfg_fc_cpld,
    cfg_fc_npd,
    cfg_fc_pd,
    cfg_vf_status,
    cfg_per_func_status_data,
    cfg_vf_power_state,
    cfg_vf_tph_st_mode,
    cfg_dpa_substate_change,
    cfg_flr_in_process,
    cfg_interrupt_msi_enable,
    cfg_link_power_state,
    cfg_obff_enable,
    cfg_phy_link_status,
    cfg_rcb_status,
    cfg_tph_requester_enable,
    pcie_tfc_npd_av,
    pcie_tfc_nph_av,
    PIPERX0EQCONTROL,
    PIPERX1EQCONTROL,
    PIPERX2EQCONTROL,
    PIPERX3EQCONTROL,
    PIPE_TXDATAK,
    PIPE_TXEQ_CONTROL,
    PIPE_POWERDOWN,
    PIPETXRATE,
    m_axis_cq_tdata,
    m_axis_rc_tdata,
    cfg_current_speed,
    cfg_max_payload,
    cfg_max_read_req,
    ADDRARDADDR,
    PIPE_RXEQ_PRESET,
    PIPETXMARGIN,
    cfg_interrupt_msi_data,
    cfg_mgmt_read_data,
    CFGTPHSTTWRITEDATA,
    PIPE_TXDATA,
    cfg_negotiated_width,
    CFGTPHSTTWRITEBYTEVALID,
    pcie_rq_seq_num,
    PIPE_RXEQ_TXPRESET,
    PIPE_TXEQ_PRESET,
    s_axis_cc_tready,
    s_axis_rq_tready,
    cfg_msg_received_type,
    cfg_function_power_state,
    cfg_interrupt_msi_mmenable,
    cfg_interrupt_msi_vf_enable,
    cfg_ltssm_state,
    cfg_tph_st_mode,
    cfg_vf_flr_in_process,
    cfg_vf_tph_requester_enable,
    pcie_cq_np_req_count,
    pcie_rq_tag,
    PIPE_RXEQ_LFFS,
    PIPE_TXEQ_DEEMPH,
    m_axis_rc_tuser,
    cfg_fc_cplh,
    cfg_fc_nph,
    cfg_fc_ph,
    cfg_function_status,
    cfg_msg_received_data,
    m_axis_cq_tkeep,
    m_axis_rc_tkeep,
    PIPE_RXSLIDE,
    m_axis_cq_tuser,
    user_lnk_up,
    user_reset_int_reg,
    sys_reset_0,
    D,
    pipe_userclk1_in,
    cfg_config_space_enable,
    cfg_err_cor_in,
    cfg_err_uncor_in,
    cfg_hot_reset_in,
    Q,
    cfg_interrupt_msi_tph_present,
    cfg_link_training_enable,
    cfg_mgmt_read,
    cfg_mgmt_type1_cfg_reg_access,
    cfg_mgmt_write,
    cfg_msg_transmit,
    cfg_per_function_output_request,
    cfg_power_state_change_ack,
    cfg_req_pm_transition_l23_ready,
    cfg_tph_stt_read_data_valid,
    mgmt_reset_n,
    mgmt_sticky_reset_n,
    pcie_cq_np_req,
    pipe_pclk_in,
    pipe_reset_n,
    PIPE_RXELECIDLE,
    PIPE_RXEQ_DONE,
    pipe_rx0_eq_adapt_done,
    pipe_rx0_eq_lffs_sel,
    pipe_rx0_phy_status,
    pipe_rx0_valid,
    USER_RXEQ_ADAPT_DONE,
    pipe_rx1_eq_lffs_sel,
    pipe_rx1_phy_status,
    pipe_rx1_valid,
    PCIE_3_0_i_0,
    pipe_rx2_eq_lffs_sel,
    pipe_rx2_phy_status,
    pipe_rx2_valid,
    PCIE_3_0_i_1,
    pipe_rx3_eq_lffs_sel,
    pipe_rx3_phy_status,
    pipe_rx3_valid,
    PIPE_TXEQ_DONE,
    pipe_rxusrclk_in,
    reset_n,
    s_axis_cc_tlast,
    s_axis_cc_tvalid,
    s_axis_rq_tlast,
    s_axis_rq_tvalid,
    pipe_userclk2_in,
    cfg_subsys_vend_id,
    PIPERX0EQLPNEWTXCOEFFORPRESET,
    PIPERX1EQLPNEWTXCOEFFORPRESET,
    PIPERX2EQLPNEWTXCOEFFORPRESET,
    PIPERX3EQLPNEWTXCOEFFORPRESET,
    PIPE_TXEQ_COEFF,
    cfg_mgmt_addr,
    cfg_flr_done,
    cfg_interrupt_msi_tph_type,
    cfg_interrupt_pending,
    PIPE_RXDATAK,
    m_axis_cq_tready,
    m_axis_rc_tready,
    s_axis_cc_tdata,
    s_axis_rq_tdata,
    cfg_ds_function_number,
    cfg_fc_sel,
    cfg_interrupt_msi_attr,
    cfg_interrupt_msi_function_number,
    cfg_msg_transmit_type,
    cfg_per_func_status_control,
    cfg_per_function_number,
    PIPE_RXSTATUS,
    cfg_interrupt_msi_int,
    cfg_mgmt_write_data,
    cfg_msg_transmit_data,
    DOADO,
    PIPERX0DATA,
    PIPERX1DATA,
    PIPERX2DATA,
    PIPERX3DATA,
    s_axis_cc_tuser,
    cfg_interrupt_int,
    cfg_interrupt_msi_select,
    cfg_mgmt_byte_enable,
    cfg_ds_device_number,
    s_axis_rq_tuser,
    cfg_vf_flr_done,
    cfg_dsn,
    cfg_interrupt_msi_pending_status,
    cfg_ds_bus_number,
    cfg_ds_port_number,
    PIPE_GEN3_RDY,
    s_axis_cc_tkeep,
    s_axis_rq_tkeep,
    cfg_interrupt_msi_tph_st_tag,
    reset_sync0_reg_0,
    user_reset_int,
    sys_reset);
  output cfg_err_cor_out;
  output cfg_err_fatal_out;
  output cfg_err_nonfatal_out;
  output cfg_hot_reset_out;
  output cfg_input_update_done;
  output cfg_interrupt_msi_fail;
  output cfg_interrupt_msi_mask_update;
  output cfg_interrupt_msi_sent;
  output cfg_interrupt_sent;
  output cfg_ltr_enable;
  output cfg_mc_update_done;
  output cfg_mgmt_read_write_done;
  output cfg_msg_received;
  output cfg_msg_transmit_done;
  output cfg_per_function_update_done;
  output cfg_phy_link_down;
  output cfg_pl_status_change;
  output cfg_power_state_change_interrupt;
  output cfg_tph_stt_read_enable;
  output cfg_tph_stt_write_enable;
  output m_axis_cq_tlast;
  output m_axis_cq_tvalid;
  output m_axis_rc_tlast;
  output m_axis_rc_tvalid;
  output pcie_rq_seq_num_vld;
  output pcie_rq_tag_vld;
  output [3:0]PIPE_RXPOLARITY;
  output [3:0]PIPE_TXCOMPLIANCE;
  output [3:0]PIPE_TXELECIDLE;
  output pipe_tx_deemph;
  output pipe_tx_rcvr_det;
  output pipe_tx_swing;
  output [11:0]cfg_fc_cpld;
  output [11:0]cfg_fc_npd;
  output [11:0]cfg_fc_pd;
  output [11:0]cfg_vf_status;
  output [15:0]cfg_per_func_status_data;
  output [17:0]cfg_vf_power_state;
  output [17:0]cfg_vf_tph_st_mode;
  output [1:0]cfg_dpa_substate_change;
  output [1:0]cfg_flr_in_process;
  output [1:0]cfg_interrupt_msi_enable;
  output [1:0]cfg_link_power_state;
  output [1:0]cfg_obff_enable;
  output [1:0]cfg_phy_link_status;
  output [1:0]cfg_rcb_status;
  output [1:0]cfg_tph_requester_enable;
  output [1:0]pcie_tfc_npd_av;
  output [1:0]pcie_tfc_nph_av;
  output [1:0]PIPERX0EQCONTROL;
  output [1:0]PIPERX1EQCONTROL;
  output [1:0]PIPERX2EQCONTROL;
  output [1:0]PIPERX3EQCONTROL;
  output [7:0]PIPE_TXDATAK;
  output [7:0]PIPE_TXEQ_CONTROL;
  output [7:0]PIPE_POWERDOWN;
  output [1:0]PIPETXRATE;
  output [127:0]m_axis_cq_tdata;
  output [127:0]m_axis_rc_tdata;
  output [2:0]cfg_current_speed;
  output [2:0]cfg_max_payload;
  output [2:0]cfg_max_read_req;
  output [7:0]ADDRARDADDR;
  output [11:0]PIPE_RXEQ_PRESET;
  output [2:0]PIPETXMARGIN;
  output [31:0]cfg_interrupt_msi_data;
  output [31:0]cfg_mgmt_read_data;
  output [31:0]CFGTPHSTTWRITEDATA;
  output [63:0]PIPE_TXDATA;
  output [3:0]cfg_negotiated_width;
  output [3:0]CFGTPHSTTWRITEBYTEVALID;
  output [3:0]pcie_rq_seq_num;
  output [15:0]PIPE_RXEQ_TXPRESET;
  output [15:0]PIPE_TXEQ_PRESET;
  output [3:0]s_axis_cc_tready;
  output [3:0]s_axis_rq_tready;
  output [4:0]cfg_msg_received_type;
  output [5:0]cfg_function_power_state;
  output [5:0]cfg_interrupt_msi_mmenable;
  output [5:0]cfg_interrupt_msi_vf_enable;
  output [5:0]cfg_ltssm_state;
  output [5:0]cfg_tph_st_mode;
  output [5:0]cfg_vf_flr_in_process;
  output [5:0]cfg_vf_tph_requester_enable;
  output [5:0]pcie_cq_np_req_count;
  output [5:0]pcie_rq_tag;
  output [23:0]PIPE_RXEQ_LFFS;
  output [23:0]PIPE_TXEQ_DEEMPH;
  output [74:0]m_axis_rc_tuser;
  output [7:0]cfg_fc_cplh;
  output [7:0]cfg_fc_nph;
  output [7:0]cfg_fc_ph;
  output [7:0]cfg_function_status;
  output [7:0]cfg_msg_received_data;
  output [3:0]m_axis_cq_tkeep;
  output [3:0]m_axis_rc_tkeep;
  output [3:0]PIPE_RXSLIDE;
  output [84:0]m_axis_cq_tuser;
  output user_lnk_up;
  output user_reset_int_reg;
  output sys_reset_0;
  output [0:0]D;
  input pipe_userclk1_in;
  input cfg_config_space_enable;
  input cfg_err_cor_in;
  input cfg_err_uncor_in;
  input cfg_hot_reset_in;
  input [1:0]Q;
  input cfg_interrupt_msi_tph_present;
  input cfg_link_training_enable;
  input cfg_mgmt_read;
  input cfg_mgmt_type1_cfg_reg_access;
  input cfg_mgmt_write;
  input cfg_msg_transmit;
  input cfg_per_function_output_request;
  input cfg_power_state_change_ack;
  input cfg_req_pm_transition_l23_ready;
  input cfg_tph_stt_read_data_valid;
  input mgmt_reset_n;
  input mgmt_sticky_reset_n;
  input pcie_cq_np_req;
  input pipe_pclk_in;
  input pipe_reset_n;
  input [3:0]PIPE_RXELECIDLE;
  input [3:0]PIPE_RXEQ_DONE;
  input pipe_rx0_eq_adapt_done;
  input pipe_rx0_eq_lffs_sel;
  input pipe_rx0_phy_status;
  input pipe_rx0_valid;
  input USER_RXEQ_ADAPT_DONE;
  input pipe_rx1_eq_lffs_sel;
  input pipe_rx1_phy_status;
  input pipe_rx1_valid;
  input PCIE_3_0_i_0;
  input pipe_rx2_eq_lffs_sel;
  input pipe_rx2_phy_status;
  input pipe_rx2_valid;
  input PCIE_3_0_i_1;
  input pipe_rx3_eq_lffs_sel;
  input pipe_rx3_phy_status;
  input pipe_rx3_valid;
  input [3:0]PIPE_TXEQ_DONE;
  input pipe_rxusrclk_in;
  input reset_n;
  input s_axis_cc_tlast;
  input s_axis_cc_tvalid;
  input s_axis_rq_tlast;
  input s_axis_rq_tvalid;
  input pipe_userclk2_in;
  input [15:0]cfg_subsys_vend_id;
  input [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  input [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  input [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  input [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  input [63:0]PIPE_TXEQ_COEFF;
  input [18:0]cfg_mgmt_addr;
  input [1:0]cfg_flr_done;
  input [1:0]cfg_interrupt_msi_tph_type;
  input [1:0]cfg_interrupt_pending;
  input [7:0]PIPE_RXDATAK;
  input m_axis_cq_tready;
  input m_axis_rc_tready;
  input [127:0]s_axis_cc_tdata;
  input [127:0]s_axis_rq_tdata;
  input [2:0]cfg_ds_function_number;
  input [2:0]cfg_fc_sel;
  input [2:0]cfg_interrupt_msi_attr;
  input [2:0]cfg_interrupt_msi_function_number;
  input [2:0]cfg_msg_transmit_type;
  input [2:0]cfg_per_func_status_control;
  input [2:0]cfg_per_function_number;
  input [11:0]PIPE_RXSTATUS;
  input [31:0]cfg_interrupt_msi_int;
  input [31:0]cfg_mgmt_write_data;
  input [31:0]cfg_msg_transmit_data;
  input [31:0]DOADO;
  input [16:0]PIPERX0DATA;
  input [16:0]PIPERX1DATA;
  input [15:0]PIPERX2DATA;
  input [15:0]PIPERX3DATA;
  input [32:0]s_axis_cc_tuser;
  input [3:0]cfg_interrupt_int;
  input [3:0]cfg_interrupt_msi_select;
  input [3:0]cfg_mgmt_byte_enable;
  input [4:0]cfg_ds_device_number;
  input [59:0]s_axis_rq_tuser;
  input [5:0]cfg_vf_flr_done;
  input [63:0]cfg_dsn;
  input [63:0]cfg_interrupt_msi_pending_status;
  input [7:0]cfg_ds_bus_number;
  input [7:0]cfg_ds_port_number;
  input [3:0]PIPE_GEN3_RDY;
  input [3:0]s_axis_cc_tkeep;
  input [3:0]s_axis_rq_tkeep;
  input [8:0]cfg_interrupt_msi_tph_st_tag;
  input reset_sync0_reg_0;
  input user_reset_int;
  input sys_reset;

  wire [7:0]ADDRARDADDR;
  wire [3:0]CFGTPHSTTWRITEBYTEVALID;
  wire [31:0]CFGTPHSTTWRITEDATA;
  wire [0:0]D;
  wire [31:0]DOADO;
  wire [9:0]MICOMPLETIONRAMREADADDRESSAL;
  wire [9:0]MICOMPLETIONRAMREADADDRESSAU;
  wire [9:0]MICOMPLETIONRAMREADADDRESSBL;
  wire [9:0]MICOMPLETIONRAMREADADDRESSBU;
  wire [143:0]MICOMPLETIONRAMREADDATA;
  wire [3:0]MICOMPLETIONRAMREADENABLEL;
  wire [3:0]MICOMPLETIONRAMREADENABLEU;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSAL;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSAU;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSBL;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSBU;
  wire [143:0]MICOMPLETIONRAMWRITEDATA;
  wire [3:0]MICOMPLETIONRAMWRITEENABLEL;
  wire [3:0]MICOMPLETIONRAMWRITEENABLEU;
  wire [8:0]MIREPLAYRAMADDRESS;
  wire [143:0]MIREPLAYRAMREADDATA;
  wire [143:0]MIREPLAYRAMWRITEDATA;
  wire [1:0]MIREPLAYRAMWRITEENABLE;
  wire [8:0]MIREQUESTRAMREADADDRESSA;
  wire [8:0]MIREQUESTRAMREADADDRESSB;
  wire [143:0]MIREQUESTRAMREADDATA;
  wire [3:0]MIREQUESTRAMREADENABLE;
  wire [8:0]MIREQUESTRAMWRITEADDRESSA;
  wire [8:0]MIREQUESTRAMWRITEADDRESSB;
  wire [143:0]MIREQUESTRAMWRITEDATA;
  wire [3:0]MIREQUESTRAMWRITEENABLE;
  wire PCIE_3_0_i_0;
  wire PCIE_3_0_i_1;
  wire PCIE_3_0_i_n_10;
  wire PCIE_3_0_i_n_1166;
  wire PCIE_3_0_i_n_1167;
  wire PCIE_3_0_i_n_1168;
  wire PCIE_3_0_i_n_1169;
  wire PCIE_3_0_i_n_1170;
  wire PCIE_3_0_i_n_1171;
  wire PCIE_3_0_i_n_1172;
  wire PCIE_3_0_i_n_1173;
  wire PCIE_3_0_i_n_1174;
  wire PCIE_3_0_i_n_1175;
  wire PCIE_3_0_i_n_1176;
  wire PCIE_3_0_i_n_1177;
  wire PCIE_3_0_i_n_1178;
  wire PCIE_3_0_i_n_1179;
  wire PCIE_3_0_i_n_1180;
  wire PCIE_3_0_i_n_1181;
  wire PCIE_3_0_i_n_1182;
  wire PCIE_3_0_i_n_1183;
  wire PCIE_3_0_i_n_1184;
  wire PCIE_3_0_i_n_1185;
  wire PCIE_3_0_i_n_1186;
  wire PCIE_3_0_i_n_1187;
  wire PCIE_3_0_i_n_1188;
  wire PCIE_3_0_i_n_1189;
  wire PCIE_3_0_i_n_1190;
  wire PCIE_3_0_i_n_1191;
  wire PCIE_3_0_i_n_1192;
  wire PCIE_3_0_i_n_1193;
  wire PCIE_3_0_i_n_1194;
  wire PCIE_3_0_i_n_1195;
  wire PCIE_3_0_i_n_1196;
  wire PCIE_3_0_i_n_1197;
  wire PCIE_3_0_i_n_14;
  wire PCIE_3_0_i_n_15;
  wire PCIE_3_0_i_n_1550;
  wire PCIE_3_0_i_n_1551;
  wire PCIE_3_0_i_n_1552;
  wire PCIE_3_0_i_n_1553;
  wire PCIE_3_0_i_n_1690;
  wire PCIE_3_0_i_n_1691;
  wire PCIE_3_0_i_n_1692;
  wire PCIE_3_0_i_n_1693;
  wire PCIE_3_0_i_n_1694;
  wire PCIE_3_0_i_n_1695;
  wire PCIE_3_0_i_n_1696;
  wire PCIE_3_0_i_n_1697;
  wire PCIE_3_0_i_n_1698;
  wire PCIE_3_0_i_n_1699;
  wire PCIE_3_0_i_n_17;
  wire PCIE_3_0_i_n_1700;
  wire PCIE_3_0_i_n_1701;
  wire PCIE_3_0_i_n_2053;
  wire PCIE_3_0_i_n_2054;
  wire PCIE_3_0_i_n_2055;
  wire PCIE_3_0_i_n_2056;
  wire PCIE_3_0_i_n_2057;
  wire PCIE_3_0_i_n_2058;
  wire PCIE_3_0_i_n_2059;
  wire PCIE_3_0_i_n_2060;
  wire PCIE_3_0_i_n_2101;
  wire PCIE_3_0_i_n_2102;
  wire PCIE_3_0_i_n_2103;
  wire PCIE_3_0_i_n_2104;
  wire PCIE_3_0_i_n_2109;
  wire PCIE_3_0_i_n_2110;
  wire PCIE_3_0_i_n_2111;
  wire PCIE_3_0_i_n_2112;
  wire PCIE_3_0_i_n_2255;
  wire PCIE_3_0_i_n_2256;
  wire PCIE_3_0_i_n_2257;
  wire PCIE_3_0_i_n_2258;
  wire PCIE_3_0_i_n_2259;
  wire PCIE_3_0_i_n_2260;
  wire PCIE_3_0_i_n_2261;
  wire PCIE_3_0_i_n_2262;
  wire PCIE_3_0_i_n_2263;
  wire PCIE_3_0_i_n_2264;
  wire PCIE_3_0_i_n_29;
  wire PCIE_3_0_i_n_3;
  wire PCIE_3_0_i_n_4;
  wire PCIE_3_0_i_n_433;
  wire PCIE_3_0_i_n_434;
  wire PCIE_3_0_i_n_435;
  wire PCIE_3_0_i_n_436;
  wire PCIE_3_0_i_n_437;
  wire PCIE_3_0_i_n_438;
  wire PCIE_3_0_i_n_439;
  wire PCIE_3_0_i_n_440;
  wire PCIE_3_0_i_n_441;
  wire PCIE_3_0_i_n_442;
  wire PCIE_3_0_i_n_443;
  wire PCIE_3_0_i_n_444;
  wire PCIE_3_0_i_n_445;
  wire PCIE_3_0_i_n_446;
  wire PCIE_3_0_i_n_447;
  wire PCIE_3_0_i_n_448;
  wire PCIE_3_0_i_n_449;
  wire PCIE_3_0_i_n_45;
  wire PCIE_3_0_i_n_450;
  wire PCIE_3_0_i_n_451;
  wire PCIE_3_0_i_n_452;
  wire PCIE_3_0_i_n_453;
  wire PCIE_3_0_i_n_454;
  wire PCIE_3_0_i_n_455;
  wire PCIE_3_0_i_n_456;
  wire PCIE_3_0_i_n_457;
  wire PCIE_3_0_i_n_458;
  wire PCIE_3_0_i_n_459;
  wire PCIE_3_0_i_n_460;
  wire PCIE_3_0_i_n_461;
  wire PCIE_3_0_i_n_462;
  wire PCIE_3_0_i_n_463;
  wire PCIE_3_0_i_n_464;
  wire PCIE_3_0_i_n_47;
  wire PCIE_3_0_i_n_49;
  wire PCIE_3_0_i_n_507;
  wire PCIE_3_0_i_n_508;
  wire PCIE_3_0_i_n_509;
  wire PCIE_3_0_i_n_51;
  wire PCIE_3_0_i_n_510;
  wire PCIE_3_0_i_n_53;
  wire PCIE_3_0_i_n_55;
  wire PCIE_3_0_i_n_553;
  wire PCIE_3_0_i_n_554;
  wire PCIE_3_0_i_n_561;
  wire PCIE_3_0_i_n_562;
  wire PCIE_3_0_i_n_569;
  wire PCIE_3_0_i_n_57;
  wire PCIE_3_0_i_n_570;
  wire PCIE_3_0_i_n_577;
  wire PCIE_3_0_i_n_578;
  wire PCIE_3_0_i_n_59;
  wire PCIE_3_0_i_n_613;
  wire PCIE_3_0_i_n_614;
  wire PCIE_3_0_i_n_615;
  wire PCIE_3_0_i_n_616;
  wire PCIE_3_0_i_n_617;
  wire PCIE_3_0_i_n_618;
  wire PCIE_3_0_i_n_619;
  wire PCIE_3_0_i_n_620;
  wire PCIE_3_0_i_n_621;
  wire PCIE_3_0_i_n_622;
  wire PCIE_3_0_i_n_623;
  wire PCIE_3_0_i_n_624;
  wire PCIE_3_0_i_n_625;
  wire PCIE_3_0_i_n_626;
  wire PCIE_3_0_i_n_627;
  wire PCIE_3_0_i_n_628;
  wire PCIE_3_0_i_n_629;
  wire PCIE_3_0_i_n_630;
  wire PCIE_3_0_i_n_631;
  wire PCIE_3_0_i_n_632;
  wire PCIE_3_0_i_n_633;
  wire PCIE_3_0_i_n_634;
  wire PCIE_3_0_i_n_635;
  wire PCIE_3_0_i_n_636;
  wire PCIE_3_0_i_n_637;
  wire PCIE_3_0_i_n_638;
  wire PCIE_3_0_i_n_639;
  wire PCIE_3_0_i_n_640;
  wire PCIE_3_0_i_n_641;
  wire PCIE_3_0_i_n_642;
  wire PCIE_3_0_i_n_643;
  wire PCIE_3_0_i_n_644;
  wire PCIE_3_0_i_n_645;
  wire PCIE_3_0_i_n_646;
  wire PCIE_3_0_i_n_647;
  wire PCIE_3_0_i_n_648;
  wire PCIE_3_0_i_n_649;
  wire PCIE_3_0_i_n_650;
  wire PCIE_3_0_i_n_651;
  wire PCIE_3_0_i_n_652;
  wire PCIE_3_0_i_n_653;
  wire PCIE_3_0_i_n_654;
  wire PCIE_3_0_i_n_655;
  wire PCIE_3_0_i_n_656;
  wire PCIE_3_0_i_n_657;
  wire PCIE_3_0_i_n_658;
  wire PCIE_3_0_i_n_659;
  wire PCIE_3_0_i_n_660;
  wire PCIE_3_0_i_n_661;
  wire PCIE_3_0_i_n_662;
  wire PCIE_3_0_i_n_663;
  wire PCIE_3_0_i_n_664;
  wire PCIE_3_0_i_n_665;
  wire PCIE_3_0_i_n_666;
  wire PCIE_3_0_i_n_667;
  wire PCIE_3_0_i_n_668;
  wire PCIE_3_0_i_n_669;
  wire PCIE_3_0_i_n_670;
  wire PCIE_3_0_i_n_671;
  wire PCIE_3_0_i_n_672;
  wire PCIE_3_0_i_n_673;
  wire PCIE_3_0_i_n_674;
  wire PCIE_3_0_i_n_675;
  wire PCIE_3_0_i_n_676;
  wire PCIE_3_0_i_n_677;
  wire PCIE_3_0_i_n_678;
  wire PCIE_3_0_i_n_679;
  wire PCIE_3_0_i_n_680;
  wire PCIE_3_0_i_n_681;
  wire PCIE_3_0_i_n_682;
  wire PCIE_3_0_i_n_683;
  wire PCIE_3_0_i_n_684;
  wire PCIE_3_0_i_n_685;
  wire PCIE_3_0_i_n_686;
  wire PCIE_3_0_i_n_687;
  wire PCIE_3_0_i_n_688;
  wire PCIE_3_0_i_n_689;
  wire PCIE_3_0_i_n_690;
  wire PCIE_3_0_i_n_691;
  wire PCIE_3_0_i_n_692;
  wire PCIE_3_0_i_n_693;
  wire PCIE_3_0_i_n_694;
  wire PCIE_3_0_i_n_695;
  wire PCIE_3_0_i_n_696;
  wire PCIE_3_0_i_n_697;
  wire PCIE_3_0_i_n_698;
  wire PCIE_3_0_i_n_699;
  wire PCIE_3_0_i_n_7;
  wire PCIE_3_0_i_n_700;
  wire PCIE_3_0_i_n_701;
  wire PCIE_3_0_i_n_702;
  wire PCIE_3_0_i_n_703;
  wire PCIE_3_0_i_n_704;
  wire PCIE_3_0_i_n_705;
  wire PCIE_3_0_i_n_706;
  wire PCIE_3_0_i_n_707;
  wire PCIE_3_0_i_n_708;
  wire PCIE_3_0_i_n_709;
  wire PCIE_3_0_i_n_710;
  wire PCIE_3_0_i_n_711;
  wire PCIE_3_0_i_n_712;
  wire PCIE_3_0_i_n_713;
  wire PCIE_3_0_i_n_714;
  wire PCIE_3_0_i_n_715;
  wire PCIE_3_0_i_n_716;
  wire PCIE_3_0_i_n_717;
  wire PCIE_3_0_i_n_718;
  wire PCIE_3_0_i_n_719;
  wire PCIE_3_0_i_n_720;
  wire PCIE_3_0_i_n_721;
  wire PCIE_3_0_i_n_722;
  wire PCIE_3_0_i_n_723;
  wire PCIE_3_0_i_n_724;
  wire PCIE_3_0_i_n_725;
  wire PCIE_3_0_i_n_726;
  wire PCIE_3_0_i_n_727;
  wire PCIE_3_0_i_n_728;
  wire PCIE_3_0_i_n_729;
  wire PCIE_3_0_i_n_730;
  wire PCIE_3_0_i_n_731;
  wire PCIE_3_0_i_n_732;
  wire PCIE_3_0_i_n_733;
  wire PCIE_3_0_i_n_734;
  wire PCIE_3_0_i_n_735;
  wire PCIE_3_0_i_n_736;
  wire PCIE_3_0_i_n_737;
  wire PCIE_3_0_i_n_738;
  wire PCIE_3_0_i_n_739;
  wire PCIE_3_0_i_n_740;
  wire PCIE_3_0_i_n_741;
  wire PCIE_3_0_i_n_742;
  wire PCIE_3_0_i_n_8;
  wire PCIE_3_0_i_n_80;
  wire PCIE_3_0_i_n_871;
  wire PCIE_3_0_i_n_872;
  wire PCIE_3_0_i_n_873;
  wire PCIE_3_0_i_n_874;
  wire PCIE_3_0_i_n_875;
  wire PCIE_3_0_i_n_876;
  wire PCIE_3_0_i_n_877;
  wire PCIE_3_0_i_n_878;
  wire PCIE_3_0_i_n_879;
  wire PCIE_3_0_i_n_880;
  wire PCIE_3_0_i_n_881;
  wire PCIE_3_0_i_n_882;
  wire PCIE_3_0_i_n_883;
  wire PCIE_3_0_i_n_884;
  wire PCIE_3_0_i_n_885;
  wire PCIE_3_0_i_n_886;
  wire PCIE_3_0_i_n_887;
  wire PCIE_3_0_i_n_888;
  wire PCIE_3_0_i_n_889;
  wire PCIE_3_0_i_n_890;
  wire PCIE_3_0_i_n_891;
  wire PCIE_3_0_i_n_892;
  wire PCIE_3_0_i_n_893;
  wire PCIE_3_0_i_n_894;
  wire PCIE_3_0_i_n_895;
  wire PCIE_3_0_i_n_896;
  wire PCIE_3_0_i_n_897;
  wire PCIE_3_0_i_n_898;
  wire PCIE_3_0_i_n_899;
  wire PCIE_3_0_i_n_9;
  wire PCIE_3_0_i_n_900;
  wire PCIE_3_0_i_n_901;
  wire PCIE_3_0_i_n_902;
  wire PCIE_3_0_i_n_903;
  wire PCIE_3_0_i_n_904;
  wire PCIE_3_0_i_n_905;
  wire PCIE_3_0_i_n_906;
  wire PCIE_3_0_i_n_907;
  wire PCIE_3_0_i_n_908;
  wire PCIE_3_0_i_n_909;
  wire PCIE_3_0_i_n_910;
  wire PCIE_3_0_i_n_911;
  wire PCIE_3_0_i_n_912;
  wire PCIE_3_0_i_n_913;
  wire PCIE_3_0_i_n_914;
  wire PCIE_3_0_i_n_915;
  wire PCIE_3_0_i_n_916;
  wire PCIE_3_0_i_n_917;
  wire PCIE_3_0_i_n_918;
  wire PCIE_3_0_i_n_919;
  wire PCIE_3_0_i_n_920;
  wire PCIE_3_0_i_n_921;
  wire PCIE_3_0_i_n_922;
  wire PCIE_3_0_i_n_923;
  wire PCIE_3_0_i_n_924;
  wire PCIE_3_0_i_n_925;
  wire PCIE_3_0_i_n_926;
  wire PCIE_3_0_i_n_927;
  wire PCIE_3_0_i_n_928;
  wire PCIE_3_0_i_n_929;
  wire PCIE_3_0_i_n_930;
  wire PCIE_3_0_i_n_931;
  wire PCIE_3_0_i_n_932;
  wire PCIE_3_0_i_n_933;
  wire PCIE_3_0_i_n_934;
  wire PCIE_3_0_i_n_935;
  wire PCIE_3_0_i_n_936;
  wire PCIE_3_0_i_n_937;
  wire PCIE_3_0_i_n_938;
  wire PCIE_3_0_i_n_939;
  wire PCIE_3_0_i_n_940;
  wire PCIE_3_0_i_n_941;
  wire PCIE_3_0_i_n_942;
  wire PCIE_3_0_i_n_943;
  wire PCIE_3_0_i_n_944;
  wire PCIE_3_0_i_n_945;
  wire PCIE_3_0_i_n_946;
  wire PCIE_3_0_i_n_947;
  wire PCIE_3_0_i_n_948;
  wire PCIE_3_0_i_n_949;
  wire PCIE_3_0_i_n_950;
  wire PCIE_3_0_i_n_951;
  wire PCIE_3_0_i_n_952;
  wire PCIE_3_0_i_n_953;
  wire PCIE_3_0_i_n_954;
  wire PCIE_3_0_i_n_955;
  wire PCIE_3_0_i_n_956;
  wire PCIE_3_0_i_n_957;
  wire PCIE_3_0_i_n_958;
  wire PCIE_3_0_i_n_959;
  wire PCIE_3_0_i_n_960;
  wire PCIE_3_0_i_n_961;
  wire PCIE_3_0_i_n_962;
  wire PCIE_3_0_i_n_963;
  wire PCIE_3_0_i_n_964;
  wire PCIE_3_0_i_n_965;
  wire PCIE_3_0_i_n_966;
  wire PCIE_3_0_i_n_967;
  wire PCIE_3_0_i_n_968;
  wire PCIE_3_0_i_n_969;
  wire PCIE_3_0_i_n_970;
  wire PCIE_3_0_i_n_971;
  wire PCIE_3_0_i_n_972;
  wire PCIE_3_0_i_n_973;
  wire PCIE_3_0_i_n_974;
  wire PCIE_3_0_i_n_975;
  wire PCIE_3_0_i_n_976;
  wire PCIE_3_0_i_n_977;
  wire PCIE_3_0_i_n_978;
  wire PCIE_3_0_i_n_979;
  wire PCIE_3_0_i_n_980;
  wire PCIE_3_0_i_n_981;
  wire PCIE_3_0_i_n_982;
  wire PCIE_3_0_i_n_983;
  wire PCIE_3_0_i_n_984;
  wire PCIE_3_0_i_n_985;
  wire PCIE_3_0_i_n_986;
  wire PCIE_3_0_i_n_987;
  wire PCIE_3_0_i_n_988;
  wire PCIE_3_0_i_n_989;
  wire PCIE_3_0_i_n_990;
  wire PCIE_3_0_i_n_991;
  wire PCIE_3_0_i_n_992;
  wire PCIE_3_0_i_n_993;
  wire PCIE_3_0_i_n_994;
  wire PCIE_3_0_i_n_995;
  wire PCIE_3_0_i_n_996;
  wire PCIE_3_0_i_n_997;
  wire PCIE_3_0_i_n_998;
  wire [16:0]PIPERX0DATA;
  wire [1:0]PIPERX0EQCONTROL;
  wire [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  wire [16:0]PIPERX1DATA;
  wire [1:0]PIPERX1EQCONTROL;
  wire [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  wire [15:0]PIPERX2DATA;
  wire [1:0]PIPERX2EQCONTROL;
  wire [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  wire [15:0]PIPERX3DATA;
  wire [1:0]PIPERX3EQCONTROL;
  wire [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  wire [2:0]PIPETXMARGIN;
  wire [1:0]PIPETXRATE;
  wire [3:0]PIPE_GEN3_RDY;
  wire [7:0]PIPE_POWERDOWN;
  wire [7:0]PIPE_RXDATAK;
  wire [3:0]PIPE_RXELECIDLE;
  wire [3:0]PIPE_RXEQ_DONE;
  wire [23:0]PIPE_RXEQ_LFFS;
  wire [11:0]PIPE_RXEQ_PRESET;
  wire [15:0]PIPE_RXEQ_TXPRESET;
  wire [3:0]PIPE_RXPOLARITY;
  wire [3:0]PIPE_RXSLIDE;
  wire [11:0]PIPE_RXSTATUS;
  wire [3:0]PIPE_TXCOMPLIANCE;
  wire [63:0]PIPE_TXDATA;
  wire [7:0]PIPE_TXDATAK;
  wire [3:0]PIPE_TXELECIDLE;
  wire [63:0]PIPE_TXEQ_COEFF;
  wire [7:0]PIPE_TXEQ_CONTROL;
  wire [23:0]PIPE_TXEQ_DEEMPH;
  wire [3:0]PIPE_TXEQ_DONE;
  wire [15:0]PIPE_TXEQ_PRESET;
  wire [1:0]Q;
  wire USER_RXEQ_ADAPT_DONE;
  wire cfg_config_space_enable;
  wire [2:0]cfg_current_speed;
  wire [1:0]cfg_dpa_substate_change;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [7:0]cfg_ds_port_number;
  wire [63:0]cfg_dsn;
  wire cfg_err_cor_in;
  wire cfg_err_cor_out;
  wire cfg_err_fatal_out;
  wire cfg_err_nonfatal_out;
  wire cfg_err_uncor_in;
  wire [11:0]cfg_fc_cpld;
  wire [7:0]cfg_fc_cplh;
  wire [11:0]cfg_fc_npd;
  wire [7:0]cfg_fc_nph;
  wire [11:0]cfg_fc_pd;
  wire [7:0]cfg_fc_ph;
  wire [2:0]cfg_fc_sel;
  wire [1:0]cfg_flr_done;
  wire [1:0]cfg_flr_in_process;
  wire [5:0]cfg_function_power_state;
  wire [7:0]cfg_function_status;
  wire cfg_hot_reset_in;
  wire cfg_hot_reset_out;
  wire cfg_input_update_done;
  wire [3:0]cfg_interrupt_int;
  wire [2:0]cfg_interrupt_msi_attr;
  wire [31:0]cfg_interrupt_msi_data;
  wire [1:0]cfg_interrupt_msi_enable;
  wire cfg_interrupt_msi_fail;
  wire [2:0]cfg_interrupt_msi_function_number;
  wire [31:0]cfg_interrupt_msi_int;
  wire cfg_interrupt_msi_mask_update;
  wire [5:0]cfg_interrupt_msi_mmenable;
  wire [63:0]cfg_interrupt_msi_pending_status;
  wire [3:0]cfg_interrupt_msi_select;
  wire cfg_interrupt_msi_sent;
  wire cfg_interrupt_msi_tph_present;
  wire [8:0]cfg_interrupt_msi_tph_st_tag;
  wire [1:0]cfg_interrupt_msi_tph_type;
  wire [5:0]cfg_interrupt_msi_vf_enable;
  wire [1:0]cfg_interrupt_pending;
  wire cfg_interrupt_sent;
  wire [1:0]cfg_link_power_state;
  wire cfg_link_training_enable;
  wire cfg_ltr_enable;
  wire [5:0]cfg_ltssm_state;
  wire [2:0]cfg_max_payload;
  wire [2:0]cfg_max_read_req;
  wire cfg_mc_update_done;
  wire [18:0]cfg_mgmt_addr;
  wire [3:0]cfg_mgmt_byte_enable;
  wire cfg_mgmt_read;
  wire [31:0]cfg_mgmt_read_data;
  wire cfg_mgmt_read_write_done;
  wire cfg_mgmt_type1_cfg_reg_access;
  wire cfg_mgmt_write;
  wire [31:0]cfg_mgmt_write_data;
  wire cfg_msg_received;
  wire [7:0]cfg_msg_received_data;
  wire [4:0]cfg_msg_received_type;
  wire cfg_msg_transmit;
  wire [31:0]cfg_msg_transmit_data;
  wire cfg_msg_transmit_done;
  wire [2:0]cfg_msg_transmit_type;
  wire [3:0]cfg_negotiated_width;
  wire [1:0]cfg_obff_enable;
  wire [2:0]cfg_per_func_status_control;
  wire [15:0]cfg_per_func_status_data;
  wire [2:0]cfg_per_function_number;
  wire cfg_per_function_output_request;
  wire cfg_per_function_update_done;
  wire cfg_phy_link_down;
  wire [1:0]cfg_phy_link_status;
  wire cfg_pl_status_change;
  wire cfg_power_state_change_ack;
  wire cfg_power_state_change_interrupt;
  wire [1:0]cfg_rcb_status;
  wire cfg_req_pm_transition_l23_ready;
  wire [15:0]cfg_subsys_vend_id;
  wire [1:0]cfg_tph_requester_enable;
  wire [5:0]cfg_tph_st_mode;
  wire cfg_tph_stt_read_data_valid;
  wire cfg_tph_stt_read_enable;
  wire cfg_tph_stt_write_enable;
  wire [5:0]cfg_vf_flr_done;
  wire [5:0]cfg_vf_flr_in_process;
  wire [17:0]cfg_vf_power_state;
  wire [11:0]cfg_vf_status;
  wire [5:0]cfg_vf_tph_requester_enable;
  wire [17:0]cfg_vf_tph_st_mode;
  wire [127:0]m_axis_cq_tdata;
  wire [3:0]m_axis_cq_tkeep;
  wire m_axis_cq_tlast;
  wire m_axis_cq_tready;
  wire [84:0]m_axis_cq_tuser;
  wire m_axis_cq_tvalid;
  wire [127:0]m_axis_rc_tdata;
  wire [3:0]m_axis_rc_tkeep;
  wire m_axis_rc_tlast;
  wire m_axis_rc_tready;
  wire [74:0]m_axis_rc_tuser;
  wire m_axis_rc_tvalid;
  wire mgmt_reset_n;
  wire mgmt_sticky_reset_n;
  wire pcie_cq_np_req;
  wire [5:0]pcie_cq_np_req_count;
  wire [3:0]pcie_rq_seq_num;
  wire pcie_rq_seq_num_vld;
  wire [5:0]pcie_rq_tag;
  wire pcie_rq_tag_vld;
  wire [1:0]pcie_tfc_npd_av;
  wire [1:0]pcie_tfc_nph_av;
  wire pipe_pclk_in;
  wire pipe_reset_n;
  wire pipe_rx0_eq_adapt_done;
  wire pipe_rx0_eq_lffs_sel;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_valid;
  wire pipe_rx1_eq_lffs_sel;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_valid;
  wire pipe_rx2_eq_lffs_sel;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_valid;
  wire pipe_rx3_eq_lffs_sel;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_valid;
  wire [1:0]pipe_rx4_eqcontrol_pcie;
  wire [5:0]pipe_rx4_eqlp_lffs;
  wire [3:0]pipe_rx4_eqlp_txpreset;
  wire [2:0]pipe_rx4_eqpreset;
  wire pipe_rx4_polarity;
  wire [1:0]pipe_rx5_eqcontrol_pcie;
  wire [5:0]pipe_rx5_eqlp_lffs;
  wire [3:0]pipe_rx5_eqlp_txpreset;
  wire [2:0]pipe_rx5_eqpreset;
  wire pipe_rx5_polarity;
  wire [1:0]pipe_rx6_eqcontrol_pcie;
  wire [5:0]pipe_rx6_eqlp_lffs;
  wire [3:0]pipe_rx6_eqlp_txpreset;
  wire [2:0]pipe_rx6_eqpreset;
  wire pipe_rx6_polarity;
  wire [1:0]pipe_rx7_eqcontrol_pcie;
  wire [5:0]pipe_rx7_eqlp_lffs;
  wire [3:0]pipe_rx7_eqlp_txpreset;
  wire [2:0]pipe_rx7_eqpreset;
  wire pipe_rx7_polarity;
  wire [7:4]pipe_rx_slide;
  wire pipe_rxusrclk_in;
  wire [31:16]pipe_tx0_data;
  wire [31:16]pipe_tx1_data;
  wire [31:16]pipe_tx2_data;
  wire [31:16]pipe_tx3_data;
  wire [1:0]pipe_tx4_char_is_k;
  wire pipe_tx4_compliance;
  wire [31:0]pipe_tx4_data;
  wire pipe_tx4_data_valid;
  wire pipe_tx4_elec_idle;
  wire [1:0]pipe_tx4_eqcontrol;
  wire [5:0]pipe_tx4_eqdeemph;
  wire [3:0]pipe_tx4_eqpreset;
  wire [1:0]pipe_tx4_powerdown;
  wire pipe_tx4_start_block;
  wire [1:0]pipe_tx4_syncheader;
  wire [1:0]pipe_tx5_char_is_k;
  wire pipe_tx5_compliance;
  wire [31:0]pipe_tx5_data;
  wire pipe_tx5_data_valid;
  wire pipe_tx5_elec_idle;
  wire [1:0]pipe_tx5_eqcontrol;
  wire [5:0]pipe_tx5_eqdeemph;
  wire [3:0]pipe_tx5_eqpreset;
  wire [1:0]pipe_tx5_powerdown;
  wire pipe_tx5_start_block;
  wire [1:0]pipe_tx5_syncheader;
  wire [1:0]pipe_tx6_char_is_k;
  wire pipe_tx6_compliance;
  wire [31:0]pipe_tx6_data;
  wire pipe_tx6_data_valid;
  wire pipe_tx6_elec_idle;
  wire [1:0]pipe_tx6_eqcontrol;
  wire [5:0]pipe_tx6_eqdeemph;
  wire [3:0]pipe_tx6_eqpreset;
  wire [1:0]pipe_tx6_powerdown;
  wire pipe_tx6_start_block;
  wire [1:0]pipe_tx6_syncheader;
  wire [1:0]pipe_tx7_char_is_k;
  wire pipe_tx7_compliance;
  wire [31:0]pipe_tx7_data;
  wire pipe_tx7_data_valid;
  wire pipe_tx7_elec_idle;
  wire [1:0]pipe_tx7_eqcontrol;
  wire [5:0]pipe_tx7_eqdeemph;
  wire [3:0]pipe_tx7_eqpreset;
  wire [1:0]pipe_tx7_powerdown;
  wire pipe_tx7_start_block;
  wire [1:0]pipe_tx7_syncheader;
  wire pipe_tx_deemph;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_reset;
  wire pipe_tx_swing;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire reset_n;
  wire reset_sync0;
  wire reset_sync0_reg_0;
  wire reset_sync1;
  wire [127:0]s_axis_cc_tdata;
  wire [3:0]s_axis_cc_tkeep;
  wire s_axis_cc_tlast;
  wire [3:0]s_axis_cc_tready;
  wire [32:0]s_axis_cc_tuser;
  wire s_axis_cc_tvalid;
  wire [127:0]s_axis_rq_tdata;
  wire [3:0]s_axis_rq_tkeep;
  wire s_axis_rq_tlast;
  wire [3:0]s_axis_rq_tready;
  wire [59:0]s_axis_rq_tuser;
  wire s_axis_rq_tvalid;
  wire sys_reset;
  wire sys_reset_0;
  wire user_lnk_up;
  wire user_reset_int;
  wire user_reset_int_reg;
  wire [1:0]NLW_PCIE_3_0_i_MIREPLAYRAMREADENABLE_UNCONNECTED;
  wire [1:0]NLW_PCIE_3_0_i_PCIERQTAGAV_UNCONNECTED;

  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_reg_state[3]_i_1 
       (.I0(cfg_input_update_done),
        .I1(Q[1]),
        .I2(cfg_mc_update_done),
        .I3(Q[0]),
        .O(D));
  (* BOX_TYPE = "PRIMITIVE" *) 
  PCIE_3_0 #(
    .ARI_CAP_ENABLE("FALSE"),
    .AXISTEN_IF_CC_ALIGNMENT_MODE("FALSE"),
    .AXISTEN_IF_CC_PARITY_CHK("FALSE"),
    .AXISTEN_IF_CQ_ALIGNMENT_MODE("FALSE"),
    .AXISTEN_IF_ENABLE_CLIENT_TAG("FALSE"),
    .AXISTEN_IF_ENABLE_MSG_ROUTE(18'h00000),
    .AXISTEN_IF_ENABLE_RX_MSG_INTFC("FALSE"),
    .AXISTEN_IF_RC_ALIGNMENT_MODE("FALSE"),
    .AXISTEN_IF_RC_STRADDLE("FALSE"),
    .AXISTEN_IF_RQ_ALIGNMENT_MODE("FALSE"),
    .AXISTEN_IF_RQ_PARITY_CHK("FALSE"),
    .AXISTEN_IF_WIDTH(2'h1),
    .CRM_CORE_CLK_FREQ_500("FALSE"),
    .CRM_USER_CLK_FREQ(2'h1),
    .DNSTREAM_LINK_NUM(8'h00),
    .GEN3_PCS_AUTO_REALIGN(2'h1),
    .GEN3_PCS_RX_ELECIDLE_INTERNAL("TRUE"),
    .LL_ACK_TIMEOUT(9'h000),
    .LL_ACK_TIMEOUT_EN("FALSE"),
    .LL_ACK_TIMEOUT_FUNC(0),
    .LL_CPL_FC_UPDATE_TIMER(16'h0000),
    .LL_CPL_FC_UPDATE_TIMER_OVERRIDE("FALSE"),
    .LL_FC_UPDATE_TIMER(16'h0000),
    .LL_FC_UPDATE_TIMER_OVERRIDE("FALSE"),
    .LL_NP_FC_UPDATE_TIMER(16'h0000),
    .LL_NP_FC_UPDATE_TIMER_OVERRIDE("FALSE"),
    .LL_P_FC_UPDATE_TIMER(16'h0000),
    .LL_P_FC_UPDATE_TIMER_OVERRIDE("FALSE"),
    .LL_REPLAY_TIMEOUT(9'h000),
    .LL_REPLAY_TIMEOUT_EN("FALSE"),
    .LL_REPLAY_TIMEOUT_FUNC(0),
    .LTR_TX_MESSAGE_MINIMUM_INTERVAL(10'h0FA),
    .LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE("FALSE"),
    .LTR_TX_MESSAGE_ON_LTR_ENABLE("FALSE"),
    .PF0_AER_CAP_ECRC_CHECK_CAPABLE("FALSE"),
    .PF0_AER_CAP_ECRC_GEN_CAPABLE("FALSE"),
    .PF0_AER_CAP_NEXTPTR(12'h000),
    .PF0_ARI_CAP_NEXTPTR(12'h000),
    .PF0_ARI_CAP_NEXT_FUNC(8'h00),
    .PF0_ARI_CAP_VER(4'h1),
    .PF0_BAR0_APERTURE_SIZE(5'h0D),
    .PF0_BAR0_CONTROL(3'h4),
    .PF0_BAR1_APERTURE_SIZE(5'h00),
    .PF0_BAR1_CONTROL(3'h0),
    .PF0_BAR2_APERTURE_SIZE(5'h00),
    .PF0_BAR2_CONTROL(3'h0),
    .PF0_BAR3_APERTURE_SIZE(5'h00),
    .PF0_BAR3_CONTROL(3'h0),
    .PF0_BAR4_APERTURE_SIZE(5'h00),
    .PF0_BAR4_CONTROL(3'h0),
    .PF0_BAR5_APERTURE_SIZE(5'h00),
    .PF0_BAR5_CONTROL(3'h0),
    .PF0_BIST_REGISTER(8'h00),
    .PF0_CAPABILITY_POINTER(8'h80),
    .PF0_CLASS_CODE(24'h058000),
    .PF0_DEVICE_ID(16'h7024),
    .PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT("FALSE"),
    .PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT("FALSE"),
    .PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT("FALSE"),
    .PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE("TRUE"),
    .PF0_DEV_CAP2_LTR_SUPPORT("FALSE"),
    .PF0_DEV_CAP2_OBFF_SUPPORT(2'h0),
    .PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT("FALSE"),
    .PF0_DEV_CAP_ENDPOINT_L0S_LATENCY(0),
    .PF0_DEV_CAP_ENDPOINT_L1_LATENCY(0),
    .PF0_DEV_CAP_EXT_TAG_SUPPORTED("FALSE"),
    .PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE("FALSE"),
    .PF0_DEV_CAP_MAX_PAYLOAD_SIZE(3'h2),
    .PF0_DPA_CAP_NEXTPTR(12'h000),
    .PF0_DPA_CAP_SUB_STATE_CONTROL(5'h00),
    .PF0_DPA_CAP_SUB_STATE_CONTROL_EN("TRUE"),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7(8'h00),
    .PF0_DPA_CAP_VER(4'h1),
    .PF0_DSN_CAP_NEXTPTR(12'h000),
    .PF0_EXPANSION_ROM_APERTURE_SIZE(5'h00),
    .PF0_EXPANSION_ROM_ENABLE("FALSE"),
    .PF0_INTERRUPT_LINE(8'h00),
    .PF0_INTERRUPT_PIN(3'h1),
    .PF0_LINK_CAP_ASPM_SUPPORT(0),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3(7),
    .PF0_LINK_STATUS_SLOT_CLOCK_CONFIG("TRUE"),
    .PF0_LTR_CAP_MAX_NOSNOOP_LAT(10'h000),
    .PF0_LTR_CAP_MAX_SNOOP_LAT(10'h000),
    .PF0_LTR_CAP_NEXTPTR(12'h000),
    .PF0_LTR_CAP_VER(4'h1),
    .PF0_MSIX_CAP_NEXTPTR(8'h00),
    .PF0_MSIX_CAP_PBA_BIR(0),
    .PF0_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .PF0_MSIX_CAP_TABLE_BIR(0),
    .PF0_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .PF0_MSIX_CAP_TABLE_SIZE(11'h000),
    .PF0_MSI_CAP_MULTIMSGCAP(0),
    .PF0_MSI_CAP_NEXTPTR(8'hC0),
    .PF0_PB_CAP_NEXTPTR(12'h000),
    .PF0_PB_CAP_SYSTEM_ALLOCATED("FALSE"),
    .PF0_PB_CAP_VER(4'h1),
    .PF0_PM_CAP_ID(8'h01),
    .PF0_PM_CAP_NEXTPTR(8'h90),
    .PF0_PM_CAP_PMESUPPORT_D0("FALSE"),
    .PF0_PM_CAP_PMESUPPORT_D1("FALSE"),
    .PF0_PM_CAP_PMESUPPORT_D3HOT("FALSE"),
    .PF0_PM_CAP_SUPP_D1_STATE("FALSE"),
    .PF0_PM_CAP_VER_ID(3'h3),
    .PF0_PM_CSR_NOSOFTRESET("TRUE"),
    .PF0_RBAR_CAP_ENABLE("FALSE"),
    .PF0_RBAR_CAP_INDEX0(3'h0),
    .PF0_RBAR_CAP_INDEX1(3'h0),
    .PF0_RBAR_CAP_INDEX2(3'h0),
    .PF0_RBAR_CAP_NEXTPTR(12'h000),
    .PF0_RBAR_CAP_SIZE0(20'h00000),
    .PF0_RBAR_CAP_SIZE1(20'h00000),
    .PF0_RBAR_CAP_SIZE2(20'h00000),
    .PF0_RBAR_CAP_VER(4'h1),
    .PF0_RBAR_NUM(3'h1),
    .PF0_REVISION_ID(8'h00),
    .PF0_SRIOV_BAR0_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR0_CONTROL(3'h0),
    .PF0_SRIOV_BAR1_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR1_CONTROL(3'h0),
    .PF0_SRIOV_BAR2_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR2_CONTROL(3'h0),
    .PF0_SRIOV_BAR3_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR3_CONTROL(3'h0),
    .PF0_SRIOV_BAR4_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR4_CONTROL(3'h0),
    .PF0_SRIOV_BAR5_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR5_CONTROL(3'h0),
    .PF0_SRIOV_CAP_INITIAL_VF(16'h0000),
    .PF0_SRIOV_CAP_NEXTPTR(12'h000),
    .PF0_SRIOV_CAP_TOTAL_VF(16'h0000),
    .PF0_SRIOV_CAP_VER(4'h0),
    .PF0_SRIOV_FIRST_VF_OFFSET(16'h0000),
    .PF0_SRIOV_FUNC_DEP_LINK(16'h0000),
    .PF0_SRIOV_SUPPORTED_PAGE_SIZE(32'h00000553),
    .PF0_SRIOV_VF_DEVICE_ID(16'h0000),
    .PF0_SUBSYSTEM_ID(16'h0007),
    .PF0_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .PF0_TPHR_CAP_ENABLE("FALSE"),
    .PF0_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .PF0_TPHR_CAP_NEXTPTR(12'h000),
    .PF0_TPHR_CAP_ST_MODE_SEL(3'h0),
    .PF0_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .PF0_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .PF0_TPHR_CAP_VER(4'h1),
    .PF0_VC_CAP_NEXTPTR(12'h000),
    .PF0_VC_CAP_VER(4'h1),
    .PF1_AER_CAP_ECRC_CHECK_CAPABLE("FALSE"),
    .PF1_AER_CAP_ECRC_GEN_CAPABLE("FALSE"),
    .PF1_AER_CAP_NEXTPTR(12'h000),
    .PF1_ARI_CAP_NEXTPTR(12'h000),
    .PF1_ARI_CAP_NEXT_FUNC(8'h00),
    .PF1_BAR0_APERTURE_SIZE(5'h00),
    .PF1_BAR0_CONTROL(3'h0),
    .PF1_BAR1_APERTURE_SIZE(5'h00),
    .PF1_BAR1_CONTROL(3'h0),
    .PF1_BAR2_APERTURE_SIZE(5'h00),
    .PF1_BAR2_CONTROL(3'h0),
    .PF1_BAR3_APERTURE_SIZE(5'h00),
    .PF1_BAR3_CONTROL(3'h0),
    .PF1_BAR4_APERTURE_SIZE(5'h00),
    .PF1_BAR4_CONTROL(3'h0),
    .PF1_BAR5_APERTURE_SIZE(5'h00),
    .PF1_BAR5_CONTROL(3'h0),
    .PF1_BIST_REGISTER(8'h00),
    .PF1_CAPABILITY_POINTER(8'h80),
    .PF1_CLASS_CODE(24'h058000),
    .PF1_DEVICE_ID(16'h7011),
    .PF1_DEV_CAP_MAX_PAYLOAD_SIZE(3'h2),
    .PF1_DPA_CAP_NEXTPTR(12'h000),
    .PF1_DPA_CAP_SUB_STATE_CONTROL(5'h00),
    .PF1_DPA_CAP_SUB_STATE_CONTROL_EN("TRUE"),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7(8'h00),
    .PF1_DPA_CAP_VER(4'h1),
    .PF1_DSN_CAP_NEXTPTR(12'h000),
    .PF1_EXPANSION_ROM_APERTURE_SIZE(5'h00),
    .PF1_EXPANSION_ROM_ENABLE("FALSE"),
    .PF1_INTERRUPT_LINE(8'h00),
    .PF1_INTERRUPT_PIN(3'h0),
    .PF1_MSIX_CAP_NEXTPTR(8'h00),
    .PF1_MSIX_CAP_PBA_BIR(0),
    .PF1_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .PF1_MSIX_CAP_TABLE_BIR(0),
    .PF1_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .PF1_MSIX_CAP_TABLE_SIZE(11'h000),
    .PF1_MSI_CAP_MULTIMSGCAP(0),
    .PF1_MSI_CAP_NEXTPTR(8'h00),
    .PF1_PB_CAP_NEXTPTR(12'h000),
    .PF1_PB_CAP_SYSTEM_ALLOCATED("FALSE"),
    .PF1_PB_CAP_VER(4'h1),
    .PF1_PM_CAP_ID(8'h01),
    .PF1_PM_CAP_NEXTPTR(8'h00),
    .PF1_PM_CAP_VER_ID(3'h3),
    .PF1_RBAR_CAP_ENABLE("FALSE"),
    .PF1_RBAR_CAP_INDEX0(3'h0),
    .PF1_RBAR_CAP_INDEX1(3'h0),
    .PF1_RBAR_CAP_INDEX2(3'h0),
    .PF1_RBAR_CAP_NEXTPTR(12'h000),
    .PF1_RBAR_CAP_SIZE0(20'h00000),
    .PF1_RBAR_CAP_SIZE1(20'h00000),
    .PF1_RBAR_CAP_SIZE2(20'h00000),
    .PF1_RBAR_CAP_VER(4'h1),
    .PF1_RBAR_NUM(3'h1),
    .PF1_REVISION_ID(8'h00),
    .PF1_SRIOV_BAR0_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR0_CONTROL(3'h0),
    .PF1_SRIOV_BAR1_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR1_CONTROL(3'h0),
    .PF1_SRIOV_BAR2_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR2_CONTROL(3'h0),
    .PF1_SRIOV_BAR3_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR3_CONTROL(3'h0),
    .PF1_SRIOV_BAR4_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR4_CONTROL(3'h0),
    .PF1_SRIOV_BAR5_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR5_CONTROL(3'h0),
    .PF1_SRIOV_CAP_INITIAL_VF(16'h0000),
    .PF1_SRIOV_CAP_NEXTPTR(12'h000),
    .PF1_SRIOV_CAP_TOTAL_VF(16'h0000),
    .PF1_SRIOV_CAP_VER(4'h0),
    .PF1_SRIOV_FIRST_VF_OFFSET(16'h0000),
    .PF1_SRIOV_FUNC_DEP_LINK(16'h0001),
    .PF1_SRIOV_SUPPORTED_PAGE_SIZE(32'h00000553),
    .PF1_SRIOV_VF_DEVICE_ID(16'h0000),
    .PF1_SUBSYSTEM_ID(16'h0007),
    .PF1_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .PF1_TPHR_CAP_ENABLE("FALSE"),
    .PF1_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .PF1_TPHR_CAP_NEXTPTR(12'h000),
    .PF1_TPHR_CAP_ST_MODE_SEL(3'h0),
    .PF1_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .PF1_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .PF1_TPHR_CAP_VER(4'h1),
    .PL_DISABLE_EI_INFER_IN_L0("FALSE"),
    .PL_DISABLE_GEN3_DC_BALANCE("FALSE"),
    .PL_DISABLE_SCRAMBLING("FALSE"),
    .PL_DISABLE_UPCONFIG_CAPABLE("FALSE"),
    .PL_EQ_ADAPT_DISABLE_COEFF_CHECK("FALSE"),
    .PL_EQ_ADAPT_DISABLE_PRESET_CHECK("FALSE"),
    .PL_EQ_ADAPT_ITER_COUNT(5'h02),
    .PL_EQ_ADAPT_REJECT_RETRY_COUNT(2'h1),
    .PL_EQ_BYPASS_PHASE23("FALSE"),
    .PL_EQ_SHORT_ADAPT_PHASE("FALSE"),
    .PL_LANE0_EQ_CONTROL(16'h3400),
    .PL_LANE1_EQ_CONTROL(16'h3400),
    .PL_LANE2_EQ_CONTROL(16'h3400),
    .PL_LANE3_EQ_CONTROL(16'h3400),
    .PL_LANE4_EQ_CONTROL(16'h3400),
    .PL_LANE5_EQ_CONTROL(16'h3400),
    .PL_LANE6_EQ_CONTROL(16'h3400),
    .PL_LANE7_EQ_CONTROL(16'h3400),
    .PL_LINK_CAP_MAX_LINK_SPEED(3'h2),
    .PL_LINK_CAP_MAX_LINK_WIDTH(4'h4),
    .PL_N_FTS_COMCLK_GEN1(255),
    .PL_N_FTS_COMCLK_GEN2(255),
    .PL_N_FTS_COMCLK_GEN3(255),
    .PL_N_FTS_GEN1(255),
    .PL_N_FTS_GEN2(255),
    .PL_N_FTS_GEN3(255),
    .PL_SIM_FAST_LINK_TRAINING("TRUE"),
    .PL_UPSTREAM_FACING("TRUE"),
    .PM_ASPML0S_TIMEOUT(16'h05DC),
    .PM_ASPML1_ENTRY_DELAY(20'h01D4C),
    .PM_ENABLE_SLOT_POWER_CAPTURE("TRUE"),
    .PM_L1_REENTRY_DELAY(32'h000061A8),
    .PM_PME_SERVICE_TIMEOUT_DELAY(20'h186A0),
    .PM_PME_TURNOFF_ACK_DELAY(16'h0064),
    .SIM_VERSION("1.0"),
    .SPARE_BIT0(0),
    .SPARE_BIT1(0),
    .SPARE_BIT2(0),
    .SPARE_BIT3(0),
    .SPARE_BIT4(0),
    .SPARE_BIT5(0),
    .SPARE_BIT6(0),
    .SPARE_BIT7(0),
    .SPARE_BIT8(0),
    .SPARE_BYTE0(8'h00),
    .SPARE_BYTE1(8'h00),
    .SPARE_BYTE2(8'h00),
    .SPARE_BYTE3(8'h00),
    .SPARE_WORD0(32'h00000000),
    .SPARE_WORD1(32'h00000000),
    .SPARE_WORD2(32'h00000000),
    .SPARE_WORD3(32'h00000000),
    .SRIOV_CAP_ENABLE("FALSE"),
    .TL_COMPL_TIMEOUT_REG0(24'hBEBC20),
    .TL_COMPL_TIMEOUT_REG1(28'h3211620),
    .TL_CREDITS_CD(12'h000),
    .TL_CREDITS_CH(8'h00),
    .TL_CREDITS_NPD(12'h028),
    .TL_CREDITS_NPH(8'h20),
    .TL_CREDITS_PD(12'h198),
    .TL_CREDITS_PH(8'h20),
    .TL_ENABLE_MESSAGE_RID_CHECK_ENABLE("TRUE"),
    .TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE("FALSE"),
    .TL_LEGACY_CFG_EXTEND_INTERFACE_ENABLE("FALSE"),
    .TL_LEGACY_MODE_ENABLE("FALSE"),
    .TL_PF_ENABLE_REG("FALSE"),
    .TL_TAG_MGMT_ENABLE("TRUE"),
    .VF0_ARI_CAP_NEXTPTR(12'h000),
    .VF0_CAPABILITY_POINTER(8'h80),
    .VF0_MSIX_CAP_PBA_BIR(0),
    .VF0_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF0_MSIX_CAP_TABLE_BIR(0),
    .VF0_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF0_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF0_MSI_CAP_MULTIMSGCAP(0),
    .VF0_PM_CAP_ID(8'h01),
    .VF0_PM_CAP_NEXTPTR(8'h00),
    .VF0_PM_CAP_VER_ID(3'h3),
    .VF0_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF0_TPHR_CAP_ENABLE("FALSE"),
    .VF0_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF0_TPHR_CAP_NEXTPTR(12'h000),
    .VF0_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF0_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF0_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF0_TPHR_CAP_VER(4'h1),
    .VF1_ARI_CAP_NEXTPTR(12'h000),
    .VF1_MSIX_CAP_PBA_BIR(0),
    .VF1_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF1_MSIX_CAP_TABLE_BIR(0),
    .VF1_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF1_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF1_MSI_CAP_MULTIMSGCAP(0),
    .VF1_PM_CAP_ID(8'h01),
    .VF1_PM_CAP_NEXTPTR(8'h00),
    .VF1_PM_CAP_VER_ID(3'h3),
    .VF1_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF1_TPHR_CAP_ENABLE("FALSE"),
    .VF1_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF1_TPHR_CAP_NEXTPTR(12'h000),
    .VF1_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF1_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF1_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF1_TPHR_CAP_VER(4'h1),
    .VF2_ARI_CAP_NEXTPTR(12'h000),
    .VF2_MSIX_CAP_PBA_BIR(0),
    .VF2_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF2_MSIX_CAP_TABLE_BIR(0),
    .VF2_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF2_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF2_MSI_CAP_MULTIMSGCAP(0),
    .VF2_PM_CAP_ID(8'h01),
    .VF2_PM_CAP_NEXTPTR(8'h00),
    .VF2_PM_CAP_VER_ID(3'h3),
    .VF2_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF2_TPHR_CAP_ENABLE("FALSE"),
    .VF2_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF2_TPHR_CAP_NEXTPTR(12'h000),
    .VF2_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF2_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF2_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF2_TPHR_CAP_VER(4'h1),
    .VF3_ARI_CAP_NEXTPTR(12'h000),
    .VF3_MSIX_CAP_PBA_BIR(0),
    .VF3_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF3_MSIX_CAP_TABLE_BIR(0),
    .VF3_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF3_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF3_MSI_CAP_MULTIMSGCAP(0),
    .VF3_PM_CAP_ID(8'h01),
    .VF3_PM_CAP_NEXTPTR(8'h00),
    .VF3_PM_CAP_VER_ID(3'h3),
    .VF3_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF3_TPHR_CAP_ENABLE("FALSE"),
    .VF3_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF3_TPHR_CAP_NEXTPTR(12'h000),
    .VF3_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF3_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF3_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF3_TPHR_CAP_VER(4'h1),
    .VF4_ARI_CAP_NEXTPTR(12'h000),
    .VF4_MSIX_CAP_PBA_BIR(0),
    .VF4_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF4_MSIX_CAP_TABLE_BIR(0),
    .VF4_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF4_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF4_MSI_CAP_MULTIMSGCAP(0),
    .VF4_PM_CAP_ID(8'h01),
    .VF4_PM_CAP_NEXTPTR(8'h00),
    .VF4_PM_CAP_VER_ID(3'h3),
    .VF4_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF4_TPHR_CAP_ENABLE("FALSE"),
    .VF4_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF4_TPHR_CAP_NEXTPTR(12'h000),
    .VF4_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF4_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF4_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF4_TPHR_CAP_VER(4'h1),
    .VF5_ARI_CAP_NEXTPTR(12'h000),
    .VF5_MSIX_CAP_PBA_BIR(0),
    .VF5_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF5_MSIX_CAP_TABLE_BIR(0),
    .VF5_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF5_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF5_MSI_CAP_MULTIMSGCAP(0),
    .VF5_PM_CAP_ID(8'h01),
    .VF5_PM_CAP_NEXTPTR(8'h00),
    .VF5_PM_CAP_VER_ID(3'h3),
    .VF5_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF5_TPHR_CAP_ENABLE("FALSE"),
    .VF5_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF5_TPHR_CAP_NEXTPTR(12'h000),
    .VF5_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF5_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF5_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF5_TPHR_CAP_VER(4'h1)) 
    PCIE_3_0_i
       (.CFGCONFIGSPACEENABLE(cfg_config_space_enable),
        .CFGCURRENTSPEED(cfg_current_speed),
        .CFGDEVID({1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CFGDPASUBSTATECHANGE(cfg_dpa_substate_change),
        .CFGDSBUSNUMBER(cfg_ds_bus_number),
        .CFGDSDEVICENUMBER(cfg_ds_device_number),
        .CFGDSFUNCTIONNUMBER(cfg_ds_function_number),
        .CFGDSN(cfg_dsn),
        .CFGDSPORTNUMBER(cfg_ds_port_number),
        .CFGERRCORIN(cfg_err_cor_in),
        .CFGERRCOROUT(cfg_err_cor_out),
        .CFGERRFATALOUT(cfg_err_fatal_out),
        .CFGERRNONFATALOUT(cfg_err_nonfatal_out),
        .CFGERRUNCORIN(cfg_err_uncor_in),
        .CFGEXTFUNCTIONNUMBER({PCIE_3_0_i_n_2053,PCIE_3_0_i_n_2054,PCIE_3_0_i_n_2055,PCIE_3_0_i_n_2056,PCIE_3_0_i_n_2057,PCIE_3_0_i_n_2058,PCIE_3_0_i_n_2059,PCIE_3_0_i_n_2060}),
        .CFGEXTREADDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGEXTREADDATAVALID(1'b0),
        .CFGEXTREADRECEIVED(PCIE_3_0_i_n_3),
        .CFGEXTREGISTERNUMBER({PCIE_3_0_i_n_2255,PCIE_3_0_i_n_2256,PCIE_3_0_i_n_2257,PCIE_3_0_i_n_2258,PCIE_3_0_i_n_2259,PCIE_3_0_i_n_2260,PCIE_3_0_i_n_2261,PCIE_3_0_i_n_2262,PCIE_3_0_i_n_2263,PCIE_3_0_i_n_2264}),
        .CFGEXTWRITEBYTEENABLE({PCIE_3_0_i_n_1550,PCIE_3_0_i_n_1551,PCIE_3_0_i_n_1552,PCIE_3_0_i_n_1553}),
        .CFGEXTWRITEDATA({PCIE_3_0_i_n_1166,PCIE_3_0_i_n_1167,PCIE_3_0_i_n_1168,PCIE_3_0_i_n_1169,PCIE_3_0_i_n_1170,PCIE_3_0_i_n_1171,PCIE_3_0_i_n_1172,PCIE_3_0_i_n_1173,PCIE_3_0_i_n_1174,PCIE_3_0_i_n_1175,PCIE_3_0_i_n_1176,PCIE_3_0_i_n_1177,PCIE_3_0_i_n_1178,PCIE_3_0_i_n_1179,PCIE_3_0_i_n_1180,PCIE_3_0_i_n_1181,PCIE_3_0_i_n_1182,PCIE_3_0_i_n_1183,PCIE_3_0_i_n_1184,PCIE_3_0_i_n_1185,PCIE_3_0_i_n_1186,PCIE_3_0_i_n_1187,PCIE_3_0_i_n_1188,PCIE_3_0_i_n_1189,PCIE_3_0_i_n_1190,PCIE_3_0_i_n_1191,PCIE_3_0_i_n_1192,PCIE_3_0_i_n_1193,PCIE_3_0_i_n_1194,PCIE_3_0_i_n_1195,PCIE_3_0_i_n_1196,PCIE_3_0_i_n_1197}),
        .CFGEXTWRITERECEIVED(PCIE_3_0_i_n_4),
        .CFGFCCPLD(cfg_fc_cpld),
        .CFGFCCPLH(cfg_fc_cplh),
        .CFGFCNPD(cfg_fc_npd),
        .CFGFCNPH(cfg_fc_nph),
        .CFGFCPD(cfg_fc_pd),
        .CFGFCPH(cfg_fc_ph),
        .CFGFCSEL(cfg_fc_sel),
        .CFGFLRDONE(cfg_flr_done),
        .CFGFLRINPROCESS(cfg_flr_in_process),
        .CFGFUNCTIONPOWERSTATE(cfg_function_power_state),
        .CFGFUNCTIONSTATUS(cfg_function_status),
        .CFGHOTRESETIN(cfg_hot_reset_in),
        .CFGHOTRESETOUT(cfg_hot_reset_out),
        .CFGINPUTUPDATEDONE(cfg_input_update_done),
        .CFGINPUTUPDATEREQUEST(Q[1]),
        .CFGINTERRUPTAOUTPUT(PCIE_3_0_i_n_7),
        .CFGINTERRUPTBOUTPUT(PCIE_3_0_i_n_8),
        .CFGINTERRUPTCOUTPUT(PCIE_3_0_i_n_9),
        .CFGINTERRUPTDOUTPUT(PCIE_3_0_i_n_10),
        .CFGINTERRUPTINT(cfg_interrupt_int),
        .CFGINTERRUPTMSIATTR(cfg_interrupt_msi_attr),
        .CFGINTERRUPTMSIDATA(cfg_interrupt_msi_data),
        .CFGINTERRUPTMSIENABLE(cfg_interrupt_msi_enable),
        .CFGINTERRUPTMSIFAIL(cfg_interrupt_msi_fail),
        .CFGINTERRUPTMSIFUNCTIONNUMBER(cfg_interrupt_msi_function_number),
        .CFGINTERRUPTMSIINT(cfg_interrupt_msi_int),
        .CFGINTERRUPTMSIMASKUPDATE(cfg_interrupt_msi_mask_update),
        .CFGINTERRUPTMSIMMENABLE(cfg_interrupt_msi_mmenable),
        .CFGINTERRUPTMSIPENDINGSTATUS(cfg_interrupt_msi_pending_status),
        .CFGINTERRUPTMSISELECT(cfg_interrupt_msi_select),
        .CFGINTERRUPTMSISENT(cfg_interrupt_msi_sent),
        .CFGINTERRUPTMSITPHPRESENT(cfg_interrupt_msi_tph_present),
        .CFGINTERRUPTMSITPHSTTAG(cfg_interrupt_msi_tph_st_tag),
        .CFGINTERRUPTMSITPHTYPE(cfg_interrupt_msi_tph_type),
        .CFGINTERRUPTMSIVFENABLE(cfg_interrupt_msi_vf_enable),
        .CFGINTERRUPTMSIXADDRESS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGINTERRUPTMSIXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGINTERRUPTMSIXENABLE({PCIE_3_0_i_n_507,PCIE_3_0_i_n_508}),
        .CFGINTERRUPTMSIXFAIL(PCIE_3_0_i_n_14),
        .CFGINTERRUPTMSIXINT(1'b0),
        .CFGINTERRUPTMSIXMASK({PCIE_3_0_i_n_509,PCIE_3_0_i_n_510}),
        .CFGINTERRUPTMSIXSENT(PCIE_3_0_i_n_15),
        .CFGINTERRUPTMSIXVFENABLE({PCIE_3_0_i_n_1690,PCIE_3_0_i_n_1691,PCIE_3_0_i_n_1692,PCIE_3_0_i_n_1693,PCIE_3_0_i_n_1694,PCIE_3_0_i_n_1695}),
        .CFGINTERRUPTMSIXVFMASK({PCIE_3_0_i_n_1696,PCIE_3_0_i_n_1697,PCIE_3_0_i_n_1698,PCIE_3_0_i_n_1699,PCIE_3_0_i_n_1700,PCIE_3_0_i_n_1701}),
        .CFGINTERRUPTPENDING(cfg_interrupt_pending),
        .CFGINTERRUPTSENT(cfg_interrupt_sent),
        .CFGLINKPOWERSTATE(cfg_link_power_state),
        .CFGLINKTRAININGENABLE(cfg_link_training_enable),
        .CFGLOCALERROR(PCIE_3_0_i_n_17),
        .CFGLTRENABLE(cfg_ltr_enable),
        .CFGLTSSMSTATE(cfg_ltssm_state),
        .CFGMAXPAYLOAD(cfg_max_payload),
        .CFGMAXREADREQ(cfg_max_read_req),
        .CFGMCUPDATEDONE(cfg_mc_update_done),
        .CFGMCUPDATEREQUEST(Q[0]),
        .CFGMGMTADDR(cfg_mgmt_addr),
        .CFGMGMTBYTEENABLE(cfg_mgmt_byte_enable),
        .CFGMGMTREAD(cfg_mgmt_read),
        .CFGMGMTREADDATA(cfg_mgmt_read_data),
        .CFGMGMTREADWRITEDONE(cfg_mgmt_read_write_done),
        .CFGMGMTTYPE1CFGREGACCESS(cfg_mgmt_type1_cfg_reg_access),
        .CFGMGMTWRITE(cfg_mgmt_write),
        .CFGMGMTWRITEDATA(cfg_mgmt_write_data),
        .CFGMSGRECEIVED(cfg_msg_received),
        .CFGMSGRECEIVEDDATA(cfg_msg_received_data),
        .CFGMSGRECEIVEDTYPE(cfg_msg_received_type),
        .CFGMSGTRANSMIT(cfg_msg_transmit),
        .CFGMSGTRANSMITDATA(cfg_msg_transmit_data),
        .CFGMSGTRANSMITDONE(cfg_msg_transmit_done),
        .CFGMSGTRANSMITTYPE(cfg_msg_transmit_type),
        .CFGNEGOTIATEDWIDTH(cfg_negotiated_width),
        .CFGOBFFENABLE(cfg_obff_enable),
        .CFGPERFUNCSTATUSCONTROL(cfg_per_func_status_control),
        .CFGPERFUNCSTATUSDATA(cfg_per_func_status_data),
        .CFGPERFUNCTIONNUMBER(cfg_per_function_number),
        .CFGPERFUNCTIONOUTPUTREQUEST(cfg_per_function_output_request),
        .CFGPERFUNCTIONUPDATEDONE(cfg_per_function_update_done),
        .CFGPHYLINKDOWN(cfg_phy_link_down),
        .CFGPHYLINKSTATUS(cfg_phy_link_status),
        .CFGPLSTATUSCHANGE(cfg_pl_status_change),
        .CFGPOWERSTATECHANGEACK(cfg_power_state_change_ack),
        .CFGPOWERSTATECHANGEINTERRUPT(cfg_power_state_change_interrupt),
        .CFGRCBSTATUS(cfg_rcb_status),
        .CFGREQPMTRANSITIONL23READY(cfg_req_pm_transition_l23_ready),
        .CFGREVID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGSUBSYSID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1}),
        .CFGSUBSYSVENDID(cfg_subsys_vend_id),
        .CFGTPHFUNCTIONNUM(ADDRARDADDR[7:5]),
        .CFGTPHREQUESTERENABLE(cfg_tph_requester_enable),
        .CFGTPHSTMODE(cfg_tph_st_mode),
        .CFGTPHSTTADDRESS(ADDRARDADDR[4:0]),
        .CFGTPHSTTREADDATA(DOADO),
        .CFGTPHSTTREADDATAVALID(cfg_tph_stt_read_data_valid),
        .CFGTPHSTTREADENABLE(cfg_tph_stt_read_enable),
        .CFGTPHSTTWRITEBYTEVALID(CFGTPHSTTWRITEBYTEVALID),
        .CFGTPHSTTWRITEDATA(CFGTPHSTTWRITEDATA),
        .CFGTPHSTTWRITEENABLE(cfg_tph_stt_write_enable),
        .CFGVENDID({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1}),
        .CFGVFFLRDONE(cfg_vf_flr_done),
        .CFGVFFLRINPROCESS(cfg_vf_flr_in_process),
        .CFGVFPOWERSTATE(cfg_vf_power_state),
        .CFGVFSTATUS(cfg_vf_status),
        .CFGVFTPHREQUESTERENABLE(cfg_vf_tph_requester_enable),
        .CFGVFTPHSTMODE(cfg_vf_tph_st_mode),
        .CORECLK(pipe_userclk1_in),
        .CORECLKMICOMPLETIONRAML(pipe_userclk1_in),
        .CORECLKMICOMPLETIONRAMU(pipe_userclk1_in),
        .CORECLKMIREPLAYRAM(pipe_userclk1_in),
        .CORECLKMIREQUESTRAM(pipe_userclk1_in),
        .DBGDATAOUT({PCIE_3_0_i_n_433,PCIE_3_0_i_n_434,PCIE_3_0_i_n_435,PCIE_3_0_i_n_436,PCIE_3_0_i_n_437,PCIE_3_0_i_n_438,PCIE_3_0_i_n_439,PCIE_3_0_i_n_440,PCIE_3_0_i_n_441,PCIE_3_0_i_n_442,PCIE_3_0_i_n_443,PCIE_3_0_i_n_444,PCIE_3_0_i_n_445,PCIE_3_0_i_n_446,PCIE_3_0_i_n_447,PCIE_3_0_i_n_448}),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(1'b1),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO({PCIE_3_0_i_n_449,PCIE_3_0_i_n_450,PCIE_3_0_i_n_451,PCIE_3_0_i_n_452,PCIE_3_0_i_n_453,PCIE_3_0_i_n_454,PCIE_3_0_i_n_455,PCIE_3_0_i_n_456,PCIE_3_0_i_n_457,PCIE_3_0_i_n_458,PCIE_3_0_i_n_459,PCIE_3_0_i_n_460,PCIE_3_0_i_n_461,PCIE_3_0_i_n_462,PCIE_3_0_i_n_463,PCIE_3_0_i_n_464}),
        .DRPEN(1'b0),
        .DRPRDY(PCIE_3_0_i_n_29),
        .DRPWE(1'b0),
        .MAXISCQTDATA({PCIE_3_0_i_n_615,PCIE_3_0_i_n_616,PCIE_3_0_i_n_617,PCIE_3_0_i_n_618,PCIE_3_0_i_n_619,PCIE_3_0_i_n_620,PCIE_3_0_i_n_621,PCIE_3_0_i_n_622,PCIE_3_0_i_n_623,PCIE_3_0_i_n_624,PCIE_3_0_i_n_625,PCIE_3_0_i_n_626,PCIE_3_0_i_n_627,PCIE_3_0_i_n_628,PCIE_3_0_i_n_629,PCIE_3_0_i_n_630,PCIE_3_0_i_n_631,PCIE_3_0_i_n_632,PCIE_3_0_i_n_633,PCIE_3_0_i_n_634,PCIE_3_0_i_n_635,PCIE_3_0_i_n_636,PCIE_3_0_i_n_637,PCIE_3_0_i_n_638,PCIE_3_0_i_n_639,PCIE_3_0_i_n_640,PCIE_3_0_i_n_641,PCIE_3_0_i_n_642,PCIE_3_0_i_n_643,PCIE_3_0_i_n_644,PCIE_3_0_i_n_645,PCIE_3_0_i_n_646,PCIE_3_0_i_n_647,PCIE_3_0_i_n_648,PCIE_3_0_i_n_649,PCIE_3_0_i_n_650,PCIE_3_0_i_n_651,PCIE_3_0_i_n_652,PCIE_3_0_i_n_653,PCIE_3_0_i_n_654,PCIE_3_0_i_n_655,PCIE_3_0_i_n_656,PCIE_3_0_i_n_657,PCIE_3_0_i_n_658,PCIE_3_0_i_n_659,PCIE_3_0_i_n_660,PCIE_3_0_i_n_661,PCIE_3_0_i_n_662,PCIE_3_0_i_n_663,PCIE_3_0_i_n_664,PCIE_3_0_i_n_665,PCIE_3_0_i_n_666,PCIE_3_0_i_n_667,PCIE_3_0_i_n_668,PCIE_3_0_i_n_669,PCIE_3_0_i_n_670,PCIE_3_0_i_n_671,PCIE_3_0_i_n_672,PCIE_3_0_i_n_673,PCIE_3_0_i_n_674,PCIE_3_0_i_n_675,PCIE_3_0_i_n_676,PCIE_3_0_i_n_677,PCIE_3_0_i_n_678,PCIE_3_0_i_n_679,PCIE_3_0_i_n_680,PCIE_3_0_i_n_681,PCIE_3_0_i_n_682,PCIE_3_0_i_n_683,PCIE_3_0_i_n_684,PCIE_3_0_i_n_685,PCIE_3_0_i_n_686,PCIE_3_0_i_n_687,PCIE_3_0_i_n_688,PCIE_3_0_i_n_689,PCIE_3_0_i_n_690,PCIE_3_0_i_n_691,PCIE_3_0_i_n_692,PCIE_3_0_i_n_693,PCIE_3_0_i_n_694,PCIE_3_0_i_n_695,PCIE_3_0_i_n_696,PCIE_3_0_i_n_697,PCIE_3_0_i_n_698,PCIE_3_0_i_n_699,PCIE_3_0_i_n_700,PCIE_3_0_i_n_701,PCIE_3_0_i_n_702,PCIE_3_0_i_n_703,PCIE_3_0_i_n_704,PCIE_3_0_i_n_705,PCIE_3_0_i_n_706,PCIE_3_0_i_n_707,PCIE_3_0_i_n_708,PCIE_3_0_i_n_709,PCIE_3_0_i_n_710,PCIE_3_0_i_n_711,PCIE_3_0_i_n_712,PCIE_3_0_i_n_713,PCIE_3_0_i_n_714,PCIE_3_0_i_n_715,PCIE_3_0_i_n_716,PCIE_3_0_i_n_717,PCIE_3_0_i_n_718,PCIE_3_0_i_n_719,PCIE_3_0_i_n_720,PCIE_3_0_i_n_721,PCIE_3_0_i_n_722,PCIE_3_0_i_n_723,PCIE_3_0_i_n_724,PCIE_3_0_i_n_725,PCIE_3_0_i_n_726,PCIE_3_0_i_n_727,PCIE_3_0_i_n_728,PCIE_3_0_i_n_729,PCIE_3_0_i_n_730,PCIE_3_0_i_n_731,PCIE_3_0_i_n_732,PCIE_3_0_i_n_733,PCIE_3_0_i_n_734,PCIE_3_0_i_n_735,PCIE_3_0_i_n_736,PCIE_3_0_i_n_737,PCIE_3_0_i_n_738,PCIE_3_0_i_n_739,PCIE_3_0_i_n_740,PCIE_3_0_i_n_741,PCIE_3_0_i_n_742,m_axis_cq_tdata}),
        .MAXISCQTKEEP({PCIE_3_0_i_n_2101,PCIE_3_0_i_n_2102,PCIE_3_0_i_n_2103,PCIE_3_0_i_n_2104,m_axis_cq_tkeep}),
        .MAXISCQTLAST(m_axis_cq_tlast),
        .MAXISCQTREADY({m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready}),
        .MAXISCQTUSER(m_axis_cq_tuser),
        .MAXISCQTVALID(m_axis_cq_tvalid),
        .MAXISRCTDATA({PCIE_3_0_i_n_871,PCIE_3_0_i_n_872,PCIE_3_0_i_n_873,PCIE_3_0_i_n_874,PCIE_3_0_i_n_875,PCIE_3_0_i_n_876,PCIE_3_0_i_n_877,PCIE_3_0_i_n_878,PCIE_3_0_i_n_879,PCIE_3_0_i_n_880,PCIE_3_0_i_n_881,PCIE_3_0_i_n_882,PCIE_3_0_i_n_883,PCIE_3_0_i_n_884,PCIE_3_0_i_n_885,PCIE_3_0_i_n_886,PCIE_3_0_i_n_887,PCIE_3_0_i_n_888,PCIE_3_0_i_n_889,PCIE_3_0_i_n_890,PCIE_3_0_i_n_891,PCIE_3_0_i_n_892,PCIE_3_0_i_n_893,PCIE_3_0_i_n_894,PCIE_3_0_i_n_895,PCIE_3_0_i_n_896,PCIE_3_0_i_n_897,PCIE_3_0_i_n_898,PCIE_3_0_i_n_899,PCIE_3_0_i_n_900,PCIE_3_0_i_n_901,PCIE_3_0_i_n_902,PCIE_3_0_i_n_903,PCIE_3_0_i_n_904,PCIE_3_0_i_n_905,PCIE_3_0_i_n_906,PCIE_3_0_i_n_907,PCIE_3_0_i_n_908,PCIE_3_0_i_n_909,PCIE_3_0_i_n_910,PCIE_3_0_i_n_911,PCIE_3_0_i_n_912,PCIE_3_0_i_n_913,PCIE_3_0_i_n_914,PCIE_3_0_i_n_915,PCIE_3_0_i_n_916,PCIE_3_0_i_n_917,PCIE_3_0_i_n_918,PCIE_3_0_i_n_919,PCIE_3_0_i_n_920,PCIE_3_0_i_n_921,PCIE_3_0_i_n_922,PCIE_3_0_i_n_923,PCIE_3_0_i_n_924,PCIE_3_0_i_n_925,PCIE_3_0_i_n_926,PCIE_3_0_i_n_927,PCIE_3_0_i_n_928,PCIE_3_0_i_n_929,PCIE_3_0_i_n_930,PCIE_3_0_i_n_931,PCIE_3_0_i_n_932,PCIE_3_0_i_n_933,PCIE_3_0_i_n_934,PCIE_3_0_i_n_935,PCIE_3_0_i_n_936,PCIE_3_0_i_n_937,PCIE_3_0_i_n_938,PCIE_3_0_i_n_939,PCIE_3_0_i_n_940,PCIE_3_0_i_n_941,PCIE_3_0_i_n_942,PCIE_3_0_i_n_943,PCIE_3_0_i_n_944,PCIE_3_0_i_n_945,PCIE_3_0_i_n_946,PCIE_3_0_i_n_947,PCIE_3_0_i_n_948,PCIE_3_0_i_n_949,PCIE_3_0_i_n_950,PCIE_3_0_i_n_951,PCIE_3_0_i_n_952,PCIE_3_0_i_n_953,PCIE_3_0_i_n_954,PCIE_3_0_i_n_955,PCIE_3_0_i_n_956,PCIE_3_0_i_n_957,PCIE_3_0_i_n_958,PCIE_3_0_i_n_959,PCIE_3_0_i_n_960,PCIE_3_0_i_n_961,PCIE_3_0_i_n_962,PCIE_3_0_i_n_963,PCIE_3_0_i_n_964,PCIE_3_0_i_n_965,PCIE_3_0_i_n_966,PCIE_3_0_i_n_967,PCIE_3_0_i_n_968,PCIE_3_0_i_n_969,PCIE_3_0_i_n_970,PCIE_3_0_i_n_971,PCIE_3_0_i_n_972,PCIE_3_0_i_n_973,PCIE_3_0_i_n_974,PCIE_3_0_i_n_975,PCIE_3_0_i_n_976,PCIE_3_0_i_n_977,PCIE_3_0_i_n_978,PCIE_3_0_i_n_979,PCIE_3_0_i_n_980,PCIE_3_0_i_n_981,PCIE_3_0_i_n_982,PCIE_3_0_i_n_983,PCIE_3_0_i_n_984,PCIE_3_0_i_n_985,PCIE_3_0_i_n_986,PCIE_3_0_i_n_987,PCIE_3_0_i_n_988,PCIE_3_0_i_n_989,PCIE_3_0_i_n_990,PCIE_3_0_i_n_991,PCIE_3_0_i_n_992,PCIE_3_0_i_n_993,PCIE_3_0_i_n_994,PCIE_3_0_i_n_995,PCIE_3_0_i_n_996,PCIE_3_0_i_n_997,PCIE_3_0_i_n_998,m_axis_rc_tdata}),
        .MAXISRCTKEEP({PCIE_3_0_i_n_2109,PCIE_3_0_i_n_2110,PCIE_3_0_i_n_2111,PCIE_3_0_i_n_2112,m_axis_rc_tkeep}),
        .MAXISRCTLAST(m_axis_rc_tlast),
        .MAXISRCTREADY({m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready}),
        .MAXISRCTUSER(m_axis_rc_tuser),
        .MAXISRCTVALID(m_axis_rc_tvalid),
        .MGMTRESETN(mgmt_reset_n),
        .MGMTSTICKYRESETN(mgmt_sticky_reset_n),
        .MICOMPLETIONRAMREADADDRESSAL(MICOMPLETIONRAMREADADDRESSAL),
        .MICOMPLETIONRAMREADADDRESSAU(MICOMPLETIONRAMREADADDRESSAU),
        .MICOMPLETIONRAMREADADDRESSBL(MICOMPLETIONRAMREADADDRESSBL),
        .MICOMPLETIONRAMREADADDRESSBU(MICOMPLETIONRAMREADADDRESSBU),
        .MICOMPLETIONRAMREADDATA(MICOMPLETIONRAMREADDATA),
        .MICOMPLETIONRAMREADENABLEL(MICOMPLETIONRAMREADENABLEL),
        .MICOMPLETIONRAMREADENABLEU(MICOMPLETIONRAMREADENABLEU),
        .MICOMPLETIONRAMWRITEADDRESSAL(MICOMPLETIONRAMWRITEADDRESSAL),
        .MICOMPLETIONRAMWRITEADDRESSAU(MICOMPLETIONRAMWRITEADDRESSAU),
        .MICOMPLETIONRAMWRITEADDRESSBL(MICOMPLETIONRAMWRITEADDRESSBL),
        .MICOMPLETIONRAMWRITEADDRESSBU(MICOMPLETIONRAMWRITEADDRESSBU),
        .MICOMPLETIONRAMWRITEDATAL(MICOMPLETIONRAMWRITEDATA[71:0]),
        .MICOMPLETIONRAMWRITEDATAU(MICOMPLETIONRAMWRITEDATA[143:72]),
        .MICOMPLETIONRAMWRITEENABLEL(MICOMPLETIONRAMWRITEENABLEL),
        .MICOMPLETIONRAMWRITEENABLEU(MICOMPLETIONRAMWRITEENABLEU),
        .MIREPLAYRAMADDRESS(MIREPLAYRAMADDRESS),
        .MIREPLAYRAMREADDATA(MIREPLAYRAMREADDATA),
        .MIREPLAYRAMREADENABLE(NLW_PCIE_3_0_i_MIREPLAYRAMREADENABLE_UNCONNECTED[1:0]),
        .MIREPLAYRAMWRITEDATA(MIREPLAYRAMWRITEDATA),
        .MIREPLAYRAMWRITEENABLE(MIREPLAYRAMWRITEENABLE),
        .MIREQUESTRAMREADADDRESSA(MIREQUESTRAMREADADDRESSA),
        .MIREQUESTRAMREADADDRESSB(MIREQUESTRAMREADADDRESSB),
        .MIREQUESTRAMREADDATA(MIREQUESTRAMREADDATA),
        .MIREQUESTRAMREADENABLE(MIREQUESTRAMREADENABLE),
        .MIREQUESTRAMWRITEADDRESSA(MIREQUESTRAMWRITEADDRESSA),
        .MIREQUESTRAMWRITEADDRESSB(MIREQUESTRAMWRITEADDRESSB),
        .MIREQUESTRAMWRITEDATA(MIREQUESTRAMWRITEDATA),
        .MIREQUESTRAMWRITEENABLE(MIREQUESTRAMWRITEENABLE),
        .PCIECQNPREQ(pcie_cq_np_req),
        .PCIECQNPREQCOUNT(pcie_cq_np_req_count),
        .PCIERQSEQNUM(pcie_rq_seq_num),
        .PCIERQSEQNUMVLD(pcie_rq_seq_num_vld),
        .PCIERQTAG(pcie_rq_tag),
        .PCIERQTAGAV(NLW_PCIE_3_0_i_PCIERQTAGAV_UNCONNECTED[1:0]),
        .PCIERQTAGVLD(pcie_rq_tag_vld),
        .PCIETFCNPDAV(pcie_tfc_npd_av),
        .PCIETFCNPHAV(pcie_tfc_nph_av),
        .PIPECLK(pipe_pclk_in),
        .PIPEEQFS({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .PIPEEQLF({1'b0,1'b0,1'b1,1'b1,1'b1,1'b1}),
        .PIPERESETN(pipe_reset_n),
        .PIPERX0CHARISK(PIPE_RXDATAK[1:0]),
        .PIPERX0DATA({PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA}),
        .PIPERX0DATAVALID(1'b0),
        .PIPERX0ELECIDLE(PIPE_RXELECIDLE[0]),
        .PIPERX0EQCONTROL(PIPERX0EQCONTROL),
        .PIPERX0EQDONE(PIPE_RXEQ_DONE[0]),
        .PIPERX0EQLPADAPTDONE(pipe_rx0_eq_adapt_done),
        .PIPERX0EQLPLFFS(PIPE_RXEQ_LFFS[5:0]),
        .PIPERX0EQLPLFFSSEL(pipe_rx0_eq_lffs_sel),
        .PIPERX0EQLPNEWTXCOEFFORPRESET(PIPERX0EQLPNEWTXCOEFFORPRESET),
        .PIPERX0EQLPTXPRESET(PIPE_RXEQ_TXPRESET[3:0]),
        .PIPERX0EQPRESET(PIPE_RXEQ_PRESET[2:0]),
        .PIPERX0PHYSTATUS(pipe_rx0_phy_status),
        .PIPERX0POLARITY(PIPE_RXPOLARITY[0]),
        .PIPERX0STARTBLOCK(1'b0),
        .PIPERX0STATUS(PIPE_RXSTATUS[2:0]),
        .PIPERX0SYNCHEADER({1'b0,1'b0}),
        .PIPERX0VALID(pipe_rx0_valid),
        .PIPERX1CHARISK(PIPE_RXDATAK[3:2]),
        .PIPERX1DATA({PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA}),
        .PIPERX1DATAVALID(1'b0),
        .PIPERX1ELECIDLE(PIPE_RXELECIDLE[1]),
        .PIPERX1EQCONTROL(PIPERX1EQCONTROL),
        .PIPERX1EQDONE(PIPE_RXEQ_DONE[1]),
        .PIPERX1EQLPADAPTDONE(USER_RXEQ_ADAPT_DONE),
        .PIPERX1EQLPLFFS(PIPE_RXEQ_LFFS[11:6]),
        .PIPERX1EQLPLFFSSEL(pipe_rx1_eq_lffs_sel),
        .PIPERX1EQLPNEWTXCOEFFORPRESET(PIPERX1EQLPNEWTXCOEFFORPRESET),
        .PIPERX1EQLPTXPRESET(PIPE_RXEQ_TXPRESET[7:4]),
        .PIPERX1EQPRESET(PIPE_RXEQ_PRESET[5:3]),
        .PIPERX1PHYSTATUS(pipe_rx1_phy_status),
        .PIPERX1POLARITY(PIPE_RXPOLARITY[1]),
        .PIPERX1STARTBLOCK(1'b0),
        .PIPERX1STATUS(PIPE_RXSTATUS[5:3]),
        .PIPERX1SYNCHEADER({1'b0,1'b0}),
        .PIPERX1VALID(pipe_rx1_valid),
        .PIPERX2CHARISK(PIPE_RXDATAK[5:4]),
        .PIPERX2DATA({PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX2DATA}),
        .PIPERX2DATAVALID(1'b0),
        .PIPERX2ELECIDLE(PIPE_RXELECIDLE[2]),
        .PIPERX2EQCONTROL(PIPERX2EQCONTROL),
        .PIPERX2EQDONE(PIPE_RXEQ_DONE[2]),
        .PIPERX2EQLPADAPTDONE(PCIE_3_0_i_0),
        .PIPERX2EQLPLFFS(PIPE_RXEQ_LFFS[17:12]),
        .PIPERX2EQLPLFFSSEL(pipe_rx2_eq_lffs_sel),
        .PIPERX2EQLPNEWTXCOEFFORPRESET(PIPERX2EQLPNEWTXCOEFFORPRESET),
        .PIPERX2EQLPTXPRESET(PIPE_RXEQ_TXPRESET[11:8]),
        .PIPERX2EQPRESET(PIPE_RXEQ_PRESET[8:6]),
        .PIPERX2PHYSTATUS(pipe_rx2_phy_status),
        .PIPERX2POLARITY(PIPE_RXPOLARITY[2]),
        .PIPERX2STARTBLOCK(1'b0),
        .PIPERX2STATUS(PIPE_RXSTATUS[8:6]),
        .PIPERX2SYNCHEADER({1'b0,1'b0}),
        .PIPERX2VALID(pipe_rx2_valid),
        .PIPERX3CHARISK(PIPE_RXDATAK[7:6]),
        .PIPERX3DATA({PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX1DATA[16],PIPERX3DATA}),
        .PIPERX3DATAVALID(1'b0),
        .PIPERX3ELECIDLE(PIPE_RXELECIDLE[3]),
        .PIPERX3EQCONTROL(PIPERX3EQCONTROL),
        .PIPERX3EQDONE(PIPE_RXEQ_DONE[3]),
        .PIPERX3EQLPADAPTDONE(PCIE_3_0_i_1),
        .PIPERX3EQLPLFFS(PIPE_RXEQ_LFFS[23:18]),
        .PIPERX3EQLPLFFSSEL(pipe_rx3_eq_lffs_sel),
        .PIPERX3EQLPNEWTXCOEFFORPRESET(PIPERX3EQLPNEWTXCOEFFORPRESET),
        .PIPERX3EQLPTXPRESET(PIPE_RXEQ_TXPRESET[15:12]),
        .PIPERX3EQPRESET(PIPE_RXEQ_PRESET[11:9]),
        .PIPERX3PHYSTATUS(pipe_rx3_phy_status),
        .PIPERX3POLARITY(PIPE_RXPOLARITY[3]),
        .PIPERX3STARTBLOCK(1'b0),
        .PIPERX3STATUS(PIPE_RXSTATUS[11:9]),
        .PIPERX3SYNCHEADER({1'b0,1'b0}),
        .PIPERX3VALID(pipe_rx3_valid),
        .PIPERX4CHARISK({1'b0,1'b0}),
        .PIPERX4DATA({PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16],PIPERX0DATA[16]}),
        .PIPERX4DATAVALID(1'b0),
        .PIPERX4ELECIDLE(1'b1),
        .PIPERX4EQCONTROL(pipe_rx4_eqcontrol_pcie),
        .PIPERX4EQDONE(1'b0),
        .PIPERX4EQLPADAPTDONE(1'b0),
        .PIPERX4EQLPLFFS(pipe_rx4_eqlp_lffs),
        .PIPERX4EQLPLFFSSEL(1'b0),
        .PIPERX4EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX4EQLPTXPRESET(pipe_rx4_eqlp_txpreset),
        .PIPERX4EQPRESET(pipe_rx4_eqpreset),
        .PIPERX4PHYSTATUS(1'b0),
        .PIPERX4POLARITY(pipe_rx4_polarity),
        .PIPERX4STARTBLOCK(1'b0),
        .PIPERX4STATUS({1'b0,1'b0,1'b0}),
        .PIPERX4SYNCHEADER({1'b0,1'b0}),
        .PIPERX4VALID(1'b0),
        .PIPERX5CHARISK({1'b0,1'b0}),
        .PIPERX5DATA({}),
        .PIPERX5DATAVALID(1'b0),
        .PIPERX5ELECIDLE(1'b1),
        .PIPERX5EQCONTROL(pipe_rx5_eqcontrol_pcie),
        .PIPERX5EQDONE(1'b0),
        .PIPERX5EQLPADAPTDONE(1'b0),
        .PIPERX5EQLPLFFS(pipe_rx5_eqlp_lffs),
        .PIPERX5EQLPLFFSSEL(1'b0),
        .PIPERX5EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX5EQLPTXPRESET(pipe_rx5_eqlp_txpreset),
        .PIPERX5EQPRESET(pipe_rx5_eqpreset),
        .PIPERX5PHYSTATUS(1'b0),
        .PIPERX5POLARITY(pipe_rx5_polarity),
        .PIPERX5STARTBLOCK(1'b0),
        .PIPERX5STATUS({1'b0,1'b0,1'b0}),
        .PIPERX5SYNCHEADER({1'b0,1'b0}),
        .PIPERX5VALID(1'b0),
        .PIPERX6CHARISK({1'b0,1'b0}),
        .PIPERX6DATA({}),
        .PIPERX6DATAVALID(1'b0),
        .PIPERX6ELECIDLE(1'b1),
        .PIPERX6EQCONTROL(pipe_rx6_eqcontrol_pcie),
        .PIPERX6EQDONE(1'b0),
        .PIPERX6EQLPADAPTDONE(1'b0),
        .PIPERX6EQLPLFFS(pipe_rx6_eqlp_lffs),
        .PIPERX6EQLPLFFSSEL(1'b0),
        .PIPERX6EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX6EQLPTXPRESET(pipe_rx6_eqlp_txpreset),
        .PIPERX6EQPRESET(pipe_rx6_eqpreset),
        .PIPERX6PHYSTATUS(1'b0),
        .PIPERX6POLARITY(pipe_rx6_polarity),
        .PIPERX6STARTBLOCK(1'b0),
        .PIPERX6STATUS({1'b0,1'b0,1'b0}),
        .PIPERX6SYNCHEADER({1'b0,1'b0}),
        .PIPERX6VALID(1'b0),
        .PIPERX7CHARISK({1'b0,1'b0}),
        .PIPERX7DATA({}),
        .PIPERX7DATAVALID(1'b0),
        .PIPERX7ELECIDLE(1'b1),
        .PIPERX7EQCONTROL(pipe_rx7_eqcontrol_pcie),
        .PIPERX7EQDONE(1'b0),
        .PIPERX7EQLPADAPTDONE(1'b0),
        .PIPERX7EQLPLFFS(pipe_rx7_eqlp_lffs),
        .PIPERX7EQLPLFFSSEL(1'b0),
        .PIPERX7EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX7EQLPTXPRESET(pipe_rx7_eqlp_txpreset),
        .PIPERX7EQPRESET(pipe_rx7_eqpreset),
        .PIPERX7PHYSTATUS(1'b0),
        .PIPERX7POLARITY(pipe_rx7_polarity),
        .PIPERX7STARTBLOCK(1'b0),
        .PIPERX7STATUS({1'b0,1'b0,1'b0}),
        .PIPERX7SYNCHEADER({1'b0,1'b0}),
        .PIPERX7VALID(1'b0),
        .PIPETX0CHARISK(PIPE_TXDATAK[1:0]),
        .PIPETX0COMPLIANCE(PIPE_TXCOMPLIANCE[0]),
        .PIPETX0DATA({pipe_tx0_data,PIPE_TXDATA[15:0]}),
        .PIPETX0DATAVALID(PCIE_3_0_i_n_45),
        .PIPETX0ELECIDLE(PIPE_TXELECIDLE[0]),
        .PIPETX0EQCOEFF({1'b0,PIPE_TXEQ_COEFF[15:5],1'b0,PIPE_TXEQ_COEFF[4:0]}),
        .PIPETX0EQCONTROL(PIPE_TXEQ_CONTROL[1:0]),
        .PIPETX0EQDEEMPH(PIPE_TXEQ_DEEMPH[5:0]),
        .PIPETX0EQDONE(PIPE_TXEQ_DONE[0]),
        .PIPETX0EQPRESET(PIPE_TXEQ_PRESET[3:0]),
        .PIPETX0POWERDOWN(PIPE_POWERDOWN[1:0]),
        .PIPETX0STARTBLOCK(PCIE_3_0_i_n_47),
        .PIPETX0SYNCHEADER({PCIE_3_0_i_n_553,PCIE_3_0_i_n_554}),
        .PIPETX1CHARISK(PIPE_TXDATAK[3:2]),
        .PIPETX1COMPLIANCE(PIPE_TXCOMPLIANCE[1]),
        .PIPETX1DATA({pipe_tx1_data,PIPE_TXDATA[31:16]}),
        .PIPETX1DATAVALID(PCIE_3_0_i_n_49),
        .PIPETX1ELECIDLE(PIPE_TXELECIDLE[1]),
        .PIPETX1EQCOEFF({1'b0,PIPE_TXEQ_COEFF[31:21],1'b0,PIPE_TXEQ_COEFF[20:16]}),
        .PIPETX1EQCONTROL(PIPE_TXEQ_CONTROL[3:2]),
        .PIPETX1EQDEEMPH(PIPE_TXEQ_DEEMPH[11:6]),
        .PIPETX1EQDONE(PIPE_TXEQ_DONE[1]),
        .PIPETX1EQPRESET(PIPE_TXEQ_PRESET[7:4]),
        .PIPETX1POWERDOWN(PIPE_POWERDOWN[3:2]),
        .PIPETX1STARTBLOCK(PCIE_3_0_i_n_51),
        .PIPETX1SYNCHEADER({PCIE_3_0_i_n_561,PCIE_3_0_i_n_562}),
        .PIPETX2CHARISK(PIPE_TXDATAK[5:4]),
        .PIPETX2COMPLIANCE(PIPE_TXCOMPLIANCE[2]),
        .PIPETX2DATA({pipe_tx2_data,PIPE_TXDATA[47:32]}),
        .PIPETX2DATAVALID(PCIE_3_0_i_n_53),
        .PIPETX2ELECIDLE(PIPE_TXELECIDLE[2]),
        .PIPETX2EQCOEFF({1'b0,PIPE_TXEQ_COEFF[47:37],1'b0,PIPE_TXEQ_COEFF[36:32]}),
        .PIPETX2EQCONTROL(PIPE_TXEQ_CONTROL[5:4]),
        .PIPETX2EQDEEMPH(PIPE_TXEQ_DEEMPH[17:12]),
        .PIPETX2EQDONE(PIPE_TXEQ_DONE[2]),
        .PIPETX2EQPRESET(PIPE_TXEQ_PRESET[11:8]),
        .PIPETX2POWERDOWN(PIPE_POWERDOWN[5:4]),
        .PIPETX2STARTBLOCK(PCIE_3_0_i_n_55),
        .PIPETX2SYNCHEADER({PCIE_3_0_i_n_569,PCIE_3_0_i_n_570}),
        .PIPETX3CHARISK(PIPE_TXDATAK[7:6]),
        .PIPETX3COMPLIANCE(PIPE_TXCOMPLIANCE[3]),
        .PIPETX3DATA({pipe_tx3_data,PIPE_TXDATA[63:48]}),
        .PIPETX3DATAVALID(PCIE_3_0_i_n_57),
        .PIPETX3ELECIDLE(PIPE_TXELECIDLE[3]),
        .PIPETX3EQCOEFF({1'b0,PIPE_TXEQ_COEFF[63:53],1'b0,PIPE_TXEQ_COEFF[52:48]}),
        .PIPETX3EQCONTROL(PIPE_TXEQ_CONTROL[7:6]),
        .PIPETX3EQDEEMPH(PIPE_TXEQ_DEEMPH[23:18]),
        .PIPETX3EQDONE(PIPE_TXEQ_DONE[3]),
        .PIPETX3EQPRESET(PIPE_TXEQ_PRESET[15:12]),
        .PIPETX3POWERDOWN(PIPE_POWERDOWN[7:6]),
        .PIPETX3STARTBLOCK(PCIE_3_0_i_n_59),
        .PIPETX3SYNCHEADER({PCIE_3_0_i_n_577,PCIE_3_0_i_n_578}),
        .PIPETX4CHARISK(pipe_tx4_char_is_k),
        .PIPETX4COMPLIANCE(pipe_tx4_compliance),
        .PIPETX4DATA(pipe_tx4_data),
        .PIPETX4DATAVALID(pipe_tx4_data_valid),
        .PIPETX4ELECIDLE(pipe_tx4_elec_idle),
        .PIPETX4EQCOEFF({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPETX4EQCONTROL(pipe_tx4_eqcontrol),
        .PIPETX4EQDEEMPH(pipe_tx4_eqdeemph),
        .PIPETX4EQDONE(1'b0),
        .PIPETX4EQPRESET(pipe_tx4_eqpreset),
        .PIPETX4POWERDOWN(pipe_tx4_powerdown),
        .PIPETX4STARTBLOCK(pipe_tx4_start_block),
        .PIPETX4SYNCHEADER(pipe_tx4_syncheader),
        .PIPETX5CHARISK(pipe_tx5_char_is_k),
        .PIPETX5COMPLIANCE(pipe_tx5_compliance),
        .PIPETX5DATA(pipe_tx5_data),
        .PIPETX5DATAVALID(pipe_tx5_data_valid),
        .PIPETX5ELECIDLE(pipe_tx5_elec_idle),
        .PIPETX5EQCOEFF({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPETX5EQCONTROL(pipe_tx5_eqcontrol),
        .PIPETX5EQDEEMPH(pipe_tx5_eqdeemph),
        .PIPETX5EQDONE(1'b0),
        .PIPETX5EQPRESET(pipe_tx5_eqpreset),
        .PIPETX5POWERDOWN(pipe_tx5_powerdown),
        .PIPETX5STARTBLOCK(pipe_tx5_start_block),
        .PIPETX5SYNCHEADER(pipe_tx5_syncheader),
        .PIPETX6CHARISK(pipe_tx6_char_is_k),
        .PIPETX6COMPLIANCE(pipe_tx6_compliance),
        .PIPETX6DATA(pipe_tx6_data),
        .PIPETX6DATAVALID(pipe_tx6_data_valid),
        .PIPETX6ELECIDLE(pipe_tx6_elec_idle),
        .PIPETX6EQCOEFF({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPETX6EQCONTROL(pipe_tx6_eqcontrol),
        .PIPETX6EQDEEMPH(pipe_tx6_eqdeemph),
        .PIPETX6EQDONE(1'b0),
        .PIPETX6EQPRESET(pipe_tx6_eqpreset),
        .PIPETX6POWERDOWN(pipe_tx6_powerdown),
        .PIPETX6STARTBLOCK(pipe_tx6_start_block),
        .PIPETX6SYNCHEADER(pipe_tx6_syncheader),
        .PIPETX7CHARISK(pipe_tx7_char_is_k),
        .PIPETX7COMPLIANCE(pipe_tx7_compliance),
        .PIPETX7DATA(pipe_tx7_data),
        .PIPETX7DATAVALID(pipe_tx7_data_valid),
        .PIPETX7ELECIDLE(pipe_tx7_elec_idle),
        .PIPETX7EQCOEFF({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPETX7EQCONTROL(pipe_tx7_eqcontrol),
        .PIPETX7EQDEEMPH(pipe_tx7_eqdeemph),
        .PIPETX7EQDONE(1'b0),
        .PIPETX7EQPRESET(pipe_tx7_eqpreset),
        .PIPETX7POWERDOWN(pipe_tx7_powerdown),
        .PIPETX7STARTBLOCK(pipe_tx7_start_block),
        .PIPETX7SYNCHEADER(pipe_tx7_syncheader),
        .PIPETXDEEMPH(pipe_tx_deemph),
        .PIPETXMARGIN(PIPETXMARGIN),
        .PIPETXRATE(PIPETXRATE),
        .PIPETXRCVRDET(pipe_tx_rcvr_det),
        .PIPETXRESET(pipe_tx_reset),
        .PIPETXSWING(pipe_tx_swing),
        .PLDISABLESCRAMBLER(1'b0),
        .PLEQINPROGRESS(PCIE_3_0_i_n_80),
        .PLEQPHASE({PCIE_3_0_i_n_613,PCIE_3_0_i_n_614}),
        .PLEQRESETEIEOSCOUNT(1'b0),
        .PLGEN3PCSDISABLE(1'b0),
        .PLGEN3PCSRXSLIDE({pipe_rx_slide,PIPE_RXSLIDE}),
        .PLGEN3PCSRXSYNCDONE({1'b0,1'b0,1'b0,1'b0,PIPE_GEN3_RDY}),
        .RECCLK(pipe_rxusrclk_in),
        .RESETN(reset_n),
        .SAXISCCTDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axis_cc_tdata}),
        .SAXISCCTKEEP({1'b0,1'b0,1'b0,1'b0,s_axis_cc_tkeep}),
        .SAXISCCTLAST(s_axis_cc_tlast),
        .SAXISCCTREADY(s_axis_cc_tready),
        .SAXISCCTUSER(s_axis_cc_tuser),
        .SAXISCCTVALID(s_axis_cc_tvalid),
        .SAXISRQTDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axis_rq_tdata}),
        .SAXISRQTKEEP({1'b0,1'b0,1'b0,1'b0,s_axis_rq_tkeep}),
        .SAXISRQTLAST(s_axis_rq_tlast),
        .SAXISRQTREADY(s_axis_rq_tready),
        .SAXISRQTUSER(s_axis_rq_tuser),
        .SAXISRQTVALID(s_axis_rq_tvalid),
        .USERCLK(pipe_userclk2_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx pcie_bram_7vx_i
       (.MICOMPLETIONRAMREADADDRESSAL(MICOMPLETIONRAMREADADDRESSAL),
        .MICOMPLETIONRAMREADADDRESSAU(MICOMPLETIONRAMREADADDRESSAU[8:0]),
        .MICOMPLETIONRAMREADADDRESSBL(MICOMPLETIONRAMREADADDRESSBL[8:0]),
        .MICOMPLETIONRAMREADADDRESSBU(MICOMPLETIONRAMREADADDRESSBU[8:0]),
        .MICOMPLETIONRAMREADDATA(MICOMPLETIONRAMREADDATA),
        .MICOMPLETIONRAMREADENABLEL({MICOMPLETIONRAMREADENABLEL[2],MICOMPLETIONRAMREADENABLEL[0]}),
        .MICOMPLETIONRAMREADENABLEU({MICOMPLETIONRAMREADENABLEU[2],MICOMPLETIONRAMREADENABLEU[0]}),
        .MICOMPLETIONRAMWRITEADDRESSAL(MICOMPLETIONRAMWRITEADDRESSAL),
        .MICOMPLETIONRAMWRITEADDRESSAU(MICOMPLETIONRAMWRITEADDRESSAU[8:0]),
        .MICOMPLETIONRAMWRITEADDRESSBL(MICOMPLETIONRAMWRITEADDRESSBL[8:0]),
        .MICOMPLETIONRAMWRITEADDRESSBU(MICOMPLETIONRAMWRITEADDRESSBU[8:0]),
        .MICOMPLETIONRAMWRITEDATA(MICOMPLETIONRAMWRITEDATA),
        .MICOMPLETIONRAMWRITEENABLEL({MICOMPLETIONRAMWRITEENABLEL[2],MICOMPLETIONRAMWRITEENABLEL[0]}),
        .MICOMPLETIONRAMWRITEENABLEU({MICOMPLETIONRAMWRITEENABLEU[2],MICOMPLETIONRAMWRITEENABLEU[0]}),
        .MIREPLAYRAMADDRESS(MIREPLAYRAMADDRESS),
        .MIREPLAYRAMREADDATA(MIREPLAYRAMREADDATA),
        .MIREPLAYRAMWRITEDATA(MIREPLAYRAMWRITEDATA),
        .MIREPLAYRAMWRITEENABLE(MIREPLAYRAMWRITEENABLE),
        .MIREQUESTRAMREADDATA(MIREQUESTRAMREADDATA),
        .MIREQUESTRAMWRITEDATA(MIREQUESTRAMWRITEDATA),
        .MIREQUESTRAMWRITEENABLE(MIREQUESTRAMWRITEENABLE),
        .pipe_userclk1_in(pipe_userclk1_in),
        .raddr0_i(MIREQUESTRAMREADADDRESSA),
        .raddr1_i(MIREQUESTRAMREADADDRESSB),
        .ren_i(MIREQUESTRAMREADENABLE),
        .reset_sync1(reset_sync1),
        .waddr0_i(MIREQUESTRAMWRITEADDRESSA),
        .waddr1_i(MIREQUESTRAMWRITEADDRESSB));
  FDPE reset_sync0_reg
       (.C(pipe_userclk1_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset_sync0_reg_0),
        .Q(reset_sync0));
  FDPE reset_sync1_reg
       (.C(pipe_userclk1_in),
        .CE(1'b1),
        .D(reset_sync0),
        .PRE(reset_sync0_reg_0),
        .Q(reset_sync1));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h8)) 
    user_lnk_up_INST_0
       (.I0(cfg_phy_link_status[0]),
        .I1(cfg_phy_link_status[1]),
        .O(user_lnk_up));
  LUT2 #(
    .INIT(4'hE)) 
    user_reset_i_1
       (.I0(sys_reset),
        .I1(cfg_hot_reset_out),
        .O(sys_reset_0));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    user_reset_int_i_1
       (.I0(user_reset_int),
        .I1(cfg_phy_link_down),
        .I2(cfg_phy_link_status[1]),
        .O(user_reset_int_reg));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx
   (MIREPLAYRAMREADDATA,
    MIREQUESTRAMREADDATA,
    MICOMPLETIONRAMREADDATA,
    pipe_userclk1_in,
    MICOMPLETIONRAMREADADDRESSBU,
    MICOMPLETIONRAMWRITEADDRESSBU,
    MICOMPLETIONRAMWRITEDATA,
    MICOMPLETIONRAMREADADDRESSAU,
    MICOMPLETIONRAMWRITEADDRESSAU,
    MICOMPLETIONRAMREADADDRESSBL,
    MICOMPLETIONRAMWRITEADDRESSBL,
    MICOMPLETIONRAMREADADDRESSAL,
    MICOMPLETIONRAMWRITEADDRESSAL,
    MICOMPLETIONRAMREADENABLEL,
    MICOMPLETIONRAMWRITEENABLEL,
    reset_sync1,
    MIREPLAYRAMADDRESS,
    MIREPLAYRAMWRITEDATA,
    MIREPLAYRAMWRITEENABLE,
    ren_i,
    raddr0_i,
    waddr0_i,
    MIREQUESTRAMWRITEDATA,
    MIREQUESTRAMWRITEENABLE,
    raddr1_i,
    waddr1_i,
    MICOMPLETIONRAMREADENABLEU,
    MICOMPLETIONRAMWRITEENABLEU);
  output [143:0]MIREPLAYRAMREADDATA;
  output [143:0]MIREQUESTRAMREADDATA;
  output [143:0]MICOMPLETIONRAMREADDATA;
  input pipe_userclk1_in;
  input [8:0]MICOMPLETIONRAMREADADDRESSBU;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSBU;
  input [143:0]MICOMPLETIONRAMWRITEDATA;
  input [8:0]MICOMPLETIONRAMREADADDRESSAU;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSAU;
  input [8:0]MICOMPLETIONRAMREADADDRESSBL;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSBL;
  input [9:0]MICOMPLETIONRAMREADADDRESSAL;
  input [9:0]MICOMPLETIONRAMWRITEADDRESSAL;
  input [1:0]MICOMPLETIONRAMREADENABLEL;
  input [1:0]MICOMPLETIONRAMWRITEENABLEL;
  input reset_sync1;
  input [8:0]MIREPLAYRAMADDRESS;
  input [143:0]MIREPLAYRAMWRITEDATA;
  input [1:0]MIREPLAYRAMWRITEENABLE;
  input [3:0]ren_i;
  input [8:0]raddr0_i;
  input [8:0]waddr0_i;
  input [143:0]MIREQUESTRAMWRITEDATA;
  input [3:0]MIREQUESTRAMWRITEENABLE;
  input [8:0]raddr1_i;
  input [8:0]waddr1_i;
  input [1:0]MICOMPLETIONRAMREADENABLEU;
  input [1:0]MICOMPLETIONRAMWRITEENABLEU;

  wire [9:0]MICOMPLETIONRAMREADADDRESSAL;
  wire [8:0]MICOMPLETIONRAMREADADDRESSAU;
  wire [8:0]MICOMPLETIONRAMREADADDRESSBL;
  wire [8:0]MICOMPLETIONRAMREADADDRESSBU;
  wire [143:0]MICOMPLETIONRAMREADDATA;
  wire [1:0]MICOMPLETIONRAMREADENABLEL;
  wire [1:0]MICOMPLETIONRAMREADENABLEU;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSAL;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSAU;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSBL;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSBU;
  wire [143:0]MICOMPLETIONRAMWRITEDATA;
  wire [1:0]MICOMPLETIONRAMWRITEENABLEL;
  wire [1:0]MICOMPLETIONRAMWRITEENABLEU;
  wire [8:0]MIREPLAYRAMADDRESS;
  wire [143:0]MIREPLAYRAMREADDATA;
  wire [143:0]MIREPLAYRAMWRITEDATA;
  wire [1:0]MIREPLAYRAMWRITEENABLE;
  wire [143:0]MIREQUESTRAMREADDATA;
  wire [143:0]MIREQUESTRAMWRITEDATA;
  wire [3:0]MIREQUESTRAMWRITEENABLE;
  wire pipe_userclk1_in;
  wire [8:0]raddr0_i;
  wire [8:0]raddr1_i;
  wire [3:0]ren_i;
  wire reset_sync1;
  wire [8:0]waddr0_i;
  wire [8:0]waddr1_i;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_cpl cpl_fifo
       (.MICOMPLETIONRAMREADADDRESSAL(MICOMPLETIONRAMREADADDRESSAL),
        .MICOMPLETIONRAMREADADDRESSAU(MICOMPLETIONRAMREADADDRESSAU),
        .MICOMPLETIONRAMREADADDRESSBL(MICOMPLETIONRAMREADADDRESSBL),
        .MICOMPLETIONRAMREADADDRESSBU(MICOMPLETIONRAMREADADDRESSBU),
        .MICOMPLETIONRAMREADDATA(MICOMPLETIONRAMREADDATA),
        .MICOMPLETIONRAMREADENABLEL(MICOMPLETIONRAMREADENABLEL),
        .MICOMPLETIONRAMREADENABLEU(MICOMPLETIONRAMREADENABLEU),
        .MICOMPLETIONRAMWRITEADDRESSAL(MICOMPLETIONRAMWRITEADDRESSAL),
        .MICOMPLETIONRAMWRITEADDRESSAU(MICOMPLETIONRAMWRITEADDRESSAU),
        .MICOMPLETIONRAMWRITEADDRESSBL(MICOMPLETIONRAMWRITEADDRESSBL),
        .MICOMPLETIONRAMWRITEADDRESSBU(MICOMPLETIONRAMWRITEADDRESSBU),
        .MICOMPLETIONRAMWRITEDATA(MICOMPLETIONRAMWRITEDATA),
        .MICOMPLETIONRAMWRITEENABLEL(MICOMPLETIONRAMWRITEENABLEL),
        .MICOMPLETIONRAMWRITEENABLEU(MICOMPLETIONRAMWRITEENABLEU),
        .pipe_userclk1_in(pipe_userclk1_in),
        .reset_sync1(reset_sync1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_rep replay_buffer
       (.MIREPLAYRAMADDRESS(MIREPLAYRAMADDRESS),
        .MIREPLAYRAMREADDATA(MIREPLAYRAMREADDATA),
        .MIREPLAYRAMWRITEDATA(MIREPLAYRAMWRITEDATA),
        .MIREPLAYRAMWRITEENABLE(MIREPLAYRAMWRITEENABLE),
        .pipe_userclk1_in(pipe_userclk1_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_req req_fifo
       (.MIREQUESTRAMREADDATA(MIREQUESTRAMREADDATA),
        .MIREQUESTRAMWRITEDATA(MIREQUESTRAMWRITEDATA),
        .MIREQUESTRAMWRITEENABLE(MIREQUESTRAMWRITEENABLE),
        .pipe_userclk1_in(pipe_userclk1_in),
        .raddr0_i(raddr0_i),
        .raddr1_i(raddr1_i),
        .ren_i(ren_i),
        .waddr0_i(waddr0_i),
        .waddr1_i(waddr1_i));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_16k
   (MICOMPLETIONRAMREADDATA,
    pipe_userclk1_in,
    MICOMPLETIONRAMREADADDRESSBU,
    MICOMPLETIONRAMWRITEADDRESSBU,
    MICOMPLETIONRAMWRITEDATA,
    MICOMPLETIONRAMREADADDRESSAU,
    MICOMPLETIONRAMWRITEADDRESSAU,
    MICOMPLETIONRAMREADADDRESSBL,
    MICOMPLETIONRAMWRITEADDRESSBL,
    MICOMPLETIONRAMREADADDRESSAL,
    MICOMPLETIONRAMWRITEADDRESSAL,
    MICOMPLETIONRAMREADENABLEL,
    MICOMPLETIONRAMWRITEENABLEL,
    reset_sync1,
    MICOMPLETIONRAMREADENABLEU,
    MICOMPLETIONRAMWRITEENABLEU);
  output [143:0]MICOMPLETIONRAMREADDATA;
  input pipe_userclk1_in;
  input [8:0]MICOMPLETIONRAMREADADDRESSBU;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSBU;
  input [143:0]MICOMPLETIONRAMWRITEDATA;
  input [8:0]MICOMPLETIONRAMREADADDRESSAU;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSAU;
  input [8:0]MICOMPLETIONRAMREADADDRESSBL;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSBL;
  input [9:0]MICOMPLETIONRAMREADADDRESSAL;
  input [9:0]MICOMPLETIONRAMWRITEADDRESSAL;
  input [1:0]MICOMPLETIONRAMREADENABLEL;
  input [1:0]MICOMPLETIONRAMWRITEENABLEL;
  input reset_sync1;
  input [1:0]MICOMPLETIONRAMREADENABLEU;
  input [1:0]MICOMPLETIONRAMWRITEENABLEU;

  wire ENARDEN0;
  wire ENARDEN010_out;
  wire [9:0]MICOMPLETIONRAMREADADDRESSAL;
  wire [8:0]MICOMPLETIONRAMREADADDRESSAU;
  wire [8:0]MICOMPLETIONRAMREADADDRESSBL;
  wire [8:0]MICOMPLETIONRAMREADADDRESSBU;
  wire [143:0]MICOMPLETIONRAMREADDATA;
  wire [1:0]MICOMPLETIONRAMREADENABLEL;
  wire [1:0]MICOMPLETIONRAMREADENABLEU;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSAL;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSAU;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSBL;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSBU;
  wire [143:0]MICOMPLETIONRAMWRITEDATA;
  wire [1:0]MICOMPLETIONRAMWRITEENABLEL;
  wire [1:0]MICOMPLETIONRAMWRITEENABLEU;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_i_1_n_0 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_10 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_11 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_12 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_13 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_14 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_15 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_16 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_17 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_18 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_19 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_20 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_21 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_22 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_23 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_24 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_25 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_26 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_27 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_28 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_29 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_30 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_31 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_32 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_33 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_34 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_35 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_36 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_37 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_38 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_39 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_4 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_40 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_41 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_42 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_43 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_44 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_45 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_46 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_47 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_48 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_49 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_5 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_50 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_51 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_52 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_53 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_54 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_55 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_56 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_57 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_58 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_59 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_6 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_60 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_61 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_62 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_63 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_64 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_65 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_66 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_67 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_68 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_69 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_7 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_70 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_71 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_72 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_73 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_74 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_75 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_8 ;
  wire \SPEED_250MHz.RAMB36E1[0].u_fifo_n_9 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_i_1_n_0 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_10 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_11 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_12 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_13 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_14 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_15 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_16 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_17 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_18 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_19 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_20 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_21 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_22 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_23 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_24 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_25 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_26 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_27 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_28 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_29 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_30 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_31 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_32 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_33 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_34 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_35 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_36 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_37 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_38 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_39 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_4 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_40 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_41 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_42 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_43 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_44 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_45 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_46 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_47 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_48 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_49 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_5 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_50 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_51 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_52 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_53 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_54 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_55 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_56 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_57 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_58 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_59 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_6 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_60 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_61 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_62 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_63 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_64 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_65 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_66 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_67 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_68 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_69 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_7 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_70 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_71 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_72 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_73 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_74 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_75 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_8 ;
  wire \SPEED_250MHz.RAMB36E1[1].u_fifo_n_9 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_10 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_11 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_12 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_13 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_14 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_15 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_16 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_17 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_18 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_19 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_20 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_21 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_22 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_23 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_24 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_25 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_26 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_27 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_28 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_29 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_30 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_31 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_32 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_33 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_34 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_35 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_36 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_37 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_38 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_39 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_4 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_40 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_41 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_42 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_43 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_44 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_45 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_46 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_47 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_48 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_49 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_5 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_50 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_51 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_52 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_53 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_54 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_55 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_56 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_57 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_58 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_59 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_6 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_60 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_61 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_62 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_63 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_64 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_65 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_66 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_67 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_68 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_69 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_7 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_70 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_71 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_72 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_73 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_74 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_75 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_8 ;
  wire \SPEED_250MHz.RAMB36E1[2].u_fifo_n_9 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_10 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_11 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_12 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_13 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_14 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_15 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_16 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_17 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_18 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_19 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_20 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_21 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_22 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_23 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_24 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_25 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_26 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_27 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_28 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_29 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_30 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_31 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_32 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_33 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_34 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_35 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_36 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_37 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_38 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_39 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_4 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_40 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_41 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_42 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_43 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_44 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_45 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_46 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_47 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_48 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_49 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_5 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_50 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_51 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_52 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_53 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_54 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_55 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_56 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_57 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_58 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_59 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_6 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_60 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_61 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_62 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_63 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_64 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_65 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_66 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_67 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_68 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_69 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_7 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_70 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_71 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_72 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_73 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_74 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_75 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_8 ;
  wire \SPEED_250MHz.RAMB36E1[3].u_fifo_n_9 ;
  wire \SPEED_250MHz.raddr0_q_i_1_n_0 ;
  wire \SPEED_250MHz.raddr0_qq_i_1_n_0 ;
  wire WEBWE012_out;
  wire WEBWE07_out;
  wire pipe_userclk1_in;
  wire raddr0_q;
  wire raddr0_qq;
  wire reset_sync1;
  wire \NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_DBITERR_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_RDADDRECC_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_DBITERR_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_RDADDRECC_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_DBITERR_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_RDADDRECC_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_DBITERR_UNCONNECTED ;
  wire \NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_RDADDRECC_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_100
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_49 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_49 ),
        .O(MICOMPLETIONRAMREADDATA[56]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_101
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_50 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_50 ),
        .O(MICOMPLETIONRAMREADDATA[55]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_102
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_51 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_51 ),
        .O(MICOMPLETIONRAMREADDATA[54]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_103
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_74 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_74 ),
        .O(MICOMPLETIONRAMREADDATA[53]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_104
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_52 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_52 ),
        .O(MICOMPLETIONRAMREADDATA[52]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_105
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_53 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_53 ),
        .O(MICOMPLETIONRAMREADDATA[51]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_106
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_54 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_54 ),
        .O(MICOMPLETIONRAMREADDATA[50]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_107
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_55 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_55 ),
        .O(MICOMPLETIONRAMREADDATA[49]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_108
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_56 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_56 ),
        .O(MICOMPLETIONRAMREADDATA[48]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_109
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_57 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_57 ),
        .O(MICOMPLETIONRAMREADDATA[47]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_110
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_58 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_58 ),
        .O(MICOMPLETIONRAMREADDATA[46]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_111
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_59 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_59 ),
        .O(MICOMPLETIONRAMREADDATA[45]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_112
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_75 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_75 ),
        .O(MICOMPLETIONRAMREADDATA[44]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_113
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_60 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_60 ),
        .O(MICOMPLETIONRAMREADDATA[43]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_114
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_61 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_61 ),
        .O(MICOMPLETIONRAMREADDATA[42]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_115
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_62 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_62 ),
        .O(MICOMPLETIONRAMREADDATA[41]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_116
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_63 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_63 ),
        .O(MICOMPLETIONRAMREADDATA[40]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_117
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_64 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_64 ),
        .O(MICOMPLETIONRAMREADDATA[39]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_118
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_65 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_65 ),
        .O(MICOMPLETIONRAMREADDATA[38]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_119
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_66 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_66 ),
        .O(MICOMPLETIONRAMREADDATA[37]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_120
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_67 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_67 ),
        .O(MICOMPLETIONRAMREADDATA[36]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_121
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_68 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_68 ),
        .O(MICOMPLETIONRAMREADDATA[35]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_122
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_4 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_4 ),
        .O(MICOMPLETIONRAMREADDATA[34]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_123
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_5 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_5 ),
        .O(MICOMPLETIONRAMREADDATA[33]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_124
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_6 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_6 ),
        .O(MICOMPLETIONRAMREADDATA[32]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_125
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_7 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_7 ),
        .O(MICOMPLETIONRAMREADDATA[31]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_126
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_8 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_8 ),
        .O(MICOMPLETIONRAMREADDATA[30]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_127
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_9 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_9 ),
        .O(MICOMPLETIONRAMREADDATA[29]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_128
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_10 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_10 ),
        .O(MICOMPLETIONRAMREADDATA[28]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_129
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_11 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_11 ),
        .O(MICOMPLETIONRAMREADDATA[27]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_13
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_72 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_72 ),
        .O(MICOMPLETIONRAMREADDATA[143]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_130
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_69 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_69 ),
        .O(MICOMPLETIONRAMREADDATA[26]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_131
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_12 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_12 ),
        .O(MICOMPLETIONRAMREADDATA[25]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_132
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_13 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_13 ),
        .O(MICOMPLETIONRAMREADDATA[24]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_133
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_14 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_14 ),
        .O(MICOMPLETIONRAMREADDATA[23]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_134
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_15 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_15 ),
        .O(MICOMPLETIONRAMREADDATA[22]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_135
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_16 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_16 ),
        .O(MICOMPLETIONRAMREADDATA[21]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_136
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_17 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_17 ),
        .O(MICOMPLETIONRAMREADDATA[20]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_137
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_18 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_18 ),
        .O(MICOMPLETIONRAMREADDATA[19]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_138
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_19 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_19 ),
        .O(MICOMPLETIONRAMREADDATA[18]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_139
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_70 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_70 ),
        .O(MICOMPLETIONRAMREADDATA[17]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_14
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_36 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_36 ),
        .O(MICOMPLETIONRAMREADDATA[142]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_140
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_20 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_20 ),
        .O(MICOMPLETIONRAMREADDATA[16]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_141
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_21 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_21 ),
        .O(MICOMPLETIONRAMREADDATA[15]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_142
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_22 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_22 ),
        .O(MICOMPLETIONRAMREADDATA[14]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_143
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_23 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_23 ),
        .O(MICOMPLETIONRAMREADDATA[13]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_144
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_24 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_24 ),
        .O(MICOMPLETIONRAMREADDATA[12]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_145
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_25 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_25 ),
        .O(MICOMPLETIONRAMREADDATA[11]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_146
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_26 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_26 ),
        .O(MICOMPLETIONRAMREADDATA[10]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_147
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_27 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_27 ),
        .O(MICOMPLETIONRAMREADDATA[9]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_148
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_71 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_71 ),
        .O(MICOMPLETIONRAMREADDATA[8]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_149
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_28 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_28 ),
        .O(MICOMPLETIONRAMREADDATA[7]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_15
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_37 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_37 ),
        .O(MICOMPLETIONRAMREADDATA[141]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_150
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_29 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_29 ),
        .O(MICOMPLETIONRAMREADDATA[6]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_151
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_30 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_30 ),
        .O(MICOMPLETIONRAMREADDATA[5]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_152
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_31 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_31 ),
        .O(MICOMPLETIONRAMREADDATA[4]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_153
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_32 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_32 ),
        .O(MICOMPLETIONRAMREADDATA[3]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_154
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_33 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_33 ),
        .O(MICOMPLETIONRAMREADDATA[2]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_155
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_34 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_34 ),
        .O(MICOMPLETIONRAMREADDATA[1]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_156
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_35 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_35 ),
        .O(MICOMPLETIONRAMREADDATA[0]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_16
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_38 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_38 ),
        .O(MICOMPLETIONRAMREADDATA[140]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_17
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_39 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_39 ),
        .O(MICOMPLETIONRAMREADDATA[139]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_18
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_40 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_40 ),
        .O(MICOMPLETIONRAMREADDATA[138]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_19
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_41 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_41 ),
        .O(MICOMPLETIONRAMREADDATA[137]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_20
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_42 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_42 ),
        .O(MICOMPLETIONRAMREADDATA[136]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_21
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_43 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_43 ),
        .O(MICOMPLETIONRAMREADDATA[135]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_22
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_73 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_73 ),
        .O(MICOMPLETIONRAMREADDATA[134]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_23
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_44 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_44 ),
        .O(MICOMPLETIONRAMREADDATA[133]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_24
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_45 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_45 ),
        .O(MICOMPLETIONRAMREADDATA[132]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_25
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_46 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_46 ),
        .O(MICOMPLETIONRAMREADDATA[131]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_26
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_47 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_47 ),
        .O(MICOMPLETIONRAMREADDATA[130]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_27
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_48 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_48 ),
        .O(MICOMPLETIONRAMREADDATA[129]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_28
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_49 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_49 ),
        .O(MICOMPLETIONRAMREADDATA[128]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_29
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_50 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_50 ),
        .O(MICOMPLETIONRAMREADDATA[127]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_30
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_51 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_51 ),
        .O(MICOMPLETIONRAMREADDATA[126]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_31
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_74 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_74 ),
        .O(MICOMPLETIONRAMREADDATA[125]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_32
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_52 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_52 ),
        .O(MICOMPLETIONRAMREADDATA[124]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_33
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_53 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_53 ),
        .O(MICOMPLETIONRAMREADDATA[123]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_34
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_54 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_54 ),
        .O(MICOMPLETIONRAMREADDATA[122]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_35
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_55 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_55 ),
        .O(MICOMPLETIONRAMREADDATA[121]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_36
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_56 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_56 ),
        .O(MICOMPLETIONRAMREADDATA[120]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_37
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_57 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_57 ),
        .O(MICOMPLETIONRAMREADDATA[119]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_38
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_58 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_58 ),
        .O(MICOMPLETIONRAMREADDATA[118]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_39
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_59 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_59 ),
        .O(MICOMPLETIONRAMREADDATA[117]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_40
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_75 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_75 ),
        .O(MICOMPLETIONRAMREADDATA[116]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_41
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_60 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_60 ),
        .O(MICOMPLETIONRAMREADDATA[115]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_42
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_61 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_61 ),
        .O(MICOMPLETIONRAMREADDATA[114]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_43
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_62 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_62 ),
        .O(MICOMPLETIONRAMREADDATA[113]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_44
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_63 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_63 ),
        .O(MICOMPLETIONRAMREADDATA[112]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_45
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_64 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_64 ),
        .O(MICOMPLETIONRAMREADDATA[111]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_46
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_65 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_65 ),
        .O(MICOMPLETIONRAMREADDATA[110]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_47
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_66 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_66 ),
        .O(MICOMPLETIONRAMREADDATA[109]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_48
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_67 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_67 ),
        .O(MICOMPLETIONRAMREADDATA[108]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_49
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_68 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_68 ),
        .O(MICOMPLETIONRAMREADDATA[107]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_50
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_4 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_4 ),
        .O(MICOMPLETIONRAMREADDATA[106]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_51
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_5 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_5 ),
        .O(MICOMPLETIONRAMREADDATA[105]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_52
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_6 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_6 ),
        .O(MICOMPLETIONRAMREADDATA[104]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_53
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_7 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_7 ),
        .O(MICOMPLETIONRAMREADDATA[103]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_54
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_8 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_8 ),
        .O(MICOMPLETIONRAMREADDATA[102]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_55
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_9 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_9 ),
        .O(MICOMPLETIONRAMREADDATA[101]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_56
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_10 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_10 ),
        .O(MICOMPLETIONRAMREADDATA[100]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_57
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_11 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_11 ),
        .O(MICOMPLETIONRAMREADDATA[99]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_58
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_69 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_69 ),
        .O(MICOMPLETIONRAMREADDATA[98]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_59
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_12 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_12 ),
        .O(MICOMPLETIONRAMREADDATA[97]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_60
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_13 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_13 ),
        .O(MICOMPLETIONRAMREADDATA[96]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_61
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_14 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_14 ),
        .O(MICOMPLETIONRAMREADDATA[95]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_62
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_15 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_15 ),
        .O(MICOMPLETIONRAMREADDATA[94]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_63
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_16 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_16 ),
        .O(MICOMPLETIONRAMREADDATA[93]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_64
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_17 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_17 ),
        .O(MICOMPLETIONRAMREADDATA[92]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_65
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_18 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_18 ),
        .O(MICOMPLETIONRAMREADDATA[91]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_66
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_19 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_19 ),
        .O(MICOMPLETIONRAMREADDATA[90]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_67
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_70 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_70 ),
        .O(MICOMPLETIONRAMREADDATA[89]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_68
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_20 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_20 ),
        .O(MICOMPLETIONRAMREADDATA[88]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_69
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_21 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_21 ),
        .O(MICOMPLETIONRAMREADDATA[87]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_70
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_22 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_22 ),
        .O(MICOMPLETIONRAMREADDATA[86]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_71
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_23 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_23 ),
        .O(MICOMPLETIONRAMREADDATA[85]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_72
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_24 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_24 ),
        .O(MICOMPLETIONRAMREADDATA[84]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_73
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_25 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_25 ),
        .O(MICOMPLETIONRAMREADDATA[83]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_74
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_26 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_26 ),
        .O(MICOMPLETIONRAMREADDATA[82]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_75
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_27 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_27 ),
        .O(MICOMPLETIONRAMREADDATA[81]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_76
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_71 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_71 ),
        .O(MICOMPLETIONRAMREADDATA[80]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_77
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_28 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_28 ),
        .O(MICOMPLETIONRAMREADDATA[79]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_78
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_29 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_29 ),
        .O(MICOMPLETIONRAMREADDATA[78]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_79
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_30 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_30 ),
        .O(MICOMPLETIONRAMREADDATA[77]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_80
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_31 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_31 ),
        .O(MICOMPLETIONRAMREADDATA[76]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_81
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_32 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_32 ),
        .O(MICOMPLETIONRAMREADDATA[75]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_82
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_33 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_33 ),
        .O(MICOMPLETIONRAMREADDATA[74]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_83
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_34 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_34 ),
        .O(MICOMPLETIONRAMREADDATA[73]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_84
       (.I0(\SPEED_250MHz.RAMB36E1[3].u_fifo_n_35 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[1].u_fifo_n_35 ),
        .O(MICOMPLETIONRAMREADDATA[72]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_85
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_72 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_72 ),
        .O(MICOMPLETIONRAMREADDATA[71]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_86
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_36 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_36 ),
        .O(MICOMPLETIONRAMREADDATA[70]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_87
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_37 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_37 ),
        .O(MICOMPLETIONRAMREADDATA[69]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_88
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_38 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_38 ),
        .O(MICOMPLETIONRAMREADDATA[68]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_89
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_39 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_39 ),
        .O(MICOMPLETIONRAMREADDATA[67]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_90
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_40 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_40 ),
        .O(MICOMPLETIONRAMREADDATA[66]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_91
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_41 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_41 ),
        .O(MICOMPLETIONRAMREADDATA[65]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_92
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_42 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_42 ),
        .O(MICOMPLETIONRAMREADDATA[64]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_93
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_43 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_43 ),
        .O(MICOMPLETIONRAMREADDATA[63]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_94
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_73 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_73 ),
        .O(MICOMPLETIONRAMREADDATA[62]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_95
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_44 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_44 ),
        .O(MICOMPLETIONRAMREADDATA[61]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_96
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_45 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_45 ),
        .O(MICOMPLETIONRAMREADDATA[60]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_97
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_46 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_46 ),
        .O(MICOMPLETIONRAMREADDATA[59]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_98
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_47 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_47 ),
        .O(MICOMPLETIONRAMREADDATA[58]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_99
       (.I0(\SPEED_250MHz.RAMB36E1[2].u_fifo_n_48 ),
        .I1(raddr0_qq),
        .I2(\SPEED_250MHz.RAMB36E1[0].u_fifo_n_48 ),
        .O(MICOMPLETIONRAMREADDATA[57]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \SPEED_250MHz.RAMB36E1[0].u_fifo 
       (.ADDRARDADDR({1'b1,MICOMPLETIONRAMREADADDRESSBU,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,MICOMPLETIONRAMWRITEADDRESSBU,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_DBITERR_UNCONNECTED ),
        .DIADI({MICOMPLETIONRAMWRITEDATA[34:27],MICOMPLETIONRAMWRITEDATA[25:18],MICOMPLETIONRAMWRITEDATA[16:9],MICOMPLETIONRAMWRITEDATA[7:0]}),
        .DIBDI({MICOMPLETIONRAMWRITEDATA[70:63],MICOMPLETIONRAMWRITEDATA[61:54],MICOMPLETIONRAMWRITEDATA[52:45],MICOMPLETIONRAMWRITEDATA[43:36]}),
        .DIPADIP({MICOMPLETIONRAMWRITEDATA[35],MICOMPLETIONRAMWRITEDATA[26],MICOMPLETIONRAMWRITEDATA[17],MICOMPLETIONRAMWRITEDATA[8]}),
        .DIPBDIP({MICOMPLETIONRAMWRITEDATA[71],MICOMPLETIONRAMWRITEDATA[62],MICOMPLETIONRAMWRITEDATA[53],MICOMPLETIONRAMWRITEDATA[44]}),
        .DOADO({\SPEED_250MHz.RAMB36E1[0].u_fifo_n_4 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_5 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_6 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_7 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_8 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_9 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_10 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_11 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_12 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_13 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_14 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_15 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_16 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_17 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_18 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_19 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_20 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_21 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_22 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_23 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_24 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_25 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_26 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_27 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_28 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_29 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_30 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_31 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_32 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_33 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_34 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_35 }),
        .DOBDO({\SPEED_250MHz.RAMB36E1[0].u_fifo_n_36 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_37 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_38 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_39 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_40 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_41 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_42 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_43 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_44 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_45 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_46 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_47 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_48 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_49 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_50 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_51 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_52 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_53 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_54 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_55 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_56 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_57 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_58 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_59 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_60 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_61 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_62 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_63 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_64 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_65 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_66 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_67 }),
        .DOPADOP({\SPEED_250MHz.RAMB36E1[0].u_fifo_n_68 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_69 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_70 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_71 }),
        .DOPBDOP({\SPEED_250MHz.RAMB36E1[0].u_fifo_n_72 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_73 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_74 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_n_75 }),
        .ECCPARITY(\NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(\SPEED_250MHz.RAMB36E1[0].u_fifo_i_1_n_0 ),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_SPEED_250MHz.RAMB36E1[0].u_fifo_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 }));
  LUT2 #(
    .INIT(4'h2)) 
    \SPEED_250MHz.RAMB36E1[0].u_fifo_i_1 
       (.I0(MICOMPLETIONRAMREADENABLEL[0]),
        .I1(MICOMPLETIONRAMREADADDRESSAL[9]),
        .O(\SPEED_250MHz.RAMB36E1[0].u_fifo_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \SPEED_250MHz.RAMB36E1[0].u_fifo_i_2 
       (.I0(MICOMPLETIONRAMWRITEENABLEL[0]),
        .I1(MICOMPLETIONRAMWRITEADDRESSAL[9]),
        .O(\SPEED_250MHz.RAMB36E1[0].u_fifo_i_2_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \SPEED_250MHz.RAMB36E1[1].u_fifo 
       (.ADDRARDADDR({1'b1,MICOMPLETIONRAMREADADDRESSAU,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,MICOMPLETIONRAMWRITEADDRESSAU,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_DBITERR_UNCONNECTED ),
        .DIADI({MICOMPLETIONRAMWRITEDATA[106:99],MICOMPLETIONRAMWRITEDATA[97:90],MICOMPLETIONRAMWRITEDATA[88:81],MICOMPLETIONRAMWRITEDATA[79:72]}),
        .DIBDI({MICOMPLETIONRAMWRITEDATA[142:135],MICOMPLETIONRAMWRITEDATA[133:126],MICOMPLETIONRAMWRITEDATA[124:117],MICOMPLETIONRAMWRITEDATA[115:108]}),
        .DIPADIP({MICOMPLETIONRAMWRITEDATA[107],MICOMPLETIONRAMWRITEDATA[98],MICOMPLETIONRAMWRITEDATA[89],MICOMPLETIONRAMWRITEDATA[80]}),
        .DIPBDIP({MICOMPLETIONRAMWRITEDATA[143],MICOMPLETIONRAMWRITEDATA[134],MICOMPLETIONRAMWRITEDATA[125],MICOMPLETIONRAMWRITEDATA[116]}),
        .DOADO({\SPEED_250MHz.RAMB36E1[1].u_fifo_n_4 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_5 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_6 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_7 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_8 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_9 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_10 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_11 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_12 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_13 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_14 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_15 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_16 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_17 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_18 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_19 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_20 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_21 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_22 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_23 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_24 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_25 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_26 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_27 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_28 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_29 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_30 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_31 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_32 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_33 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_34 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_35 }),
        .DOBDO({\SPEED_250MHz.RAMB36E1[1].u_fifo_n_36 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_37 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_38 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_39 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_40 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_41 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_42 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_43 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_44 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_45 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_46 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_47 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_48 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_49 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_50 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_51 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_52 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_53 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_54 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_55 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_56 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_57 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_58 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_59 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_60 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_61 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_62 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_63 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_64 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_65 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_66 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_67 }),
        .DOPADOP({\SPEED_250MHz.RAMB36E1[1].u_fifo_n_68 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_69 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_70 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_71 }),
        .DOPBDOP({\SPEED_250MHz.RAMB36E1[1].u_fifo_n_72 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_73 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_74 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_n_75 }),
        .ECCPARITY(\NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(\SPEED_250MHz.RAMB36E1[1].u_fifo_i_1_n_0 ),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_SPEED_250MHz.RAMB36E1[1].u_fifo_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ,\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 }));
  LUT2 #(
    .INIT(4'h2)) 
    \SPEED_250MHz.RAMB36E1[1].u_fifo_i_1 
       (.I0(MICOMPLETIONRAMREADENABLEL[1]),
        .I1(MICOMPLETIONRAMREADADDRESSAL[9]),
        .O(\SPEED_250MHz.RAMB36E1[1].u_fifo_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \SPEED_250MHz.RAMB36E1[1].u_fifo_i_2 
       (.I0(MICOMPLETIONRAMWRITEENABLEL[1]),
        .I1(MICOMPLETIONRAMWRITEADDRESSAL[9]),
        .O(\SPEED_250MHz.RAMB36E1[1].u_fifo_i_2_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \SPEED_250MHz.RAMB36E1[2].u_fifo 
       (.ADDRARDADDR({1'b1,MICOMPLETIONRAMREADADDRESSBL,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,MICOMPLETIONRAMWRITEADDRESSBL,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_DBITERR_UNCONNECTED ),
        .DIADI({MICOMPLETIONRAMWRITEDATA[34:27],MICOMPLETIONRAMWRITEDATA[25:18],MICOMPLETIONRAMWRITEDATA[16:9],MICOMPLETIONRAMWRITEDATA[7:0]}),
        .DIBDI({MICOMPLETIONRAMWRITEDATA[70:63],MICOMPLETIONRAMWRITEDATA[61:54],MICOMPLETIONRAMWRITEDATA[52:45],MICOMPLETIONRAMWRITEDATA[43:36]}),
        .DIPADIP({MICOMPLETIONRAMWRITEDATA[35],MICOMPLETIONRAMWRITEDATA[26],MICOMPLETIONRAMWRITEDATA[17],MICOMPLETIONRAMWRITEDATA[8]}),
        .DIPBDIP({MICOMPLETIONRAMWRITEDATA[71],MICOMPLETIONRAMWRITEDATA[62],MICOMPLETIONRAMWRITEDATA[53],MICOMPLETIONRAMWRITEDATA[44]}),
        .DOADO({\SPEED_250MHz.RAMB36E1[2].u_fifo_n_4 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_5 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_6 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_7 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_8 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_9 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_10 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_11 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_12 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_13 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_14 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_15 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_16 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_17 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_18 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_19 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_20 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_21 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_22 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_23 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_24 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_25 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_26 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_27 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_28 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_29 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_30 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_31 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_32 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_33 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_34 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_35 }),
        .DOBDO({\SPEED_250MHz.RAMB36E1[2].u_fifo_n_36 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_37 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_38 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_39 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_40 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_41 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_42 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_43 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_44 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_45 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_46 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_47 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_48 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_49 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_50 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_51 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_52 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_53 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_54 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_55 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_56 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_57 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_58 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_59 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_60 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_61 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_62 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_63 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_64 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_65 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_66 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_67 }),
        .DOPADOP({\SPEED_250MHz.RAMB36E1[2].u_fifo_n_68 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_69 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_70 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_71 }),
        .DOPBDOP({\SPEED_250MHz.RAMB36E1[2].u_fifo_n_72 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_73 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_74 ,\SPEED_250MHz.RAMB36E1[2].u_fifo_n_75 }),
        .ECCPARITY(\NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ENARDEN010_out),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_SPEED_250MHz.RAMB36E1[2].u_fifo_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({WEBWE07_out,WEBWE07_out,WEBWE07_out,WEBWE07_out,WEBWE07_out,WEBWE07_out,WEBWE07_out,WEBWE07_out}));
  LUT2 #(
    .INIT(4'h8)) 
    \SPEED_250MHz.RAMB36E1[2].u_fifo_i_1 
       (.I0(MICOMPLETIONRAMREADADDRESSAL[9]),
        .I1(MICOMPLETIONRAMREADENABLEU[0]),
        .O(ENARDEN010_out));
  LUT2 #(
    .INIT(4'h8)) 
    \SPEED_250MHz.RAMB36E1[2].u_fifo_i_2 
       (.I0(MICOMPLETIONRAMWRITEADDRESSAL[9]),
        .I1(MICOMPLETIONRAMWRITEENABLEU[0]),
        .O(WEBWE07_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \SPEED_250MHz.RAMB36E1[3].u_fifo 
       (.ADDRARDADDR({1'b1,MICOMPLETIONRAMREADADDRESSAL[8:0],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,MICOMPLETIONRAMWRITEADDRESSAL[8:0],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_DBITERR_UNCONNECTED ),
        .DIADI({MICOMPLETIONRAMWRITEDATA[106:99],MICOMPLETIONRAMWRITEDATA[97:90],MICOMPLETIONRAMWRITEDATA[88:81],MICOMPLETIONRAMWRITEDATA[79:72]}),
        .DIBDI({MICOMPLETIONRAMWRITEDATA[142:135],MICOMPLETIONRAMWRITEDATA[133:126],MICOMPLETIONRAMWRITEDATA[124:117],MICOMPLETIONRAMWRITEDATA[115:108]}),
        .DIPADIP({MICOMPLETIONRAMWRITEDATA[107],MICOMPLETIONRAMWRITEDATA[98],MICOMPLETIONRAMWRITEDATA[89],MICOMPLETIONRAMWRITEDATA[80]}),
        .DIPBDIP({MICOMPLETIONRAMWRITEDATA[143],MICOMPLETIONRAMWRITEDATA[134],MICOMPLETIONRAMWRITEDATA[125],MICOMPLETIONRAMWRITEDATA[116]}),
        .DOADO({\SPEED_250MHz.RAMB36E1[3].u_fifo_n_4 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_5 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_6 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_7 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_8 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_9 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_10 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_11 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_12 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_13 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_14 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_15 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_16 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_17 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_18 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_19 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_20 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_21 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_22 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_23 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_24 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_25 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_26 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_27 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_28 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_29 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_30 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_31 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_32 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_33 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_34 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_35 }),
        .DOBDO({\SPEED_250MHz.RAMB36E1[3].u_fifo_n_36 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_37 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_38 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_39 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_40 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_41 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_42 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_43 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_44 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_45 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_46 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_47 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_48 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_49 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_50 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_51 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_52 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_53 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_54 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_55 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_56 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_57 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_58 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_59 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_60 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_61 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_62 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_63 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_64 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_65 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_66 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_67 }),
        .DOPADOP({\SPEED_250MHz.RAMB36E1[3].u_fifo_n_68 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_69 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_70 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_71 }),
        .DOPBDOP({\SPEED_250MHz.RAMB36E1[3].u_fifo_n_72 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_73 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_74 ,\SPEED_250MHz.RAMB36E1[3].u_fifo_n_75 }),
        .ECCPARITY(\NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ENARDEN0),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_SPEED_250MHz.RAMB36E1[3].u_fifo_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({WEBWE012_out,WEBWE012_out,WEBWE012_out,WEBWE012_out,WEBWE012_out,WEBWE012_out,WEBWE012_out,WEBWE012_out}));
  LUT2 #(
    .INIT(4'h8)) 
    \SPEED_250MHz.RAMB36E1[3].u_fifo_i_1 
       (.I0(MICOMPLETIONRAMREADADDRESSAL[9]),
        .I1(MICOMPLETIONRAMREADENABLEU[1]),
        .O(ENARDEN0));
  LUT2 #(
    .INIT(4'h8)) 
    \SPEED_250MHz.RAMB36E1[3].u_fifo_i_2 
       (.I0(MICOMPLETIONRAMWRITEADDRESSAL[9]),
        .I1(MICOMPLETIONRAMWRITEENABLEU[1]),
        .O(WEBWE012_out));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \SPEED_250MHz.raddr0_q_i_1 
       (.I0(MICOMPLETIONRAMREADADDRESSAL[9]),
        .I1(reset_sync1),
        .O(\SPEED_250MHz.raddr0_q_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SPEED_250MHz.raddr0_q_reg 
       (.C(pipe_userclk1_in),
        .CE(1'b1),
        .D(\SPEED_250MHz.raddr0_q_i_1_n_0 ),
        .Q(raddr0_q),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \SPEED_250MHz.raddr0_qq_i_1 
       (.I0(raddr0_q),
        .I1(reset_sync1),
        .O(\SPEED_250MHz.raddr0_qq_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SPEED_250MHz.raddr0_qq_reg 
       (.C(pipe_userclk1_in),
        .CE(1'b1),
        .D(\SPEED_250MHz.raddr0_qq_i_1_n_0 ),
        .Q(raddr0_qq),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_8k
   (MIREQUESTRAMREADDATA,
    pipe_userclk1_in,
    ren_i,
    raddr0_i,
    waddr0_i,
    MIREQUESTRAMWRITEDATA,
    MIREQUESTRAMWRITEENABLE,
    raddr1_i,
    waddr1_i);
  output [143:0]MIREQUESTRAMREADDATA;
  input pipe_userclk1_in;
  input [3:0]ren_i;
  input [8:0]raddr0_i;
  input [8:0]waddr0_i;
  input [143:0]MIREQUESTRAMWRITEDATA;
  input [3:0]MIREQUESTRAMWRITEENABLE;
  input [8:0]raddr1_i;
  input [8:0]waddr1_i;

  wire [143:0]MIREQUESTRAMREADDATA;
  wire [143:0]MIREQUESTRAMWRITEDATA;
  wire [3:0]MIREQUESTRAMWRITEENABLE;
  wire pipe_userclk1_in;
  wire [8:0]raddr0_i;
  wire [8:0]raddr1_i;
  wire [3:0]ren_i;
  wire [8:0]waddr0_i;
  wire [8:0]waddr1_i;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \RAMB18E1[0].u_fifo 
       (.ADDRARDADDR({raddr0_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({waddr0_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DIADI({MIREQUESTRAMWRITEDATA[16:9],MIREQUESTRAMWRITEDATA[7:0]}),
        .DIBDI({MIREQUESTRAMWRITEDATA[34:27],MIREQUESTRAMWRITEDATA[25:18]}),
        .DIPADIP({MIREQUESTRAMWRITEDATA[17],MIREQUESTRAMWRITEDATA[8]}),
        .DIPBDIP({MIREQUESTRAMWRITEDATA[35],MIREQUESTRAMWRITEDATA[26]}),
        .DOADO({MIREQUESTRAMREADDATA[16:9],MIREQUESTRAMREADDATA[7:0]}),
        .DOBDO({MIREQUESTRAMREADDATA[34:27],MIREQUESTRAMREADDATA[25:18]}),
        .DOPADOP({MIREQUESTRAMREADDATA[17],MIREQUESTRAMREADDATA[8]}),
        .DOPBDOP({MIREQUESTRAMREADDATA[35],MIREQUESTRAMREADDATA[26]}),
        .ENARDEN(ren_i[0]),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({MIREQUESTRAMWRITEENABLE[0],MIREQUESTRAMWRITEENABLE[0],MIREQUESTRAMWRITEENABLE[0],MIREQUESTRAMWRITEENABLE[0]}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \RAMB18E1[1].u_fifo 
       (.ADDRARDADDR({raddr0_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({waddr0_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DIADI({MIREQUESTRAMWRITEDATA[52:45],MIREQUESTRAMWRITEDATA[43:36]}),
        .DIBDI({MIREQUESTRAMWRITEDATA[70:63],MIREQUESTRAMWRITEDATA[61:54]}),
        .DIPADIP({MIREQUESTRAMWRITEDATA[53],MIREQUESTRAMWRITEDATA[44]}),
        .DIPBDIP({MIREQUESTRAMWRITEDATA[71],MIREQUESTRAMWRITEDATA[62]}),
        .DOADO({MIREQUESTRAMREADDATA[52:45],MIREQUESTRAMREADDATA[43:36]}),
        .DOBDO({MIREQUESTRAMREADDATA[70:63],MIREQUESTRAMREADDATA[61:54]}),
        .DOPADOP({MIREQUESTRAMREADDATA[53],MIREQUESTRAMREADDATA[44]}),
        .DOPBDOP({MIREQUESTRAMREADDATA[71],MIREQUESTRAMREADDATA[62]}),
        .ENARDEN(ren_i[1]),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({MIREQUESTRAMWRITEENABLE[1],MIREQUESTRAMWRITEENABLE[1],MIREQUESTRAMWRITEENABLE[1],MIREQUESTRAMWRITEENABLE[1]}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \RAMB18E1[2].u_fifo 
       (.ADDRARDADDR({raddr1_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({waddr1_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DIADI({MIREQUESTRAMWRITEDATA[88:81],MIREQUESTRAMWRITEDATA[79:72]}),
        .DIBDI({MIREQUESTRAMWRITEDATA[106:99],MIREQUESTRAMWRITEDATA[97:90]}),
        .DIPADIP({MIREQUESTRAMWRITEDATA[89],MIREQUESTRAMWRITEDATA[80]}),
        .DIPBDIP({MIREQUESTRAMWRITEDATA[107],MIREQUESTRAMWRITEDATA[98]}),
        .DOADO({MIREQUESTRAMREADDATA[88:81],MIREQUESTRAMREADDATA[79:72]}),
        .DOBDO({MIREQUESTRAMREADDATA[106:99],MIREQUESTRAMREADDATA[97:90]}),
        .DOPADOP({MIREQUESTRAMREADDATA[89],MIREQUESTRAMREADDATA[80]}),
        .DOPBDOP({MIREQUESTRAMREADDATA[107],MIREQUESTRAMREADDATA[98]}),
        .ENARDEN(ren_i[2]),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({MIREQUESTRAMWRITEENABLE[2],MIREQUESTRAMWRITEENABLE[2],MIREQUESTRAMWRITEENABLE[2],MIREQUESTRAMWRITEENABLE[2]}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \RAMB18E1[3].u_fifo 
       (.ADDRARDADDR({raddr1_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({waddr1_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DIADI({MIREQUESTRAMWRITEDATA[124:117],MIREQUESTRAMWRITEDATA[115:108]}),
        .DIBDI({MIREQUESTRAMWRITEDATA[142:135],MIREQUESTRAMWRITEDATA[133:126]}),
        .DIPADIP({MIREQUESTRAMWRITEDATA[125],MIREQUESTRAMWRITEDATA[116]}),
        .DIPBDIP({MIREQUESTRAMWRITEDATA[143],MIREQUESTRAMWRITEDATA[134]}),
        .DOADO({MIREQUESTRAMREADDATA[124:117],MIREQUESTRAMREADDATA[115:108]}),
        .DOBDO({MIREQUESTRAMREADDATA[142:135],MIREQUESTRAMREADDATA[133:126]}),
        .DOPADOP({MIREQUESTRAMREADDATA[125],MIREQUESTRAMREADDATA[116]}),
        .DOPBDOP({MIREQUESTRAMREADDATA[143],MIREQUESTRAMREADDATA[134]}),
        .ENARDEN(ren_i[3]),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({MIREQUESTRAMWRITEENABLE[3],MIREQUESTRAMWRITEENABLE[3],MIREQUESTRAMWRITEENABLE[3],MIREQUESTRAMWRITEENABLE[3]}));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_cpl
   (MICOMPLETIONRAMREADDATA,
    pipe_userclk1_in,
    MICOMPLETIONRAMREADADDRESSBU,
    MICOMPLETIONRAMWRITEADDRESSBU,
    MICOMPLETIONRAMWRITEDATA,
    MICOMPLETIONRAMREADADDRESSAU,
    MICOMPLETIONRAMWRITEADDRESSAU,
    MICOMPLETIONRAMREADADDRESSBL,
    MICOMPLETIONRAMWRITEADDRESSBL,
    MICOMPLETIONRAMREADADDRESSAL,
    MICOMPLETIONRAMWRITEADDRESSAL,
    MICOMPLETIONRAMREADENABLEL,
    MICOMPLETIONRAMWRITEENABLEL,
    reset_sync1,
    MICOMPLETIONRAMREADENABLEU,
    MICOMPLETIONRAMWRITEENABLEU);
  output [143:0]MICOMPLETIONRAMREADDATA;
  input pipe_userclk1_in;
  input [8:0]MICOMPLETIONRAMREADADDRESSBU;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSBU;
  input [143:0]MICOMPLETIONRAMWRITEDATA;
  input [8:0]MICOMPLETIONRAMREADADDRESSAU;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSAU;
  input [8:0]MICOMPLETIONRAMREADADDRESSBL;
  input [8:0]MICOMPLETIONRAMWRITEADDRESSBL;
  input [9:0]MICOMPLETIONRAMREADADDRESSAL;
  input [9:0]MICOMPLETIONRAMWRITEADDRESSAL;
  input [1:0]MICOMPLETIONRAMREADENABLEL;
  input [1:0]MICOMPLETIONRAMWRITEENABLEL;
  input reset_sync1;
  input [1:0]MICOMPLETIONRAMREADENABLEU;
  input [1:0]MICOMPLETIONRAMWRITEENABLEU;

  wire [9:0]MICOMPLETIONRAMREADADDRESSAL;
  wire [8:0]MICOMPLETIONRAMREADADDRESSAU;
  wire [8:0]MICOMPLETIONRAMREADADDRESSBL;
  wire [8:0]MICOMPLETIONRAMREADADDRESSBU;
  wire [143:0]MICOMPLETIONRAMREADDATA;
  wire [1:0]MICOMPLETIONRAMREADENABLEL;
  wire [1:0]MICOMPLETIONRAMREADENABLEU;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSAL;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSAU;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSBL;
  wire [8:0]MICOMPLETIONRAMWRITEADDRESSBU;
  wire [143:0]MICOMPLETIONRAMWRITEDATA;
  wire [1:0]MICOMPLETIONRAMWRITEENABLEL;
  wire [1:0]MICOMPLETIONRAMWRITEENABLEU;
  wire pipe_userclk1_in;
  wire reset_sync1;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_16k \genblk1.CPL_FIFO_16KB.U0 
       (.MICOMPLETIONRAMREADADDRESSAL(MICOMPLETIONRAMREADADDRESSAL),
        .MICOMPLETIONRAMREADADDRESSAU(MICOMPLETIONRAMREADADDRESSAU),
        .MICOMPLETIONRAMREADADDRESSBL(MICOMPLETIONRAMREADADDRESSBL),
        .MICOMPLETIONRAMREADADDRESSBU(MICOMPLETIONRAMREADADDRESSBU),
        .MICOMPLETIONRAMREADDATA(MICOMPLETIONRAMREADDATA),
        .MICOMPLETIONRAMREADENABLEL(MICOMPLETIONRAMREADENABLEL),
        .MICOMPLETIONRAMREADENABLEU(MICOMPLETIONRAMREADENABLEU),
        .MICOMPLETIONRAMWRITEADDRESSAL(MICOMPLETIONRAMWRITEADDRESSAL),
        .MICOMPLETIONRAMWRITEADDRESSAU(MICOMPLETIONRAMWRITEADDRESSAU),
        .MICOMPLETIONRAMWRITEADDRESSBL(MICOMPLETIONRAMWRITEADDRESSBL),
        .MICOMPLETIONRAMWRITEADDRESSBU(MICOMPLETIONRAMWRITEADDRESSBU),
        .MICOMPLETIONRAMWRITEDATA(MICOMPLETIONRAMWRITEDATA),
        .MICOMPLETIONRAMWRITEENABLEL(MICOMPLETIONRAMWRITEENABLEL),
        .MICOMPLETIONRAMWRITEENABLEU(MICOMPLETIONRAMWRITEENABLEU),
        .pipe_userclk1_in(pipe_userclk1_in),
        .reset_sync1(reset_sync1));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_rep
   (MIREPLAYRAMREADDATA,
    pipe_userclk1_in,
    MIREPLAYRAMADDRESS,
    MIREPLAYRAMWRITEDATA,
    MIREPLAYRAMWRITEENABLE);
  output [143:0]MIREPLAYRAMREADDATA;
  input pipe_userclk1_in;
  input [8:0]MIREPLAYRAMADDRESS;
  input [143:0]MIREPLAYRAMWRITEDATA;
  input [1:0]MIREPLAYRAMWRITEENABLE;

  wire [8:0]MIREPLAYRAMADDRESS;
  wire [143:0]MIREPLAYRAMREADDATA;
  wire [143:0]MIREPLAYRAMWRITEDATA;
  wire [1:0]MIREPLAYRAMWRITEENABLE;
  wire pipe_userclk1_in;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_rep_8k U0
       (.MIREPLAYRAMADDRESS(MIREPLAYRAMADDRESS),
        .MIREPLAYRAMREADDATA(MIREPLAYRAMREADDATA),
        .MIREPLAYRAMWRITEDATA(MIREPLAYRAMWRITEDATA),
        .MIREPLAYRAMWRITEENABLE(MIREPLAYRAMWRITEENABLE),
        .pipe_userclk1_in(pipe_userclk1_in));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_rep_8k
   (MIREPLAYRAMREADDATA,
    pipe_userclk1_in,
    MIREPLAYRAMADDRESS,
    MIREPLAYRAMWRITEDATA,
    MIREPLAYRAMWRITEENABLE);
  output [143:0]MIREPLAYRAMREADDATA;
  input pipe_userclk1_in;
  input [8:0]MIREPLAYRAMADDRESS;
  input [143:0]MIREPLAYRAMWRITEDATA;
  input [1:0]MIREPLAYRAMWRITEENABLE;

  wire [8:0]MIREPLAYRAMADDRESS;
  wire [143:0]MIREPLAYRAMREADDATA;
  wire [143:0]MIREPLAYRAMWRITEDATA;
  wire [1:0]MIREPLAYRAMWRITEENABLE;
  wire pipe_userclk1_in;
  wire \NLW_RAMB36E1[0].u_buffer_CASCADEINA_UNCONNECTED ;
  wire \NLW_RAMB36E1[0].u_buffer_CASCADEINB_UNCONNECTED ;
  wire \NLW_RAMB36E1[0].u_buffer_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_RAMB36E1[0].u_buffer_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_RAMB36E1[0].u_buffer_DBITERR_UNCONNECTED ;
  wire \NLW_RAMB36E1[0].u_buffer_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_RAMB36E1[0].u_buffer_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_RAMB36E1[0].u_buffer_RDADDRECC_UNCONNECTED ;
  wire \NLW_RAMB36E1[1].u_buffer_CASCADEINA_UNCONNECTED ;
  wire \NLW_RAMB36E1[1].u_buffer_CASCADEINB_UNCONNECTED ;
  wire \NLW_RAMB36E1[1].u_buffer_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_RAMB36E1[1].u_buffer_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_RAMB36E1[1].u_buffer_DBITERR_UNCONNECTED ;
  wire \NLW_RAMB36E1[1].u_buffer_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_RAMB36E1[1].u_buffer_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_RAMB36E1[1].u_buffer_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \RAMB36E1[0].u_buffer 
       (.ADDRARDADDR({1'b1,MIREPLAYRAMADDRESS,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,MIREPLAYRAMADDRESS,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(\NLW_RAMB36E1[0].u_buffer_CASCADEINA_UNCONNECTED ),
        .CASCADEINB(\NLW_RAMB36E1[0].u_buffer_CASCADEINB_UNCONNECTED ),
        .CASCADEOUTA(\NLW_RAMB36E1[0].u_buffer_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_RAMB36E1[0].u_buffer_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_RAMB36E1[0].u_buffer_DBITERR_UNCONNECTED ),
        .DIADI({MIREPLAYRAMWRITEDATA[34:27],MIREPLAYRAMWRITEDATA[25:18],MIREPLAYRAMWRITEDATA[16:9],MIREPLAYRAMWRITEDATA[7:0]}),
        .DIBDI({MIREPLAYRAMWRITEDATA[70:63],MIREPLAYRAMWRITEDATA[61:54],MIREPLAYRAMWRITEDATA[52:45],MIREPLAYRAMWRITEDATA[43:36]}),
        .DIPADIP({MIREPLAYRAMWRITEDATA[35],MIREPLAYRAMWRITEDATA[26],MIREPLAYRAMWRITEDATA[17],MIREPLAYRAMWRITEDATA[8]}),
        .DIPBDIP({MIREPLAYRAMWRITEDATA[71],MIREPLAYRAMWRITEDATA[62],MIREPLAYRAMWRITEDATA[53],MIREPLAYRAMWRITEDATA[44]}),
        .DOADO({MIREPLAYRAMREADDATA[34:27],MIREPLAYRAMREADDATA[25:18],MIREPLAYRAMREADDATA[16:9],MIREPLAYRAMREADDATA[7:0]}),
        .DOBDO({MIREPLAYRAMREADDATA[70:63],MIREPLAYRAMREADDATA[61:54],MIREPLAYRAMREADDATA[52:45],MIREPLAYRAMREADDATA[43:36]}),
        .DOPADOP({MIREPLAYRAMREADDATA[35],MIREPLAYRAMREADDATA[26],MIREPLAYRAMREADDATA[17],MIREPLAYRAMREADDATA[8]}),
        .DOPBDOP({MIREPLAYRAMREADDATA[71],MIREPLAYRAMREADDATA[62],MIREPLAYRAMREADDATA[53],MIREPLAYRAMREADDATA[44]}),
        .ECCPARITY(\NLW_RAMB36E1[0].u_buffer_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_RAMB36E1[0].u_buffer_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_RAMB36E1[0].u_buffer_SBITERR_UNCONNECTED ),
        .WEA({MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0]}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \RAMB36E1[1].u_buffer 
       (.ADDRARDADDR({1'b1,MIREPLAYRAMADDRESS,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,MIREPLAYRAMADDRESS,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(\NLW_RAMB36E1[1].u_buffer_CASCADEINA_UNCONNECTED ),
        .CASCADEINB(\NLW_RAMB36E1[1].u_buffer_CASCADEINB_UNCONNECTED ),
        .CASCADEOUTA(\NLW_RAMB36E1[1].u_buffer_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_RAMB36E1[1].u_buffer_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_RAMB36E1[1].u_buffer_DBITERR_UNCONNECTED ),
        .DIADI({MIREPLAYRAMWRITEDATA[106:99],MIREPLAYRAMWRITEDATA[97:90],MIREPLAYRAMWRITEDATA[88:81],MIREPLAYRAMWRITEDATA[79:72]}),
        .DIBDI({MIREPLAYRAMWRITEDATA[142:135],MIREPLAYRAMWRITEDATA[133:126],MIREPLAYRAMWRITEDATA[124:117],MIREPLAYRAMWRITEDATA[115:108]}),
        .DIPADIP({MIREPLAYRAMWRITEDATA[107],MIREPLAYRAMWRITEDATA[98],MIREPLAYRAMWRITEDATA[89],MIREPLAYRAMWRITEDATA[80]}),
        .DIPBDIP({MIREPLAYRAMWRITEDATA[143],MIREPLAYRAMWRITEDATA[134],MIREPLAYRAMWRITEDATA[125],MIREPLAYRAMWRITEDATA[116]}),
        .DOADO({MIREPLAYRAMREADDATA[106:99],MIREPLAYRAMREADDATA[97:90],MIREPLAYRAMREADDATA[88:81],MIREPLAYRAMREADDATA[79:72]}),
        .DOBDO({MIREPLAYRAMREADDATA[142:135],MIREPLAYRAMREADDATA[133:126],MIREPLAYRAMREADDATA[124:117],MIREPLAYRAMREADDATA[115:108]}),
        .DOPADOP({MIREPLAYRAMREADDATA[107],MIREPLAYRAMREADDATA[98],MIREPLAYRAMREADDATA[89],MIREPLAYRAMREADDATA[80]}),
        .DOPBDOP({MIREPLAYRAMREADDATA[143],MIREPLAYRAMREADDATA[134],MIREPLAYRAMREADDATA[125],MIREPLAYRAMREADDATA[116]}),
        .ECCPARITY(\NLW_RAMB36E1[1].u_buffer_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_RAMB36E1[1].u_buffer_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_RAMB36E1[1].u_buffer_SBITERR_UNCONNECTED ),
        .WEA({MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1]}));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_req
   (MIREQUESTRAMREADDATA,
    pipe_userclk1_in,
    ren_i,
    raddr0_i,
    waddr0_i,
    MIREQUESTRAMWRITEDATA,
    MIREQUESTRAMWRITEENABLE,
    raddr1_i,
    waddr1_i);
  output [143:0]MIREQUESTRAMREADDATA;
  input pipe_userclk1_in;
  input [3:0]ren_i;
  input [8:0]raddr0_i;
  input [8:0]waddr0_i;
  input [143:0]MIREQUESTRAMWRITEDATA;
  input [3:0]MIREQUESTRAMWRITEENABLE;
  input [8:0]raddr1_i;
  input [8:0]waddr1_i;

  wire [143:0]MIREQUESTRAMREADDATA;
  wire [143:0]MIREQUESTRAMWRITEDATA;
  wire [3:0]MIREQUESTRAMWRITEENABLE;
  wire pipe_userclk1_in;
  wire [8:0]raddr0_i;
  wire [8:0]raddr1_i;
  wire [3:0]ren_i;
  wire [8:0]waddr0_i;
  wire [8:0]waddr1_i;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_bram_7vx_8k U0
       (.MIREQUESTRAMREADDATA(MIREQUESTRAMREADDATA),
        .MIREQUESTRAMWRITEDATA(MIREQUESTRAMWRITEDATA),
        .MIREQUESTRAMWRITEENABLE(MIREQUESTRAMWRITEENABLE),
        .pipe_userclk1_in(pipe_userclk1_in),
        .raddr0_i(raddr0_i),
        .raddr1_i(raddr1_i),
        .ren_i(ren_i),
        .waddr0_i(waddr0_i),
        .waddr1_i(waddr1_i));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_force_adapt
   (PIPE_RXEQ_CONTROL,
    PIPERX0DATA,
    PIPERX1DATA,
    PIPERX2DATA,
    PIPERX3DATA,
    cfg_ltssm_state,
    pipe_pclk_in,
    pipe_userclk2_in,
    cfg_current_speed,
    PIPE_TXEQ_CONTROL,
    pipe_rx0_eq_adapt_done,
    PIPETXRATE,
    PIPE_RXELECIDLE,
    PIPERX3EQCONTROL,
    PIPERX2EQCONTROL,
    PIPERX1EQCONTROL,
    PIPERX0EQCONTROL,
    PIPE_RXDATA);
  output [7:0]PIPE_RXEQ_CONTROL;
  output [16:0]PIPERX0DATA;
  output [16:0]PIPERX1DATA;
  output [15:0]PIPERX2DATA;
  output [15:0]PIPERX3DATA;
  input [5:0]cfg_ltssm_state;
  input pipe_pclk_in;
  input pipe_userclk2_in;
  input [0:0]cfg_current_speed;
  input [0:0]PIPE_TXEQ_CONTROL;
  input pipe_rx0_eq_adapt_done;
  input [0:0]PIPETXRATE;
  input [0:0]PIPE_RXELECIDLE;
  input [1:0]PIPERX3EQCONTROL;
  input [1:0]PIPERX2EQCONTROL;
  input [1:0]PIPERX1EQCONTROL;
  input [1:0]PIPERX0EQCONTROL;
  input [63:0]PIPE_RXDATA;

  wire [16:0]PIPERX0DATA;
  wire [1:0]PIPERX0EQCONTROL;
  wire [16:0]PIPERX1DATA;
  wire [1:0]PIPERX1EQCONTROL;
  wire [15:0]PIPERX2DATA;
  wire [1:0]PIPERX2EQCONTROL;
  wire [15:0]PIPERX3DATA;
  wire [1:0]PIPERX3EQCONTROL;
  wire [0:0]PIPETXRATE;
  wire [63:0]PIPE_RXDATA;
  wire [0:0]PIPE_RXELECIDLE;
  wire [7:0]PIPE_RXEQ_CONTROL;
  wire [0:0]PIPE_TXEQ_CONTROL;
  wire [0:0]cfg_current_speed;
  wire cfg_loopback;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cfg_loopback_reg0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cfg_loopback_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cfg_loopback_reg2;
  wire [5:0]cfg_ltssm_state;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]cfg_ltssm_state_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]cfg_ltssm_state_reg0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]cfg_ltssm_state_reg1;
  wire [3:0]eq_state;
  wire eq_state16_out;
  wire \eq_state[0]_i_2_n_0 ;
  wire \eq_state[3]_i_1_n_0 ;
  wire gen3_flag;
  wire gen3_flag0;
  wire gen3_flag_i_1_n_0;
  wire gen3_flag_i_3_n_0;
  wire \loopback.cfg_loopback_reg0 ;
  wire [3:0]p_1_in__0;
  wire pipe_pclk_in;
  wire pipe_rx0_eq_adapt_done;
  wire pipe_userclk2_in;
  wire speed_change;
  wire speed_change_i_1_n_0;
  wire speed_change_i_2_n_0;
  wire speed_change_i_3_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire speed_change_reg0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire speed_change_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire speed_change_reg2;

  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    PCIE_3_0_i_i_229
       (.I0(eq_state[2]),
        .I1(eq_state[3]),
        .I2(eq_state[1]),
        .I3(eq_state[0]),
        .O(PIPERX0DATA[16]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_230
       (.I0(PIPE_RXDATA[15]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[15]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_231
       (.I0(PIPE_RXDATA[14]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[14]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_232
       (.I0(PIPE_RXDATA[13]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[13]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_233
       (.I0(PIPE_RXDATA[12]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[12]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_234
       (.I0(PIPE_RXDATA[11]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[11]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_235
       (.I0(PIPE_RXDATA[10]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[10]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_236
       (.I0(PIPE_RXDATA[9]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[9]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_237
       (.I0(PIPE_RXDATA[8]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[8]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_238
       (.I0(PIPE_RXDATA[7]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[7]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_239
       (.I0(PIPE_RXDATA[6]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[6]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_240
       (.I0(PIPE_RXDATA[5]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[5]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_241
       (.I0(PIPE_RXDATA[4]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[4]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_242
       (.I0(PIPE_RXDATA[3]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[3]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_243
       (.I0(PIPE_RXDATA[2]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[2]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_244
       (.I0(PIPE_RXDATA[1]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[1]));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    PCIE_3_0_i_i_245
       (.I0(PIPE_RXDATA[0]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[1]),
        .I4(eq_state[0]),
        .O(PIPERX0DATA[0]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    PCIE_3_0_i_i_246
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[3]),
        .I3(eq_state[0]),
        .O(PIPERX1DATA[16]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_247
       (.I0(PIPE_RXDATA[31]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[15]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_248
       (.I0(PIPE_RXDATA[30]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[14]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_249
       (.I0(PIPE_RXDATA[29]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[13]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_250
       (.I0(PIPE_RXDATA[28]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[12]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_251
       (.I0(PIPE_RXDATA[27]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[11]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_252
       (.I0(PIPE_RXDATA[26]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[10]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_253
       (.I0(PIPE_RXDATA[25]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[9]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_254
       (.I0(PIPE_RXDATA[24]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[8]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_255
       (.I0(PIPE_RXDATA[23]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[7]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_256
       (.I0(PIPE_RXDATA[22]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[6]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_257
       (.I0(PIPE_RXDATA[21]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[5]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_258
       (.I0(PIPE_RXDATA[20]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[4]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_259
       (.I0(PIPE_RXDATA[19]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[3]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_260
       (.I0(PIPE_RXDATA[18]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[2]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_261
       (.I0(PIPE_RXDATA[17]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[1]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_262
       (.I0(PIPE_RXDATA[16]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX1DATA[0]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_263
       (.I0(PIPE_RXDATA[47]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[15]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_264
       (.I0(PIPE_RXDATA[46]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[14]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_265
       (.I0(PIPE_RXDATA[45]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[13]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_266
       (.I0(PIPE_RXDATA[44]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[12]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_267
       (.I0(PIPE_RXDATA[43]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[11]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_268
       (.I0(PIPE_RXDATA[42]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[10]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_269
       (.I0(PIPE_RXDATA[41]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[9]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_270
       (.I0(PIPE_RXDATA[40]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[8]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_271
       (.I0(PIPE_RXDATA[39]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[7]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_272
       (.I0(PIPE_RXDATA[38]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[6]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_273
       (.I0(PIPE_RXDATA[37]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[5]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_274
       (.I0(PIPE_RXDATA[36]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[4]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_275
       (.I0(PIPE_RXDATA[35]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[3]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_276
       (.I0(PIPE_RXDATA[34]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[2]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_277
       (.I0(PIPE_RXDATA[33]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[1]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_278
       (.I0(PIPE_RXDATA[32]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX2DATA[0]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_279
       (.I0(PIPE_RXDATA[63]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[15]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_280
       (.I0(PIPE_RXDATA[62]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[14]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_281
       (.I0(PIPE_RXDATA[61]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[13]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_282
       (.I0(PIPE_RXDATA[60]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[12]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_283
       (.I0(PIPE_RXDATA[59]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[11]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_284
       (.I0(PIPE_RXDATA[58]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[10]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_285
       (.I0(PIPE_RXDATA[57]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[9]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_286
       (.I0(PIPE_RXDATA[56]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[8]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_287
       (.I0(PIPE_RXDATA[55]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[7]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_288
       (.I0(PIPE_RXDATA[54]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[6]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_289
       (.I0(PIPE_RXDATA[53]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[5]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_290
       (.I0(PIPE_RXDATA[52]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[4]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_291
       (.I0(PIPE_RXDATA[51]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[3]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_292
       (.I0(PIPE_RXDATA[50]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[2]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_293
       (.I0(PIPE_RXDATA[49]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[1]));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    PCIE_3_0_i_i_294
       (.I0(PIPE_RXDATA[48]),
        .I1(eq_state[0]),
        .I2(eq_state[3]),
        .I3(eq_state[2]),
        .I4(eq_state[1]),
        .O(PIPERX3DATA[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    cfg_loopback_reg0_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cfg_loopback),
        .Q(cfg_loopback_reg0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    cfg_loopback_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cfg_loopback_reg0),
        .Q(cfg_loopback_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    cfg_loopback_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cfg_loopback_reg1),
        .Q(cfg_loopback_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg0_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg[0]),
        .Q(cfg_ltssm_state_reg0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg0_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg[1]),
        .Q(cfg_ltssm_state_reg0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg0_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg[2]),
        .Q(cfg_ltssm_state_reg0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg0_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg[3]),
        .Q(cfg_ltssm_state_reg0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg0_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg[4]),
        .Q(cfg_ltssm_state_reg0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg0_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg[5]),
        .Q(cfg_ltssm_state_reg0[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg1_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg0[0]),
        .Q(cfg_ltssm_state_reg1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg1_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg0[1]),
        .Q(cfg_ltssm_state_reg1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg1_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg0[2]),
        .Q(cfg_ltssm_state_reg1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg1_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg0[3]),
        .Q(cfg_ltssm_state_reg1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg1_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg0[4]),
        .Q(cfg_ltssm_state_reg1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg1_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state_reg0[5]),
        .Q(cfg_ltssm_state_reg1[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state[0]),
        .Q(cfg_ltssm_state_reg[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state[1]),
        .Q(cfg_ltssm_state_reg[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state[2]),
        .Q(cfg_ltssm_state_reg[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state[3]),
        .Q(cfg_ltssm_state_reg[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state[4]),
        .Q(cfg_ltssm_state_reg[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cfg_ltssm_state_reg_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_ltssm_state[5]),
        .Q(cfg_ltssm_state_reg[5]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hF8FFF8F8)) 
    \eq_state[0]_i_1 
       (.I0(eq_state[2]),
        .I1(pipe_rx0_eq_adapt_done),
        .I2(\eq_state[0]_i_2_n_0 ),
        .I3(speed_change_reg2),
        .I4(eq_state[3]),
        .O(p_1_in__0[0]));
  LUT5 #(
    .INIT(32'h2A2A0A2A)) 
    \eq_state[0]_i_2 
       (.I0(eq_state[0]),
        .I1(cfg_loopback_reg2),
        .I2(PIPETXRATE),
        .I3(speed_change_reg2),
        .I4(PIPE_RXELECIDLE),
        .O(\eq_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2000FFFF20002000)) 
    \eq_state[1]_i_1 
       (.I0(speed_change_reg2),
        .I1(PIPE_RXELECIDLE),
        .I2(PIPETXRATE),
        .I3(eq_state[0]),
        .I4(pipe_rx0_eq_adapt_done),
        .I5(eq_state[1]),
        .O(p_1_in__0[1]));
  LUT6 #(
    .INIT(64'h0800FFFF08000800)) 
    \eq_state[2]_i_1 
       (.I0(PIPETXRATE),
        .I1(cfg_loopback_reg2),
        .I2(eq_state16_out),
        .I3(eq_state[0]),
        .I4(pipe_rx0_eq_adapt_done),
        .I5(eq_state[2]),
        .O(p_1_in__0[2]));
  LUT3 #(
    .INIT(8'h20)) 
    \eq_state[2]_i_2 
       (.I0(speed_change_reg2),
        .I1(PIPE_RXELECIDLE),
        .I2(PIPETXRATE),
        .O(eq_state16_out));
  LUT4 #(
    .INIT(16'h0116)) 
    \eq_state[3]_i_1 
       (.I0(eq_state[0]),
        .I1(eq_state[1]),
        .I2(eq_state[2]),
        .I3(eq_state[3]),
        .O(\eq_state[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \eq_state[3]_i_2 
       (.I0(pipe_rx0_eq_adapt_done),
        .I1(eq_state[1]),
        .I2(speed_change_reg2),
        .I3(eq_state[3]),
        .O(p_1_in__0[3]));
  (* FSM_ENCODED_STATES = "EQ_ADAPT:0010,EQ_RX_TEK:0100,EQ_WAIT:1000,EQ_IDLE:0001" *) 
  FDRE #(
    .INIT(1'b1)) 
    \eq_state_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\eq_state[3]_i_1_n_0 ),
        .D(p_1_in__0[0]),
        .Q(eq_state[0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "EQ_ADAPT:0010,EQ_RX_TEK:0100,EQ_WAIT:1000,EQ_IDLE:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \eq_state_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\eq_state[3]_i_1_n_0 ),
        .D(p_1_in__0[1]),
        .Q(eq_state[1]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "EQ_ADAPT:0010,EQ_RX_TEK:0100,EQ_WAIT:1000,EQ_IDLE:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \eq_state_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\eq_state[3]_i_1_n_0 ),
        .D(p_1_in__0[2]),
        .Q(eq_state[2]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "EQ_ADAPT:0010,EQ_RX_TEK:0100,EQ_WAIT:1000,EQ_IDLE:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \eq_state_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\eq_state[3]_i_1_n_0 ),
        .D(p_1_in__0[3]),
        .Q(eq_state[3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    gen3_flag_i_1
       (.I0(gen3_flag0),
        .I1(gen3_flag),
        .I2(cfg_ltssm_state_reg1[0]),
        .I3(cfg_current_speed),
        .I4(cfg_ltssm_state_reg1[3]),
        .I5(gen3_flag_i_3_n_0),
        .O(gen3_flag_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    gen3_flag_i_2
       (.I0(cfg_ltssm_state_reg1[1]),
        .I1(cfg_ltssm_state_reg1[5]),
        .I2(cfg_ltssm_state_reg1[3]),
        .I3(PIPE_TXEQ_CONTROL),
        .I4(cfg_ltssm_state_reg1[4]),
        .I5(cfg_ltssm_state_reg1[2]),
        .O(gen3_flag0));
  LUT4 #(
    .INIT(16'h0004)) 
    gen3_flag_i_3
       (.I0(cfg_ltssm_state_reg1[2]),
        .I1(cfg_ltssm_state_reg1[4]),
        .I2(cfg_ltssm_state_reg1[5]),
        .I3(cfg_ltssm_state_reg1[1]),
        .O(gen3_flag_i_3_n_0));
  FDRE #(
    .INIT(1'b1)) 
    gen3_flag_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(gen3_flag_i_1_n_0),
        .Q(gen3_flag),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000400)) 
    \loopback.cfg_loopback_i_1 
       (.I0(cfg_ltssm_state_reg1[3]),
        .I1(cfg_ltssm_state_reg1[5]),
        .I2(cfg_ltssm_state_reg1[1]),
        .I3(cfg_ltssm_state_reg1[2]),
        .I4(cfg_ltssm_state_reg1[4]),
        .O(\loopback.cfg_loopback_reg0 ));
  FDRE #(
    .INIT(1'b0)) 
    \loopback.cfg_loopback_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\loopback.cfg_loopback_reg0 ),
        .Q(cfg_loopback),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFF0006)) 
    \rxeq_control_reg1[0]_i_1 
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[0]),
        .I3(eq_state[3]),
        .I4(PIPERX3EQCONTROL[0]),
        .O(PIPE_RXEQ_CONTROL[6]));
  LUT5 #(
    .INIT(32'hFFFF0006)) 
    \rxeq_control_reg1[0]_i_1__0 
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[0]),
        .I3(eq_state[3]),
        .I4(PIPERX2EQCONTROL[0]),
        .O(PIPE_RXEQ_CONTROL[4]));
  LUT5 #(
    .INIT(32'hFFFF0006)) 
    \rxeq_control_reg1[0]_i_1__1 
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[0]),
        .I3(eq_state[3]),
        .I4(PIPERX1EQCONTROL[0]),
        .O(PIPE_RXEQ_CONTROL[2]));
  LUT5 #(
    .INIT(32'hFFFF0006)) 
    \rxeq_control_reg1[0]_i_1__2 
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[0]),
        .I3(eq_state[3]),
        .I4(PIPERX0EQCONTROL[0]),
        .O(PIPE_RXEQ_CONTROL[0]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT5 #(
    .INIT(32'hFFFF0006)) 
    \rxeq_control_reg1[1]_i_1 
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[0]),
        .I3(eq_state[3]),
        .I4(PIPERX3EQCONTROL[1]),
        .O(PIPE_RXEQ_CONTROL[7]));
  LUT5 #(
    .INIT(32'hFFFF0006)) 
    \rxeq_control_reg1[1]_i_1__0 
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[0]),
        .I3(eq_state[3]),
        .I4(PIPERX2EQCONTROL[1]),
        .O(PIPE_RXEQ_CONTROL[5]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT5 #(
    .INIT(32'hFFFF0006)) 
    \rxeq_control_reg1[1]_i_1__1 
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[0]),
        .I3(eq_state[3]),
        .I4(PIPERX1EQCONTROL[1]),
        .O(PIPE_RXEQ_CONTROL[3]));
  LUT5 #(
    .INIT(32'hFFFF0006)) 
    \rxeq_control_reg1[1]_i_1__2 
       (.I0(eq_state[1]),
        .I1(eq_state[2]),
        .I2(eq_state[0]),
        .I3(eq_state[3]),
        .I4(PIPERX0EQCONTROL[1]),
        .O(PIPE_RXEQ_CONTROL[1]));
  LUT4 #(
    .INIT(16'hB800)) 
    speed_change_i_1
       (.I0(speed_change),
        .I1(speed_change_i_2_n_0),
        .I2(gen3_flag),
        .I3(speed_change_i_3_n_0),
        .O(speed_change_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFEFFFFF)) 
    speed_change_i_2
       (.I0(cfg_ltssm_state_reg1[1]),
        .I1(cfg_ltssm_state_reg1[5]),
        .I2(cfg_ltssm_state_reg1[3]),
        .I3(cfg_ltssm_state_reg1[0]),
        .I4(cfg_ltssm_state_reg1[4]),
        .I5(cfg_ltssm_state_reg1[2]),
        .O(speed_change_i_2_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    speed_change_i_3
       (.I0(cfg_ltssm_state[2]),
        .I1(cfg_ltssm_state[5]),
        .I2(cfg_ltssm_state[4]),
        .I3(cfg_ltssm_state[0]),
        .I4(cfg_ltssm_state[1]),
        .I5(cfg_ltssm_state[3]),
        .O(speed_change_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    speed_change_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(speed_change_i_1_n_0),
        .Q(speed_change),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    speed_change_reg0_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(speed_change),
        .Q(speed_change_reg0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    speed_change_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(speed_change_reg0),
        .Q(speed_change_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    speed_change_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(speed_change_reg1),
        .Q(speed_change_reg2),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_init_ctrl_7vx
   (reset_n,
    pipe_reset_n,
    mgmt_reset_n,
    mgmt_sticky_reset_n,
    regff_reset_n_o_reg_0,
    Q,
    pipe_userclk2_in,
    cfg_mc_update_done,
    cfg_input_update_done,
    D,
    pipe_mmcm_lock_in,
    \reg_phy_rdy_reg[1]_0 );
  output reset_n;
  output pipe_reset_n;
  output mgmt_reset_n;
  output mgmt_sticky_reset_n;
  output regff_reset_n_o_reg_0;
  output [1:0]Q;
  input pipe_userclk2_in;
  input cfg_mc_update_done;
  input cfg_input_update_done;
  input [0:0]D;
  input pipe_mmcm_lock_in;
  input [0:0]\reg_phy_rdy_reg[1]_0 ;

  wire [0:0]D;
  wire \FSM_onehot_reg_state[0]_i_1_n_0 ;
  wire \FSM_onehot_reg_state[1]_i_1_n_0 ;
  wire \FSM_onehot_reg_state[1]_i_2_n_0 ;
  wire \FSM_onehot_reg_state[2]_i_1_n_0 ;
  wire \FSM_onehot_reg_state[4]_i_1_n_0 ;
  wire \FSM_onehot_reg_state[5]_i_1_n_0 ;
  wire \FSM_onehot_reg_state[6]_i_1_n_0 ;
  wire \FSM_onehot_reg_state[6]_i_2_n_0 ;
  wire \FSM_onehot_reg_state_reg_n_0_[0] ;
  wire \FSM_onehot_reg_state_reg_n_0_[1] ;
  wire \FSM_onehot_reg_state_reg_n_0_[4] ;
  wire \FSM_onehot_reg_state_reg_n_0_[5] ;
  wire [1:0]Q;
  wire cfg_input_update_done;
  wire cfg_mc_update_done;
  wire cold_reset;
  wire mgmt_reset_n;
  wire mgmt_sticky_reset_n;
  wire [4:0]p_0_in;
  wire pipe_mmcm_lock_in;
  wire pipe_reset_n;
  wire pipe_userclk2_in;
  wire [1:0]reg_clock_locked;
  wire \reg_clock_locked[1]_i_1_n_0 ;
  wire reg_cold_reset_i_1_n_0;
  wire reg_cold_reset_i_2_n_0;
  wire reg_cold_reset_i_3_n_0;
  wire reg_cold_reset_i_4_n_0;
  wire reg_cold_reset_i_5_n_0;
  wire reg_mgmt_reset_n_o;
  wire reg_mgmt_reset_timer;
  wire [4:0]reg_mgmt_reset_timer_reg;
  wire reg_mgmt_sticky_reset_n_o;
  wire [1:0]reg_phy_rdy;
  wire [0:0]\reg_phy_rdy_reg[1]_0 ;
  wire reg_pipe_reset_n_o;
  wire [1:0]reg_reset_timer;
  wire \reg_reset_timer[0]_i_1_n_0 ;
  wire \reg_reset_timer[1]_i_1_n_0 ;
  wire regff_reset_n_o_reg_0;
  wire reset_n;

  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_reg_state[0]_i_1 
       (.I0(\FSM_onehot_reg_state_reg_n_0_[0] ),
        .I1(reg_clock_locked[1]),
        .O(\FSM_onehot_reg_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF4FFF4444)) 
    \FSM_onehot_reg_state[1]_i_1 
       (.I0(reg_clock_locked[1]),
        .I1(\FSM_onehot_reg_state_reg_n_0_[0] ),
        .I2(reg_reset_timer[1]),
        .I3(reg_reset_timer[0]),
        .I4(\FSM_onehot_reg_state_reg_n_0_[1] ),
        .I5(\FSM_onehot_reg_state[1]_i_2_n_0 ),
        .O(\FSM_onehot_reg_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \FSM_onehot_reg_state[1]_i_2 
       (.I0(reg_mgmt_reset_timer),
        .I1(reg_mgmt_reset_timer_reg[4]),
        .I2(reg_mgmt_reset_timer_reg[2]),
        .I3(reg_mgmt_reset_timer_reg[0]),
        .I4(reg_mgmt_reset_timer_reg[1]),
        .I5(reg_mgmt_reset_timer_reg[3]),
        .O(\FSM_onehot_reg_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT5 #(
    .INIT(32'h80FF8080)) 
    \FSM_onehot_reg_state[2]_i_1 
       (.I0(reg_reset_timer[0]),
        .I1(reg_reset_timer[1]),
        .I2(\FSM_onehot_reg_state_reg_n_0_[1] ),
        .I3(cfg_mc_update_done),
        .I4(Q[0]),
        .O(\FSM_onehot_reg_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_reg_state[4]_i_1 
       (.I0(cfg_input_update_done),
        .I1(Q[1]),
        .I2(reg_phy_rdy[1]),
        .I3(\FSM_onehot_reg_state_reg_n_0_[4] ),
        .O(\FSM_onehot_reg_state[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_reg_state[5]_i_1 
       (.I0(\FSM_onehot_reg_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_reg_state_reg_n_0_[4] ),
        .I2(reg_phy_rdy[1]),
        .O(\FSM_onehot_reg_state[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_reg_state[6]_i_1 
       (.I0(reg_mgmt_reset_timer),
        .I1(\FSM_onehot_reg_state[6]_i_2_n_0 ),
        .I2(reg_phy_rdy[1]),
        .I3(\FSM_onehot_reg_state_reg_n_0_[5] ),
        .O(\FSM_onehot_reg_state[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \FSM_onehot_reg_state[6]_i_2 
       (.I0(reg_mgmt_reset_timer_reg[3]),
        .I1(reg_mgmt_reset_timer_reg[1]),
        .I2(reg_mgmt_reset_timer_reg[0]),
        .I3(reg_mgmt_reset_timer_reg[2]),
        .I4(reg_mgmt_reset_timer_reg[4]),
        .O(\FSM_onehot_reg_state[6]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "STATE_RESET:00000001,STATE_MC_TRANSFER_REQ:00000100,STATE_INPUT_UPDATE_REQ:00001000,STATE_PHY_RDY:00010000,STATE_INPUT_UPDATE_REQ_REDO:10000000,STATE_RESET_DEASSERT:00100000,STATE_MGMT_RESET_ASSERT:01000000,STATE_MGMT_RESET_DEASSERT:00000010" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_reg_state_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\FSM_onehot_reg_state[0]_i_1_n_0 ),
        .PRE(reg_clock_locked[1]),
        .Q(\FSM_onehot_reg_state_reg_n_0_[0] ));
  (* FSM_ENCODED_STATES = "STATE_RESET:00000001,STATE_MC_TRANSFER_REQ:00000100,STATE_INPUT_UPDATE_REQ:00001000,STATE_PHY_RDY:00010000,STATE_INPUT_UPDATE_REQ_REDO:10000000,STATE_RESET_DEASSERT:00100000,STATE_MGMT_RESET_ASSERT:01000000,STATE_MGMT_RESET_DEASSERT:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_reg_state_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_clock_locked[1]),
        .D(\FSM_onehot_reg_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_reg_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "STATE_RESET:00000001,STATE_MC_TRANSFER_REQ:00000100,STATE_INPUT_UPDATE_REQ:00001000,STATE_PHY_RDY:00010000,STATE_INPUT_UPDATE_REQ_REDO:10000000,STATE_RESET_DEASSERT:00100000,STATE_MGMT_RESET_ASSERT:01000000,STATE_MGMT_RESET_DEASSERT:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_reg_state_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_clock_locked[1]),
        .D(\FSM_onehot_reg_state[2]_i_1_n_0 ),
        .Q(Q[0]));
  (* FSM_ENCODED_STATES = "STATE_RESET:00000001,STATE_MC_TRANSFER_REQ:00000100,STATE_INPUT_UPDATE_REQ:00001000,STATE_PHY_RDY:00010000,STATE_INPUT_UPDATE_REQ_REDO:10000000,STATE_RESET_DEASSERT:00100000,STATE_MGMT_RESET_ASSERT:01000000,STATE_MGMT_RESET_DEASSERT:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_reg_state_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_clock_locked[1]),
        .D(D),
        .Q(Q[1]));
  (* FSM_ENCODED_STATES = "STATE_RESET:00000001,STATE_MC_TRANSFER_REQ:00000100,STATE_INPUT_UPDATE_REQ:00001000,STATE_PHY_RDY:00010000,STATE_INPUT_UPDATE_REQ_REDO:10000000,STATE_RESET_DEASSERT:00100000,STATE_MGMT_RESET_ASSERT:01000000,STATE_MGMT_RESET_DEASSERT:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_reg_state_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_clock_locked[1]),
        .D(\FSM_onehot_reg_state[4]_i_1_n_0 ),
        .Q(\FSM_onehot_reg_state_reg_n_0_[4] ));
  (* FSM_ENCODED_STATES = "STATE_RESET:00000001,STATE_MC_TRANSFER_REQ:00000100,STATE_INPUT_UPDATE_REQ:00001000,STATE_PHY_RDY:00010000,STATE_INPUT_UPDATE_REQ_REDO:10000000,STATE_RESET_DEASSERT:00100000,STATE_MGMT_RESET_ASSERT:01000000,STATE_MGMT_RESET_DEASSERT:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_reg_state_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_clock_locked[1]),
        .D(\FSM_onehot_reg_state[5]_i_1_n_0 ),
        .Q(\FSM_onehot_reg_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "STATE_RESET:00000001,STATE_MC_TRANSFER_REQ:00000100,STATE_INPUT_UPDATE_REQ:00001000,STATE_PHY_RDY:00010000,STATE_INPUT_UPDATE_REQ_REDO:10000000,STATE_RESET_DEASSERT:00100000,STATE_MGMT_RESET_ASSERT:01000000,STATE_MGMT_RESET_DEASSERT:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_reg_state_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_clock_locked[1]),
        .D(\FSM_onehot_reg_state[6]_i_1_n_0 ),
        .Q(reg_mgmt_reset_timer));
  LUT1 #(
    .INIT(2'h1)) 
    reg_cfg_tph_stt_read_enable_i_i_1
       (.I0(reset_n),
        .O(regff_reset_n_o_reg_0));
  LUT1 #(
    .INIT(2'h1)) 
    \reg_clock_locked[1]_i_1 
       (.I0(pipe_mmcm_lock_in),
        .O(\reg_clock_locked[1]_i_1_n_0 ));
  FDPE \reg_clock_locked_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\reg_clock_locked[1]_i_1_n_0 ),
        .Q(reg_clock_locked[0]));
  FDPE \reg_clock_locked_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_clock_locked[0]),
        .PRE(\reg_clock_locked[1]_i_1_n_0 ),
        .Q(reg_clock_locked[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFCCCCCCC4)) 
    reg_cold_reset_i_1
       (.I0(\FSM_onehot_reg_state_reg_n_0_[4] ),
        .I1(cold_reset),
        .I2(reg_cold_reset_i_2_n_0),
        .I3(Q[0]),
        .I4(\FSM_onehot_reg_state[6]_i_1_n_0 ),
        .I5(reg_cold_reset_i_3_n_0),
        .O(reg_cold_reset_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h2)) 
    reg_cold_reset_i_2
       (.I0(Q[1]),
        .I1(cfg_input_update_done),
        .O(reg_cold_reset_i_2_n_0));
  LUT6 #(
    .INIT(64'h50005C0050005000)) 
    reg_cold_reset_i_3
       (.I0(reg_cold_reset_i_4_n_0),
        .I1(reg_cold_reset_i_5_n_0),
        .I2(\FSM_onehot_reg_state_reg_n_0_[1] ),
        .I3(cold_reset),
        .I4(reg_mgmt_reset_timer),
        .I5(reg_phy_rdy[1]),
        .O(reg_cold_reset_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h7)) 
    reg_cold_reset_i_4
       (.I0(reg_reset_timer[0]),
        .I1(reg_reset_timer[1]),
        .O(reg_cold_reset_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'hB)) 
    reg_cold_reset_i_5
       (.I0(reg_clock_locked[1]),
        .I1(\FSM_onehot_reg_state_reg_n_0_[0] ),
        .O(reg_cold_reset_i_5_n_0));
  FDRE #(
    .INIT(1'b1)) 
    reg_cold_reset_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_cold_reset_i_1_n_0),
        .Q(cold_reset),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \reg_mgmt_reset_timer[0]_i_1 
       (.I0(reg_mgmt_reset_timer_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \reg_mgmt_reset_timer[1]_i_1 
       (.I0(reg_mgmt_reset_timer_reg[0]),
        .I1(reg_mgmt_reset_timer_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \reg_mgmt_reset_timer[2]_i_1 
       (.I0(reg_mgmt_reset_timer_reg[1]),
        .I1(reg_mgmt_reset_timer_reg[0]),
        .I2(reg_mgmt_reset_timer_reg[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \reg_mgmt_reset_timer[3]_i_1 
       (.I0(reg_mgmt_reset_timer_reg[2]),
        .I1(reg_mgmt_reset_timer_reg[0]),
        .I2(reg_mgmt_reset_timer_reg[1]),
        .I3(reg_mgmt_reset_timer_reg[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \reg_mgmt_reset_timer[4]_i_1 
       (.I0(reg_mgmt_reset_timer_reg[3]),
        .I1(reg_mgmt_reset_timer_reg[1]),
        .I2(reg_mgmt_reset_timer_reg[0]),
        .I3(reg_mgmt_reset_timer_reg[2]),
        .I4(reg_mgmt_reset_timer_reg[4]),
        .O(p_0_in[4]));
  FDRE \reg_mgmt_reset_timer_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(reg_mgmt_reset_timer),
        .D(p_0_in[0]),
        .Q(reg_mgmt_reset_timer_reg[0]),
        .R(\FSM_onehot_reg_state_reg_n_0_[1] ));
  FDRE \reg_mgmt_reset_timer_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(reg_mgmt_reset_timer),
        .D(p_0_in[1]),
        .Q(reg_mgmt_reset_timer_reg[1]),
        .R(\FSM_onehot_reg_state_reg_n_0_[1] ));
  FDRE \reg_mgmt_reset_timer_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(reg_mgmt_reset_timer),
        .D(p_0_in[2]),
        .Q(reg_mgmt_reset_timer_reg[2]),
        .R(\FSM_onehot_reg_state_reg_n_0_[1] ));
  FDRE \reg_mgmt_reset_timer_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(reg_mgmt_reset_timer),
        .D(p_0_in[3]),
        .Q(reg_mgmt_reset_timer_reg[3]),
        .R(\FSM_onehot_reg_state_reg_n_0_[1] ));
  FDRE \reg_mgmt_reset_timer_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(reg_mgmt_reset_timer),
        .D(p_0_in[4]),
        .Q(reg_mgmt_reset_timer_reg[4]),
        .R(\FSM_onehot_reg_state_reg_n_0_[1] ));
  FDPE \reg_phy_rdy_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\reg_phy_rdy_reg[1]_0 ),
        .Q(reg_phy_rdy[0]));
  FDPE \reg_phy_rdy_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_phy_rdy[0]),
        .PRE(\reg_phy_rdy_reg[1]_0 ),
        .Q(reg_phy_rdy[1]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'hDA)) 
    \reg_reset_timer[0]_i_1 
       (.I0(\FSM_onehot_reg_state_reg_n_0_[1] ),
        .I1(reg_reset_timer[1]),
        .I2(reg_reset_timer[0]),
        .O(\reg_reset_timer[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \reg_reset_timer[1]_i_1 
       (.I0(reg_reset_timer[1]),
        .I1(reg_reset_timer[0]),
        .I2(\FSM_onehot_reg_state_reg_n_0_[1] ),
        .O(\reg_reset_timer[1]_i_1_n_0 ));
  FDCE \reg_reset_timer_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_clock_locked[1]),
        .D(\reg_reset_timer[0]_i_1_n_0 ),
        .Q(reg_reset_timer[0]));
  FDCE \reg_reset_timer_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_clock_locked[1]),
        .D(\reg_reset_timer[1]_i_1_n_0 ),
        .Q(reg_reset_timer[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    regff_mgmt_reset_n_o_i_1
       (.I0(\FSM_onehot_reg_state[1]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(\FSM_onehot_reg_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_reg_state_reg_n_0_[4] ),
        .I4(Q[0]),
        .I5(\FSM_onehot_reg_state_reg_n_0_[1] ),
        .O(reg_mgmt_reset_n_o));
  FDRE #(
    .INIT(1'b0)) 
    regff_mgmt_reset_n_o_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_mgmt_reset_n_o),
        .Q(mgmt_reset_n),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    regff_mgmt_sticky_reset_n_o_i_1
       (.I0(\FSM_onehot_reg_state_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(reg_mgmt_reset_timer),
        .I3(\FSM_onehot_reg_state_reg_n_0_[4] ),
        .I4(\FSM_onehot_reg_state_reg_n_0_[5] ),
        .I5(Q[0]),
        .O(reg_mgmt_sticky_reset_n_o));
  FDRE #(
    .INIT(1'b0)) 
    regff_mgmt_sticky_reset_n_o_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_mgmt_sticky_reset_n_o),
        .Q(mgmt_sticky_reset_n),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    regff_pipe_reset_n_o_i_1
       (.I0(cold_reset),
        .I1(\FSM_onehot_reg_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_reg_state_reg_n_0_[5] ),
        .O(reg_pipe_reset_n_o));
  FDRE #(
    .INIT(1'b0)) 
    regff_pipe_reset_n_o_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_pipe_reset_n_o),
        .Q(pipe_reset_n),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    regff_reset_n_o_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\FSM_onehot_reg_state_reg_n_0_[5] ),
        .Q(reset_n),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_tlp_tph_tbl_7vx
   (DOADO,
    cfg_tph_stt_read_data_valid,
    pipe_userclk2_in,
    ADDRARDADDR,
    CFGTPHSTTWRITEDATA,
    cfg_tph_stt_read_enable,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reset_n,
    cfg_tph_stt_write_enable,
    CFGTPHSTTWRITEBYTEVALID);
  output [31:0]DOADO;
  output cfg_tph_stt_read_data_valid;
  input pipe_userclk2_in;
  input [7:0]ADDRARDADDR;
  input [31:0]CFGTPHSTTWRITEDATA;
  input cfg_tph_stt_read_enable;
  input reg_cfg_tph_stt_read_enable_i_reg_0;
  input reset_n;
  input cfg_tph_stt_write_enable;
  input [3:0]CFGTPHSTTWRITEBYTEVALID;

  wire [7:0]ADDRARDADDR;
  wire [3:0]CFGTPHSTTWRITEBYTEVALID;
  wire [31:0]CFGTPHSTTWRITEDATA;
  wire [31:0]DOADO;
  wire cfg_tph_stt_read_data_valid;
  wire cfg_tph_stt_read_enable;
  wire cfg_tph_stt_write_enable;
  wire [7:0]p_0_in__0;
  wire [12:5]p_1_out;
  wire pipe_userclk2_in;
  wire reg_cfg_tph_stt_read_data_valid_o0;
  wire reg_cfg_tph_stt_read_data_valid_o1;
  wire reg_cfg_tph_stt_read_enable_i;
  wire reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [7:0]reg_count_reg;
  wire reg_next_state__0;
  wire reg_state;
  wire reset_n;
  wire u_ram_i_14_n_0;
  wire u_ram_n_36;
  wire u_ram_n_37;
  wire u_ram_n_38;
  wire u_ram_n_39;
  wire u_ram_n_40;
  wire u_ram_n_41;
  wire u_ram_n_42;
  wire u_ram_n_43;
  wire u_ram_n_44;
  wire u_ram_n_45;
  wire u_ram_n_46;
  wire u_ram_n_47;
  wire u_ram_n_48;
  wire u_ram_n_49;
  wire u_ram_n_50;
  wire u_ram_n_51;
  wire u_ram_n_52;
  wire u_ram_n_53;
  wire u_ram_n_54;
  wire u_ram_n_55;
  wire u_ram_n_56;
  wire u_ram_n_57;
  wire u_ram_n_58;
  wire u_ram_n_59;
  wire u_ram_n_60;
  wire u_ram_n_61;
  wire u_ram_n_62;
  wire u_ram_n_63;
  wire u_ram_n_64;
  wire u_ram_n_65;
  wire u_ram_n_66;
  wire u_ram_n_67;
  wire [3:0]wea;
  wire NLW_u_ram_CASCADEOUTA_UNCONNECTED;
  wire NLW_u_ram_CASCADEOUTB_UNCONNECTED;
  wire NLW_u_ram_DBITERR_UNCONNECTED;
  wire NLW_u_ram_SBITERR_UNCONNECTED;
  wire [3:0]NLW_u_ram_DOPADOP_UNCONNECTED;
  wire [3:0]NLW_u_ram_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_u_ram_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_u_ram_RDADDRECC_UNCONNECTED;

  LUT4 #(
    .INIT(16'h0400)) 
    reg_cfg_tph_stt_read_data_valid_o_i_1
       (.I0(cfg_tph_stt_read_data_valid),
        .I1(reg_cfg_tph_stt_read_enable_i),
        .I2(reg_state),
        .I3(cfg_tph_stt_read_enable),
        .O(reg_cfg_tph_stt_read_data_valid_o0));
  FDCE reg_cfg_tph_stt_read_data_valid_o_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_cfg_tph_stt_read_enable_i_reg_0),
        .D(reg_cfg_tph_stt_read_data_valid_o0),
        .Q(cfg_tph_stt_read_data_valid));
  FDCE reg_cfg_tph_stt_read_enable_i_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .CLR(reg_cfg_tph_stt_read_enable_i_reg_0),
        .D(cfg_tph_stt_read_enable),
        .Q(reg_cfg_tph_stt_read_enable_i));
  LUT1 #(
    .INIT(2'h1)) 
    \reg_count[0]_i_1 
       (.I0(reg_count_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \reg_count[1]_i_1 
       (.I0(reg_count_reg[0]),
        .I1(reg_count_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \reg_count[2]_i_1 
       (.I0(reg_count_reg[1]),
        .I1(reg_count_reg[0]),
        .I2(reg_count_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \reg_count[3]_i_1 
       (.I0(reg_count_reg[2]),
        .I1(reg_count_reg[0]),
        .I2(reg_count_reg[1]),
        .I3(reg_count_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \reg_count[4]_i_1 
       (.I0(reg_count_reg[3]),
        .I1(reg_count_reg[1]),
        .I2(reg_count_reg[0]),
        .I3(reg_count_reg[2]),
        .I4(reg_count_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \reg_count[5]_i_1 
       (.I0(reg_count_reg[4]),
        .I1(reg_count_reg[2]),
        .I2(reg_count_reg[0]),
        .I3(reg_count_reg[1]),
        .I4(reg_count_reg[3]),
        .I5(reg_count_reg[5]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \reg_count[6]_i_1 
       (.I0(u_ram_i_14_n_0),
        .I1(reg_count_reg[6]),
        .O(p_0_in__0[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \reg_count[7]_i_1 
       (.I0(reg_state),
        .O(reg_cfg_tph_stt_read_data_valid_o1));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \reg_count[7]_i_2 
       (.I0(reg_count_reg[6]),
        .I1(u_ram_i_14_n_0),
        .I2(reg_count_reg[7]),
        .O(p_0_in__0[7]));
  FDRE \reg_count_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(reg_count_reg[0]),
        .R(reg_cfg_tph_stt_read_data_valid_o1));
  FDRE \reg_count_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(reg_count_reg[1]),
        .R(reg_cfg_tph_stt_read_data_valid_o1));
  FDRE \reg_count_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(reg_count_reg[2]),
        .R(reg_cfg_tph_stt_read_data_valid_o1));
  FDRE \reg_count_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(reg_count_reg[3]),
        .R(reg_cfg_tph_stt_read_data_valid_o1));
  FDRE \reg_count_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(reg_count_reg[4]),
        .R(reg_cfg_tph_stt_read_data_valid_o1));
  FDRE \reg_count_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(reg_count_reg[5]),
        .R(reg_cfg_tph_stt_read_data_valid_o1));
  FDRE \reg_count_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(reg_count_reg[6]),
        .R(reg_cfg_tph_stt_read_data_valid_o1));
  FDRE \reg_count_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(p_0_in__0[7]),
        .Q(reg_count_reg[7]),
        .R(reg_cfg_tph_stt_read_data_valid_o1));
  FDRE #(
    .INIT(1'b0)) 
    reg_state_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_next_state__0),
        .Q(reg_state),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    u_ram
       (.ADDRARDADDR({1'b1,1'b0,1'b0,ADDRARDADDR,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,p_1_out,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(NLW_u_ram_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_u_ram_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(pipe_userclk2_in),
        .CLKBWRCLK(pipe_userclk2_in),
        .DBITERR(NLW_u_ram_DBITERR_UNCONNECTED),
        .DIADI(CFGTPHSTTWRITEDATA),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(DOADO),
        .DOBDO({u_ram_n_36,u_ram_n_37,u_ram_n_38,u_ram_n_39,u_ram_n_40,u_ram_n_41,u_ram_n_42,u_ram_n_43,u_ram_n_44,u_ram_n_45,u_ram_n_46,u_ram_n_47,u_ram_n_48,u_ram_n_49,u_ram_n_50,u_ram_n_51,u_ram_n_52,u_ram_n_53,u_ram_n_54,u_ram_n_55,u_ram_n_56,u_ram_n_57,u_ram_n_58,u_ram_n_59,u_ram_n_60,u_ram_n_61,u_ram_n_62,u_ram_n_63,u_ram_n_64,u_ram_n_65,u_ram_n_66,u_ram_n_67}),
        .DOPADOP(NLW_u_ram_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP(NLW_u_ram_DOPBDOP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_u_ram_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(NLW_u_ram_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_u_ram_SBITERR_UNCONNECTED),
        .WEA(wea),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,reg_next_state__0,reg_next_state__0,reg_next_state__0,reg_next_state__0}));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_1
       (.I0(reg_state),
        .I1(reg_count_reg[7]),
        .O(p_1_out[12]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_10
       (.I0(cfg_tph_stt_write_enable),
        .I1(CFGTPHSTTWRITEBYTEVALID[2]),
        .O(wea[2]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_11
       (.I0(cfg_tph_stt_write_enable),
        .I1(CFGTPHSTTWRITEBYTEVALID[1]),
        .O(wea[1]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_12
       (.I0(cfg_tph_stt_write_enable),
        .I1(CFGTPHSTTWRITEBYTEVALID[0]),
        .O(wea[0]));
  LUT5 #(
    .INIT(32'hF353F3F3)) 
    u_ram_i_13
       (.I0(reg_count_reg[7]),
        .I1(reset_n),
        .I2(reg_state),
        .I3(u_ram_i_14_n_0),
        .I4(reg_count_reg[6]),
        .O(reg_next_state__0));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    u_ram_i_14
       (.I0(reg_count_reg[4]),
        .I1(reg_count_reg[2]),
        .I2(reg_count_reg[0]),
        .I3(reg_count_reg[1]),
        .I4(reg_count_reg[3]),
        .I5(reg_count_reg[5]),
        .O(u_ram_i_14_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_2
       (.I0(reg_state),
        .I1(reg_count_reg[6]),
        .O(p_1_out[11]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_3
       (.I0(reg_state),
        .I1(reg_count_reg[5]),
        .O(p_1_out[10]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_4
       (.I0(reg_state),
        .I1(reg_count_reg[4]),
        .O(p_1_out[9]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_5
       (.I0(reg_state),
        .I1(reg_count_reg[3]),
        .O(p_1_out[8]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_6
       (.I0(reg_state),
        .I1(reg_count_reg[2]),
        .O(p_1_out[7]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_7
       (.I0(reg_state),
        .I1(reg_count_reg[1]),
        .O(p_1_out[6]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_8
       (.I0(reg_state),
        .I1(reg_count_reg[0]),
        .O(p_1_out[5]));
  LUT2 #(
    .INIT(4'h8)) 
    u_ram_i_9
       (.I0(cfg_tph_stt_write_enable),
        .I1(CFGTPHSTTWRITEBYTEVALID[3]),
        .O(wea[3]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_top
   (cfg_err_cor_out,
    cfg_err_fatal_out,
    cfg_err_nonfatal_out,
    cfg_hot_reset_out,
    cfg_interrupt_msi_fail,
    cfg_interrupt_msi_mask_update,
    cfg_interrupt_msi_sent,
    cfg_interrupt_sent,
    cfg_ltr_enable,
    cfg_mgmt_read_write_done,
    cfg_msg_received,
    cfg_msg_transmit_done,
    cfg_per_function_update_done,
    cfg_phy_link_down,
    cfg_pl_status_change,
    cfg_power_state_change_interrupt,
    m_axis_cq_tlast,
    m_axis_cq_tvalid,
    m_axis_rc_tlast,
    m_axis_rc_tvalid,
    pcie_rq_seq_num_vld,
    pcie_rq_tag_vld,
    PIPE_RXPOLARITY,
    PIPE_TXCOMPLIANCE,
    PIPE_TXELECIDLE,
    pipe_tx_deemph,
    pipe_tx_rcvr_det,
    pipe_tx_swing,
    cfg_fc_cpld,
    cfg_fc_npd,
    cfg_fc_pd,
    cfg_vf_status,
    cfg_per_func_status_data,
    cfg_vf_power_state,
    cfg_vf_tph_st_mode,
    cfg_dpa_substate_change,
    cfg_flr_in_process,
    cfg_interrupt_msi_enable,
    cfg_link_power_state,
    cfg_obff_enable,
    cfg_phy_link_status,
    cfg_rcb_status,
    cfg_tph_requester_enable,
    pcie_tfc_npd_av,
    pcie_tfc_nph_av,
    PIPE_TXDATAK,
    PIPE_TXEQ_CONTROL,
    PIPE_POWERDOWN,
    PIPETXRATE,
    m_axis_cq_tdata,
    m_axis_rc_tdata,
    cfg_current_speed,
    cfg_max_payload,
    cfg_max_read_req,
    PIPE_RXEQ_PRESET,
    PIPETXMARGIN,
    cfg_interrupt_msi_data,
    cfg_mgmt_read_data,
    PIPE_TXDATA,
    cfg_negotiated_width,
    pcie_rq_seq_num,
    PIPE_RXEQ_TXPRESET,
    PIPE_TXEQ_PRESET,
    s_axis_cc_tready,
    s_axis_rq_tready,
    cfg_msg_received_type,
    cfg_function_power_state,
    cfg_interrupt_msi_mmenable,
    cfg_interrupt_msi_vf_enable,
    cfg_ltssm_state,
    cfg_tph_st_mode,
    cfg_vf_flr_in_process,
    cfg_vf_tph_requester_enable,
    pcie_cq_np_req_count,
    pcie_rq_tag,
    PIPE_RXEQ_LFFS,
    PIPE_TXEQ_DEEMPH,
    m_axis_rc_tuser,
    cfg_fc_cplh,
    cfg_fc_nph,
    cfg_fc_ph,
    cfg_function_status,
    cfg_msg_received_data,
    m_axis_cq_tkeep,
    m_axis_rc_tkeep,
    PIPE_RXSLIDE,
    m_axis_cq_tuser,
    user_lnk_up,
    user_reset_int_reg,
    sys_reset_0,
    PIPE_RXEQ_CONTROL,
    pipe_userclk2_in,
    pipe_userclk1_in,
    cfg_config_space_enable,
    cfg_err_cor_in,
    cfg_err_uncor_in,
    cfg_hot_reset_in,
    cfg_interrupt_msi_tph_present,
    cfg_link_training_enable,
    cfg_mgmt_read,
    cfg_mgmt_type1_cfg_reg_access,
    cfg_mgmt_write,
    cfg_msg_transmit,
    cfg_per_function_output_request,
    cfg_power_state_change_ack,
    cfg_req_pm_transition_l23_ready,
    pcie_cq_np_req,
    pipe_pclk_in,
    PIPE_RXELECIDLE,
    PIPE_RXEQ_DONE,
    pipe_rx0_eq_adapt_done,
    pipe_rx0_eq_lffs_sel,
    pipe_rx0_phy_status,
    pipe_rx0_valid,
    USER_RXEQ_ADAPT_DONE,
    pipe_rx1_eq_lffs_sel,
    pipe_rx1_phy_status,
    pipe_rx1_valid,
    PCIE_3_0_i,
    pipe_rx2_eq_lffs_sel,
    pipe_rx2_phy_status,
    pipe_rx2_valid,
    PCIE_3_0_i_0,
    pipe_rx3_eq_lffs_sel,
    pipe_rx3_phy_status,
    pipe_rx3_valid,
    PIPE_TXEQ_DONE,
    pipe_rxusrclk_in,
    s_axis_cc_tlast,
    s_axis_cc_tvalid,
    s_axis_rq_tlast,
    s_axis_rq_tvalid,
    cfg_subsys_vend_id,
    PIPERX0EQLPNEWTXCOEFFORPRESET,
    PIPERX1EQLPNEWTXCOEFFORPRESET,
    PIPERX2EQLPNEWTXCOEFFORPRESET,
    PIPERX3EQLPNEWTXCOEFFORPRESET,
    PIPE_TXEQ_COEFF,
    cfg_mgmt_addr,
    cfg_flr_done,
    cfg_interrupt_msi_tph_type,
    cfg_interrupt_pending,
    PIPE_RXDATAK,
    m_axis_cq_tready,
    m_axis_rc_tready,
    s_axis_cc_tdata,
    s_axis_rq_tdata,
    cfg_ds_function_number,
    cfg_fc_sel,
    cfg_interrupt_msi_attr,
    cfg_interrupt_msi_function_number,
    cfg_msg_transmit_type,
    cfg_per_func_status_control,
    cfg_per_function_number,
    PIPE_RXSTATUS,
    cfg_interrupt_msi_int,
    cfg_mgmt_write_data,
    cfg_msg_transmit_data,
    s_axis_cc_tuser,
    cfg_interrupt_int,
    cfg_interrupt_msi_select,
    cfg_mgmt_byte_enable,
    cfg_ds_device_number,
    s_axis_rq_tuser,
    cfg_vf_flr_done,
    cfg_dsn,
    cfg_interrupt_msi_pending_status,
    cfg_ds_bus_number,
    cfg_ds_port_number,
    PIPE_GEN3_RDY,
    s_axis_cc_tkeep,
    s_axis_rq_tkeep,
    cfg_interrupt_msi_tph_st_tag,
    user_reset_int,
    sys_reset,
    pipe_mmcm_lock_in,
    Q,
    PIPE_RXDATA);
  output cfg_err_cor_out;
  output cfg_err_fatal_out;
  output cfg_err_nonfatal_out;
  output cfg_hot_reset_out;
  output cfg_interrupt_msi_fail;
  output cfg_interrupt_msi_mask_update;
  output cfg_interrupt_msi_sent;
  output cfg_interrupt_sent;
  output cfg_ltr_enable;
  output cfg_mgmt_read_write_done;
  output cfg_msg_received;
  output cfg_msg_transmit_done;
  output cfg_per_function_update_done;
  output cfg_phy_link_down;
  output cfg_pl_status_change;
  output cfg_power_state_change_interrupt;
  output m_axis_cq_tlast;
  output m_axis_cq_tvalid;
  output m_axis_rc_tlast;
  output m_axis_rc_tvalid;
  output pcie_rq_seq_num_vld;
  output pcie_rq_tag_vld;
  output [3:0]PIPE_RXPOLARITY;
  output [3:0]PIPE_TXCOMPLIANCE;
  output [3:0]PIPE_TXELECIDLE;
  output pipe_tx_deemph;
  output pipe_tx_rcvr_det;
  output pipe_tx_swing;
  output [11:0]cfg_fc_cpld;
  output [11:0]cfg_fc_npd;
  output [11:0]cfg_fc_pd;
  output [11:0]cfg_vf_status;
  output [15:0]cfg_per_func_status_data;
  output [17:0]cfg_vf_power_state;
  output [17:0]cfg_vf_tph_st_mode;
  output [1:0]cfg_dpa_substate_change;
  output [1:0]cfg_flr_in_process;
  output [1:0]cfg_interrupt_msi_enable;
  output [1:0]cfg_link_power_state;
  output [1:0]cfg_obff_enable;
  output [1:0]cfg_phy_link_status;
  output [1:0]cfg_rcb_status;
  output [1:0]cfg_tph_requester_enable;
  output [1:0]pcie_tfc_npd_av;
  output [1:0]pcie_tfc_nph_av;
  output [7:0]PIPE_TXDATAK;
  output [7:0]PIPE_TXEQ_CONTROL;
  output [7:0]PIPE_POWERDOWN;
  output [1:0]PIPETXRATE;
  output [127:0]m_axis_cq_tdata;
  output [127:0]m_axis_rc_tdata;
  output [2:0]cfg_current_speed;
  output [2:0]cfg_max_payload;
  output [2:0]cfg_max_read_req;
  output [11:0]PIPE_RXEQ_PRESET;
  output [2:0]PIPETXMARGIN;
  output [31:0]cfg_interrupt_msi_data;
  output [31:0]cfg_mgmt_read_data;
  output [63:0]PIPE_TXDATA;
  output [3:0]cfg_negotiated_width;
  output [3:0]pcie_rq_seq_num;
  output [15:0]PIPE_RXEQ_TXPRESET;
  output [15:0]PIPE_TXEQ_PRESET;
  output [3:0]s_axis_cc_tready;
  output [3:0]s_axis_rq_tready;
  output [4:0]cfg_msg_received_type;
  output [5:0]cfg_function_power_state;
  output [5:0]cfg_interrupt_msi_mmenable;
  output [5:0]cfg_interrupt_msi_vf_enable;
  output [5:0]cfg_ltssm_state;
  output [5:0]cfg_tph_st_mode;
  output [5:0]cfg_vf_flr_in_process;
  output [5:0]cfg_vf_tph_requester_enable;
  output [5:0]pcie_cq_np_req_count;
  output [5:0]pcie_rq_tag;
  output [23:0]PIPE_RXEQ_LFFS;
  output [23:0]PIPE_TXEQ_DEEMPH;
  output [74:0]m_axis_rc_tuser;
  output [7:0]cfg_fc_cplh;
  output [7:0]cfg_fc_nph;
  output [7:0]cfg_fc_ph;
  output [7:0]cfg_function_status;
  output [7:0]cfg_msg_received_data;
  output [3:0]m_axis_cq_tkeep;
  output [3:0]m_axis_rc_tkeep;
  output [3:0]PIPE_RXSLIDE;
  output [84:0]m_axis_cq_tuser;
  output user_lnk_up;
  output user_reset_int_reg;
  output sys_reset_0;
  output [7:0]PIPE_RXEQ_CONTROL;
  input pipe_userclk2_in;
  input pipe_userclk1_in;
  input cfg_config_space_enable;
  input cfg_err_cor_in;
  input cfg_err_uncor_in;
  input cfg_hot_reset_in;
  input cfg_interrupt_msi_tph_present;
  input cfg_link_training_enable;
  input cfg_mgmt_read;
  input cfg_mgmt_type1_cfg_reg_access;
  input cfg_mgmt_write;
  input cfg_msg_transmit;
  input cfg_per_function_output_request;
  input cfg_power_state_change_ack;
  input cfg_req_pm_transition_l23_ready;
  input pcie_cq_np_req;
  input pipe_pclk_in;
  input [3:0]PIPE_RXELECIDLE;
  input [3:0]PIPE_RXEQ_DONE;
  input pipe_rx0_eq_adapt_done;
  input pipe_rx0_eq_lffs_sel;
  input pipe_rx0_phy_status;
  input pipe_rx0_valid;
  input USER_RXEQ_ADAPT_DONE;
  input pipe_rx1_eq_lffs_sel;
  input pipe_rx1_phy_status;
  input pipe_rx1_valid;
  input PCIE_3_0_i;
  input pipe_rx2_eq_lffs_sel;
  input pipe_rx2_phy_status;
  input pipe_rx2_valid;
  input PCIE_3_0_i_0;
  input pipe_rx3_eq_lffs_sel;
  input pipe_rx3_phy_status;
  input pipe_rx3_valid;
  input [3:0]PIPE_TXEQ_DONE;
  input pipe_rxusrclk_in;
  input s_axis_cc_tlast;
  input s_axis_cc_tvalid;
  input s_axis_rq_tlast;
  input s_axis_rq_tvalid;
  input [15:0]cfg_subsys_vend_id;
  input [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  input [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  input [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  input [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  input [63:0]PIPE_TXEQ_COEFF;
  input [18:0]cfg_mgmt_addr;
  input [1:0]cfg_flr_done;
  input [1:0]cfg_interrupt_msi_tph_type;
  input [1:0]cfg_interrupt_pending;
  input [7:0]PIPE_RXDATAK;
  input m_axis_cq_tready;
  input m_axis_rc_tready;
  input [127:0]s_axis_cc_tdata;
  input [127:0]s_axis_rq_tdata;
  input [2:0]cfg_ds_function_number;
  input [2:0]cfg_fc_sel;
  input [2:0]cfg_interrupt_msi_attr;
  input [2:0]cfg_interrupt_msi_function_number;
  input [2:0]cfg_msg_transmit_type;
  input [2:0]cfg_per_func_status_control;
  input [2:0]cfg_per_function_number;
  input [11:0]PIPE_RXSTATUS;
  input [31:0]cfg_interrupt_msi_int;
  input [31:0]cfg_mgmt_write_data;
  input [31:0]cfg_msg_transmit_data;
  input [32:0]s_axis_cc_tuser;
  input [3:0]cfg_interrupt_int;
  input [3:0]cfg_interrupt_msi_select;
  input [3:0]cfg_mgmt_byte_enable;
  input [4:0]cfg_ds_device_number;
  input [59:0]s_axis_rq_tuser;
  input [5:0]cfg_vf_flr_done;
  input [63:0]cfg_dsn;
  input [63:0]cfg_interrupt_msi_pending_status;
  input [7:0]cfg_ds_bus_number;
  input [7:0]cfg_ds_port_number;
  input [3:0]PIPE_GEN3_RDY;
  input [3:0]s_axis_cc_tkeep;
  input [3:0]s_axis_rq_tkeep;
  input [8:0]cfg_interrupt_msi_tph_st_tag;
  input user_reset_int;
  input sys_reset;
  input pipe_mmcm_lock_in;
  input [0:0]Q;
  input [63:0]PIPE_RXDATA;

  wire PCIE_3_0_i;
  wire PCIE_3_0_i_0;
  wire [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  wire [2:0]PIPETXMARGIN;
  wire [1:0]PIPETXRATE;
  wire [3:0]PIPE_GEN3_RDY;
  wire [7:0]PIPE_POWERDOWN;
  wire [63:0]PIPE_RXDATA;
  wire [7:0]PIPE_RXDATAK;
  wire [3:0]PIPE_RXELECIDLE;
  wire [7:0]PIPE_RXEQ_CONTROL;
  wire [3:0]PIPE_RXEQ_DONE;
  wire [23:0]PIPE_RXEQ_LFFS;
  wire [11:0]PIPE_RXEQ_PRESET;
  wire [15:0]PIPE_RXEQ_TXPRESET;
  wire [3:0]PIPE_RXPOLARITY;
  wire [3:0]PIPE_RXSLIDE;
  wire [11:0]PIPE_RXSTATUS;
  wire [3:0]PIPE_TXCOMPLIANCE;
  wire [63:0]PIPE_TXDATA;
  wire [7:0]PIPE_TXDATAK;
  wire [3:0]PIPE_TXELECIDLE;
  wire [63:0]PIPE_TXEQ_COEFF;
  wire [7:0]PIPE_TXEQ_CONTROL;
  wire [23:0]PIPE_TXEQ_DEEMPH;
  wire [3:0]PIPE_TXEQ_DONE;
  wire [15:0]PIPE_TXEQ_PRESET;
  wire [0:0]Q;
  wire USER_RXEQ_ADAPT_DONE;
  wire cfg_config_space_enable;
  wire [2:0]cfg_current_speed;
  wire [1:0]cfg_dpa_substate_change;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [7:0]cfg_ds_port_number;
  wire [63:0]cfg_dsn;
  wire cfg_err_cor_in;
  wire cfg_err_cor_out;
  wire cfg_err_fatal_out;
  wire cfg_err_nonfatal_out;
  wire cfg_err_uncor_in;
  wire [11:0]cfg_fc_cpld;
  wire [7:0]cfg_fc_cplh;
  wire [11:0]cfg_fc_npd;
  wire [7:0]cfg_fc_nph;
  wire [11:0]cfg_fc_pd;
  wire [7:0]cfg_fc_ph;
  wire [2:0]cfg_fc_sel;
  wire [1:0]cfg_flr_done;
  wire [1:0]cfg_flr_in_process;
  wire [5:0]cfg_function_power_state;
  wire [7:0]cfg_function_status;
  wire cfg_hot_reset_in;
  wire cfg_hot_reset_out;
  wire cfg_input_update_done;
  wire [3:0]cfg_interrupt_int;
  wire [2:0]cfg_interrupt_msi_attr;
  wire [31:0]cfg_interrupt_msi_data;
  wire [1:0]cfg_interrupt_msi_enable;
  wire cfg_interrupt_msi_fail;
  wire [2:0]cfg_interrupt_msi_function_number;
  wire [31:0]cfg_interrupt_msi_int;
  wire cfg_interrupt_msi_mask_update;
  wire [5:0]cfg_interrupt_msi_mmenable;
  wire [63:0]cfg_interrupt_msi_pending_status;
  wire [3:0]cfg_interrupt_msi_select;
  wire cfg_interrupt_msi_sent;
  wire cfg_interrupt_msi_tph_present;
  wire [8:0]cfg_interrupt_msi_tph_st_tag;
  wire [1:0]cfg_interrupt_msi_tph_type;
  wire [5:0]cfg_interrupt_msi_vf_enable;
  wire [1:0]cfg_interrupt_pending;
  wire cfg_interrupt_sent;
  wire [1:0]cfg_link_power_state;
  wire cfg_link_training_enable;
  wire cfg_ltr_enable;
  wire [5:0]cfg_ltssm_state;
  wire [2:0]cfg_max_payload;
  wire [2:0]cfg_max_read_req;
  wire cfg_mc_update_done;
  wire cfg_mc_update_request;
  wire [18:0]cfg_mgmt_addr;
  wire [3:0]cfg_mgmt_byte_enable;
  wire cfg_mgmt_read;
  wire [31:0]cfg_mgmt_read_data;
  wire cfg_mgmt_read_write_done;
  wire cfg_mgmt_type1_cfg_reg_access;
  wire cfg_mgmt_write;
  wire [31:0]cfg_mgmt_write_data;
  wire cfg_msg_received;
  wire [7:0]cfg_msg_received_data;
  wire [4:0]cfg_msg_received_type;
  wire cfg_msg_transmit;
  wire [31:0]cfg_msg_transmit_data;
  wire cfg_msg_transmit_done;
  wire [2:0]cfg_msg_transmit_type;
  wire [3:0]cfg_negotiated_width;
  wire [1:0]cfg_obff_enable;
  wire [2:0]cfg_per_func_status_control;
  wire [15:0]cfg_per_func_status_data;
  wire [2:0]cfg_per_function_number;
  wire cfg_per_function_output_request;
  wire cfg_per_function_update_done;
  wire cfg_phy_link_down;
  wire [1:0]cfg_phy_link_status;
  wire cfg_pl_status_change;
  wire cfg_power_state_change_ack;
  wire cfg_power_state_change_interrupt;
  wire [1:0]cfg_rcb_status;
  wire cfg_req_pm_transition_l23_ready;
  wire [15:0]cfg_subsys_vend_id;
  wire [2:0]cfg_tph_function_num;
  wire [1:0]cfg_tph_requester_enable;
  wire [5:0]cfg_tph_st_mode;
  wire [4:0]cfg_tph_stt_address;
  wire [31:0]cfg_tph_stt_read_data;
  wire cfg_tph_stt_read_data_valid;
  wire cfg_tph_stt_read_enable;
  wire [3:0]cfg_tph_stt_write_byte_valid;
  wire [31:0]cfg_tph_stt_write_data;
  wire cfg_tph_stt_write_enable;
  wire [5:0]cfg_vf_flr_done;
  wire [5:0]cfg_vf_flr_in_process;
  wire [17:0]cfg_vf_power_state;
  wire [11:0]cfg_vf_status;
  wire [5:0]cfg_vf_tph_requester_enable;
  wire [17:0]cfg_vf_tph_st_mode;
  wire [127:0]m_axis_cq_tdata;
  wire [3:0]m_axis_cq_tkeep;
  wire m_axis_cq_tlast;
  wire m_axis_cq_tready;
  wire [84:0]m_axis_cq_tuser;
  wire m_axis_cq_tvalid;
  wire [127:0]m_axis_rc_tdata;
  wire [3:0]m_axis_rc_tkeep;
  wire m_axis_rc_tlast;
  wire m_axis_rc_tready;
  wire [74:0]m_axis_rc_tuser;
  wire m_axis_rc_tvalid;
  wire mgmt_reset_n;
  wire mgmt_sticky_reset_n;
  wire pcie_7vx_i_n_1017;
  wire pcie_cq_np_req;
  wire [5:0]pcie_cq_np_req_count;
  wire pcie_init_ctrl_7vx_i_n_4;
  wire pcie_init_ctrl_7vx_i_n_5;
  wire [3:0]pcie_rq_seq_num;
  wire pcie_rq_seq_num_vld;
  wire [5:0]pcie_rq_tag;
  wire pcie_rq_tag_vld;
  wire [1:0]pcie_tfc_npd_av;
  wire [1:0]pcie_tfc_nph_av;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire pipe_reset_n;
  wire [31:0]pipe_rx0_data_pcie;
  wire pipe_rx0_eq_adapt_done;
  wire pipe_rx0_eq_lffs_sel;
  wire [1:0]pipe_rx0_eqcontrol_pcie;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_valid;
  wire [31:0]pipe_rx1_data_pcie;
  wire pipe_rx1_eq_lffs_sel;
  wire [1:0]pipe_rx1_eqcontrol_pcie;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_valid;
  wire [15:0]pipe_rx2_data_pcie;
  wire pipe_rx2_eq_lffs_sel;
  wire [1:0]pipe_rx2_eqcontrol_pcie;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_valid;
  wire [15:0]pipe_rx3_data_pcie;
  wire pipe_rx3_eq_lffs_sel;
  wire [1:0]pipe_rx3_eqcontrol_pcie;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_valid;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_swing;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire reset_n;
  wire [127:0]s_axis_cc_tdata;
  wire [3:0]s_axis_cc_tkeep;
  wire s_axis_cc_tlast;
  wire [3:0]s_axis_cc_tready;
  wire [32:0]s_axis_cc_tuser;
  wire s_axis_cc_tvalid;
  wire [127:0]s_axis_rq_tdata;
  wire [3:0]s_axis_rq_tkeep;
  wire s_axis_rq_tlast;
  wire [3:0]s_axis_rq_tready;
  wire [59:0]s_axis_rq_tuser;
  wire s_axis_rq_tvalid;
  wire sys_reset;
  wire sys_reset_0;
  wire user_lnk_up;
  wire user_reset_int;
  wire user_reset_int_reg;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_force_adapt force_adapt_i
       (.PIPERX0DATA({pipe_rx0_data_pcie[31],pipe_rx0_data_pcie[15:0]}),
        .PIPERX0EQCONTROL(pipe_rx0_eqcontrol_pcie),
        .PIPERX1DATA({pipe_rx1_data_pcie[31],pipe_rx1_data_pcie[15:0]}),
        .PIPERX1EQCONTROL(pipe_rx1_eqcontrol_pcie),
        .PIPERX2DATA(pipe_rx2_data_pcie),
        .PIPERX2EQCONTROL(pipe_rx2_eqcontrol_pcie),
        .PIPERX3DATA(pipe_rx3_data_pcie),
        .PIPERX3EQCONTROL(pipe_rx3_eqcontrol_pcie),
        .PIPETXRATE(PIPETXRATE[1]),
        .PIPE_RXDATA(PIPE_RXDATA),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[0]),
        .PIPE_RXEQ_CONTROL(PIPE_RXEQ_CONTROL),
        .PIPE_TXEQ_CONTROL(PIPE_TXEQ_CONTROL[0]),
        .cfg_current_speed(cfg_current_speed[2]),
        .cfg_ltssm_state(cfg_ltssm_state),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_eq_adapt_done(pipe_rx0_eq_adapt_done),
        .pipe_userclk2_in(pipe_userclk2_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_7vx pcie_7vx_i
       (.ADDRARDADDR({cfg_tph_function_num,cfg_tph_stt_address}),
        .CFGTPHSTTWRITEBYTEVALID(cfg_tph_stt_write_byte_valid),
        .CFGTPHSTTWRITEDATA(cfg_tph_stt_write_data),
        .D(pcie_7vx_i_n_1017),
        .DOADO(cfg_tph_stt_read_data),
        .PCIE_3_0_i_0(PCIE_3_0_i),
        .PCIE_3_0_i_1(PCIE_3_0_i_0),
        .PIPERX0DATA({pipe_rx0_data_pcie[31],pipe_rx0_data_pcie[15:0]}),
        .PIPERX0EQCONTROL(pipe_rx0_eqcontrol_pcie),
        .PIPERX0EQLPNEWTXCOEFFORPRESET(PIPERX0EQLPNEWTXCOEFFORPRESET),
        .PIPERX1DATA({pipe_rx1_data_pcie[31],pipe_rx1_data_pcie[15:0]}),
        .PIPERX1EQCONTROL(pipe_rx1_eqcontrol_pcie),
        .PIPERX1EQLPNEWTXCOEFFORPRESET(PIPERX1EQLPNEWTXCOEFFORPRESET),
        .PIPERX2DATA(pipe_rx2_data_pcie),
        .PIPERX2EQCONTROL(pipe_rx2_eqcontrol_pcie),
        .PIPERX2EQLPNEWTXCOEFFORPRESET(PIPERX2EQLPNEWTXCOEFFORPRESET),
        .PIPERX3DATA(pipe_rx3_data_pcie),
        .PIPERX3EQCONTROL(pipe_rx3_eqcontrol_pcie),
        .PIPERX3EQLPNEWTXCOEFFORPRESET(PIPERX3EQLPNEWTXCOEFFORPRESET),
        .PIPETXMARGIN(PIPETXMARGIN),
        .PIPETXRATE(PIPETXRATE),
        .PIPE_GEN3_RDY(PIPE_GEN3_RDY),
        .PIPE_POWERDOWN(PIPE_POWERDOWN),
        .PIPE_RXDATAK(PIPE_RXDATAK),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE),
        .PIPE_RXEQ_DONE(PIPE_RXEQ_DONE),
        .PIPE_RXEQ_LFFS(PIPE_RXEQ_LFFS),
        .PIPE_RXEQ_PRESET(PIPE_RXEQ_PRESET),
        .PIPE_RXEQ_TXPRESET(PIPE_RXEQ_TXPRESET),
        .PIPE_RXPOLARITY(PIPE_RXPOLARITY),
        .PIPE_RXSLIDE(PIPE_RXSLIDE),
        .PIPE_RXSTATUS(PIPE_RXSTATUS),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE),
        .PIPE_TXDATA(PIPE_TXDATA),
        .PIPE_TXDATAK(PIPE_TXDATAK),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE),
        .PIPE_TXEQ_COEFF(PIPE_TXEQ_COEFF),
        .PIPE_TXEQ_CONTROL(PIPE_TXEQ_CONTROL),
        .PIPE_TXEQ_DEEMPH(PIPE_TXEQ_DEEMPH),
        .PIPE_TXEQ_DONE(PIPE_TXEQ_DONE),
        .PIPE_TXEQ_PRESET(PIPE_TXEQ_PRESET),
        .Q({pcie_init_ctrl_7vx_i_n_5,cfg_mc_update_request}),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .cfg_config_space_enable(cfg_config_space_enable),
        .cfg_current_speed(cfg_current_speed),
        .cfg_dpa_substate_change(cfg_dpa_substate_change),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_ds_port_number(cfg_ds_port_number),
        .cfg_dsn(cfg_dsn),
        .cfg_err_cor_in(cfg_err_cor_in),
        .cfg_err_cor_out(cfg_err_cor_out),
        .cfg_err_fatal_out(cfg_err_fatal_out),
        .cfg_err_nonfatal_out(cfg_err_nonfatal_out),
        .cfg_err_uncor_in(cfg_err_uncor_in),
        .cfg_fc_cpld(cfg_fc_cpld),
        .cfg_fc_cplh(cfg_fc_cplh),
        .cfg_fc_npd(cfg_fc_npd),
        .cfg_fc_nph(cfg_fc_nph),
        .cfg_fc_pd(cfg_fc_pd),
        .cfg_fc_ph(cfg_fc_ph),
        .cfg_fc_sel(cfg_fc_sel),
        .cfg_flr_done(cfg_flr_done),
        .cfg_flr_in_process(cfg_flr_in_process),
        .cfg_function_power_state(cfg_function_power_state),
        .cfg_function_status(cfg_function_status),
        .cfg_hot_reset_in(cfg_hot_reset_in),
        .cfg_hot_reset_out(cfg_hot_reset_out),
        .cfg_input_update_done(cfg_input_update_done),
        .cfg_interrupt_int(cfg_interrupt_int),
        .cfg_interrupt_msi_attr(cfg_interrupt_msi_attr),
        .cfg_interrupt_msi_data(cfg_interrupt_msi_data),
        .cfg_interrupt_msi_enable(cfg_interrupt_msi_enable),
        .cfg_interrupt_msi_fail(cfg_interrupt_msi_fail),
        .cfg_interrupt_msi_function_number(cfg_interrupt_msi_function_number),
        .cfg_interrupt_msi_int(cfg_interrupt_msi_int),
        .cfg_interrupt_msi_mask_update(cfg_interrupt_msi_mask_update),
        .cfg_interrupt_msi_mmenable(cfg_interrupt_msi_mmenable),
        .cfg_interrupt_msi_pending_status(cfg_interrupt_msi_pending_status),
        .cfg_interrupt_msi_select(cfg_interrupt_msi_select),
        .cfg_interrupt_msi_sent(cfg_interrupt_msi_sent),
        .cfg_interrupt_msi_tph_present(cfg_interrupt_msi_tph_present),
        .cfg_interrupt_msi_tph_st_tag(cfg_interrupt_msi_tph_st_tag),
        .cfg_interrupt_msi_tph_type(cfg_interrupt_msi_tph_type),
        .cfg_interrupt_msi_vf_enable(cfg_interrupt_msi_vf_enable),
        .cfg_interrupt_pending(cfg_interrupt_pending),
        .cfg_interrupt_sent(cfg_interrupt_sent),
        .cfg_link_power_state(cfg_link_power_state),
        .cfg_link_training_enable(cfg_link_training_enable),
        .cfg_ltr_enable(cfg_ltr_enable),
        .cfg_ltssm_state(cfg_ltssm_state),
        .cfg_max_payload(cfg_max_payload),
        .cfg_max_read_req(cfg_max_read_req),
        .cfg_mc_update_done(cfg_mc_update_done),
        .cfg_mgmt_addr(cfg_mgmt_addr),
        .cfg_mgmt_byte_enable(cfg_mgmt_byte_enable),
        .cfg_mgmt_read(cfg_mgmt_read),
        .cfg_mgmt_read_data(cfg_mgmt_read_data),
        .cfg_mgmt_read_write_done(cfg_mgmt_read_write_done),
        .cfg_mgmt_type1_cfg_reg_access(cfg_mgmt_type1_cfg_reg_access),
        .cfg_mgmt_write(cfg_mgmt_write),
        .cfg_mgmt_write_data(cfg_mgmt_write_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_data(cfg_msg_received_data),
        .cfg_msg_received_type(cfg_msg_received_type),
        .cfg_msg_transmit(cfg_msg_transmit),
        .cfg_msg_transmit_data(cfg_msg_transmit_data),
        .cfg_msg_transmit_done(cfg_msg_transmit_done),
        .cfg_msg_transmit_type(cfg_msg_transmit_type),
        .cfg_negotiated_width(cfg_negotiated_width),
        .cfg_obff_enable(cfg_obff_enable),
        .cfg_per_func_status_control(cfg_per_func_status_control),
        .cfg_per_func_status_data(cfg_per_func_status_data),
        .cfg_per_function_number(cfg_per_function_number),
        .cfg_per_function_output_request(cfg_per_function_output_request),
        .cfg_per_function_update_done(cfg_per_function_update_done),
        .cfg_phy_link_down(cfg_phy_link_down),
        .cfg_phy_link_status(cfg_phy_link_status),
        .cfg_pl_status_change(cfg_pl_status_change),
        .cfg_power_state_change_ack(cfg_power_state_change_ack),
        .cfg_power_state_change_interrupt(cfg_power_state_change_interrupt),
        .cfg_rcb_status(cfg_rcb_status),
        .cfg_req_pm_transition_l23_ready(cfg_req_pm_transition_l23_ready),
        .cfg_subsys_vend_id(cfg_subsys_vend_id),
        .cfg_tph_requester_enable(cfg_tph_requester_enable),
        .cfg_tph_st_mode(cfg_tph_st_mode),
        .cfg_tph_stt_read_data_valid(cfg_tph_stt_read_data_valid),
        .cfg_tph_stt_read_enable(cfg_tph_stt_read_enable),
        .cfg_tph_stt_write_enable(cfg_tph_stt_write_enable),
        .cfg_vf_flr_done(cfg_vf_flr_done),
        .cfg_vf_flr_in_process(cfg_vf_flr_in_process),
        .cfg_vf_power_state(cfg_vf_power_state),
        .cfg_vf_status(cfg_vf_status),
        .cfg_vf_tph_requester_enable(cfg_vf_tph_requester_enable),
        .cfg_vf_tph_st_mode(cfg_vf_tph_st_mode),
        .m_axis_cq_tdata(m_axis_cq_tdata),
        .m_axis_cq_tkeep(m_axis_cq_tkeep),
        .m_axis_cq_tlast(m_axis_cq_tlast),
        .m_axis_cq_tready(m_axis_cq_tready),
        .m_axis_cq_tuser(m_axis_cq_tuser),
        .m_axis_cq_tvalid(m_axis_cq_tvalid),
        .m_axis_rc_tdata(m_axis_rc_tdata),
        .m_axis_rc_tkeep(m_axis_rc_tkeep),
        .m_axis_rc_tlast(m_axis_rc_tlast),
        .m_axis_rc_tready(m_axis_rc_tready),
        .m_axis_rc_tuser(m_axis_rc_tuser),
        .m_axis_rc_tvalid(m_axis_rc_tvalid),
        .mgmt_reset_n(mgmt_reset_n),
        .mgmt_sticky_reset_n(mgmt_sticky_reset_n),
        .pcie_cq_np_req(pcie_cq_np_req),
        .pcie_cq_np_req_count(pcie_cq_np_req_count),
        .pcie_rq_seq_num(pcie_rq_seq_num),
        .pcie_rq_seq_num_vld(pcie_rq_seq_num_vld),
        .pcie_rq_tag(pcie_rq_tag),
        .pcie_rq_tag_vld(pcie_rq_tag_vld),
        .pcie_tfc_npd_av(pcie_tfc_npd_av),
        .pcie_tfc_nph_av(pcie_tfc_nph_av),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_reset_n(pipe_reset_n),
        .pipe_rx0_eq_adapt_done(pipe_rx0_eq_adapt_done),
        .pipe_rx0_eq_lffs_sel(pipe_rx0_eq_lffs_sel),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_rx1_eq_lffs_sel(pipe_rx1_eq_lffs_sel),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_valid(pipe_rx1_valid),
        .pipe_rx2_eq_lffs_sel(pipe_rx2_eq_lffs_sel),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_valid(pipe_rx2_valid),
        .pipe_rx3_eq_lffs_sel(pipe_rx3_eq_lffs_sel),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_valid(pipe_rx3_valid),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_swing(pipe_tx_swing),
        .pipe_userclk1_in(pipe_userclk1_in),
        .pipe_userclk2_in(pipe_userclk2_in),
        .reset_n(reset_n),
        .reset_sync0_reg_0(pcie_init_ctrl_7vx_i_n_4),
        .s_axis_cc_tdata(s_axis_cc_tdata),
        .s_axis_cc_tkeep(s_axis_cc_tkeep),
        .s_axis_cc_tlast(s_axis_cc_tlast),
        .s_axis_cc_tready(s_axis_cc_tready),
        .s_axis_cc_tuser(s_axis_cc_tuser),
        .s_axis_cc_tvalid(s_axis_cc_tvalid),
        .s_axis_rq_tdata(s_axis_rq_tdata),
        .s_axis_rq_tkeep(s_axis_rq_tkeep),
        .s_axis_rq_tlast(s_axis_rq_tlast),
        .s_axis_rq_tready(s_axis_rq_tready),
        .s_axis_rq_tuser(s_axis_rq_tuser),
        .s_axis_rq_tvalid(s_axis_rq_tvalid),
        .sys_reset(sys_reset),
        .sys_reset_0(sys_reset_0),
        .user_lnk_up(user_lnk_up),
        .user_reset_int(user_reset_int),
        .user_reset_int_reg(user_reset_int_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_init_ctrl_7vx pcie_init_ctrl_7vx_i
       (.D(pcie_7vx_i_n_1017),
        .Q({pcie_init_ctrl_7vx_i_n_5,cfg_mc_update_request}),
        .cfg_input_update_done(cfg_input_update_done),
        .cfg_mc_update_done(cfg_mc_update_done),
        .mgmt_reset_n(mgmt_reset_n),
        .mgmt_sticky_reset_n(mgmt_sticky_reset_n),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_reset_n(pipe_reset_n),
        .pipe_userclk2_in(pipe_userclk2_in),
        .\reg_phy_rdy_reg[1]_0 (Q),
        .regff_reset_n_o_reg_0(pcie_init_ctrl_7vx_i_n_4),
        .reset_n(reset_n));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pcie_tlp_tph_tbl_7vx pcie_tlp_tph_tbl_7vx_i
       (.ADDRARDADDR({cfg_tph_function_num,cfg_tph_stt_address}),
        .CFGTPHSTTWRITEBYTEVALID(cfg_tph_stt_write_byte_valid),
        .CFGTPHSTTWRITEDATA(cfg_tph_stt_write_data),
        .DOADO(cfg_tph_stt_read_data),
        .cfg_tph_stt_read_data_valid(cfg_tph_stt_read_data_valid),
        .cfg_tph_stt_read_enable(cfg_tph_stt_read_enable),
        .cfg_tph_stt_write_enable(cfg_tph_stt_write_enable),
        .pipe_userclk2_in(pipe_userclk2_in),
        .reg_cfg_tph_stt_read_enable_i_reg_0(pcie_init_ctrl_7vx_i_n_4),
        .reset_n(reset_n));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_drp
   (\fsm_reg[4]_0 ,
    \fsm_reg[2]_0 ,
    DRPADDR,
    DRPDI,
    DRP_DONE,
    RST_DCLK_RESET,
    pipe_dclk_in,
    DRP_X16X20_MODE,
    DRP_START,
    DRP_RDY,
    PIPETXRATE,
    DRP_X16,
    DRP_DO,
    DRP_GTXRESET);
  output \fsm_reg[4]_0 ;
  output \fsm_reg[2]_0 ;
  output [7:0]DRPADDR;
  output [15:0]DRPDI;
  output DRP_DONE;
  input RST_DCLK_RESET;
  input pipe_dclk_in;
  input DRP_X16X20_MODE;
  input DRP_START;
  input DRP_RDY;
  input [1:0]PIPETXRATE;
  input DRP_X16;
  input [15:0]DRP_DO;
  input DRP_GTXRESET;

  wire [7:0]DRPADDR;
  wire [15:0]DRPDI;
  wire [15:0]DRP_DO;
  wire DRP_DONE;
  wire DRP_GTXRESET;
  wire DRP_RDY;
  wire DRP_START;
  wire DRP_X16;
  wire DRP_X16X20_MODE;
  wire [1:0]PIPETXRATE;
  wire RST_DCLK_RESET;
  wire [5:0]addr_reg;
  wire \addr_reg[6]_i_1_n_0 ;
  wire \addr_reg[7]_i_1_n_0 ;
  wire [15:0]di_reg;
  wire \di_reg[0]_i_2_n_0 ;
  wire \di_reg[11]_i_2_n_0 ;
  wire \di_reg[11]_i_3_n_0 ;
  wire \di_reg[11]_i_4_n_0 ;
  wire \di_reg[11]_i_5_n_0 ;
  wire \di_reg[11]_i_6_n_0 ;
  wire \di_reg[12]_i_2_n_0 ;
  wire \di_reg[12]_i_3_n_0 ;
  wire \di_reg[12]_i_4_n_0 ;
  wire \di_reg[13]_i_2_n_0 ;
  wire \di_reg[13]_i_3_n_0 ;
  wire \di_reg[13]_i_4_n_0 ;
  wire \di_reg[13]_i_5_n_0 ;
  wire \di_reg[13]_i_6_n_0 ;
  wire \di_reg[14]_i_2_n_0 ;
  wire \di_reg[14]_i_3_n_0 ;
  wire \di_reg[14]_i_4_n_0 ;
  wire \di_reg[14]_i_5_n_0 ;
  wire \di_reg[14]_i_6_n_0 ;
  wire \di_reg[1]_i_2_n_0 ;
  wire \di_reg[1]_i_3_n_0 ;
  wire \di_reg[1]_i_4_n_0 ;
  wire \di_reg[1]_i_5_n_0 ;
  wire \di_reg[2]_i_2_n_0 ;
  wire \di_reg[2]_i_3_n_0 ;
  wire \di_reg[2]_i_4_n_0 ;
  wire \di_reg[4]_i_2_n_0 ;
  wire \di_reg[4]_i_3_n_0 ;
  wire \di_reg[4]_i_4_n_0 ;
  wire \di_reg[5]_i_2_n_0 ;
  wire \di_reg[5]_i_3_n_0 ;
  wire \di_reg[6]_i_2_n_0 ;
  wire \di_reg[6]_i_3_n_0 ;
  wire \di_reg[6]_i_4_n_0 ;
  wire \di_reg[9]_i_2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done;
  wire done_i_2_n_0;
  wire [7:0]drp_addr_0;
  wire [15:0]drp_di_0;
  wire \fsm[0]_i_2__0_n_0 ;
  wire \fsm[1]_i_2__4_n_0 ;
  wire \fsm[6]_i_2_n_0 ;
  wire \fsm[6]_i_3_n_0 ;
  wire \fsm[6]_i_4_n_0 ;
  wire \fsm_reg[2]_0 ;
  wire \fsm_reg[4]_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire \fsm_reg_n_0_[5] ;
  wire \fsm_reg_n_0_[6] ;
  wire \gth_channel.gthe2_channel_i_i_47_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg2;
  wire index;
  wire \index[0]_i_1_n_0 ;
  wire \index[1]_i_1_n_0 ;
  wire \index[2]_i_1_n_0 ;
  wire \index[3]_i_1_n_0 ;
  wire \index[4]_i_2_n_0 ;
  wire \index[4]_i_3_n_0 ;
  wire \index[4]_i_4_n_0 ;
  wire \index_reg_n_0_[0] ;
  wire \index_reg_n_0_[1] ;
  wire \index_reg_n_0_[2] ;
  wire \index_reg_n_0_[3] ;
  wire \index_reg_n_0_[4] ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1__0_n_0 ;
  wire \load_cnt[0]_i_2_n_0 ;
  wire [6:0]p_0_in__0;
  wire pipe_dclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg2;

  LUT6 #(
    .INIT(64'h050F50555F5A0554)) 
    \addr_reg[0]_i_1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(x16x20_mode_reg2),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(addr_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h00B00C0C)) 
    \addr_reg[1]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[3] ),
        .O(addr_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h003034C0)) 
    \addr_reg[2]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .O(addr_reg[2]));
  LUT6 #(
    .INIT(64'h07FD079C07FD079D)) 
    \addr_reg[3]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(x16x20_mode_reg2),
        .O(addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000EEBBFF10)) 
    \addr_reg[4]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(x16x20_mode_reg2),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(addr_reg[4]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h001A0F0A)) 
    \addr_reg[5]_i_1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(addr_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h01040504)) 
    \addr_reg[6]_i_1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[0] ),
        .O(\addr_reg[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F0A05F000F000FB)) 
    \addr_reg[7]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(x16x20_mode_reg2),
        .I2(\index_reg_n_0_[4] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\addr_reg[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[0]),
        .Q(drp_addr_0[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[1]),
        .Q(drp_addr_0[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[2]),
        .Q(drp_addr_0[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[3]),
        .Q(drp_addr_0[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[4]),
        .Q(drp_addr_0[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[5]),
        .Q(drp_addr_0[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[6]_i_1_n_0 ),
        .Q(drp_addr_0[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[7]_i_1_n_0 ),
        .Q(drp_addr_0[7]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h000000005555CFC0)) 
    \di_reg[0]_i_1 
       (.I0(\di_reg[0]_i_2_n_0 ),
        .I1(do_reg2[0]),
        .I2(\di_reg[2]_i_3_n_0 ),
        .I3(\di_reg[13]_i_3_n_0 ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(di_reg[0]));
  LUT6 #(
    .INIT(64'hF200F2FFF000FFFF)) 
    \di_reg[0]_i_2 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[0]),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h022A2E2202222222)) 
    \di_reg[10]_i_1 
       (.I0(do_reg2[10]),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\index_reg_n_0_[0] ),
        .O(di_reg[10]));
  LUT6 #(
    .INIT(64'h44FF44FF40FFFFFF)) 
    \di_reg[11]_i_2 
       (.I0(\index_reg_n_0_[2] ),
        .I1(do_reg2[11]),
        .I2(\di_reg[11]_i_4_n_0 ),
        .I3(\di_reg[11]_i_5_n_0 ),
        .I4(\di_reg[11]_i_6_n_0 ),
        .I5(\index_reg_n_0_[3] ),
        .O(\di_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000404C404)) 
    \di_reg[11]_i_3 
       (.I0(\di_reg[13]_i_3_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[11]),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[3] ),
        .O(\di_reg[11]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \di_reg[11]_i_4 
       (.I0(x16x20_mode_reg2),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\di_reg[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FFF4FFFFFFF4F)) 
    \di_reg[11]_i_5 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[11]),
        .O(\di_reg[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h77FF77FF77FC77FF)) 
    \di_reg[11]_i_6 
       (.I0(do_reg2[11]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(x16x20_mode_reg2),
        .I5(x16_reg2),
        .O(\di_reg[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF200D000)) 
    \di_reg[12]_i_1 
       (.I0(\di_reg[13]_i_2_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(do_reg2[12]),
        .I3(\di_reg[12]_i_2_n_0 ),
        .I4(\di_reg[13]_i_3_n_0 ),
        .I5(\di_reg[12]_i_3_n_0 ),
        .O(di_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h1555)) 
    \di_reg[12]_i_2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\di_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0808002000000020)) 
    \di_reg[12]_i_3 
       (.I0(\di_reg[12]_i_4_n_0 ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\di_reg[13]_i_3_n_0 ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[12]),
        .O(\di_reg[12]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di_reg[12]_i_4 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .O(\di_reg[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01001110)) 
    \di_reg[13]_i_1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\di_reg[13]_i_2_n_0 ),
        .I3(do_reg2[13]),
        .I4(\di_reg[13]_i_3_n_0 ),
        .I5(\di_reg[13]_i_4_n_0 ),
        .O(di_reg[13]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \di_reg[13]_i_2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .O(\di_reg[13]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[13]_i_3 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(\di_reg[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h33733F7300500050)) 
    \di_reg[13]_i_4 
       (.I0(\di_reg[13]_i_5_n_0 ),
        .I1(\di_reg[13]_i_6_n_0 ),
        .I2(\index_reg_n_0_[4] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\di_reg[5]_i_2_n_0 ),
        .I5(do_reg2[13]),
        .O(\di_reg[13]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBAFF)) 
    \di_reg[13]_i_5 
       (.I0(\index_reg_n_0_[0] ),
        .I1(rate_reg2[0]),
        .I2(rate_reg2[1]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(\di_reg[13]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    \di_reg[13]_i_6 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .O(\di_reg[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFF4F4F4FFF4FFF4)) 
    \di_reg[14]_i_1 
       (.I0(\di_reg[14]_i_2_n_0 ),
        .I1(\di_reg[14]_i_3_n_0 ),
        .I2(\di_reg[14]_i_4_n_0 ),
        .I3(\di_reg[14]_i_5_n_0 ),
        .I4(do_reg2[14]),
        .I5(\index_reg_n_0_[2] ),
        .O(di_reg[14]));
  LUT6 #(
    .INIT(64'h5DD551D55DD55DD5)) 
    \di_reg[14]_i_2 
       (.I0(do_reg2[14]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(rate_reg2[0]),
        .I5(rate_reg2[1]),
        .O(\di_reg[14]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \di_reg[14]_i_3 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[4] ),
        .O(\di_reg[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0050004444505050)) 
    \di_reg[14]_i_4 
       (.I0(\di_reg[14]_i_6_n_0 ),
        .I1(\di_reg[13]_i_3_n_0 ),
        .I2(do_reg2[14]),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(\di_reg[14]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \di_reg[14]_i_5 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .O(\di_reg[14]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[14]_i_6 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .O(\di_reg[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000022AA00B0AAAA)) 
    \di_reg[15]_i_1 
       (.I0(do_reg2[15]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index_reg_n_0_[3] ),
        .O(di_reg[15]));
  LUT6 #(
    .INIT(64'h313D313D313D010D)) 
    \di_reg[1]_i_1 
       (.I0(\di_reg[1]_i_2_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[4] ),
        .I3(\di_reg[1]_i_3_n_0 ),
        .I4(\di_reg[1]_i_4_n_0 ),
        .I5(\di_reg[1]_i_5_n_0 ),
        .O(di_reg[1]));
  LUT6 #(
    .INIT(64'h111155554744DDDD)) 
    \di_reg[1]_i_2 
       (.I0(do_reg2[1]),
        .I1(\index_reg_n_0_[0] ),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFD00FDFFF000FFFF)) 
    \di_reg[1]_i_3 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[1]),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \di_reg[1]_i_4 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \di_reg[1]_i_5 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEFEFEEE)) 
    \di_reg[2]_i_1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\di_reg[2]_i_2_n_0 ),
        .I2(do_reg2[2]),
        .I3(\di_reg[2]_i_3_n_0 ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\di_reg[2]_i_4_n_0 ),
        .O(di_reg[2]));
  LUT5 #(
    .INIT(32'h00000400)) 
    \di_reg[2]_i_2 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .I4(\index_reg_n_0_[0] ),
        .O(\di_reg[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hEB)) 
    \di_reg[2]_i_3 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\di_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAEEEECAAACEEE)) 
    \di_reg[2]_i_4 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[2]),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h003A08AA002ACFAA)) 
    \di_reg[3]_i_1 
       (.I0(do_reg2[3]),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[2] ),
        .O(di_reg[3]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hFFFF0407)) 
    \di_reg[4]_i_1 
       (.I0(\di_reg[4]_i_2_n_0 ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\di_reg[4]_i_3_n_0 ),
        .I4(\di_reg[4]_i_4_n_0 ),
        .O(di_reg[4]));
  LUT6 #(
    .INIT(64'hF00FFFB0F0FFFFB0)) 
    \di_reg[4]_i_2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7455745555555547)) 
    \di_reg[4]_i_3 
       (.I0(do_reg2[4]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\di_reg[13]_i_3_n_0 ),
        .I3(\index_reg_n_0_[1] ),
        .I4(x16x20_mode_reg2),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0040004000404040)) 
    \di_reg[4]_i_4 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(do_reg2[4]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000040400FF4444)) 
    \di_reg[5]_i_1 
       (.I0(\di_reg[6]_i_3_n_0 ),
        .I1(do_reg2[5]),
        .I2(\di_reg[5]_i_2_n_0 ),
        .I3(\di_reg[5]_i_3_n_0 ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index_reg_n_0_[3] ),
        .O(di_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \di_reg[5]_i_2 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .O(\di_reg[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0F4400FFFFFF)) 
    \di_reg[5]_i_3 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(do_reg2[5]),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h11110F0011110000)) 
    \di_reg[6]_i_1 
       (.I0(\di_reg[6]_i_2_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\di_reg[6]_i_3_n_0 ),
        .I3(do_reg2[6]),
        .I4(\index_reg_n_0_[4] ),
        .I5(\di_reg[6]_i_4_n_0 ),
        .O(di_reg[6]));
  LUT6 #(
    .INIT(64'hFFFF00FF55FFF3FF)) 
    \di_reg[6]_i_2 
       (.I0(do_reg2[6]),
        .I1(rate_reg2[1]),
        .I2(rate_reg2[0]),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\index_reg_n_0_[1] ),
        .O(\di_reg[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \di_reg[6]_i_3 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(x16x20_mode_reg2),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[3] ),
        .O(\di_reg[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h77BF)) 
    \di_reg[6]_i_4 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .O(\di_reg[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00283FFF00200100)) 
    \di_reg[7]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(do_reg2[7]),
        .O(di_reg[7]));
  LUT6 #(
    .INIT(64'h00283FFF00200000)) 
    \di_reg[8]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(do_reg2[8]),
        .O(di_reg[8]));
  LUT6 #(
    .INIT(64'h0737373704040404)) 
    \di_reg[9]_i_1 
       (.I0(\di_reg[9]_i_2_n_0 ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(do_reg2[9]),
        .O(di_reg[9]));
  LUT6 #(
    .INIT(64'hF002FFFFF0F2FFFF)) 
    \di_reg[9]_i_2 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[9]),
        .O(\di_reg[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[0]),
        .Q(drp_di_0[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[10]),
        .Q(drp_di_0[10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[11]),
        .Q(drp_di_0[11]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[11]_i_1 
       (.I0(\di_reg[11]_i_2_n_0 ),
        .I1(\di_reg[11]_i_3_n_0 ),
        .O(di_reg[11]),
        .S(\index_reg_n_0_[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[12]),
        .Q(drp_di_0[12]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[13]),
        .Q(drp_di_0[13]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[14]),
        .Q(drp_di_0[14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[15]),
        .Q(drp_di_0[15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[1]),
        .Q(drp_di_0[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[2]),
        .Q(drp_di_0[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[3]),
        .Q(drp_di_0[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[4]),
        .Q(drp_di_0[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[5]),
        .Q(drp_di_0[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[6]),
        .Q(drp_di_0[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[7]),
        .Q(drp_di_0[7]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[8]),
        .Q(drp_di_0[8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[9]),
        .Q(drp_di_0[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h0004)) 
    done_i_1__0
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(start_reg2),
        .I3(done_i_2_n_0),
        .O(done));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    done_i_2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(done_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done),
        .Q(DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT5 #(
    .INIT(32'h8F8FFF8F)) 
    \fsm[0]_i_1__2 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm[0]_i_2__0_n_0 ),
        .I2(\fsm[6]_i_2_n_0 ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(start_reg2),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'h000000C000000002)) 
    \fsm[0]_i_2__0 
       (.I0(x16x20_mode_reg2),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(\fsm[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAA202020AAAAAAAA)) 
    \fsm[1]_i_1__2 
       (.I0(\fsm[6]_i_2_n_0 ),
        .I1(load_cnt),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(start_reg2),
        .I5(\fsm[1]_i_2__4_n_0 ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fsm[1]_i_2__4 
       (.I0(\fsm[0]_i_2__0_n_0 ),
        .I1(\fsm_reg_n_0_[6] ),
        .O(\fsm[1]_i_2__4_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[2]_i_1__2 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(load_cnt),
        .I2(\fsm[6]_i_2_n_0 ),
        .O(p_0_in__0[2]));
  LUT4 #(
    .INIT(16'h8A88)) 
    \fsm[3]_i_1__1 
       (.I0(\fsm[6]_i_2_n_0 ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(rdy_reg2),
        .I3(\fsm_reg_n_0_[3] ),
        .O(p_0_in__0[3]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[4]_i_1__1 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm[6]_i_2_n_0 ),
        .I2(rdy_reg2),
        .O(p_0_in__0[4]));
  LUT4 #(
    .INIT(16'hAA08)) 
    \fsm[5]_i_1__1 
       (.I0(\fsm[6]_i_2_n_0 ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(rdy_reg2),
        .I3(\fsm_reg_n_0_[4] ),
        .O(p_0_in__0[5]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[6]_i_1__0 
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(\fsm[6]_i_2_n_0 ),
        .I2(rdy_reg2),
        .O(p_0_in__0[6]));
  LUT5 #(
    .INIT(32'h00000116)) 
    \fsm[6]_i_2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[6]_i_3_n_0 ),
        .I4(\fsm[6]_i_4_n_0 ),
        .O(\fsm[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \fsm[6]_i_3 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[6] ),
        .O(\fsm[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \fsm[6]_i_4 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[6] ),
        .O(\fsm[6]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(\fsm_reg_n_0_[5] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(\fsm_reg_n_0_[6] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_10 
       (.I0(drp_di_0[11]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[11]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_11 
       (.I0(drp_di_0[10]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[10]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_12 
       (.I0(drp_di_0[9]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[9]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_13 
       (.I0(drp_di_0[8]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[8]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_14 
       (.I0(drp_di_0[7]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[7]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_15 
       (.I0(drp_di_0[6]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[6]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_16 
       (.I0(drp_di_0[5]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[5]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_17 
       (.I0(drp_di_0[4]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[4]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_18 
       (.I0(drp_di_0[3]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[3]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_19 
       (.I0(drp_di_0[2]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[2]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_20 
       (.I0(drp_di_0[1]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_21 
       (.I0(drp_di_0[0]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00000104)) 
    \gth_channel.gthe2_channel_i_i_3 
       (.I0(\gth_channel.gthe2_channel_i_i_47_n_0 ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_39__1 
       (.I0(drp_addr_0[7]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    \gth_channel.gthe2_channel_i_i_4 
       (.I0(\gth_channel.gthe2_channel_i_i_47_n_0 ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_40__0 
       (.I0(drp_addr_0[6]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_41 
       (.I0(drp_addr_0[5]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[5]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_42 
       (.I0(drp_addr_0[4]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_43 
       (.I0(drp_addr_0[3]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_44 
       (.I0(drp_addr_0[2]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_45 
       (.I0(drp_addr_0[1]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_46 
       (.I0(drp_addr_0[0]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_channel.gthe2_channel_i_i_47 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[6] ),
        .O(\gth_channel.gthe2_channel_i_i_47_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_6__1 
       (.I0(drp_di_0[15]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[15]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_7__0 
       (.I0(drp_di_0[14]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[14]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_8 
       (.I0(drp_di_0[13]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[13]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_9 
       (.I0(drp_di_0[12]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[12]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_GTXRESET),
        .Q(gtxreset_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gtxreset_reg1),
        .Q(gtxreset_reg2),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \index[0]_i_1 
       (.I0(\index[4]_i_4_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .O(\index[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \index[1]_i_1 
       (.I0(\index[4]_i_4_n_0 ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\index[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \index[2]_i_1 
       (.I0(\index[4]_i_4_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\index[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \index[3]_i_1 
       (.I0(\index[4]_i_4_n_0 ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[3] ),
        .O(\index[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \index[4]_i_1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\index[4]_i_3_n_0 ),
        .O(index));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \index[4]_i_2 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index[4]_i_4_n_0 ),
        .O(\index[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
    \index[4]_i_3 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[5] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\index[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \index[4]_i_4 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm[0]_i_2__0_n_0 ),
        .I2(done_i_2_n_0),
        .I3(\fsm_reg_n_0_[0] ),
        .O(\index[4]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[0]_i_1_n_0 ),
        .Q(\index_reg_n_0_[0] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[1]_i_1_n_0 ),
        .Q(\index_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[2]_i_1_n_0 ),
        .Q(\index_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[3]_i_1_n_0 ),
        .Q(\index_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[4]_i_2_n_0 ),
        .Q(\index_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \load_cnt[0]_i_1__0 
       (.I0(\load_cnt[0]_i_2_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[2] ),
        .O(\load_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \load_cnt[0]_i_2 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[6] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(\load_cnt[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__0_n_0 ),
        .Q(load_cnt),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_RDY),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_X16),
        .Q(x16_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_X16X20_MODE),
        .Q(x16x20_mode_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16x20_mode_reg1),
        .Q(x16x20_mode_reg2),
        .R(RST_DCLK_RESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_drp" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_drp_1
   (\fsm_reg[4]_0 ,
    \fsm_reg[2]_0 ,
    DRPDI,
    DRPADDR,
    DRP_DONE,
    RST_DCLK_RESET,
    pipe_dclk_in,
    DRP_X16X20_MODE,
    DRP_START,
    DRP_RDY,
    PIPETXRATE,
    DRP_X16,
    DRP_DO,
    DRP_GTXRESET);
  output \fsm_reg[4]_0 ;
  output \fsm_reg[2]_0 ;
  output [15:0]DRPDI;
  output [7:0]DRPADDR;
  output DRP_DONE;
  input RST_DCLK_RESET;
  input pipe_dclk_in;
  input DRP_X16X20_MODE;
  input DRP_START;
  input DRP_RDY;
  input [1:0]PIPETXRATE;
  input DRP_X16;
  input [15:0]DRP_DO;
  input DRP_GTXRESET;

  wire [7:0]DRPADDR;
  wire [15:0]DRPDI;
  wire [15:0]DRP_DO;
  wire DRP_DONE;
  wire DRP_GTXRESET;
  wire DRP_RDY;
  wire DRP_START;
  wire DRP_X16;
  wire DRP_X16X20_MODE;
  wire [1:0]PIPETXRATE;
  wire RST_DCLK_RESET;
  wire [5:0]addr_reg;
  wire \addr_reg[6]_i_1__0_n_0 ;
  wire \addr_reg[7]_i_1__0_n_0 ;
  wire [15:0]di_reg;
  wire \di_reg[0]_i_2__0_n_0 ;
  wire \di_reg[11]_i_2__0_n_0 ;
  wire \di_reg[11]_i_3__0_n_0 ;
  wire \di_reg[11]_i_4__0_n_0 ;
  wire \di_reg[11]_i_5__0_n_0 ;
  wire \di_reg[11]_i_6__0_n_0 ;
  wire \di_reg[12]_i_2__0_n_0 ;
  wire \di_reg[12]_i_3__0_n_0 ;
  wire \di_reg[12]_i_4__0_n_0 ;
  wire \di_reg[13]_i_2__0_n_0 ;
  wire \di_reg[13]_i_3__0_n_0 ;
  wire \di_reg[13]_i_4__0_n_0 ;
  wire \di_reg[13]_i_5__0_n_0 ;
  wire \di_reg[13]_i_6__0_n_0 ;
  wire \di_reg[14]_i_2__0_n_0 ;
  wire \di_reg[14]_i_3__0_n_0 ;
  wire \di_reg[14]_i_4__0_n_0 ;
  wire \di_reg[14]_i_5__0_n_0 ;
  wire \di_reg[14]_i_6__0_n_0 ;
  wire \di_reg[1]_i_2__0_n_0 ;
  wire \di_reg[1]_i_3__0_n_0 ;
  wire \di_reg[1]_i_4__0_n_0 ;
  wire \di_reg[1]_i_5__0_n_0 ;
  wire \di_reg[2]_i_2__0_n_0 ;
  wire \di_reg[2]_i_3__0_n_0 ;
  wire \di_reg[2]_i_4__0_n_0 ;
  wire \di_reg[4]_i_2__0_n_0 ;
  wire \di_reg[4]_i_3__0_n_0 ;
  wire \di_reg[4]_i_4__0_n_0 ;
  wire \di_reg[5]_i_2__0_n_0 ;
  wire \di_reg[5]_i_3__0_n_0 ;
  wire \di_reg[6]_i_2__0_n_0 ;
  wire \di_reg[6]_i_3__0_n_0 ;
  wire \di_reg[6]_i_4__0_n_0 ;
  wire \di_reg[9]_i_2__0_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done;
  wire done_i_2__0_n_0;
  wire [7:0]drp_addr_9;
  wire [15:0]drp_di_16;
  wire \fsm[0]_i_2__2_n_0 ;
  wire \fsm[1]_i_2__5_n_0 ;
  wire \fsm[6]_i_2__0_n_0 ;
  wire \fsm[6]_i_3__0_n_0 ;
  wire \fsm[6]_i_4__0_n_0 ;
  wire \fsm_reg[2]_0 ;
  wire \fsm_reg[4]_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire \fsm_reg_n_0_[5] ;
  wire \fsm_reg_n_0_[6] ;
  wire \gth_channel.gthe2_channel_i_i_48_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg2;
  wire index;
  wire \index[0]_i_1__0_n_0 ;
  wire \index[1]_i_1__0_n_0 ;
  wire \index[2]_i_1__0_n_0 ;
  wire \index[3]_i_1__0_n_0 ;
  wire \index[4]_i_2__0_n_0 ;
  wire \index[4]_i_3__0_n_0 ;
  wire \index[4]_i_4__0_n_0 ;
  wire \index_reg_n_0_[0] ;
  wire \index_reg_n_0_[1] ;
  wire \index_reg_n_0_[2] ;
  wire \index_reg_n_0_[3] ;
  wire \index_reg_n_0_[4] ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1__1_n_0 ;
  wire \load_cnt[0]_i_2__0_n_0 ;
  wire [6:0]p_0_in__0;
  wire pipe_dclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg2;

  LUT6 #(
    .INIT(64'h050F50555F5A0554)) 
    \addr_reg[0]_i_1__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(x16x20_mode_reg2),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(addr_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h00B00C0C)) 
    \addr_reg[1]_i_1__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[3] ),
        .O(addr_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h003034C0)) 
    \addr_reg[2]_i_1__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .O(addr_reg[2]));
  LUT6 #(
    .INIT(64'h07FD079C07FD079D)) 
    \addr_reg[3]_i_1__0 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(x16x20_mode_reg2),
        .O(addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000EEBBFF10)) 
    \addr_reg[4]_i_1__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(x16x20_mode_reg2),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(addr_reg[4]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h001A0F0A)) 
    \addr_reg[5]_i_1__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(addr_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'h01040504)) 
    \addr_reg[6]_i_1__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[0] ),
        .O(\addr_reg[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0F0A05F000F000FB)) 
    \addr_reg[7]_i_1__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(x16x20_mode_reg2),
        .I2(\index_reg_n_0_[4] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\addr_reg[7]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[0]),
        .Q(drp_addr_9[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[1]),
        .Q(drp_addr_9[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[2]),
        .Q(drp_addr_9[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[3]),
        .Q(drp_addr_9[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[4]),
        .Q(drp_addr_9[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[5]),
        .Q(drp_addr_9[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[6]_i_1__0_n_0 ),
        .Q(drp_addr_9[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[7]_i_1__0_n_0 ),
        .Q(drp_addr_9[7]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h000000005555CFC0)) 
    \di_reg[0]_i_1__0 
       (.I0(\di_reg[0]_i_2__0_n_0 ),
        .I1(do_reg2[0]),
        .I2(\di_reg[2]_i_3__0_n_0 ),
        .I3(\di_reg[13]_i_3__0_n_0 ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(di_reg[0]));
  LUT6 #(
    .INIT(64'hF200F2FFF000FFFF)) 
    \di_reg[0]_i_2__0 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[0]),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h022A2E2202222222)) 
    \di_reg[10]_i_1__0 
       (.I0(do_reg2[10]),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\index_reg_n_0_[0] ),
        .O(di_reg[10]));
  LUT6 #(
    .INIT(64'h44FF44FF40FFFFFF)) 
    \di_reg[11]_i_2__0 
       (.I0(\index_reg_n_0_[2] ),
        .I1(do_reg2[11]),
        .I2(\di_reg[11]_i_4__0_n_0 ),
        .I3(\di_reg[11]_i_5__0_n_0 ),
        .I4(\di_reg[11]_i_6__0_n_0 ),
        .I5(\index_reg_n_0_[3] ),
        .O(\di_reg[11]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000000404C404)) 
    \di_reg[11]_i_3__0 
       (.I0(\di_reg[13]_i_3__0_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[11]),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[3] ),
        .O(\di_reg[11]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \di_reg[11]_i_4__0 
       (.I0(x16x20_mode_reg2),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\di_reg[11]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FFF4FFFFFFF4F)) 
    \di_reg[11]_i_5__0 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[11]),
        .O(\di_reg[11]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h77FF77FF77FC77FF)) 
    \di_reg[11]_i_6__0 
       (.I0(do_reg2[11]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(x16x20_mode_reg2),
        .I5(x16_reg2),
        .O(\di_reg[11]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF200D000)) 
    \di_reg[12]_i_1__0 
       (.I0(\di_reg[13]_i_2__0_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(do_reg2[12]),
        .I3(\di_reg[12]_i_2__0_n_0 ),
        .I4(\di_reg[13]_i_3__0_n_0 ),
        .I5(\di_reg[12]_i_3__0_n_0 ),
        .O(di_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h1555)) 
    \di_reg[12]_i_2__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\di_reg[12]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0808002000000020)) 
    \di_reg[12]_i_3__0 
       (.I0(\di_reg[12]_i_4__0_n_0 ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\di_reg[13]_i_3__0_n_0 ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[12]),
        .O(\di_reg[12]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di_reg[12]_i_4__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .O(\di_reg[12]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01001110)) 
    \di_reg[13]_i_1__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\di_reg[13]_i_2__0_n_0 ),
        .I3(do_reg2[13]),
        .I4(\di_reg[13]_i_3__0_n_0 ),
        .I5(\di_reg[13]_i_4__0_n_0 ),
        .O(di_reg[13]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \di_reg[13]_i_2__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .O(\di_reg[13]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[13]_i_3__0 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(\di_reg[13]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h33733F7300500050)) 
    \di_reg[13]_i_4__0 
       (.I0(\di_reg[13]_i_5__0_n_0 ),
        .I1(\di_reg[13]_i_6__0_n_0 ),
        .I2(\index_reg_n_0_[4] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\di_reg[5]_i_2__0_n_0 ),
        .I5(do_reg2[13]),
        .O(\di_reg[13]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBAFF)) 
    \di_reg[13]_i_5__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(rate_reg2[0]),
        .I2(rate_reg2[1]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(\di_reg[13]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    \di_reg[13]_i_6__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .O(\di_reg[13]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFF4F4F4FFF4FFF4)) 
    \di_reg[14]_i_1__0 
       (.I0(\di_reg[14]_i_2__0_n_0 ),
        .I1(\di_reg[14]_i_3__0_n_0 ),
        .I2(\di_reg[14]_i_4__0_n_0 ),
        .I3(\di_reg[14]_i_5__0_n_0 ),
        .I4(do_reg2[14]),
        .I5(\index_reg_n_0_[2] ),
        .O(di_reg[14]));
  LUT6 #(
    .INIT(64'h5DD551D55DD55DD5)) 
    \di_reg[14]_i_2__0 
       (.I0(do_reg2[14]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(rate_reg2[0]),
        .I5(rate_reg2[1]),
        .O(\di_reg[14]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \di_reg[14]_i_3__0 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[4] ),
        .O(\di_reg[14]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0050004444505050)) 
    \di_reg[14]_i_4__0 
       (.I0(\di_reg[14]_i_6__0_n_0 ),
        .I1(\di_reg[13]_i_3__0_n_0 ),
        .I2(do_reg2[14]),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(\di_reg[14]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \di_reg[14]_i_5__0 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .O(\di_reg[14]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[14]_i_6__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .O(\di_reg[14]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h000022AA00B0AAAA)) 
    \di_reg[15]_i_1__0 
       (.I0(do_reg2[15]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index_reg_n_0_[3] ),
        .O(di_reg[15]));
  LUT6 #(
    .INIT(64'h313D313D313D010D)) 
    \di_reg[1]_i_1__0 
       (.I0(\di_reg[1]_i_2__0_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[4] ),
        .I3(\di_reg[1]_i_3__0_n_0 ),
        .I4(\di_reg[1]_i_4__0_n_0 ),
        .I5(\di_reg[1]_i_5__0_n_0 ),
        .O(di_reg[1]));
  LUT6 #(
    .INIT(64'h111155554744DDDD)) 
    \di_reg[1]_i_2__0 
       (.I0(do_reg2[1]),
        .I1(\index_reg_n_0_[0] ),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFD00FDFFF000FFFF)) 
    \di_reg[1]_i_3__0 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[1]),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[1]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \di_reg[1]_i_4__0 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \di_reg[1]_i_5__0 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEFEFEEE)) 
    \di_reg[2]_i_1__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\di_reg[2]_i_2__0_n_0 ),
        .I2(do_reg2[2]),
        .I3(\di_reg[2]_i_3__0_n_0 ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\di_reg[2]_i_4__0_n_0 ),
        .O(di_reg[2]));
  LUT5 #(
    .INIT(32'h00000400)) 
    \di_reg[2]_i_2__0 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .I4(\index_reg_n_0_[0] ),
        .O(\di_reg[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hEB)) 
    \di_reg[2]_i_3__0 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\di_reg[2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAEEEECAAACEEE)) 
    \di_reg[2]_i_4__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[2]),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[2]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h003A08AA002ACFAA)) 
    \di_reg[3]_i_1__0 
       (.I0(do_reg2[3]),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[2] ),
        .O(di_reg[3]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'hFFFF0407)) 
    \di_reg[4]_i_1__0 
       (.I0(\di_reg[4]_i_2__0_n_0 ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\di_reg[4]_i_3__0_n_0 ),
        .I4(\di_reg[4]_i_4__0_n_0 ),
        .O(di_reg[4]));
  LUT6 #(
    .INIT(64'hF00FFFB0F0FFFFB0)) 
    \di_reg[4]_i_2__0 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h7455745555555547)) 
    \di_reg[4]_i_3__0 
       (.I0(do_reg2[4]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\di_reg[13]_i_3__0_n_0 ),
        .I3(\index_reg_n_0_[1] ),
        .I4(x16x20_mode_reg2),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0040004000404040)) 
    \di_reg[4]_i_4__0 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(do_reg2[4]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[4]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000040400FF4444)) 
    \di_reg[5]_i_1__0 
       (.I0(\di_reg[6]_i_3__0_n_0 ),
        .I1(do_reg2[5]),
        .I2(\di_reg[5]_i_2__0_n_0 ),
        .I3(\di_reg[5]_i_3__0_n_0 ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index_reg_n_0_[3] ),
        .O(di_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \di_reg[5]_i_2__0 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .O(\di_reg[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0F4400FFFFFF)) 
    \di_reg[5]_i_3__0 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(do_reg2[5]),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[5]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h11110F0011110000)) 
    \di_reg[6]_i_1__0 
       (.I0(\di_reg[6]_i_2__0_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\di_reg[6]_i_3__0_n_0 ),
        .I3(do_reg2[6]),
        .I4(\index_reg_n_0_[4] ),
        .I5(\di_reg[6]_i_4__0_n_0 ),
        .O(di_reg[6]));
  LUT6 #(
    .INIT(64'hFFFF00FF55FFF3FF)) 
    \di_reg[6]_i_2__0 
       (.I0(do_reg2[6]),
        .I1(rate_reg2[1]),
        .I2(rate_reg2[0]),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\index_reg_n_0_[1] ),
        .O(\di_reg[6]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \di_reg[6]_i_3__0 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(x16x20_mode_reg2),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[3] ),
        .O(\di_reg[6]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h77BF)) 
    \di_reg[6]_i_4__0 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .O(\di_reg[6]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h00283FFF00200100)) 
    \di_reg[7]_i_1__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(do_reg2[7]),
        .O(di_reg[7]));
  LUT6 #(
    .INIT(64'h00283FFF00200000)) 
    \di_reg[8]_i_1__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(do_reg2[8]),
        .O(di_reg[8]));
  LUT6 #(
    .INIT(64'h0737373704040404)) 
    \di_reg[9]_i_1__0 
       (.I0(\di_reg[9]_i_2__0_n_0 ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(do_reg2[9]),
        .O(di_reg[9]));
  LUT6 #(
    .INIT(64'hF002FFFFF0F2FFFF)) 
    \di_reg[9]_i_2__0 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[9]),
        .O(\di_reg[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[0]),
        .Q(drp_di_16[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[10]),
        .Q(drp_di_16[10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[11]),
        .Q(drp_di_16[11]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[11]_i_1__0 
       (.I0(\di_reg[11]_i_2__0_n_0 ),
        .I1(\di_reg[11]_i_3__0_n_0 ),
        .O(di_reg[11]),
        .S(\index_reg_n_0_[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[12]),
        .Q(drp_di_16[12]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[13]),
        .Q(drp_di_16[13]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[14]),
        .Q(drp_di_16[14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[15]),
        .Q(drp_di_16[15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[1]),
        .Q(drp_di_16[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[2]),
        .Q(drp_di_16[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[3]),
        .Q(drp_di_16[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[4]),
        .Q(drp_di_16[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[5]),
        .Q(drp_di_16[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[6]),
        .Q(drp_di_16[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[7]),
        .Q(drp_di_16[7]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[8]),
        .Q(drp_di_16[8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[9]),
        .Q(drp_di_16[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h0004)) 
    done_i_1__1
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(start_reg2),
        .I3(done_i_2__0_n_0),
        .O(done));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    done_i_2__0
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(done_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done),
        .Q(DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT5 #(
    .INIT(32'h8F8FFF8F)) 
    \fsm[0]_i_1__4 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm[0]_i_2__2_n_0 ),
        .I2(\fsm[6]_i_2__0_n_0 ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(start_reg2),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'h000000C000000002)) 
    \fsm[0]_i_2__2 
       (.I0(x16x20_mode_reg2),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(\fsm[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hAA202020AAAAAAAA)) 
    \fsm[1]_i_1__4 
       (.I0(\fsm[6]_i_2__0_n_0 ),
        .I1(load_cnt),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(start_reg2),
        .I5(\fsm[1]_i_2__5_n_0 ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fsm[1]_i_2__5 
       (.I0(\fsm[0]_i_2__2_n_0 ),
        .I1(\fsm_reg_n_0_[6] ),
        .O(\fsm[1]_i_2__5_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[2]_i_1__4 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(load_cnt),
        .I2(\fsm[6]_i_2__0_n_0 ),
        .O(p_0_in__0[2]));
  LUT4 #(
    .INIT(16'h8A88)) 
    \fsm[3]_i_1__2 
       (.I0(\fsm[6]_i_2__0_n_0 ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(rdy_reg2),
        .I3(\fsm_reg_n_0_[3] ),
        .O(p_0_in__0[3]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[4]_i_1__2 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm[6]_i_2__0_n_0 ),
        .I2(rdy_reg2),
        .O(p_0_in__0[4]));
  LUT4 #(
    .INIT(16'hAA08)) 
    \fsm[5]_i_1__2 
       (.I0(\fsm[6]_i_2__0_n_0 ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(rdy_reg2),
        .I3(\fsm_reg_n_0_[4] ),
        .O(p_0_in__0[5]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[6]_i_1__1 
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(\fsm[6]_i_2__0_n_0 ),
        .I2(rdy_reg2),
        .O(p_0_in__0[6]));
  LUT5 #(
    .INIT(32'h00000116)) 
    \fsm[6]_i_2__0 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[6]_i_3__0_n_0 ),
        .I4(\fsm[6]_i_4__0_n_0 ),
        .O(\fsm[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \fsm[6]_i_3__0 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[6] ),
        .O(\fsm[6]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \fsm[6]_i_4__0 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[6] ),
        .O(\fsm[6]_i_4__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(\fsm_reg_n_0_[5] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(\fsm_reg_n_0_[6] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_10__0 
       (.I0(drp_di_16[12]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[12]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_11__0 
       (.I0(drp_di_16[11]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[11]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_12__0 
       (.I0(drp_di_16[10]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[10]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_13__0 
       (.I0(drp_di_16[9]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[9]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_14__0 
       (.I0(drp_di_16[8]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[8]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_15__0 
       (.I0(drp_di_16[7]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[7]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_16__0 
       (.I0(drp_di_16[6]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[6]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_17__0 
       (.I0(drp_di_16[5]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[5]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_18__0 
       (.I0(drp_di_16[4]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[4]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_19__0 
       (.I0(drp_di_16[3]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[3]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_20__0 
       (.I0(drp_di_16[2]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[2]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_21__0 
       (.I0(drp_di_16[1]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[1]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_22__1 
       (.I0(drp_di_16[0]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h00000104)) 
    \gth_channel.gthe2_channel_i_i_3__0 
       (.I0(\gth_channel.gthe2_channel_i_i_48_n_0 ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_40__1 
       (.I0(drp_addr_9[7]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_41__0 
       (.I0(drp_addr_9[6]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_42__0 
       (.I0(drp_addr_9[5]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[5]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_43__0 
       (.I0(drp_addr_9[4]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_44__0 
       (.I0(drp_addr_9[3]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_45__0 
       (.I0(drp_addr_9[2]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_46__0 
       (.I0(drp_addr_9[1]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_47__1 
       (.I0(drp_addr_9[0]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_channel.gthe2_channel_i_i_48 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[6] ),
        .O(\gth_channel.gthe2_channel_i_i_48_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    \gth_channel.gthe2_channel_i_i_4__0 
       (.I0(\gth_channel.gthe2_channel_i_i_48_n_0 ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_7__1 
       (.I0(drp_di_16[15]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[15]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_8__0 
       (.I0(drp_di_16[14]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[14]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_9__0 
       (.I0(drp_di_16[13]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[13]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_GTXRESET),
        .Q(gtxreset_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gtxreset_reg1),
        .Q(gtxreset_reg2),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \index[0]_i_1__0 
       (.I0(\index[4]_i_4__0_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .O(\index[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \index[1]_i_1__0 
       (.I0(\index[4]_i_4__0_n_0 ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\index[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \index[2]_i_1__0 
       (.I0(\index[4]_i_4__0_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\index[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \index[3]_i_1__0 
       (.I0(\index[4]_i_4__0_n_0 ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[3] ),
        .O(\index[3]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \index[4]_i_1__0 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\index[4]_i_3__0_n_0 ),
        .O(index));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \index[4]_i_2__0 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index[4]_i_4__0_n_0 ),
        .O(\index[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
    \index[4]_i_3__0 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[5] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\index[4]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \index[4]_i_4__0 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm[0]_i_2__2_n_0 ),
        .I2(done_i_2__0_n_0),
        .I3(\fsm_reg_n_0_[0] ),
        .O(\index[4]_i_4__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[0]_i_1__0_n_0 ),
        .Q(\index_reg_n_0_[0] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[1]_i_1__0_n_0 ),
        .Q(\index_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[2]_i_1__0_n_0 ),
        .Q(\index_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[3]_i_1__0_n_0 ),
        .Q(\index_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[4]_i_2__0_n_0 ),
        .Q(\index_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \load_cnt[0]_i_1__1 
       (.I0(\load_cnt[0]_i_2__0_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[2] ),
        .O(\load_cnt[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \load_cnt[0]_i_2__0 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[6] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(\load_cnt[0]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__1_n_0 ),
        .Q(load_cnt),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_RDY),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_X16),
        .Q(x16_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_X16X20_MODE),
        .Q(x16x20_mode_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16x20_mode_reg1),
        .Q(x16x20_mode_reg2),
        .R(RST_DCLK_RESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_drp" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_drp_13
   (\fsm_reg[4]_0 ,
    \fsm_reg[2]_0 ,
    DRPDI,
    DRPADDR,
    DRP_DONE,
    RST_DCLK_RESET,
    pipe_dclk_in,
    DRP_X16X20_MODE,
    DRP_START,
    DRP_RDY,
    PIPETXRATE,
    DRP_X16,
    DRP_DO,
    DRP_GTXRESET);
  output \fsm_reg[4]_0 ;
  output \fsm_reg[2]_0 ;
  output [15:0]DRPDI;
  output [7:0]DRPADDR;
  output DRP_DONE;
  input RST_DCLK_RESET;
  input pipe_dclk_in;
  input DRP_X16X20_MODE;
  input DRP_START;
  input DRP_RDY;
  input [1:0]PIPETXRATE;
  input DRP_X16;
  input [15:0]DRP_DO;
  input DRP_GTXRESET;

  wire [7:0]DRPADDR;
  wire [15:0]DRPDI;
  wire [15:0]DRP_DO;
  wire DRP_DONE;
  wire DRP_GTXRESET;
  wire DRP_RDY;
  wire DRP_START;
  wire DRP_X16;
  wire DRP_X16X20_MODE;
  wire [1:0]PIPETXRATE;
  wire RST_DCLK_RESET;
  wire [5:0]addr_reg;
  wire \addr_reg[6]_i_1__2_n_0 ;
  wire \addr_reg[7]_i_1__2_n_0 ;
  wire [15:0]di_reg;
  wire \di_reg[0]_i_2__2_n_0 ;
  wire \di_reg[11]_i_2__2_n_0 ;
  wire \di_reg[11]_i_3__2_n_0 ;
  wire \di_reg[11]_i_4__2_n_0 ;
  wire \di_reg[11]_i_5__2_n_0 ;
  wire \di_reg[11]_i_6__2_n_0 ;
  wire \di_reg[12]_i_2__2_n_0 ;
  wire \di_reg[12]_i_3__2_n_0 ;
  wire \di_reg[12]_i_4__2_n_0 ;
  wire \di_reg[13]_i_2__2_n_0 ;
  wire \di_reg[13]_i_3__2_n_0 ;
  wire \di_reg[13]_i_4__2_n_0 ;
  wire \di_reg[13]_i_5__2_n_0 ;
  wire \di_reg[13]_i_6__2_n_0 ;
  wire \di_reg[14]_i_2__2_n_0 ;
  wire \di_reg[14]_i_3__2_n_0 ;
  wire \di_reg[14]_i_4__2_n_0 ;
  wire \di_reg[14]_i_5__2_n_0 ;
  wire \di_reg[14]_i_6__2_n_0 ;
  wire \di_reg[1]_i_2__2_n_0 ;
  wire \di_reg[1]_i_3__2_n_0 ;
  wire \di_reg[1]_i_4__2_n_0 ;
  wire \di_reg[1]_i_5__2_n_0 ;
  wire \di_reg[2]_i_2__2_n_0 ;
  wire \di_reg[2]_i_3__2_n_0 ;
  wire \di_reg[2]_i_4__2_n_0 ;
  wire \di_reg[4]_i_2__2_n_0 ;
  wire \di_reg[4]_i_3__2_n_0 ;
  wire \di_reg[4]_i_4__2_n_0 ;
  wire \di_reg[5]_i_2__2_n_0 ;
  wire \di_reg[5]_i_3__2_n_0 ;
  wire \di_reg[6]_i_2__2_n_0 ;
  wire \di_reg[6]_i_3__2_n_0 ;
  wire \di_reg[6]_i_4__2_n_0 ;
  wire \di_reg[9]_i_2__2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done;
  wire done_i_2__2_n_0;
  wire [7:0]drp_addr_27;
  wire [15:0]drp_di_48;
  wire \fsm[0]_i_2__6_n_0 ;
  wire \fsm[1]_i_2__7_n_0 ;
  wire \fsm[6]_i_2__2_n_0 ;
  wire \fsm[6]_i_3__2_n_0 ;
  wire \fsm[6]_i_4__2_n_0 ;
  wire \fsm_reg[2]_0 ;
  wire \fsm_reg[4]_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire \fsm_reg_n_0_[5] ;
  wire \fsm_reg_n_0_[6] ;
  wire \gth_channel.gthe2_channel_i_i_49_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg2;
  wire index;
  wire \index[0]_i_1__2_n_0 ;
  wire \index[1]_i_1__2_n_0 ;
  wire \index[2]_i_1__2_n_0 ;
  wire \index[3]_i_1__2_n_0 ;
  wire \index[4]_i_2__2_n_0 ;
  wire \index[4]_i_3__2_n_0 ;
  wire \index[4]_i_4__2_n_0 ;
  wire \index_reg_n_0_[0] ;
  wire \index_reg_n_0_[1] ;
  wire \index_reg_n_0_[2] ;
  wire \index_reg_n_0_[3] ;
  wire \index_reg_n_0_[4] ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1__3_n_0 ;
  wire \load_cnt[0]_i_2__2_n_0 ;
  wire [6:0]p_0_in__0;
  wire pipe_dclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg2;

  LUT6 #(
    .INIT(64'h050F50555F5A0554)) 
    \addr_reg[0]_i_1__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(x16x20_mode_reg2),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(addr_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT5 #(
    .INIT(32'h00B00C0C)) 
    \addr_reg[1]_i_1__2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[3] ),
        .O(addr_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT5 #(
    .INIT(32'h003034C0)) 
    \addr_reg[2]_i_1__2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .O(addr_reg[2]));
  LUT6 #(
    .INIT(64'h07FD079C07FD079D)) 
    \addr_reg[3]_i_1__2 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(x16x20_mode_reg2),
        .O(addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000EEBBFF10)) 
    \addr_reg[4]_i_1__2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(x16x20_mode_reg2),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(addr_reg[4]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT5 #(
    .INIT(32'h001A0F0A)) 
    \addr_reg[5]_i_1__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(addr_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'h01040504)) 
    \addr_reg[6]_i_1__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[0] ),
        .O(\addr_reg[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0F0A05F000F000FB)) 
    \addr_reg[7]_i_1__2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(x16x20_mode_reg2),
        .I2(\index_reg_n_0_[4] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\addr_reg[7]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[0]),
        .Q(drp_addr_27[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[1]),
        .Q(drp_addr_27[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[2]),
        .Q(drp_addr_27[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[3]),
        .Q(drp_addr_27[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[4]),
        .Q(drp_addr_27[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[5]),
        .Q(drp_addr_27[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[6]_i_1__2_n_0 ),
        .Q(drp_addr_27[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[7]_i_1__2_n_0 ),
        .Q(drp_addr_27[7]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h000000005555CFC0)) 
    \di_reg[0]_i_1__2 
       (.I0(\di_reg[0]_i_2__2_n_0 ),
        .I1(do_reg2[0]),
        .I2(\di_reg[2]_i_3__2_n_0 ),
        .I3(\di_reg[13]_i_3__2_n_0 ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(di_reg[0]));
  LUT6 #(
    .INIT(64'hF200F2FFF000FFFF)) 
    \di_reg[0]_i_2__2 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[0]),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h022A2E2202222222)) 
    \di_reg[10]_i_1__2 
       (.I0(do_reg2[10]),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\index_reg_n_0_[0] ),
        .O(di_reg[10]));
  LUT6 #(
    .INIT(64'h44FF44FF40FFFFFF)) 
    \di_reg[11]_i_2__2 
       (.I0(\index_reg_n_0_[2] ),
        .I1(do_reg2[11]),
        .I2(\di_reg[11]_i_4__2_n_0 ),
        .I3(\di_reg[11]_i_5__2_n_0 ),
        .I4(\di_reg[11]_i_6__2_n_0 ),
        .I5(\index_reg_n_0_[3] ),
        .O(\di_reg[11]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000404C404)) 
    \di_reg[11]_i_3__2 
       (.I0(\di_reg[13]_i_3__2_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[11]),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[3] ),
        .O(\di_reg[11]_i_3__2_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \di_reg[11]_i_4__2 
       (.I0(x16x20_mode_reg2),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\di_reg[11]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FFF4FFFFFFF4F)) 
    \di_reg[11]_i_5__2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[11]),
        .O(\di_reg[11]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h77FF77FF77FC77FF)) 
    \di_reg[11]_i_6__2 
       (.I0(do_reg2[11]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(x16x20_mode_reg2),
        .I5(x16_reg2),
        .O(\di_reg[11]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF200D000)) 
    \di_reg[12]_i_1__2 
       (.I0(\di_reg[13]_i_2__2_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(do_reg2[12]),
        .I3(\di_reg[12]_i_2__2_n_0 ),
        .I4(\di_reg[13]_i_3__2_n_0 ),
        .I5(\di_reg[12]_i_3__2_n_0 ),
        .O(di_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h1555)) 
    \di_reg[12]_i_2__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\di_reg[12]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0808002000000020)) 
    \di_reg[12]_i_3__2 
       (.I0(\di_reg[12]_i_4__2_n_0 ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\di_reg[13]_i_3__2_n_0 ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[12]),
        .O(\di_reg[12]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di_reg[12]_i_4__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .O(\di_reg[12]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01001110)) 
    \di_reg[13]_i_1__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\di_reg[13]_i_2__2_n_0 ),
        .I3(do_reg2[13]),
        .I4(\di_reg[13]_i_3__2_n_0 ),
        .I5(\di_reg[13]_i_4__2_n_0 ),
        .O(di_reg[13]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \di_reg[13]_i_2__2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .O(\di_reg[13]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[13]_i_3__2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(\di_reg[13]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h33733F7300500050)) 
    \di_reg[13]_i_4__2 
       (.I0(\di_reg[13]_i_5__2_n_0 ),
        .I1(\di_reg[13]_i_6__2_n_0 ),
        .I2(\index_reg_n_0_[4] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\di_reg[5]_i_2__2_n_0 ),
        .I5(do_reg2[13]),
        .O(\di_reg[13]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBAFF)) 
    \di_reg[13]_i_5__2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(rate_reg2[0]),
        .I2(rate_reg2[1]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(\di_reg[13]_i_5__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    \di_reg[13]_i_6__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .O(\di_reg[13]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF4F4F4FFF4FFF4)) 
    \di_reg[14]_i_1__2 
       (.I0(\di_reg[14]_i_2__2_n_0 ),
        .I1(\di_reg[14]_i_3__2_n_0 ),
        .I2(\di_reg[14]_i_4__2_n_0 ),
        .I3(\di_reg[14]_i_5__2_n_0 ),
        .I4(do_reg2[14]),
        .I5(\index_reg_n_0_[2] ),
        .O(di_reg[14]));
  LUT6 #(
    .INIT(64'h5DD551D55DD55DD5)) 
    \di_reg[14]_i_2__2 
       (.I0(do_reg2[14]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(rate_reg2[0]),
        .I5(rate_reg2[1]),
        .O(\di_reg[14]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \di_reg[14]_i_3__2 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[4] ),
        .O(\di_reg[14]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h0050004444505050)) 
    \di_reg[14]_i_4__2 
       (.I0(\di_reg[14]_i_6__2_n_0 ),
        .I1(\di_reg[13]_i_3__2_n_0 ),
        .I2(do_reg2[14]),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(\di_reg[14]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \di_reg[14]_i_5__2 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .O(\di_reg[14]_i_5__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[14]_i_6__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .O(\di_reg[14]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'h000022AA00B0AAAA)) 
    \di_reg[15]_i_1__2 
       (.I0(do_reg2[15]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index_reg_n_0_[3] ),
        .O(di_reg[15]));
  LUT6 #(
    .INIT(64'h313D313D313D010D)) 
    \di_reg[1]_i_1__2 
       (.I0(\di_reg[1]_i_2__2_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[4] ),
        .I3(\di_reg[1]_i_3__2_n_0 ),
        .I4(\di_reg[1]_i_4__2_n_0 ),
        .I5(\di_reg[1]_i_5__2_n_0 ),
        .O(di_reg[1]));
  LUT6 #(
    .INIT(64'h111155554744DDDD)) 
    \di_reg[1]_i_2__2 
       (.I0(do_reg2[1]),
        .I1(\index_reg_n_0_[0] ),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFD00FDFFF000FFFF)) 
    \di_reg[1]_i_3__2 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[1]),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[1]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \di_reg[1]_i_4__2 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \di_reg[1]_i_5__2 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEFEFEEE)) 
    \di_reg[2]_i_1__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\di_reg[2]_i_2__2_n_0 ),
        .I2(do_reg2[2]),
        .I3(\di_reg[2]_i_3__2_n_0 ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\di_reg[2]_i_4__2_n_0 ),
        .O(di_reg[2]));
  LUT5 #(
    .INIT(32'h00000400)) 
    \di_reg[2]_i_2__2 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .I4(\index_reg_n_0_[0] ),
        .O(\di_reg[2]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hEB)) 
    \di_reg[2]_i_3__2 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\di_reg[2]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAEEEECAAACEEE)) 
    \di_reg[2]_i_4__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[2]),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[2]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h003A08AA002ACFAA)) 
    \di_reg[3]_i_1__2 
       (.I0(do_reg2[3]),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[2] ),
        .O(di_reg[3]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT5 #(
    .INIT(32'hFFFF0407)) 
    \di_reg[4]_i_1__2 
       (.I0(\di_reg[4]_i_2__2_n_0 ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\di_reg[4]_i_3__2_n_0 ),
        .I4(\di_reg[4]_i_4__2_n_0 ),
        .O(di_reg[4]));
  LUT6 #(
    .INIT(64'hF00FFFB0F0FFFFB0)) 
    \di_reg[4]_i_2__2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h7455745555555547)) 
    \di_reg[4]_i_3__2 
       (.I0(do_reg2[4]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\di_reg[13]_i_3__2_n_0 ),
        .I3(\index_reg_n_0_[1] ),
        .I4(x16x20_mode_reg2),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[4]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h0040004000404040)) 
    \di_reg[4]_i_4__2 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(do_reg2[4]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[4]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000040400FF4444)) 
    \di_reg[5]_i_1__2 
       (.I0(\di_reg[6]_i_3__2_n_0 ),
        .I1(do_reg2[5]),
        .I2(\di_reg[5]_i_2__2_n_0 ),
        .I3(\di_reg[5]_i_3__2_n_0 ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index_reg_n_0_[3] ),
        .O(di_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \di_reg[5]_i_2__2 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .O(\di_reg[5]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0F4400FFFFFF)) 
    \di_reg[5]_i_3__2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(do_reg2[5]),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[5]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h11110F0011110000)) 
    \di_reg[6]_i_1__2 
       (.I0(\di_reg[6]_i_2__2_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\di_reg[6]_i_3__2_n_0 ),
        .I3(do_reg2[6]),
        .I4(\index_reg_n_0_[4] ),
        .I5(\di_reg[6]_i_4__2_n_0 ),
        .O(di_reg[6]));
  LUT6 #(
    .INIT(64'hFFFF00FF55FFF3FF)) 
    \di_reg[6]_i_2__2 
       (.I0(do_reg2[6]),
        .I1(rate_reg2[1]),
        .I2(rate_reg2[0]),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\index_reg_n_0_[1] ),
        .O(\di_reg[6]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \di_reg[6]_i_3__2 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(x16x20_mode_reg2),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[3] ),
        .O(\di_reg[6]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h77BF)) 
    \di_reg[6]_i_4__2 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .O(\di_reg[6]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h00283FFF00200100)) 
    \di_reg[7]_i_1__2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(do_reg2[7]),
        .O(di_reg[7]));
  LUT6 #(
    .INIT(64'h00283FFF00200000)) 
    \di_reg[8]_i_1__2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(do_reg2[8]),
        .O(di_reg[8]));
  LUT6 #(
    .INIT(64'h0737373704040404)) 
    \di_reg[9]_i_1__2 
       (.I0(\di_reg[9]_i_2__2_n_0 ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(do_reg2[9]),
        .O(di_reg[9]));
  LUT6 #(
    .INIT(64'hF002FFFFF0F2FFFF)) 
    \di_reg[9]_i_2__2 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[9]),
        .O(\di_reg[9]_i_2__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[0]),
        .Q(drp_di_48[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[10]),
        .Q(drp_di_48[10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[11]),
        .Q(drp_di_48[11]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[11]_i_1__2 
       (.I0(\di_reg[11]_i_2__2_n_0 ),
        .I1(\di_reg[11]_i_3__2_n_0 ),
        .O(di_reg[11]),
        .S(\index_reg_n_0_[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[12]),
        .Q(drp_di_48[12]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[13]),
        .Q(drp_di_48[13]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[14]),
        .Q(drp_di_48[14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[15]),
        .Q(drp_di_48[15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[1]),
        .Q(drp_di_48[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[2]),
        .Q(drp_di_48[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[3]),
        .Q(drp_di_48[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[4]),
        .Q(drp_di_48[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[5]),
        .Q(drp_di_48[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[6]),
        .Q(drp_di_48[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[7]),
        .Q(drp_di_48[7]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[8]),
        .Q(drp_di_48[8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[9]),
        .Q(drp_di_48[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h0004)) 
    done_i_1__3
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(start_reg2),
        .I3(done_i_2__2_n_0),
        .O(done));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    done_i_2__2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(done_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done),
        .Q(DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT5 #(
    .INIT(32'h8F8FFF8F)) 
    \fsm[0]_i_1__8 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm[0]_i_2__6_n_0 ),
        .I2(\fsm[6]_i_2__2_n_0 ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(start_reg2),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'h000000C000000002)) 
    \fsm[0]_i_2__6 
       (.I0(x16x20_mode_reg2),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(\fsm[0]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'hAA202020AAAAAAAA)) 
    \fsm[1]_i_1__8 
       (.I0(\fsm[6]_i_2__2_n_0 ),
        .I1(load_cnt),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(start_reg2),
        .I5(\fsm[1]_i_2__7_n_0 ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fsm[1]_i_2__7 
       (.I0(\fsm[0]_i_2__6_n_0 ),
        .I1(\fsm_reg_n_0_[6] ),
        .O(\fsm[1]_i_2__7_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[2]_i_1__8 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(load_cnt),
        .I2(\fsm[6]_i_2__2_n_0 ),
        .O(p_0_in__0[2]));
  LUT4 #(
    .INIT(16'h8A88)) 
    \fsm[3]_i_1__4 
       (.I0(\fsm[6]_i_2__2_n_0 ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(rdy_reg2),
        .I3(\fsm_reg_n_0_[3] ),
        .O(p_0_in__0[3]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[4]_i_1__4 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm[6]_i_2__2_n_0 ),
        .I2(rdy_reg2),
        .O(p_0_in__0[4]));
  LUT4 #(
    .INIT(16'hAA08)) 
    \fsm[5]_i_1__4 
       (.I0(\fsm[6]_i_2__2_n_0 ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(rdy_reg2),
        .I3(\fsm_reg_n_0_[4] ),
        .O(p_0_in__0[5]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[6]_i_1__3 
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(\fsm[6]_i_2__2_n_0 ),
        .I2(rdy_reg2),
        .O(p_0_in__0[6]));
  LUT5 #(
    .INIT(32'h00000116)) 
    \fsm[6]_i_2__2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[6]_i_3__2_n_0 ),
        .I4(\fsm[6]_i_4__2_n_0 ),
        .O(\fsm[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \fsm[6]_i_3__2 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[6] ),
        .O(\fsm[6]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \fsm[6]_i_4__2 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[6] ),
        .O(\fsm[6]_i_4__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(\fsm_reg_n_0_[5] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(\fsm_reg_n_0_[6] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_10__2 
       (.I0(drp_di_48[13]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[13]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_11__2 
       (.I0(drp_di_48[12]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[12]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_12__2 
       (.I0(drp_di_48[11]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[11]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_13__2 
       (.I0(drp_di_48[10]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[10]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_14__2 
       (.I0(drp_di_48[9]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[9]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_15__2 
       (.I0(drp_di_48[8]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[8]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_16__2 
       (.I0(drp_di_48[7]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[7]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_17__2 
       (.I0(drp_di_48[6]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[6]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_18__2 
       (.I0(drp_di_48[5]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[5]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_19__2 
       (.I0(drp_di_48[4]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[4]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_20__2 
       (.I0(drp_di_48[3]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[3]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_21__2 
       (.I0(drp_di_48[2]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[2]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_22__2 
       (.I0(drp_di_48[1]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[1]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_23__2 
       (.I0(drp_di_48[0]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h00000104)) 
    \gth_channel.gthe2_channel_i_i_3__2 
       (.I0(\gth_channel.gthe2_channel_i_i_49_n_0 ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_41__2 
       (.I0(drp_addr_27[7]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_42__2 
       (.I0(drp_addr_27[6]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_43__2 
       (.I0(drp_addr_27[5]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[5]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_44__2 
       (.I0(drp_addr_27[4]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_45__2 
       (.I0(drp_addr_27[3]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_46__2 
       (.I0(drp_addr_27[2]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_47__2 
       (.I0(drp_addr_27[1]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_48__0 
       (.I0(drp_addr_27[0]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_channel.gthe2_channel_i_i_49 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[6] ),
        .O(\gth_channel.gthe2_channel_i_i_49_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    \gth_channel.gthe2_channel_i_i_4__2 
       (.I0(\gth_channel.gthe2_channel_i_i_49_n_0 ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_8__2 
       (.I0(drp_di_48[15]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[15]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_9__2 
       (.I0(drp_di_48[14]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[14]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_GTXRESET),
        .Q(gtxreset_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gtxreset_reg1),
        .Q(gtxreset_reg2),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \index[0]_i_1__2 
       (.I0(\index[4]_i_4__2_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .O(\index[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \index[1]_i_1__2 
       (.I0(\index[4]_i_4__2_n_0 ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\index[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \index[2]_i_1__2 
       (.I0(\index[4]_i_4__2_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\index[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \index[3]_i_1__2 
       (.I0(\index[4]_i_4__2_n_0 ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[3] ),
        .O(\index[3]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \index[4]_i_1__2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\index[4]_i_3__2_n_0 ),
        .O(index));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \index[4]_i_2__2 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index[4]_i_4__2_n_0 ),
        .O(\index[4]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
    \index[4]_i_3__2 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[5] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\index[4]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \index[4]_i_4__2 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm[0]_i_2__6_n_0 ),
        .I2(done_i_2__2_n_0),
        .I3(\fsm_reg_n_0_[0] ),
        .O(\index[4]_i_4__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[0]_i_1__2_n_0 ),
        .Q(\index_reg_n_0_[0] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[1]_i_1__2_n_0 ),
        .Q(\index_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[2]_i_1__2_n_0 ),
        .Q(\index_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[3]_i_1__2_n_0 ),
        .Q(\index_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[4]_i_2__2_n_0 ),
        .Q(\index_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \load_cnt[0]_i_1__3 
       (.I0(\load_cnt[0]_i_2__2_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[2] ),
        .O(\load_cnt[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \load_cnt[0]_i_2__2 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[6] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(\load_cnt[0]_i_2__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__3_n_0 ),
        .Q(load_cnt),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_RDY),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_X16),
        .Q(x16_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_X16X20_MODE),
        .Q(x16x20_mode_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16x20_mode_reg1),
        .Q(x16x20_mode_reg2),
        .R(RST_DCLK_RESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_drp" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_drp_7
   (\fsm_reg[4]_0 ,
    \fsm_reg[2]_0 ,
    DRPDI,
    DRPADDR,
    DRP_DONE,
    RST_DCLK_RESET,
    pipe_dclk_in,
    DRP_X16X20_MODE,
    DRP_START,
    DRP_RDY,
    PIPETXRATE,
    DRP_X16,
    DRP_DO,
    DRP_GTXRESET);
  output \fsm_reg[4]_0 ;
  output \fsm_reg[2]_0 ;
  output [15:0]DRPDI;
  output [7:0]DRPADDR;
  output DRP_DONE;
  input RST_DCLK_RESET;
  input pipe_dclk_in;
  input DRP_X16X20_MODE;
  input DRP_START;
  input DRP_RDY;
  input [1:0]PIPETXRATE;
  input DRP_X16;
  input [15:0]DRP_DO;
  input DRP_GTXRESET;

  wire [7:0]DRPADDR;
  wire [15:0]DRPDI;
  wire [15:0]DRP_DO;
  wire DRP_DONE;
  wire DRP_GTXRESET;
  wire DRP_RDY;
  wire DRP_START;
  wire DRP_X16;
  wire DRP_X16X20_MODE;
  wire [1:0]PIPETXRATE;
  wire RST_DCLK_RESET;
  wire [5:0]addr_reg;
  wire \addr_reg[6]_i_1__1_n_0 ;
  wire \addr_reg[7]_i_1__1_n_0 ;
  wire [15:0]di_reg;
  wire \di_reg[0]_i_2__1_n_0 ;
  wire \di_reg[11]_i_2__1_n_0 ;
  wire \di_reg[11]_i_3__1_n_0 ;
  wire \di_reg[11]_i_4__1_n_0 ;
  wire \di_reg[11]_i_5__1_n_0 ;
  wire \di_reg[11]_i_6__1_n_0 ;
  wire \di_reg[12]_i_2__1_n_0 ;
  wire \di_reg[12]_i_3__1_n_0 ;
  wire \di_reg[12]_i_4__1_n_0 ;
  wire \di_reg[13]_i_2__1_n_0 ;
  wire \di_reg[13]_i_3__1_n_0 ;
  wire \di_reg[13]_i_4__1_n_0 ;
  wire \di_reg[13]_i_5__1_n_0 ;
  wire \di_reg[13]_i_6__1_n_0 ;
  wire \di_reg[14]_i_2__1_n_0 ;
  wire \di_reg[14]_i_3__1_n_0 ;
  wire \di_reg[14]_i_4__1_n_0 ;
  wire \di_reg[14]_i_5__1_n_0 ;
  wire \di_reg[14]_i_6__1_n_0 ;
  wire \di_reg[1]_i_2__1_n_0 ;
  wire \di_reg[1]_i_3__1_n_0 ;
  wire \di_reg[1]_i_4__1_n_0 ;
  wire \di_reg[1]_i_5__1_n_0 ;
  wire \di_reg[2]_i_2__1_n_0 ;
  wire \di_reg[2]_i_3__1_n_0 ;
  wire \di_reg[2]_i_4__1_n_0 ;
  wire \di_reg[4]_i_2__1_n_0 ;
  wire \di_reg[4]_i_3__1_n_0 ;
  wire \di_reg[4]_i_4__1_n_0 ;
  wire \di_reg[5]_i_2__1_n_0 ;
  wire \di_reg[5]_i_3__1_n_0 ;
  wire \di_reg[6]_i_2__1_n_0 ;
  wire \di_reg[6]_i_3__1_n_0 ;
  wire \di_reg[6]_i_4__1_n_0 ;
  wire \di_reg[9]_i_2__1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done;
  wire done_i_2__1_n_0;
  wire [7:0]drp_addr_18;
  wire [15:0]drp_di_32;
  wire \fsm[0]_i_2__4_n_0 ;
  wire \fsm[1]_i_2__6_n_0 ;
  wire \fsm[6]_i_2__1_n_0 ;
  wire \fsm[6]_i_3__1_n_0 ;
  wire \fsm[6]_i_4__1_n_0 ;
  wire \fsm_reg[2]_0 ;
  wire \fsm_reg[4]_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire \fsm_reg_n_0_[5] ;
  wire \fsm_reg_n_0_[6] ;
  wire \gth_channel.gthe2_channel_i_i_47__0_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg2;
  wire index;
  wire \index[0]_i_1__1_n_0 ;
  wire \index[1]_i_1__1_n_0 ;
  wire \index[2]_i_1__1_n_0 ;
  wire \index[3]_i_1__1_n_0 ;
  wire \index[4]_i_2__1_n_0 ;
  wire \index[4]_i_3__1_n_0 ;
  wire \index[4]_i_4__1_n_0 ;
  wire \index_reg_n_0_[0] ;
  wire \index_reg_n_0_[1] ;
  wire \index_reg_n_0_[2] ;
  wire \index_reg_n_0_[3] ;
  wire \index_reg_n_0_[4] ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1__2_n_0 ;
  wire \load_cnt[0]_i_2__1_n_0 ;
  wire [6:0]p_0_in__0;
  wire pipe_dclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg2;

  LUT6 #(
    .INIT(64'h050F50555F5A0554)) 
    \addr_reg[0]_i_1__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(x16x20_mode_reg2),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(addr_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h00B00C0C)) 
    \addr_reg[1]_i_1__1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[3] ),
        .O(addr_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'h003034C0)) 
    \addr_reg[2]_i_1__1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .O(addr_reg[2]));
  LUT6 #(
    .INIT(64'h07FD079C07FD079D)) 
    \addr_reg[3]_i_1__1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(x16x20_mode_reg2),
        .O(addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000EEBBFF10)) 
    \addr_reg[4]_i_1__1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(x16x20_mode_reg2),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(addr_reg[4]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'h001A0F0A)) 
    \addr_reg[5]_i_1__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(addr_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h01040504)) 
    \addr_reg[6]_i_1__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[0] ),
        .O(\addr_reg[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0F0A05F000F000FB)) 
    \addr_reg[7]_i_1__1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(x16x20_mode_reg2),
        .I2(\index_reg_n_0_[4] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\addr_reg[7]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[0]),
        .Q(drp_addr_18[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[1]),
        .Q(drp_addr_18[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[2]),
        .Q(drp_addr_18[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[3]),
        .Q(drp_addr_18[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[4]),
        .Q(drp_addr_18[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[5]),
        .Q(drp_addr_18[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[6]_i_1__1_n_0 ),
        .Q(drp_addr_18[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[7]_i_1__1_n_0 ),
        .Q(drp_addr_18[7]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h000000005555CFC0)) 
    \di_reg[0]_i_1__1 
       (.I0(\di_reg[0]_i_2__1_n_0 ),
        .I1(do_reg2[0]),
        .I2(\di_reg[2]_i_3__1_n_0 ),
        .I3(\di_reg[13]_i_3__1_n_0 ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(di_reg[0]));
  LUT6 #(
    .INIT(64'hF200F2FFF000FFFF)) 
    \di_reg[0]_i_2__1 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[0]),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h022A2E2202222222)) 
    \di_reg[10]_i_1__1 
       (.I0(do_reg2[10]),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\index_reg_n_0_[0] ),
        .O(di_reg[10]));
  LUT6 #(
    .INIT(64'h44FF44FF40FFFFFF)) 
    \di_reg[11]_i_2__1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(do_reg2[11]),
        .I2(\di_reg[11]_i_4__1_n_0 ),
        .I3(\di_reg[11]_i_5__1_n_0 ),
        .I4(\di_reg[11]_i_6__1_n_0 ),
        .I5(\index_reg_n_0_[3] ),
        .O(\di_reg[11]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000404C404)) 
    \di_reg[11]_i_3__1 
       (.I0(\di_reg[13]_i_3__1_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[11]),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[3] ),
        .O(\di_reg[11]_i_3__1_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \di_reg[11]_i_4__1 
       (.I0(x16x20_mode_reg2),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\di_reg[11]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FFF4FFFFFFF4F)) 
    \di_reg[11]_i_5__1 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[11]),
        .O(\di_reg[11]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h77FF77FF77FC77FF)) 
    \di_reg[11]_i_6__1 
       (.I0(do_reg2[11]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(x16x20_mode_reg2),
        .I5(x16_reg2),
        .O(\di_reg[11]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF200D000)) 
    \di_reg[12]_i_1__1 
       (.I0(\di_reg[13]_i_2__1_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(do_reg2[12]),
        .I3(\di_reg[12]_i_2__1_n_0 ),
        .I4(\di_reg[13]_i_3__1_n_0 ),
        .I5(\di_reg[12]_i_3__1_n_0 ),
        .O(di_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h1555)) 
    \di_reg[12]_i_2__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\di_reg[12]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0808002000000020)) 
    \di_reg[12]_i_3__1 
       (.I0(\di_reg[12]_i_4__1_n_0 ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\di_reg[13]_i_3__1_n_0 ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[12]),
        .O(\di_reg[12]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di_reg[12]_i_4__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .O(\di_reg[12]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01001110)) 
    \di_reg[13]_i_1__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\di_reg[13]_i_2__1_n_0 ),
        .I3(do_reg2[13]),
        .I4(\di_reg[13]_i_3__1_n_0 ),
        .I5(\di_reg[13]_i_4__1_n_0 ),
        .O(di_reg[13]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \di_reg[13]_i_2__1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .O(\di_reg[13]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[13]_i_3__1 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(\di_reg[13]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h33733F7300500050)) 
    \di_reg[13]_i_4__1 
       (.I0(\di_reg[13]_i_5__1_n_0 ),
        .I1(\di_reg[13]_i_6__1_n_0 ),
        .I2(\index_reg_n_0_[4] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\di_reg[5]_i_2__1_n_0 ),
        .I5(do_reg2[13]),
        .O(\di_reg[13]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBAFF)) 
    \di_reg[13]_i_5__1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(rate_reg2[0]),
        .I2(rate_reg2[1]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(\di_reg[13]_i_5__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    \di_reg[13]_i_6__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .O(\di_reg[13]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF4F4F4FFF4FFF4)) 
    \di_reg[14]_i_1__1 
       (.I0(\di_reg[14]_i_2__1_n_0 ),
        .I1(\di_reg[14]_i_3__1_n_0 ),
        .I2(\di_reg[14]_i_4__1_n_0 ),
        .I3(\di_reg[14]_i_5__1_n_0 ),
        .I4(do_reg2[14]),
        .I5(\index_reg_n_0_[2] ),
        .O(di_reg[14]));
  LUT6 #(
    .INIT(64'h5DD551D55DD55DD5)) 
    \di_reg[14]_i_2__1 
       (.I0(do_reg2[14]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(rate_reg2[0]),
        .I5(rate_reg2[1]),
        .O(\di_reg[14]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \di_reg[14]_i_3__1 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[4] ),
        .O(\di_reg[14]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0050004444505050)) 
    \di_reg[14]_i_4__1 
       (.I0(\di_reg[14]_i_6__1_n_0 ),
        .I1(\di_reg[13]_i_3__1_n_0 ),
        .I2(do_reg2[14]),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(\di_reg[14]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \di_reg[14]_i_5__1 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .O(\di_reg[14]_i_5__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[14]_i_6__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .O(\di_reg[14]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h000022AA00B0AAAA)) 
    \di_reg[15]_i_1__1 
       (.I0(do_reg2[15]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index_reg_n_0_[3] ),
        .O(di_reg[15]));
  LUT6 #(
    .INIT(64'h313D313D313D010D)) 
    \di_reg[1]_i_1__1 
       (.I0(\di_reg[1]_i_2__1_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[4] ),
        .I3(\di_reg[1]_i_3__1_n_0 ),
        .I4(\di_reg[1]_i_4__1_n_0 ),
        .I5(\di_reg[1]_i_5__1_n_0 ),
        .O(di_reg[1]));
  LUT6 #(
    .INIT(64'h111155554744DDDD)) 
    \di_reg[1]_i_2__1 
       (.I0(do_reg2[1]),
        .I1(\index_reg_n_0_[0] ),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFD00FDFFF000FFFF)) 
    \di_reg[1]_i_3__1 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[1]),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[1]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \di_reg[1]_i_4__1 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \di_reg[1]_i_5__1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .O(\di_reg[1]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEFEFEEE)) 
    \di_reg[2]_i_1__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\di_reg[2]_i_2__1_n_0 ),
        .I2(do_reg2[2]),
        .I3(\di_reg[2]_i_3__1_n_0 ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\di_reg[2]_i_4__1_n_0 ),
        .O(di_reg[2]));
  LUT5 #(
    .INIT(32'h00000400)) 
    \di_reg[2]_i_2__1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .I4(\index_reg_n_0_[0] ),
        .O(\di_reg[2]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hEB)) 
    \di_reg[2]_i_3__1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\di_reg[2]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAEEEECAAACEEE)) 
    \di_reg[2]_i_4__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(do_reg2[2]),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[2]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h003A08AA002ACFAA)) 
    \di_reg[3]_i_1__1 
       (.I0(do_reg2[3]),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[4] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[2] ),
        .O(di_reg[3]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hFFFF0407)) 
    \di_reg[4]_i_1__1 
       (.I0(\di_reg[4]_i_2__1_n_0 ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\di_reg[4]_i_3__1_n_0 ),
        .I4(\di_reg[4]_i_4__1_n_0 ),
        .O(di_reg[4]));
  LUT6 #(
    .INIT(64'hF00FFFB0F0FFFFB0)) 
    \di_reg[4]_i_2__1 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h7455745555555547)) 
    \di_reg[4]_i_3__1 
       (.I0(do_reg2[4]),
        .I1(\index_reg_n_0_[2] ),
        .I2(\di_reg[13]_i_3__1_n_0 ),
        .I3(\index_reg_n_0_[1] ),
        .I4(x16x20_mode_reg2),
        .I5(\index_reg_n_0_[0] ),
        .O(\di_reg[4]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0040004000404040)) 
    \di_reg[4]_i_4__1 
       (.I0(\index_reg_n_0_[4] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(do_reg2[4]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[4]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000040400FF4444)) 
    \di_reg[5]_i_1__1 
       (.I0(\di_reg[6]_i_3__1_n_0 ),
        .I1(do_reg2[5]),
        .I2(\di_reg[5]_i_2__1_n_0 ),
        .I3(\di_reg[5]_i_3__1_n_0 ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index_reg_n_0_[3] ),
        .O(di_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \di_reg[5]_i_2__1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .O(\di_reg[5]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0F4400FFFFFF)) 
    \di_reg[5]_i_3__1 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(do_reg2[5]),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\index_reg_n_0_[2] ),
        .O(\di_reg[5]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h11110F0011110000)) 
    \di_reg[6]_i_1__1 
       (.I0(\di_reg[6]_i_2__1_n_0 ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\di_reg[6]_i_3__1_n_0 ),
        .I3(do_reg2[6]),
        .I4(\index_reg_n_0_[4] ),
        .I5(\di_reg[6]_i_4__1_n_0 ),
        .O(di_reg[6]));
  LUT6 #(
    .INIT(64'hFFFF00FF55FFF3FF)) 
    \di_reg[6]_i_2__1 
       (.I0(do_reg2[6]),
        .I1(rate_reg2[1]),
        .I2(rate_reg2[0]),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\index_reg_n_0_[1] ),
        .O(\di_reg[6]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \di_reg[6]_i_3__1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(x16x20_mode_reg2),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[3] ),
        .O(\di_reg[6]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h77BF)) 
    \di_reg[6]_i_4__1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[3] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[1] ),
        .O(\di_reg[6]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h00283FFF00200100)) 
    \di_reg[7]_i_1__1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(do_reg2[7]),
        .O(di_reg[7]));
  LUT6 #(
    .INIT(64'h00283FFF00200000)) 
    \di_reg[8]_i_1__1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[3] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(do_reg2[8]),
        .O(di_reg[8]));
  LUT6 #(
    .INIT(64'h0737373704040404)) 
    \di_reg[9]_i_1__1 
       (.I0(\di_reg[9]_i_2__1_n_0 ),
        .I1(\index_reg_n_0_[4] ),
        .I2(\index_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(do_reg2[9]),
        .O(di_reg[9]));
  LUT6 #(
    .INIT(64'hF002FFFFF0F2FFFF)) 
    \di_reg[9]_i_2__1 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(do_reg2[9]),
        .O(\di_reg[9]_i_2__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[0]),
        .Q(drp_di_32[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[10]),
        .Q(drp_di_32[10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[11]),
        .Q(drp_di_32[11]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[11]_i_1__1 
       (.I0(\di_reg[11]_i_2__1_n_0 ),
        .I1(\di_reg[11]_i_3__1_n_0 ),
        .O(di_reg[11]),
        .S(\index_reg_n_0_[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[12]),
        .Q(drp_di_32[12]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[13]),
        .Q(drp_di_32[13]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[14]),
        .Q(drp_di_32[14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[15]),
        .Q(drp_di_32[15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[1]),
        .Q(drp_di_32[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[2]),
        .Q(drp_di_32[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[3]),
        .Q(drp_di_32[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[4]),
        .Q(drp_di_32[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[5]),
        .Q(drp_di_32[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[6]),
        .Q(drp_di_32[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[7]),
        .Q(drp_di_32[7]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[8]),
        .Q(drp_di_32[8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[9]),
        .Q(drp_di_32[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_DO[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h0004)) 
    done_i_1__2
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(start_reg2),
        .I3(done_i_2__1_n_0),
        .O(done));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    done_i_2__1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(done_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done),
        .Q(DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT5 #(
    .INIT(32'h8F8FFF8F)) 
    \fsm[0]_i_1__6 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm[0]_i_2__4_n_0 ),
        .I2(\fsm[6]_i_2__1_n_0 ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(start_reg2),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'h000000C000000002)) 
    \fsm[0]_i_2__4 
       (.I0(x16x20_mode_reg2),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[3] ),
        .I5(\index_reg_n_0_[4] ),
        .O(\fsm[0]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'hAA202020AAAAAAAA)) 
    \fsm[1]_i_1__6 
       (.I0(\fsm[6]_i_2__1_n_0 ),
        .I1(load_cnt),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(start_reg2),
        .I5(\fsm[1]_i_2__6_n_0 ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fsm[1]_i_2__6 
       (.I0(\fsm[0]_i_2__4_n_0 ),
        .I1(\fsm_reg_n_0_[6] ),
        .O(\fsm[1]_i_2__6_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[2]_i_1__6 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(load_cnt),
        .I2(\fsm[6]_i_2__1_n_0 ),
        .O(p_0_in__0[2]));
  LUT4 #(
    .INIT(16'h8A88)) 
    \fsm[3]_i_1__3 
       (.I0(\fsm[6]_i_2__1_n_0 ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(rdy_reg2),
        .I3(\fsm_reg_n_0_[3] ),
        .O(p_0_in__0[3]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[4]_i_1__3 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm[6]_i_2__1_n_0 ),
        .I2(rdy_reg2),
        .O(p_0_in__0[4]));
  LUT4 #(
    .INIT(16'hAA08)) 
    \fsm[5]_i_1__3 
       (.I0(\fsm[6]_i_2__1_n_0 ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(rdy_reg2),
        .I3(\fsm_reg_n_0_[4] ),
        .O(p_0_in__0[5]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[6]_i_1__2 
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(\fsm[6]_i_2__1_n_0 ),
        .I2(rdy_reg2),
        .O(p_0_in__0[6]));
  LUT5 #(
    .INIT(32'h00000116)) 
    \fsm[6]_i_2__1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[6]_i_3__1_n_0 ),
        .I4(\fsm[6]_i_4__1_n_0 ),
        .O(\fsm[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \fsm[6]_i_3__1 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[6] ),
        .O(\fsm[6]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \fsm[6]_i_4__1 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[6] ),
        .O(\fsm[6]_i_4__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(\fsm_reg_n_0_[5] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:0000100,FSM_RRDY:0001000,FSM_WRITE:0010000,FSM_WRDY:0100000,FSM_DONE:1000000,FSM_LOAD:0000010,FSM_IDLE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(\fsm_reg_n_0_[6] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_10__1 
       (.I0(drp_di_32[11]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[11]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_11__1 
       (.I0(drp_di_32[10]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[10]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_12__1 
       (.I0(drp_di_32[9]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[9]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_13__1 
       (.I0(drp_di_32[8]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[8]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_14__1 
       (.I0(drp_di_32[7]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[7]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_15__1 
       (.I0(drp_di_32[6]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[6]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_16__1 
       (.I0(drp_di_32[5]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[5]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_17__1 
       (.I0(drp_di_32[4]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[4]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_18__1 
       (.I0(drp_di_32[3]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[3]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_19__1 
       (.I0(drp_di_32[2]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[2]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_20__1 
       (.I0(drp_di_32[1]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[1]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_21__1 
       (.I0(drp_di_32[0]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_39__2 
       (.I0(drp_addr_18[7]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h00000104)) 
    \gth_channel.gthe2_channel_i_i_3__1 
       (.I0(\gth_channel.gthe2_channel_i_i_47__0_n_0 ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_40__2 
       (.I0(drp_addr_18[6]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_41__1 
       (.I0(drp_addr_18[5]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[5]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_42__1 
       (.I0(drp_addr_18[4]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_43__1 
       (.I0(drp_addr_18[3]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_44__1 
       (.I0(drp_addr_18[2]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_45__1 
       (.I0(drp_addr_18[1]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_46__1 
       (.I0(drp_addr_18[0]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_channel.gthe2_channel_i_i_47__0 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[6] ),
        .O(\gth_channel.gthe2_channel_i_i_47__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    \gth_channel.gthe2_channel_i_i_4__1 
       (.I0(\gth_channel.gthe2_channel_i_i_47__0_n_0 ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_6__2 
       (.I0(drp_di_32[15]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[15]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_7__2 
       (.I0(drp_di_32[14]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[14]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_8__1 
       (.I0(drp_di_32[13]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[13]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gth_channel.gthe2_channel_i_i_9__1 
       (.I0(drp_di_32[12]),
        .I1(\fsm_reg_n_0_[0] ),
        .O(DRPDI[12]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_GTXRESET),
        .Q(gtxreset_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gtxreset_reg1),
        .Q(gtxreset_reg2),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \index[0]_i_1__1 
       (.I0(\index[4]_i_4__1_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .O(\index[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \index[1]_i_1__1 
       (.I0(\index[4]_i_4__1_n_0 ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\index[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \index[2]_i_1__1 
       (.I0(\index[4]_i_4__1_n_0 ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\index[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \index[3]_i_1__1 
       (.I0(\index[4]_i_4__1_n_0 ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[3] ),
        .O(\index[3]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \index[4]_i_1__1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\index[4]_i_3__1_n_0 ),
        .O(index));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \index[4]_i_2__1 
       (.I0(\index_reg_n_0_[3] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[4] ),
        .I5(\index[4]_i_4__1_n_0 ),
        .O(\index[4]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
    \index[4]_i_3__1 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[5] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\index[4]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \index[4]_i_4__1 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm[0]_i_2__4_n_0 ),
        .I2(done_i_2__1_n_0),
        .I3(\fsm_reg_n_0_[0] ),
        .O(\index[4]_i_4__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[0]_i_1__1_n_0 ),
        .Q(\index_reg_n_0_[0] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[1]_i_1__1_n_0 ),
        .Q(\index_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[2]_i_1__1_n_0 ),
        .Q(\index_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[3]_i_1__1_n_0 ),
        .Q(\index_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(pipe_dclk_in),
        .CE(index),
        .D(\index[4]_i_2__1_n_0 ),
        .Q(\index_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \load_cnt[0]_i_1__2 
       (.I0(\load_cnt[0]_i_2__1_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[2] ),
        .O(\load_cnt[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \load_cnt[0]_i_2__1 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[6] ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(\load_cnt[0]_i_2__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__2_n_0 ),
        .Q(load_cnt),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_RDY),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_X16),
        .Q(x16_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_X16X20_MODE),
        .Q(x16x20_mode_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16x20_mode_reg1),
        .Q(x16x20_mode_reg2),
        .R(RST_DCLK_RESET));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_eq
   (PIPERX0EQLPNEWTXCOEFFORPRESET,
    EQ_TXEQ_DEEMPH_OUT,
    PIPE_TXEQ_DONE,
    PIPE_RXEQ_DONE,
    TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    pipe_rx0_eq_lffs_sel,
    pipe_rx0_eq_adapt_done,
    RST_CPLLRESET,
    pipe_pclk_in,
    PIPE_TXEQ_CONTROL,
    PIPE_TXEQ_DEEMPH,
    PIPE_TXEQ_PRESET,
    gen3_reg1_reg_0,
    PIPE_RXEQ_PRESET,
    PIPE_RXEQ_CONTROL,
    PIPE_RXEQ_TXPRESET,
    PIPE_RXEQ_LFFS);
  output [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  output [15:0]EQ_TXEQ_DEEMPH_OUT;
  output [0:0]PIPE_TXEQ_DONE;
  output [0:0]PIPE_RXEQ_DONE;
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  output pipe_rx0_eq_lffs_sel;
  output pipe_rx0_eq_adapt_done;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input [1:0]PIPE_TXEQ_CONTROL;
  input [5:0]PIPE_TXEQ_DEEMPH;
  input [3:0]PIPE_TXEQ_PRESET;
  input gen3_reg1_reg_0;
  input [2:0]PIPE_RXEQ_PRESET;
  input [1:0]PIPE_RXEQ_CONTROL;
  input [3:0]PIPE_RXEQ_TXPRESET;
  input [5:0]PIPE_RXEQ_LFFS;

  wire [15:0]EQ_TXEQ_DEEMPH_OUT;
  wire \FSM_onehot_fsm_rx[1]_i_1_n_0 ;
  wire \FSM_onehot_fsm_rx[1]_i_2_n_0 ;
  wire \FSM_onehot_fsm_rx[3]_i_1_n_0 ;
  wire \FSM_onehot_fsm_rx[4]_i_1_n_0 ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_tx[1]_i_2_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_2_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_3_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_4_n_0 ;
  wire [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  wire [1:0]PIPE_RXEQ_CONTROL;
  wire [0:0]PIPE_RXEQ_DONE;
  wire [5:0]PIPE_RXEQ_LFFS;
  wire [2:0]PIPE_RXEQ_PRESET;
  wire [3:0]PIPE_RXEQ_TXPRESET;
  wire [1:0]PIPE_TXEQ_CONTROL;
  wire [5:0]PIPE_TXEQ_DEEMPH;
  wire [0:0]PIPE_TXEQ_DONE;
  wire [3:0]PIPE_TXEQ_PRESET;
  wire RST_CPLLRESET;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire [2:0]fsm_tx;
  wire [2:0]fsm_tx__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  wire gen3_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire [17:0]p_0_out;
  wire pipe_pclk_in;
  wire pipe_rx0_eq_adapt_done;
  wire pipe_rx0_eq_lffs_sel;
  wire rxeq_adapt_done_reg_i_2_n_0;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [1:0]rxeq_cnt;
  wire \rxeq_cnt[2]_i_1_n_0 ;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg2;
  wire rxeq_done;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1_n_0 ;
  wire \rxeq_fs_reg_n_0_[0] ;
  wire \rxeq_fs_reg_n_0_[1] ;
  wire \rxeq_fs_reg_n_0_[2] ;
  wire \rxeq_fs_reg_n_0_[3] ;
  wire \rxeq_fs_reg_n_0_[4] ;
  wire \rxeq_fs_reg_n_0_[5] ;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1_n_0 ;
  wire \rxeq_lf_reg_n_0_[0] ;
  wire \rxeq_lf_reg_n_0_[1] ;
  wire \rxeq_lf_reg_n_0_[2] ;
  wire \rxeq_lf_reg_n_0_[3] ;
  wire \rxeq_lf_reg_n_0_[4] ;
  wire \rxeq_lf_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_lffs_sel_i_2_n_0;
  wire rxeq_lffs_sel_i_3_n_0;
  wire rxeq_lffs_sel_reg_n_0;
  wire \rxeq_new_txcoeff_reg_n_0_[2] ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_reg_n_0;
  wire \rxeq_preset[0]_i_1_n_0 ;
  wire \rxeq_preset[1]_i_1_n_0 ;
  wire \rxeq_preset[2]_i_1_n_0 ;
  wire \rxeq_preset[2]_i_2_n_0 ;
  wire \rxeq_preset[2]_i_3_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg2;
  wire \rxeq_preset_reg_n_0_[0] ;
  wire \rxeq_preset_reg_n_0_[1] ;
  wire \rxeq_preset_reg_n_0_[2] ;
  wire rxeq_preset_valid;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_3;
  wire rxeq_scan_i_n_6;
  wire rxeq_scan_i_n_7;
  wire rxeq_scan_i_n_8;
  wire [17:0]rxeq_txcoeff;
  wire \rxeq_txcoeff_reg_n_0_[0] ;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[1] ;
  wire \rxeq_txcoeff_reg_n_0_[2] ;
  wire \rxeq_txcoeff_reg_n_0_[3] ;
  wire \rxeq_txcoeff_reg_n_0_[4] ;
  wire \rxeq_txcoeff_reg_n_0_[5] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1_n_0 ;
  wire \rxeq_txpreset[3]_i_3_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg2;
  wire \rxeq_txpreset_reg_n_0_[0] ;
  wire \rxeq_txpreset_reg_n_0_[1] ;
  wire \rxeq_txpreset_reg_n_0_[2] ;
  wire \rxeq_txpreset_reg_n_0_[3] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg2;
  wire txeq_done;
  wire \txeq_preset[17]_i_1_n_0 ;
  wire \txeq_preset[3]_i_1_n_0 ;
  wire \txeq_preset[7]_i_1_n_0 ;
  wire txeq_preset_done;
  wire txeq_preset_done_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg2;
  wire \txeq_preset_reg_n_0_[0] ;
  wire \txeq_preset_reg_n_0_[10] ;
  wire \txeq_preset_reg_n_0_[11] ;
  wire \txeq_preset_reg_n_0_[12] ;
  wire \txeq_preset_reg_n_0_[13] ;
  wire \txeq_preset_reg_n_0_[14] ;
  wire \txeq_preset_reg_n_0_[15] ;
  wire \txeq_preset_reg_n_0_[16] ;
  wire \txeq_preset_reg_n_0_[17] ;
  wire \txeq_preset_reg_n_0_[1] ;
  wire \txeq_preset_reg_n_0_[2] ;
  wire \txeq_preset_reg_n_0_[3] ;
  wire \txeq_preset_reg_n_0_[7] ;
  wire \txeq_preset_reg_n_0_[8] ;
  wire \txeq_preset_reg_n_0_[9] ;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1_n_0 ;
  wire \txeq_txcoeff[0]_i_2_n_0 ;
  wire \txeq_txcoeff[10]_i_1_n_0 ;
  wire \txeq_txcoeff[10]_i_2_n_0 ;
  wire \txeq_txcoeff[11]_i_1_n_0 ;
  wire \txeq_txcoeff[11]_i_2_n_0 ;
  wire \txeq_txcoeff[12]_i_1_n_0 ;
  wire \txeq_txcoeff[12]_i_2_n_0 ;
  wire \txeq_txcoeff[13]_i_1_n_0 ;
  wire \txeq_txcoeff[13]_i_2_n_0 ;
  wire \txeq_txcoeff[14]_i_1_n_0 ;
  wire \txeq_txcoeff[14]_i_2_n_0 ;
  wire \txeq_txcoeff[15]_i_1_n_0 ;
  wire \txeq_txcoeff[15]_i_2_n_0 ;
  wire \txeq_txcoeff[16]_i_1_n_0 ;
  wire \txeq_txcoeff[16]_i_2_n_0 ;
  wire \txeq_txcoeff[17]_i_1_n_0 ;
  wire \txeq_txcoeff[17]_i_2_n_0 ;
  wire \txeq_txcoeff[18]_i_2_n_0 ;
  wire \txeq_txcoeff[18]_i_3_n_0 ;
  wire \txeq_txcoeff[1]_i_1_n_0 ;
  wire \txeq_txcoeff[1]_i_2_n_0 ;
  wire \txeq_txcoeff[2]_i_1_n_0 ;
  wire \txeq_txcoeff[2]_i_2_n_0 ;
  wire \txeq_txcoeff[3]_i_1_n_0 ;
  wire \txeq_txcoeff[3]_i_2_n_0 ;
  wire \txeq_txcoeff[4]_i_1_n_0 ;
  wire \txeq_txcoeff[4]_i_2_n_0 ;
  wire \txeq_txcoeff[5]_i_1_n_0 ;
  wire \txeq_txcoeff[5]_i_2_n_0 ;
  wire \txeq_txcoeff[6]_i_1_n_0 ;
  wire \txeq_txcoeff[6]_i_2_n_0 ;
  wire \txeq_txcoeff[7]_i_1_n_0 ;
  wire \txeq_txcoeff[7]_i_2_n_0 ;
  wire \txeq_txcoeff[8]_i_1_n_0 ;
  wire \txeq_txcoeff[8]_i_2_n_0 ;
  wire \txeq_txcoeff[9]_i_1_n_0 ;
  wire \txeq_txcoeff[9]_i_2_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;

  LUT5 #(
    .INIT(32'hABABABAA)) 
    \FSM_onehot_fsm_rx[1]_i_1 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2_n_0 ),
        .I1(rxeq_control_reg2[1]),
        .I2(rxeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm_rx[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_fsm_rx[1]_i_2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm_rx[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    \FSM_onehot_fsm_rx[3]_i_1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h2ABA2AAA)) 
    \FSM_onehot_fsm_rx[4]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[1]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_3),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[3]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[4]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hC073C043C073CC73)) 
    \FSM_sequential_fsm_tx[0]_i_1 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2_n_0 ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(fsm_tx__0[0]));
  LUT6 #(
    .INIT(64'h3F703F7C3F7C0F70)) 
    \FSM_sequential_fsm_tx[1]_i_1 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(fsm_tx__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_fsm_tx[1]_i_2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_tx[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA8A8A8A8A8AAA8A8)) 
    \FSM_sequential_fsm_tx[2]_i_1 
       (.I0(\FSM_sequential_fsm_tx[2]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm_tx[2]_i_3_n_0 ),
        .I2(fsm_tx[2]),
        .I3(\FSM_sequential_fsm_tx[2]_i_4_n_0 ),
        .I4(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(fsm_tx__0[2]));
  LUT5 #(
    .INIT(32'h7777FFF7)) 
    \FSM_sequential_fsm_tx[2]_i_2 
       (.I0(fsm_tx[1]),
        .I1(fsm_tx[2]),
        .I2(txeq_control_reg2[1]),
        .I3(txeq_control_reg2[0]),
        .I4(fsm_tx[0]),
        .O(\FSM_sequential_fsm_tx[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0F800080)) 
    \FSM_sequential_fsm_tx[2]_i_3 
       (.I0(txeq_control_reg2[1]),
        .I1(txeq_control_reg2[0]),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(txeq_preset_done),
        .O(\FSM_sequential_fsm_tx[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_fsm_tx[2]_i_4 
       (.I0(fsm_tx[1]),
        .I1(fsm_tx[0]),
        .O(\FSM_sequential_fsm_tx[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[0]),
        .Q(fsm_tx[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[1]),
        .Q(fsm_tx[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[2]),
        .Q(fsm_tx[2]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_1
       (.I0(rxeq_user_mode_reg2),
        .I1(rxeq_user_en_reg2),
        .I2(rxeq_lffs_sel_reg_n_0),
        .O(pipe_rx0_eq_lffs_sel));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_157
       (.I0(rxeq_user_txcoeff_reg2[17]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[17]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_158
       (.I0(rxeq_user_txcoeff_reg2[16]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[16]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_159
       (.I0(rxeq_user_txcoeff_reg2[15]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[15]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_160
       (.I0(rxeq_user_txcoeff_reg2[14]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[14]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_161
       (.I0(rxeq_user_txcoeff_reg2[13]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[13]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_162
       (.I0(rxeq_user_txcoeff_reg2[12]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[12]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_163
       (.I0(rxeq_user_txcoeff_reg2[11]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[11]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_164
       (.I0(rxeq_user_txcoeff_reg2[10]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[10]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_165
       (.I0(rxeq_user_txcoeff_reg2[9]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[9]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_166
       (.I0(rxeq_user_txcoeff_reg2[8]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[8]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_167
       (.I0(rxeq_user_txcoeff_reg2[7]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[7]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_168
       (.I0(rxeq_user_txcoeff_reg2[6]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[6]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_169
       (.I0(rxeq_user_txcoeff_reg2[5]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[5]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_170
       (.I0(rxeq_user_txcoeff_reg2[4]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[4]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_171
       (.I0(rxeq_user_txcoeff_reg2[3]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    PCIE_3_0_i_i_172
       (.I0(rxeq_user_txcoeff_reg2[2]),
        .I1(\rxeq_new_txcoeff_reg_n_0_[2] ),
        .I2(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[2]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_173
       (.I0(rxeq_user_txcoeff_reg2[1]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[1]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_174
       (.I0(rxeq_user_txcoeff_reg2[0]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX0EQLPNEWTXCOEFFORPRESET[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1_reg_0),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_22 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[14]),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_23 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[13]),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_24 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[12]),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_25 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[11]),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_26 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_27 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[3]),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_28 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[2]),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_29 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[1]),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_30 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[0]),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_31 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(gen3_reg2),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_32 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[10]),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_33 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[9]),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_34 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[8]),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_35 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[7]),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_36 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[6]),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_37 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[5]),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_38 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_7),
        .Q(pipe_rx0_eq_adapt_done),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    rxeq_adapt_done_reg_i_2
       (.I0(rxeq_control_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(rxeq_control_reg2[1]),
        .O(rxeq_adapt_done_reg_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_6),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h8888FFF8)) 
    \rxeq_cnt[0]_i_1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \rxeq_cnt[1]_i_1 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(\rxeq_cnt_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h0EEEE000)) 
    \rxeq_cnt[2]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\rxeq_cnt_reg_n_0_[2] ),
        .O(\rxeq_cnt[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_cnt[2]_i_1_n_0 ),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_CONTROL[0]),
        .Q(rxeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_CONTROL[1]),
        .Q(rxeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_done),
        .Q(PIPE_RXEQ_DONE),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[0]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_fs[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[1]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_fs[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[2]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_fs[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[3]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_fs[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[4]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_fs[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    \rxeq_fs[5]_i_1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx[1]_i_2_n_0 ),
        .O(\rxeq_fs[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[5]_i_2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_fs[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[0]),
        .Q(\rxeq_fs_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[1]),
        .Q(\rxeq_fs_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[2]),
        .Q(\rxeq_fs_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[3]),
        .Q(\rxeq_fs_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[4]),
        .Q(\rxeq_fs_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[5]),
        .Q(\rxeq_fs_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[0]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_lf[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[1]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_lf[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[2]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_lf[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[3]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_lf[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[4]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_lf[4]));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \rxeq_lf[5]_i_1 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2_n_0 ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(\rxeq_lf[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[5]_i_2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_lf[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[0]),
        .Q(\rxeq_lf_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[1]),
        .Q(\rxeq_lf_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[2]),
        .Q(\rxeq_lf_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[3]),
        .Q(\rxeq_lf_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[4]),
        .Q(\rxeq_lf_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[5]),
        .Q(\rxeq_lf_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[0]),
        .Q(rxeq_lffs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[1]),
        .Q(rxeq_lffs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[2]),
        .Q(rxeq_lffs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[3]),
        .Q(rxeq_lffs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[4]),
        .Q(rxeq_lffs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[5]),
        .Q(rxeq_lffs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rxeq_lffs_sel_i_2
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(rxeq_lffs_sel_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    rxeq_lffs_sel_i_3
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(rxeq_lffs_sel_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_lffs_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_8),
        .Q(rxeq_lffs_sel_reg_n_0),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_new_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(\rxeq_new_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(rxeq_new_txcoeff_req_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[0]_i_1 
       (.I0(rxeq_preset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[0] ),
        .O(\rxeq_preset[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[1]_i_1 
       (.I0(rxeq_preset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[1] ),
        .O(\rxeq_preset[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[2]_i_1 
       (.I0(rxeq_preset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
    \rxeq_preset[2]_i_2 
       (.I0(\rxeq_preset[2]_i_3_n_0 ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I4(rxeq_adapt_done_reg_i_2_n_0),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rxeq_preset[2]_i_3 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_preset[2]_i_3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[0]),
        .Q(rxeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[1]),
        .Q(rxeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[2]),
        .Q(rxeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .Q(rxeq_preset_valid),
        .R(RST_CPLLRESET));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_rxeq_scan_22 rxeq_scan_i
       (.D({rxeq_scan_i_n_1,rxeq_scan_i_n_2,rxeq_scan_i_n_3}),
        .\FSM_onehot_fsm_rx_reg[5] ({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .Q({\FSM_onehot_fsm_rx_reg_n_0_[6] ,\FSM_onehot_fsm_rx_reg_n_0_[5] ,\FSM_onehot_fsm_rx_reg_n_0_[4] ,\FSM_onehot_fsm_rx_reg_n_0_[2] ,\FSM_onehot_fsm_rx_reg_n_0_[1] }),
        .RST_CPLLRESET(RST_CPLLRESET),
        .adapt_done_reg_0(rxeq_scan_i_n_6),
        .\fs_reg1_reg[5]_0 ({\rxeq_fs_reg_n_0_[5] ,\rxeq_fs_reg_n_0_[4] ,\rxeq_fs_reg_n_0_[3] ,\rxeq_fs_reg_n_0_[2] ,\rxeq_fs_reg_n_0_[1] ,\rxeq_fs_reg_n_0_[0] }),
        .\lf_reg1_reg[5]_0 ({\rxeq_lf_reg_n_0_[5] ,\rxeq_lf_reg_n_0_[4] ,\rxeq_lf_reg_n_0_[3] ,\rxeq_lf_reg_n_0_[2] ,\rxeq_lf_reg_n_0_[1] ,\rxeq_lf_reg_n_0_[0] }),
        .new_txcoeff_done_reg_0(rxeq_scan_i_n_7),
        .new_txcoeff_done_reg_1(rxeq_scan_i_n_8),
        .\new_txcoeff_reg[2]_0 (rxeq_scan_i_n_0),
        .new_txcoeff_req_reg1_reg_0(rxeq_new_txcoeff_req_reg_n_0),
        .out(rxeq_control_reg2),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_eq_adapt_done(pipe_rx0_eq_adapt_done),
        .\preset_reg1_reg[2]_0 ({\rxeq_preset_reg_n_0_[2] ,\rxeq_preset_reg_n_0_[1] ,\rxeq_preset_reg_n_0_[0] }),
        .rxeq_adapt_done_reg(rxeq_lffs_sel_i_3_n_0),
        .rxeq_adapt_done_reg_reg(rxeq_adapt_done_reg_i_2_n_0),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_reg_n_0),
        .rxeq_done(rxeq_done),
        .rxeq_lffs_sel_reg(rxeq_lffs_sel_i_2_n_0),
        .rxeq_lffs_sel_reg_0(rxeq_lffs_sel_reg_n_0),
        .\rxeq_new_txcoeff_reg[2] (\FSM_onehot_fsm_rx[1]_i_2_n_0 ),
        .\rxeq_new_txcoeff_reg[2]_0 (\rxeq_new_txcoeff_reg_n_0_[2] ),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\txcoeff_reg1_reg[17]_0 ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,\rxeq_txcoeff_reg_n_0_[5] ,\rxeq_txcoeff_reg_n_0_[4] ,\rxeq_txcoeff_reg_n_0_[3] ,\rxeq_txcoeff_reg_n_0_[2] ,\rxeq_txcoeff_reg_n_0_[1] ,\rxeq_txcoeff_reg_n_0_[0] }),
        .\txpreset_reg1_reg[3]_0 ({\rxeq_txpreset_reg_n_0_[3] ,\rxeq_txpreset_reg_n_0_[2] ,\rxeq_txpreset_reg_n_0_[1] ,\rxeq_txpreset_reg_n_0_[0] }));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[0]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[0]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[10]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[10]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[11]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[11]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[12]_i_1 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[12]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[13]_i_1 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[13]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[14]_i_1 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[14]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[15]_i_1 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[15]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[16]_i_1 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[16]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[17]_i_1 
       (.I0(txeq_deemph_reg2[5]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[17]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[1]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[1]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[2]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[2]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[3]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[3]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[4]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[4]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[5]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[5]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[6]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[6]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[7]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[7]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[8]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[8]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[9]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[0]),
        .Q(\rxeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[1]),
        .Q(\rxeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[2]),
        .Q(\rxeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[3]),
        .Q(\rxeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[4]),
        .Q(\rxeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[5]),
        .Q(\rxeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[0]_i_1 
       (.I0(rxeq_txpreset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[1]_i_1 
       (.I0(rxeq_txpreset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[2]_i_1 
       (.I0(rxeq_txpreset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[2]));
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \rxeq_txpreset[3]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I1(\rxeq_txpreset[3]_i_3_n_0 ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(rxeq_control_reg2[1]),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_txpreset[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[3]_i_2 
       (.I0(rxeq_txpreset_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[3]));
  LUT3 #(
    .INIT(8'h01)) 
    \rxeq_txpreset[3]_i_3 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\rxeq_txpreset[3]_i_3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[0]),
        .Q(rxeq_txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[1]),
        .Q(rxeq_txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[2]),
        .Q(rxeq_txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[3]),
        .Q(rxeq_txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset[0]),
        .Q(\rxeq_txpreset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset[1]),
        .Q(\rxeq_txpreset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset[2]),
        .Q(\rxeq_txpreset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset[3]),
        .Q(\rxeq_txpreset_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_CONTROL[0]),
        .Q(txeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_CONTROL[1]),
        .Q(txeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[0]),
        .Q(txeq_deemph_reg1[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[1]),
        .Q(txeq_deemph_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[2]),
        .Q(txeq_deemph_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[3]),
        .Q(txeq_deemph_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[4]),
        .Q(txeq_deemph_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[5]),
        .Q(txeq_deemph_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    txeq_done_i_1
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_done));
  FDRE #(
    .INIT(1'b0)) 
    txeq_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_done),
        .Q(PIPE_TXEQ_DONE),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00001000)) 
    \txeq_preset[0]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[0]));
  LUT5 #(
    .INIT(32'hABEAABAF)) 
    \txeq_preset[10]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[10]));
  LUT5 #(
    .INIT(32'hFFFF200D)) 
    \txeq_preset[11]_i_1 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[11]));
  LUT5 #(
    .INIT(32'h01151110)) 
    \txeq_preset[12]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[12]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[13]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[13]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[14]));
  LUT4 #(
    .INIT(16'hF0F1)) 
    \txeq_preset[15]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[15]));
  LUT4 #(
    .INIT(16'h0006)) 
    \txeq_preset[16]_i_1 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(RST_CPLLRESET),
        .O(p_0_out[16]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \txeq_preset[17]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .O(\txeq_preset[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[17]));
  LUT5 #(
    .INIT(32'h00001004)) 
    \txeq_preset[1]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[1]));
  LUT4 #(
    .INIT(16'h0E00)) 
    \txeq_preset[2]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[0]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[2]));
  LUT5 #(
    .INIT(32'h01440140)) 
    \txeq_preset[3]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00001400)) 
    \txeq_preset[7]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(\txeq_preset[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAFBEAF)) 
    \txeq_preset[8]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(p_0_out[8]));
  LUT5 #(
    .INIT(32'hCCFCCFCD)) 
    \txeq_preset[9]_i_1 
       (.I0(txeq_preset_reg2[1]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[9]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h04)) 
    txeq_preset_done_i_1
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_preset_done_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_done_i_1_n_0),
        .Q(txeq_preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[0]),
        .Q(txeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[1]),
        .Q(txeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[2]),
        .Q(txeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[3]),
        .Q(txeq_preset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[0]),
        .Q(\txeq_preset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[10]),
        .Q(\txeq_preset_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[11]),
        .Q(\txeq_preset_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[12]),
        .Q(\txeq_preset_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[13]),
        .Q(\txeq_preset_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[14]),
        .Q(\txeq_preset_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[15]),
        .Q(\txeq_preset_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[16]),
        .Q(\txeq_preset_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[17]),
        .Q(\txeq_preset_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[1]),
        .Q(\txeq_preset_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[2]),
        .Q(\txeq_preset_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(\txeq_preset[3]_i_1_n_0 ),
        .Q(\txeq_preset_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(\txeq_preset[7]_i_1_n_0 ),
        .Q(\txeq_preset_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[8]),
        .Q(\txeq_preset_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[9]),
        .Q(\txeq_preset_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h45404040)) 
    \txeq_txcoeff[0]_i_1 
       (.I0(fsm_tx[2]),
        .I1(\txeq_txcoeff[0]_i_2_n_0 ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .O(\txeq_txcoeff[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[0]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[0] ),
        .O(\txeq_txcoeff[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[10]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[7]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[10]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[13]),
        .O(\txeq_txcoeff[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[10]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[13]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[14]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[10] ),
        .O(\txeq_txcoeff[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[11]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[8]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[11]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[14]),
        .O(\txeq_txcoeff[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[11]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[14]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[15]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[11] ),
        .O(\txeq_txcoeff[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[12]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[9]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[12]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[15]),
        .O(\txeq_txcoeff[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[12]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[15]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[0]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[12] ),
        .O(\txeq_txcoeff[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[13]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[10]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[13]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[13]_i_2 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[13] ),
        .O(\txeq_txcoeff[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[14]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[14]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[14]_i_2 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[2]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[14] ),
        .O(\txeq_txcoeff[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[15]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[11]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[15]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[2]),
        .O(\txeq_txcoeff[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[15]_i_2 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[3]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[15] ),
        .O(\txeq_txcoeff[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[16]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[12]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[16]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[16]_i_2 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[4]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[16] ),
        .O(\txeq_txcoeff[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[17]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[13]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[17]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[17]_i_2 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[17] ),
        .O(\txeq_txcoeff[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF0F04FF)) 
    \txeq_txcoeff[18]_i_1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'h22F3220022002200)) 
    \txeq_txcoeff[18]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[14]),
        .I1(fsm_tx[1]),
        .I2(\txeq_txcoeff[18]_i_3_n_0 ),
        .I3(fsm_tx[2]),
        .I4(txeq_deemph_reg2[5]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[18]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_txcoeff[18]_i_3 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\txeq_txcoeff[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[1]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[1]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[5]),
        .O(\txeq_txcoeff[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[1]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[5]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[6]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[1] ),
        .O(\txeq_txcoeff[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[2]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[0]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[2]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[6]),
        .O(\txeq_txcoeff[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[2]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[6]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[7]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[2] ),
        .O(\txeq_txcoeff[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[3]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[1]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[3]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[7]),
        .O(\txeq_txcoeff[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[3]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[7]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[8]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[3] ),
        .O(\txeq_txcoeff[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[4]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[4]_i_2_n_0 ),
        .O(\txeq_txcoeff[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[4]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[9]),
        .I1(EQ_TXEQ_DEEMPH_OUT[8]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[5]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[3]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[5]_i_2_n_0 ),
        .O(\txeq_txcoeff[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[5]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[10]),
        .I1(EQ_TXEQ_DEEMPH_OUT[9]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[6]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[4]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[6]_i_2_n_0 ),
        .O(\txeq_txcoeff[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[6]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(EQ_TXEQ_DEEMPH_OUT[10]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[7]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[7]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[7]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[11]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[7] ),
        .O(\txeq_txcoeff[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[8]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[5]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[8]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[11]),
        .O(\txeq_txcoeff[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[8]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[11]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[12]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[8] ),
        .O(\txeq_txcoeff[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[9]_i_1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[6]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[9]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[12]),
        .O(\txeq_txcoeff[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[9]_i_2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[12]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[13]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[9] ),
        .O(\txeq_txcoeff[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000004000F000400)) 
    \txeq_txcoeff_cnt[0]_i_1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h00006000)) 
    \txeq_txcoeff_cnt[1]_i_1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[2]),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[8]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[9]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[12]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[4]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[7]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_eq" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_eq_14
   (PIPERX3EQLPNEWTXCOEFFORPRESET,
    EQ_TXEQ_DEEMPH_OUT,
    PIPE_TXEQ_DONE,
    PIPE_RXEQ_DONE,
    TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    pipe_rx3_eq_lffs_sel,
    rxeq_adapt_done_reg_0,
    RST_CPLLRESET,
    pipe_pclk_in,
    PIPE_TXEQ_CONTROL,
    PIPE_TXEQ_DEEMPH,
    PIPE_TXEQ_PRESET,
    rate_gen3_3,
    PIPE_RXEQ_PRESET,
    PIPE_RXEQ_CONTROL,
    PIPE_RXEQ_TXPRESET,
    PIPE_RXEQ_LFFS);
  output [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  output [15:0]EQ_TXEQ_DEEMPH_OUT;
  output [0:0]PIPE_TXEQ_DONE;
  output [0:0]PIPE_RXEQ_DONE;
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  output pipe_rx3_eq_lffs_sel;
  output rxeq_adapt_done_reg_0;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input [1:0]PIPE_TXEQ_CONTROL;
  input [5:0]PIPE_TXEQ_DEEMPH;
  input [3:0]PIPE_TXEQ_PRESET;
  input rate_gen3_3;
  input [2:0]PIPE_RXEQ_PRESET;
  input [1:0]PIPE_RXEQ_CONTROL;
  input [3:0]PIPE_RXEQ_TXPRESET;
  input [5:0]PIPE_RXEQ_LFFS;

  wire [15:0]EQ_TXEQ_DEEMPH_OUT;
  wire \FSM_onehot_fsm_rx[1]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm_rx[1]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm_rx[3]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm_rx[4]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_tx[1]_i_2__2_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_2__2_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_3__2_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_4__2_n_0 ;
  wire [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  wire [1:0]PIPE_RXEQ_CONTROL;
  wire [0:0]PIPE_RXEQ_DONE;
  wire [5:0]PIPE_RXEQ_LFFS;
  wire [2:0]PIPE_RXEQ_PRESET;
  wire [3:0]PIPE_RXEQ_TXPRESET;
  wire [1:0]PIPE_TXEQ_CONTROL;
  wire [5:0]PIPE_TXEQ_DEEMPH;
  wire [0:0]PIPE_TXEQ_DONE;
  wire [3:0]PIPE_TXEQ_PRESET;
  wire RST_CPLLRESET;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire [2:0]fsm_tx;
  wire [2:0]fsm_tx__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire [17:0]p_0_out;
  wire pipe_pclk_in;
  wire pipe_rx3_eq_lffs_sel;
  wire rate_gen3_3;
  wire rxeq_adapt_done_reg_0;
  wire rxeq_adapt_done_reg_i_2__2_n_0;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [1:0]rxeq_cnt;
  wire \rxeq_cnt[2]_i_1__2_n_0 ;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg2;
  wire rxeq_done;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1__2_n_0 ;
  wire \rxeq_fs_reg_n_0_[0] ;
  wire \rxeq_fs_reg_n_0_[1] ;
  wire \rxeq_fs_reg_n_0_[2] ;
  wire \rxeq_fs_reg_n_0_[3] ;
  wire \rxeq_fs_reg_n_0_[4] ;
  wire \rxeq_fs_reg_n_0_[5] ;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1__2_n_0 ;
  wire \rxeq_lf_reg_n_0_[0] ;
  wire \rxeq_lf_reg_n_0_[1] ;
  wire \rxeq_lf_reg_n_0_[2] ;
  wire \rxeq_lf_reg_n_0_[3] ;
  wire \rxeq_lf_reg_n_0_[4] ;
  wire \rxeq_lf_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_lffs_sel_i_2__2_n_0;
  wire rxeq_lffs_sel_i_3__2_n_0;
  wire rxeq_lffs_sel_reg_n_0;
  wire \rxeq_new_txcoeff_reg_n_0_[2] ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_reg_n_0;
  wire \rxeq_preset[0]_i_1__2_n_0 ;
  wire \rxeq_preset[1]_i_1__2_n_0 ;
  wire \rxeq_preset[2]_i_1__2_n_0 ;
  wire \rxeq_preset[2]_i_2__2_n_0 ;
  wire \rxeq_preset[2]_i_3__2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg2;
  wire \rxeq_preset_reg_n_0_[0] ;
  wire \rxeq_preset_reg_n_0_[1] ;
  wire \rxeq_preset_reg_n_0_[2] ;
  wire rxeq_preset_valid;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_3;
  wire rxeq_scan_i_n_6;
  wire rxeq_scan_i_n_7;
  wire rxeq_scan_i_n_8;
  wire [17:0]rxeq_txcoeff;
  wire \rxeq_txcoeff_reg_n_0_[0] ;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[1] ;
  wire \rxeq_txcoeff_reg_n_0_[2] ;
  wire \rxeq_txcoeff_reg_n_0_[3] ;
  wire \rxeq_txcoeff_reg_n_0_[4] ;
  wire \rxeq_txcoeff_reg_n_0_[5] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1__2_n_0 ;
  wire \rxeq_txpreset[3]_i_3__2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg2;
  wire \rxeq_txpreset_reg_n_0_[0] ;
  wire \rxeq_txpreset_reg_n_0_[1] ;
  wire \rxeq_txpreset_reg_n_0_[2] ;
  wire \rxeq_txpreset_reg_n_0_[3] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg2;
  wire txeq_done;
  wire \txeq_preset[17]_i_1__2_n_0 ;
  wire \txeq_preset[3]_i_1__2_n_0 ;
  wire \txeq_preset[7]_i_1__2_n_0 ;
  wire txeq_preset_done;
  wire txeq_preset_done_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg2;
  wire \txeq_preset_reg_n_0_[0] ;
  wire \txeq_preset_reg_n_0_[10] ;
  wire \txeq_preset_reg_n_0_[11] ;
  wire \txeq_preset_reg_n_0_[12] ;
  wire \txeq_preset_reg_n_0_[13] ;
  wire \txeq_preset_reg_n_0_[14] ;
  wire \txeq_preset_reg_n_0_[15] ;
  wire \txeq_preset_reg_n_0_[16] ;
  wire \txeq_preset_reg_n_0_[17] ;
  wire \txeq_preset_reg_n_0_[1] ;
  wire \txeq_preset_reg_n_0_[2] ;
  wire \txeq_preset_reg_n_0_[3] ;
  wire \txeq_preset_reg_n_0_[7] ;
  wire \txeq_preset_reg_n_0_[8] ;
  wire \txeq_preset_reg_n_0_[9] ;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1__2_n_0 ;
  wire \txeq_txcoeff[0]_i_2__2_n_0 ;
  wire \txeq_txcoeff[10]_i_1__2_n_0 ;
  wire \txeq_txcoeff[10]_i_2__2_n_0 ;
  wire \txeq_txcoeff[11]_i_1__2_n_0 ;
  wire \txeq_txcoeff[11]_i_2__2_n_0 ;
  wire \txeq_txcoeff[12]_i_1__2_n_0 ;
  wire \txeq_txcoeff[12]_i_2__2_n_0 ;
  wire \txeq_txcoeff[13]_i_1__2_n_0 ;
  wire \txeq_txcoeff[13]_i_2__2_n_0 ;
  wire \txeq_txcoeff[14]_i_1__2_n_0 ;
  wire \txeq_txcoeff[14]_i_2__2_n_0 ;
  wire \txeq_txcoeff[15]_i_1__2_n_0 ;
  wire \txeq_txcoeff[15]_i_2__2_n_0 ;
  wire \txeq_txcoeff[16]_i_1__2_n_0 ;
  wire \txeq_txcoeff[16]_i_2__2_n_0 ;
  wire \txeq_txcoeff[17]_i_1__2_n_0 ;
  wire \txeq_txcoeff[17]_i_2__2_n_0 ;
  wire \txeq_txcoeff[18]_i_2__2_n_0 ;
  wire \txeq_txcoeff[18]_i_3__2_n_0 ;
  wire \txeq_txcoeff[1]_i_1__2_n_0 ;
  wire \txeq_txcoeff[1]_i_2__2_n_0 ;
  wire \txeq_txcoeff[2]_i_1__2_n_0 ;
  wire \txeq_txcoeff[2]_i_2__2_n_0 ;
  wire \txeq_txcoeff[3]_i_1__2_n_0 ;
  wire \txeq_txcoeff[3]_i_2__2_n_0 ;
  wire \txeq_txcoeff[4]_i_1__2_n_0 ;
  wire \txeq_txcoeff[4]_i_2__2_n_0 ;
  wire \txeq_txcoeff[5]_i_1__2_n_0 ;
  wire \txeq_txcoeff[5]_i_2__2_n_0 ;
  wire \txeq_txcoeff[6]_i_1__2_n_0 ;
  wire \txeq_txcoeff[6]_i_2__2_n_0 ;
  wire \txeq_txcoeff[7]_i_1__2_n_0 ;
  wire \txeq_txcoeff[7]_i_2__2_n_0 ;
  wire \txeq_txcoeff[8]_i_1__2_n_0 ;
  wire \txeq_txcoeff[8]_i_2__2_n_0 ;
  wire \txeq_txcoeff[9]_i_1__2_n_0 ;
  wire \txeq_txcoeff[9]_i_2__2_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;

  LUT5 #(
    .INIT(32'hABABABAA)) 
    \FSM_onehot_fsm_rx[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ),
        .I1(rxeq_control_reg2[1]),
        .I2(rxeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm_rx[1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_fsm_rx[1]_i_2__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    \FSM_onehot_fsm_rx[3]_i_1__2 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h2ABA2AAA)) 
    \FSM_onehot_fsm_rx[4]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[4]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[1]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_3),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[3]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[4]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hC073C043C073CC73)) 
    \FSM_sequential_fsm_tx[0]_i_1__2 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__2_n_0 ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(fsm_tx__0[0]));
  LUT6 #(
    .INIT(64'h3F703F7C3F7C0F70)) 
    \FSM_sequential_fsm_tx[1]_i_1__2 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__2_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(fsm_tx__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_fsm_tx[1]_i_2__2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_tx[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hA8A8A8A8A8AAA8A8)) 
    \FSM_sequential_fsm_tx[2]_i_1__2 
       (.I0(\FSM_sequential_fsm_tx[2]_i_2__2_n_0 ),
        .I1(\FSM_sequential_fsm_tx[2]_i_3__2_n_0 ),
        .I2(fsm_tx[2]),
        .I3(\FSM_sequential_fsm_tx[2]_i_4__2_n_0 ),
        .I4(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(fsm_tx__0[2]));
  LUT5 #(
    .INIT(32'h7777FFF7)) 
    \FSM_sequential_fsm_tx[2]_i_2__2 
       (.I0(fsm_tx[1]),
        .I1(fsm_tx[2]),
        .I2(txeq_control_reg2[1]),
        .I3(txeq_control_reg2[0]),
        .I4(fsm_tx[0]),
        .O(\FSM_sequential_fsm_tx[2]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h0F800080)) 
    \FSM_sequential_fsm_tx[2]_i_3__2 
       (.I0(txeq_control_reg2[1]),
        .I1(txeq_control_reg2[0]),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(txeq_preset_done),
        .O(\FSM_sequential_fsm_tx[2]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_fsm_tx[2]_i_4__2 
       (.I0(fsm_tx[1]),
        .I1(fsm_tx[0]),
        .O(\FSM_sequential_fsm_tx[2]_i_4__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[0]),
        .Q(fsm_tx[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[1]),
        .Q(fsm_tx[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[2]),
        .Q(fsm_tx[2]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_10
       (.I0(rxeq_user_mode_reg2),
        .I1(rxeq_user_en_reg2),
        .I2(rxeq_lffs_sel_reg_n_0),
        .O(pipe_rx3_eq_lffs_sel));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_211
       (.I0(rxeq_user_txcoeff_reg2[17]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[17]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_212
       (.I0(rxeq_user_txcoeff_reg2[16]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[16]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_213
       (.I0(rxeq_user_txcoeff_reg2[15]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[15]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_214
       (.I0(rxeq_user_txcoeff_reg2[14]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[14]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_215
       (.I0(rxeq_user_txcoeff_reg2[13]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[13]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_216
       (.I0(rxeq_user_txcoeff_reg2[12]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[12]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_217
       (.I0(rxeq_user_txcoeff_reg2[11]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[11]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_218
       (.I0(rxeq_user_txcoeff_reg2[10]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[10]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_219
       (.I0(rxeq_user_txcoeff_reg2[9]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[9]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_220
       (.I0(rxeq_user_txcoeff_reg2[8]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[8]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_221
       (.I0(rxeq_user_txcoeff_reg2[7]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[7]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_222
       (.I0(rxeq_user_txcoeff_reg2[6]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[6]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_223
       (.I0(rxeq_user_txcoeff_reg2[5]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[5]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_224
       (.I0(rxeq_user_txcoeff_reg2[4]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[4]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_225
       (.I0(rxeq_user_txcoeff_reg2[3]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    PCIE_3_0_i_i_226
       (.I0(rxeq_user_txcoeff_reg2[2]),
        .I1(\rxeq_new_txcoeff_reg_n_0_[2] ),
        .I2(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[2]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_227
       (.I0(rxeq_user_txcoeff_reg2[1]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[1]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_228
       (.I0(rxeq_user_txcoeff_reg2[0]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX3EQLPNEWTXCOEFFORPRESET[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_gen3_3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_24__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[14]),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_25__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[13]),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_26__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[12]),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_27__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[11]),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_28__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_29__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[3]),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_30__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[2]),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_31__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[1]),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_32__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[0]),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_33__2 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(gen3_reg2),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_34__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[10]),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_35__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[9]),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_36__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[8]),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_37__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[7]),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_38__2 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[6]),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_39__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[5]),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_40 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_7),
        .Q(rxeq_adapt_done_reg_0),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    rxeq_adapt_done_reg_i_2__2
       (.I0(rxeq_control_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(rxeq_control_reg2[1]),
        .O(rxeq_adapt_done_reg_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_6),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h8888FFF8)) 
    \rxeq_cnt[0]_i_1__2 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \rxeq_cnt[1]_i_1__2 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(\rxeq_cnt_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h0EEEE000)) 
    \rxeq_cnt[2]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\rxeq_cnt_reg_n_0_[2] ),
        .O(\rxeq_cnt[2]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_cnt[2]_i_1__2_n_0 ),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_CONTROL[0]),
        .Q(rxeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_CONTROL[1]),
        .Q(rxeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_done),
        .Q(PIPE_RXEQ_DONE),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[0]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_fs[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_fs[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[2]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_fs[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[3]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_fs[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[4]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_fs[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    \rxeq_fs[5]_i_1__2 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ),
        .O(\rxeq_fs[5]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[5]_i_2__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_fs[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[0]),
        .Q(\rxeq_fs_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[1]),
        .Q(\rxeq_fs_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[2]),
        .Q(\rxeq_fs_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[3]),
        .Q(\rxeq_fs_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[4]),
        .Q(\rxeq_fs_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[5]),
        .Q(\rxeq_fs_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[0]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_lf[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_lf[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[2]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_lf[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[3]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_lf[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[4]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_lf[4]));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \rxeq_lf[5]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(\rxeq_lf[5]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[5]_i_2__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_lf[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[0]),
        .Q(\rxeq_lf_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[1]),
        .Q(\rxeq_lf_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[2]),
        .Q(\rxeq_lf_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[3]),
        .Q(\rxeq_lf_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[4]),
        .Q(\rxeq_lf_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[5]),
        .Q(\rxeq_lf_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[0]),
        .Q(rxeq_lffs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[1]),
        .Q(rxeq_lffs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[2]),
        .Q(rxeq_lffs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[3]),
        .Q(rxeq_lffs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[4]),
        .Q(rxeq_lffs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[5]),
        .Q(rxeq_lffs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rxeq_lffs_sel_i_2__2
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(rxeq_lffs_sel_i_2__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    rxeq_lffs_sel_i_3__2
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(rxeq_lffs_sel_i_3__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_lffs_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_8),
        .Q(rxeq_lffs_sel_reg_n_0),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_new_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(\rxeq_new_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(rxeq_new_txcoeff_req_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[0]_i_1__2 
       (.I0(rxeq_preset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[0] ),
        .O(\rxeq_preset[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[1]_i_1__2 
       (.I0(rxeq_preset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[1] ),
        .O(\rxeq_preset[1]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[2]_i_1__2 
       (.I0(rxeq_preset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
    \rxeq_preset[2]_i_2__2 
       (.I0(\rxeq_preset[2]_i_3__2_n_0 ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I4(rxeq_adapt_done_reg_i_2__2_n_0),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rxeq_preset[2]_i_3__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_preset[2]_i_3__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[0]),
        .Q(rxeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[1]),
        .Q(rxeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[2]),
        .Q(rxeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1__2_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1__2_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1__2_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .Q(rxeq_preset_valid),
        .R(RST_CPLLRESET));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_rxeq_scan rxeq_scan_i
       (.D({rxeq_scan_i_n_1,rxeq_scan_i_n_2,rxeq_scan_i_n_3}),
        .\FSM_onehot_fsm_rx_reg[5] ({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .Q({\FSM_onehot_fsm_rx_reg_n_0_[6] ,\FSM_onehot_fsm_rx_reg_n_0_[5] ,\FSM_onehot_fsm_rx_reg_n_0_[4] ,\FSM_onehot_fsm_rx_reg_n_0_[2] ,\FSM_onehot_fsm_rx_reg_n_0_[1] }),
        .RST_CPLLRESET(RST_CPLLRESET),
        .adapt_done_reg_0(rxeq_scan_i_n_6),
        .\fs_reg1_reg[5]_0 ({\rxeq_fs_reg_n_0_[5] ,\rxeq_fs_reg_n_0_[4] ,\rxeq_fs_reg_n_0_[3] ,\rxeq_fs_reg_n_0_[2] ,\rxeq_fs_reg_n_0_[1] ,\rxeq_fs_reg_n_0_[0] }),
        .\lf_reg1_reg[5]_0 ({\rxeq_lf_reg_n_0_[5] ,\rxeq_lf_reg_n_0_[4] ,\rxeq_lf_reg_n_0_[3] ,\rxeq_lf_reg_n_0_[2] ,\rxeq_lf_reg_n_0_[1] ,\rxeq_lf_reg_n_0_[0] }),
        .new_txcoeff_done_reg_0(rxeq_scan_i_n_7),
        .new_txcoeff_done_reg_1(rxeq_scan_i_n_8),
        .\new_txcoeff_reg[2]_0 (rxeq_scan_i_n_0),
        .new_txcoeff_req_reg1_reg_0(rxeq_new_txcoeff_req_reg_n_0),
        .out(rxeq_control_reg2),
        .pipe_pclk_in(pipe_pclk_in),
        .\preset_reg1_reg[2]_0 ({\rxeq_preset_reg_n_0_[2] ,\rxeq_preset_reg_n_0_[1] ,\rxeq_preset_reg_n_0_[0] }),
        .rxeq_adapt_done_reg(rxeq_lffs_sel_i_3__2_n_0),
        .rxeq_adapt_done_reg_0(rxeq_adapt_done_reg_0),
        .rxeq_adapt_done_reg_reg(rxeq_adapt_done_reg_i_2__2_n_0),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_reg_n_0),
        .rxeq_done(rxeq_done),
        .rxeq_lffs_sel_reg(rxeq_lffs_sel_i_2__2_n_0),
        .rxeq_lffs_sel_reg_0(rxeq_lffs_sel_reg_n_0),
        .\rxeq_new_txcoeff_reg[2] (\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ),
        .\rxeq_new_txcoeff_reg[2]_0 (\rxeq_new_txcoeff_reg_n_0_[2] ),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\txcoeff_reg1_reg[17]_0 ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,\rxeq_txcoeff_reg_n_0_[5] ,\rxeq_txcoeff_reg_n_0_[4] ,\rxeq_txcoeff_reg_n_0_[3] ,\rxeq_txcoeff_reg_n_0_[2] ,\rxeq_txcoeff_reg_n_0_[1] ,\rxeq_txcoeff_reg_n_0_[0] }),
        .\txpreset_reg1_reg[3]_0 ({\rxeq_txpreset_reg_n_0_[3] ,\rxeq_txpreset_reg_n_0_[2] ,\rxeq_txpreset_reg_n_0_[1] ,\rxeq_txpreset_reg_n_0_[0] }));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[0]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[0]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[10]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[10]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[11]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[11]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[12]_i_1__2 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[12]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[13]_i_1__2 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[13]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[14]_i_1__2 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[14]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[15]_i_1__2 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[15]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[16]_i_1__2 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[16]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[17]_i_1__2 
       (.I0(txeq_deemph_reg2[5]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[17]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[1]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[1]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[2]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[2]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[3]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[3]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[4]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[4]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[5]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[5]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[6]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[6]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[7]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[7]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[8]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[8]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[9]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[0]),
        .Q(\rxeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[1]),
        .Q(\rxeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[2]),
        .Q(\rxeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[3]),
        .Q(\rxeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[4]),
        .Q(\rxeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[5]),
        .Q(\rxeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[0]_i_1__2 
       (.I0(rxeq_txpreset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[1]_i_1__2 
       (.I0(rxeq_txpreset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[2]_i_1__2 
       (.I0(rxeq_txpreset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[2]));
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \rxeq_txpreset[3]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I1(\rxeq_txpreset[3]_i_3__2_n_0 ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(rxeq_control_reg2[1]),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_txpreset[3]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[3]_i_2__2 
       (.I0(rxeq_txpreset_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[3]));
  LUT3 #(
    .INIT(8'h01)) 
    \rxeq_txpreset[3]_i_3__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\rxeq_txpreset[3]_i_3__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[0]),
        .Q(rxeq_txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[1]),
        .Q(rxeq_txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[2]),
        .Q(rxeq_txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[3]),
        .Q(rxeq_txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txpreset[0]),
        .Q(\rxeq_txpreset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txpreset[1]),
        .Q(\rxeq_txpreset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txpreset[2]),
        .Q(\rxeq_txpreset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txpreset[3]),
        .Q(\rxeq_txpreset_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_CONTROL[0]),
        .Q(txeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_CONTROL[1]),
        .Q(txeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[0]),
        .Q(txeq_deemph_reg1[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[1]),
        .Q(txeq_deemph_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[2]),
        .Q(txeq_deemph_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[3]),
        .Q(txeq_deemph_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[4]),
        .Q(txeq_deemph_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[5]),
        .Q(txeq_deemph_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    txeq_done_i_1__2
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_done));
  FDRE #(
    .INIT(1'b0)) 
    txeq_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_done),
        .Q(PIPE_TXEQ_DONE),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00001000)) 
    \txeq_preset[0]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[0]));
  LUT5 #(
    .INIT(32'hABEAABAF)) 
    \txeq_preset[10]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[10]));
  LUT5 #(
    .INIT(32'hFFFF200D)) 
    \txeq_preset[11]_i_1__2 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[11]));
  LUT5 #(
    .INIT(32'h01151110)) 
    \txeq_preset[12]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[12]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[13]_i_1__2 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[13]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1__2 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[14]));
  LUT4 #(
    .INIT(16'hF0F1)) 
    \txeq_preset[15]_i_1__2 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[15]));
  LUT4 #(
    .INIT(16'h0006)) 
    \txeq_preset[16]_i_1__2 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(RST_CPLLRESET),
        .O(p_0_out[16]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \txeq_preset[17]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .O(\txeq_preset[17]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2__2 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[17]));
  LUT5 #(
    .INIT(32'h00001004)) 
    \txeq_preset[1]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[1]));
  LUT4 #(
    .INIT(16'h0E00)) 
    \txeq_preset[2]_i_1__2 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[0]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[2]));
  LUT5 #(
    .INIT(32'h01440140)) 
    \txeq_preset[3]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h00001400)) 
    \txeq_preset[7]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(\txeq_preset[7]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hAAAFBEAF)) 
    \txeq_preset[8]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(p_0_out[8]));
  LUT5 #(
    .INIT(32'hCCFCCFCD)) 
    \txeq_preset[9]_i_1__2 
       (.I0(txeq_preset_reg2[1]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[9]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'h04)) 
    txeq_preset_done_i_1__2
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_preset_done_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_done_i_1__2_n_0),
        .Q(txeq_preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[0]),
        .Q(txeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[1]),
        .Q(txeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[2]),
        .Q(txeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[3]),
        .Q(txeq_preset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[0]),
        .Q(\txeq_preset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[10]),
        .Q(\txeq_preset_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[11]),
        .Q(\txeq_preset_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[12]),
        .Q(\txeq_preset_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[13]),
        .Q(\txeq_preset_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[14]),
        .Q(\txeq_preset_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[15]),
        .Q(\txeq_preset_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[16]),
        .Q(\txeq_preset_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[17]),
        .Q(\txeq_preset_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[1]),
        .Q(\txeq_preset_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[2]),
        .Q(\txeq_preset_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(\txeq_preset[3]_i_1__2_n_0 ),
        .Q(\txeq_preset_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(\txeq_preset[7]_i_1__2_n_0 ),
        .Q(\txeq_preset_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[8]),
        .Q(\txeq_preset_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[9]),
        .Q(\txeq_preset_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'h45404040)) 
    \txeq_txcoeff[0]_i_1__2 
       (.I0(fsm_tx[2]),
        .I1(\txeq_txcoeff[0]_i_2__2_n_0 ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .O(\txeq_txcoeff[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[0]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[0] ),
        .O(\txeq_txcoeff[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[10]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[7]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[10]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[13]),
        .O(\txeq_txcoeff[10]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[10]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[13]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[14]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[10] ),
        .O(\txeq_txcoeff[10]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[11]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[8]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[11]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[14]),
        .O(\txeq_txcoeff[11]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[11]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[14]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[15]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[11] ),
        .O(\txeq_txcoeff[11]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[12]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[9]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[12]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[15]),
        .O(\txeq_txcoeff[12]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[12]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[15]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[0]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[12] ),
        .O(\txeq_txcoeff[12]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[13]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[10]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[13]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[13]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[13]_i_2__2 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[13] ),
        .O(\txeq_txcoeff[13]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[14]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[14]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[14]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[14]_i_2__2 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[2]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[14] ),
        .O(\txeq_txcoeff[14]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[15]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[11]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[15]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[2]),
        .O(\txeq_txcoeff[15]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[15]_i_2__2 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[3]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[15] ),
        .O(\txeq_txcoeff[15]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[16]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[12]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[16]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[16]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[16]_i_2__2 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[4]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[16] ),
        .O(\txeq_txcoeff[16]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[17]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[13]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[17]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[17]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[17]_i_2__2 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[17] ),
        .O(\txeq_txcoeff[17]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFF0F04FF)) 
    \txeq_txcoeff[18]_i_1__2 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'h22F3220022002200)) 
    \txeq_txcoeff[18]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[14]),
        .I1(fsm_tx[1]),
        .I2(\txeq_txcoeff[18]_i_3__2_n_0 ),
        .I3(fsm_tx[2]),
        .I4(txeq_deemph_reg2[5]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[18]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_txcoeff[18]_i_3__2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\txeq_txcoeff[18]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[1]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[1]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[5]),
        .O(\txeq_txcoeff[1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[1]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[5]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[6]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[1] ),
        .O(\txeq_txcoeff[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[2]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[0]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[2]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[6]),
        .O(\txeq_txcoeff[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[2]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[6]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[7]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[2] ),
        .O(\txeq_txcoeff[2]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[3]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[1]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[3]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[7]),
        .O(\txeq_txcoeff[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[3]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[7]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[8]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[3] ),
        .O(\txeq_txcoeff[3]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[4]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[4]_i_2__2_n_0 ),
        .O(\txeq_txcoeff[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[4]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[9]),
        .I1(EQ_TXEQ_DEEMPH_OUT[8]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[4]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[5]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[3]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[5]_i_2__2_n_0 ),
        .O(\txeq_txcoeff[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[5]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[10]),
        .I1(EQ_TXEQ_DEEMPH_OUT[9]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[5]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[6]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[4]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[6]_i_2__2_n_0 ),
        .O(\txeq_txcoeff[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[6]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(EQ_TXEQ_DEEMPH_OUT[10]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[6]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[7]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[7]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[7]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[7]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[11]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[7] ),
        .O(\txeq_txcoeff[7]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[8]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[5]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[8]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[11]),
        .O(\txeq_txcoeff[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[8]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[11]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[12]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[8] ),
        .O(\txeq_txcoeff[8]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[9]_i_1__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[6]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[9]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[12]),
        .O(\txeq_txcoeff[9]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[9]_i_2__2 
       (.I0(EQ_TXEQ_DEEMPH_OUT[12]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[13]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[9] ),
        .O(\txeq_txcoeff[9]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h000004000F000400)) 
    \txeq_txcoeff_cnt[0]_i_1__2 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h00006000)) 
    \txeq_txcoeff_cnt[1]_i_1__2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[2]),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[8]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[9]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[12]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[4]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1__2_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[7]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_eq" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_eq_2
   (PIPERX1EQLPNEWTXCOEFFORPRESET,
    EQ_TXEQ_DEEMPH_OUT,
    PIPE_TXEQ_DONE,
    PIPE_RXEQ_DONE,
    TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    pipe_rx1_eq_lffs_sel,
    USER_RXEQ_ADAPT_DONE,
    RST_CPLLRESET,
    pipe_pclk_in,
    PIPE_TXEQ_CONTROL,
    PIPE_TXEQ_DEEMPH,
    PIPE_TXEQ_PRESET,
    rate_gen3_1,
    PIPE_RXEQ_PRESET,
    PIPE_RXEQ_CONTROL,
    PIPE_RXEQ_TXPRESET,
    PIPE_RXEQ_LFFS);
  output [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  output [15:0]EQ_TXEQ_DEEMPH_OUT;
  output [0:0]PIPE_TXEQ_DONE;
  output [0:0]PIPE_RXEQ_DONE;
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  output pipe_rx1_eq_lffs_sel;
  output USER_RXEQ_ADAPT_DONE;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input [1:0]PIPE_TXEQ_CONTROL;
  input [5:0]PIPE_TXEQ_DEEMPH;
  input [3:0]PIPE_TXEQ_PRESET;
  input rate_gen3_1;
  input [2:0]PIPE_RXEQ_PRESET;
  input [1:0]PIPE_RXEQ_CONTROL;
  input [3:0]PIPE_RXEQ_TXPRESET;
  input [5:0]PIPE_RXEQ_LFFS;

  wire [15:0]EQ_TXEQ_DEEMPH_OUT;
  wire \FSM_onehot_fsm_rx[1]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm_rx[1]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm_rx[3]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm_rx[4]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_tx[1]_i_2__0_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_2__0_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_3__0_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_4__0_n_0 ;
  wire [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  wire [1:0]PIPE_RXEQ_CONTROL;
  wire [0:0]PIPE_RXEQ_DONE;
  wire [5:0]PIPE_RXEQ_LFFS;
  wire [2:0]PIPE_RXEQ_PRESET;
  wire [3:0]PIPE_RXEQ_TXPRESET;
  wire [1:0]PIPE_TXEQ_CONTROL;
  wire [5:0]PIPE_TXEQ_DEEMPH;
  wire [0:0]PIPE_TXEQ_DONE;
  wire [3:0]PIPE_TXEQ_PRESET;
  wire RST_CPLLRESET;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_RXEQ_ADAPT_DONE;
  wire [2:0]fsm_tx;
  wire [2:0]fsm_tx__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire [17:0]p_0_out;
  wire pipe_pclk_in;
  wire pipe_rx1_eq_lffs_sel;
  wire rate_gen3_1;
  wire rxeq_adapt_done_reg_i_2__0_n_0;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [1:0]rxeq_cnt;
  wire \rxeq_cnt[2]_i_1__0_n_0 ;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg2;
  wire rxeq_done;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1__0_n_0 ;
  wire \rxeq_fs_reg_n_0_[0] ;
  wire \rxeq_fs_reg_n_0_[1] ;
  wire \rxeq_fs_reg_n_0_[2] ;
  wire \rxeq_fs_reg_n_0_[3] ;
  wire \rxeq_fs_reg_n_0_[4] ;
  wire \rxeq_fs_reg_n_0_[5] ;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1__0_n_0 ;
  wire \rxeq_lf_reg_n_0_[0] ;
  wire \rxeq_lf_reg_n_0_[1] ;
  wire \rxeq_lf_reg_n_0_[2] ;
  wire \rxeq_lf_reg_n_0_[3] ;
  wire \rxeq_lf_reg_n_0_[4] ;
  wire \rxeq_lf_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_lffs_sel_i_2__0_n_0;
  wire rxeq_lffs_sel_i_3__0_n_0;
  wire rxeq_lffs_sel_reg_n_0;
  wire \rxeq_new_txcoeff_reg_n_0_[2] ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_reg_n_0;
  wire \rxeq_preset[0]_i_1__0_n_0 ;
  wire \rxeq_preset[1]_i_1__0_n_0 ;
  wire \rxeq_preset[2]_i_1__0_n_0 ;
  wire \rxeq_preset[2]_i_2__0_n_0 ;
  wire \rxeq_preset[2]_i_3__0_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg2;
  wire \rxeq_preset_reg_n_0_[0] ;
  wire \rxeq_preset_reg_n_0_[1] ;
  wire \rxeq_preset_reg_n_0_[2] ;
  wire rxeq_preset_valid;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_3;
  wire rxeq_scan_i_n_6;
  wire rxeq_scan_i_n_7;
  wire rxeq_scan_i_n_8;
  wire [17:0]rxeq_txcoeff;
  wire \rxeq_txcoeff_reg_n_0_[0] ;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[1] ;
  wire \rxeq_txcoeff_reg_n_0_[2] ;
  wire \rxeq_txcoeff_reg_n_0_[3] ;
  wire \rxeq_txcoeff_reg_n_0_[4] ;
  wire \rxeq_txcoeff_reg_n_0_[5] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1__0_n_0 ;
  wire \rxeq_txpreset[3]_i_3__0_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg2;
  wire \rxeq_txpreset_reg_n_0_[0] ;
  wire \rxeq_txpreset_reg_n_0_[1] ;
  wire \rxeq_txpreset_reg_n_0_[2] ;
  wire \rxeq_txpreset_reg_n_0_[3] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg2;
  wire txeq_done;
  wire \txeq_preset[17]_i_1__0_n_0 ;
  wire \txeq_preset[3]_i_1__0_n_0 ;
  wire \txeq_preset[7]_i_1__0_n_0 ;
  wire txeq_preset_done;
  wire txeq_preset_done_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg2;
  wire \txeq_preset_reg_n_0_[0] ;
  wire \txeq_preset_reg_n_0_[10] ;
  wire \txeq_preset_reg_n_0_[11] ;
  wire \txeq_preset_reg_n_0_[12] ;
  wire \txeq_preset_reg_n_0_[13] ;
  wire \txeq_preset_reg_n_0_[14] ;
  wire \txeq_preset_reg_n_0_[15] ;
  wire \txeq_preset_reg_n_0_[16] ;
  wire \txeq_preset_reg_n_0_[17] ;
  wire \txeq_preset_reg_n_0_[1] ;
  wire \txeq_preset_reg_n_0_[2] ;
  wire \txeq_preset_reg_n_0_[3] ;
  wire \txeq_preset_reg_n_0_[7] ;
  wire \txeq_preset_reg_n_0_[8] ;
  wire \txeq_preset_reg_n_0_[9] ;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1__0_n_0 ;
  wire \txeq_txcoeff[0]_i_2__0_n_0 ;
  wire \txeq_txcoeff[10]_i_1__0_n_0 ;
  wire \txeq_txcoeff[10]_i_2__0_n_0 ;
  wire \txeq_txcoeff[11]_i_1__0_n_0 ;
  wire \txeq_txcoeff[11]_i_2__0_n_0 ;
  wire \txeq_txcoeff[12]_i_1__0_n_0 ;
  wire \txeq_txcoeff[12]_i_2__0_n_0 ;
  wire \txeq_txcoeff[13]_i_1__0_n_0 ;
  wire \txeq_txcoeff[13]_i_2__0_n_0 ;
  wire \txeq_txcoeff[14]_i_1__0_n_0 ;
  wire \txeq_txcoeff[14]_i_2__0_n_0 ;
  wire \txeq_txcoeff[15]_i_1__0_n_0 ;
  wire \txeq_txcoeff[15]_i_2__0_n_0 ;
  wire \txeq_txcoeff[16]_i_1__0_n_0 ;
  wire \txeq_txcoeff[16]_i_2__0_n_0 ;
  wire \txeq_txcoeff[17]_i_1__0_n_0 ;
  wire \txeq_txcoeff[17]_i_2__0_n_0 ;
  wire \txeq_txcoeff[18]_i_2__0_n_0 ;
  wire \txeq_txcoeff[18]_i_3__0_n_0 ;
  wire \txeq_txcoeff[1]_i_1__0_n_0 ;
  wire \txeq_txcoeff[1]_i_2__0_n_0 ;
  wire \txeq_txcoeff[2]_i_1__0_n_0 ;
  wire \txeq_txcoeff[2]_i_2__0_n_0 ;
  wire \txeq_txcoeff[3]_i_1__0_n_0 ;
  wire \txeq_txcoeff[3]_i_2__0_n_0 ;
  wire \txeq_txcoeff[4]_i_1__0_n_0 ;
  wire \txeq_txcoeff[4]_i_2__0_n_0 ;
  wire \txeq_txcoeff[5]_i_1__0_n_0 ;
  wire \txeq_txcoeff[5]_i_2__0_n_0 ;
  wire \txeq_txcoeff[6]_i_1__0_n_0 ;
  wire \txeq_txcoeff[6]_i_2__0_n_0 ;
  wire \txeq_txcoeff[7]_i_1__0_n_0 ;
  wire \txeq_txcoeff[7]_i_2__0_n_0 ;
  wire \txeq_txcoeff[8]_i_1__0_n_0 ;
  wire \txeq_txcoeff[8]_i_2__0_n_0 ;
  wire \txeq_txcoeff[9]_i_1__0_n_0 ;
  wire \txeq_txcoeff[9]_i_2__0_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;

  LUT5 #(
    .INIT(32'hABABABAA)) 
    \FSM_onehot_fsm_rx[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ),
        .I1(rxeq_control_reg2[1]),
        .I2(rxeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm_rx[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_fsm_rx[1]_i_2__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    \FSM_onehot_fsm_rx[3]_i_1__0 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h2ABA2AAA)) 
    \FSM_onehot_fsm_rx[4]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[4]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[1]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_3),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[3]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[4]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hC073C043C073CC73)) 
    \FSM_sequential_fsm_tx[0]_i_1__0 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__0_n_0 ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(fsm_tx__0[0]));
  LUT6 #(
    .INIT(64'h3F703F7C3F7C0F70)) 
    \FSM_sequential_fsm_tx[1]_i_1__0 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__0_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(fsm_tx__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_fsm_tx[1]_i_2__0 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_tx[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hA8A8A8A8A8AAA8A8)) 
    \FSM_sequential_fsm_tx[2]_i_1__0 
       (.I0(\FSM_sequential_fsm_tx[2]_i_2__0_n_0 ),
        .I1(\FSM_sequential_fsm_tx[2]_i_3__0_n_0 ),
        .I2(fsm_tx[2]),
        .I3(\FSM_sequential_fsm_tx[2]_i_4__0_n_0 ),
        .I4(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(fsm_tx__0[2]));
  LUT5 #(
    .INIT(32'h7777FFF7)) 
    \FSM_sequential_fsm_tx[2]_i_2__0 
       (.I0(fsm_tx[1]),
        .I1(fsm_tx[2]),
        .I2(txeq_control_reg2[1]),
        .I3(txeq_control_reg2[0]),
        .I4(fsm_tx[0]),
        .O(\FSM_sequential_fsm_tx[2]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h0F800080)) 
    \FSM_sequential_fsm_tx[2]_i_3__0 
       (.I0(txeq_control_reg2[1]),
        .I1(txeq_control_reg2[0]),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(txeq_preset_done),
        .O(\FSM_sequential_fsm_tx[2]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_fsm_tx[2]_i_4__0 
       (.I0(fsm_tx[1]),
        .I1(fsm_tx[0]),
        .O(\FSM_sequential_fsm_tx[2]_i_4__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[0]),
        .Q(fsm_tx[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[1]),
        .Q(fsm_tx[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[2]),
        .Q(fsm_tx[2]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_175
       (.I0(rxeq_user_txcoeff_reg2[17]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[17]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_176
       (.I0(rxeq_user_txcoeff_reg2[16]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[16]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_177
       (.I0(rxeq_user_txcoeff_reg2[15]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[15]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_178
       (.I0(rxeq_user_txcoeff_reg2[14]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[14]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_179
       (.I0(rxeq_user_txcoeff_reg2[13]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[13]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_180
       (.I0(rxeq_user_txcoeff_reg2[12]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[12]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_181
       (.I0(rxeq_user_txcoeff_reg2[11]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[11]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_182
       (.I0(rxeq_user_txcoeff_reg2[10]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[10]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_183
       (.I0(rxeq_user_txcoeff_reg2[9]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[9]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_184
       (.I0(rxeq_user_txcoeff_reg2[8]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[8]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_185
       (.I0(rxeq_user_txcoeff_reg2[7]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[7]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_186
       (.I0(rxeq_user_txcoeff_reg2[6]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[6]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_187
       (.I0(rxeq_user_txcoeff_reg2[5]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[5]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_188
       (.I0(rxeq_user_txcoeff_reg2[4]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[4]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_189
       (.I0(rxeq_user_txcoeff_reg2[3]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    PCIE_3_0_i_i_190
       (.I0(rxeq_user_txcoeff_reg2[2]),
        .I1(\rxeq_new_txcoeff_reg_n_0_[2] ),
        .I2(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[2]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_191
       (.I0(rxeq_user_txcoeff_reg2[1]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[1]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_192
       (.I0(rxeq_user_txcoeff_reg2[0]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX1EQLPNEWTXCOEFFORPRESET[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_4
       (.I0(rxeq_user_mode_reg2),
        .I1(rxeq_user_en_reg2),
        .I2(rxeq_lffs_sel_reg_n_0),
        .O(pipe_rx1_eq_lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_gen3_1),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_23__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[14]),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_24__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[13]),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_25__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[12]),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_26__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[11]),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_27__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_28__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[3]),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_29__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[2]),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_30__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[1]),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_31__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[0]),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_32__0 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(gen3_reg2),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_33__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[10]),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_34__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[9]),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_35__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[8]),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_36__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[7]),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_37__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[6]),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_38__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[5]),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_39 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_7),
        .Q(USER_RXEQ_ADAPT_DONE),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    rxeq_adapt_done_reg_i_2__0
       (.I0(rxeq_control_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(rxeq_control_reg2[1]),
        .O(rxeq_adapt_done_reg_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_6),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h8888FFF8)) 
    \rxeq_cnt[0]_i_1__0 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \rxeq_cnt[1]_i_1__0 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(\rxeq_cnt_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h0EEEE000)) 
    \rxeq_cnt[2]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\rxeq_cnt_reg_n_0_[2] ),
        .O(\rxeq_cnt[2]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_cnt[2]_i_1__0_n_0 ),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_CONTROL[0]),
        .Q(rxeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_CONTROL[1]),
        .Q(rxeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_done),
        .Q(PIPE_RXEQ_DONE),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[0]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_fs[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_fs[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[2]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_fs[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[3]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_fs[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[4]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_fs[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    \rxeq_fs[5]_i_1__0 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ),
        .O(\rxeq_fs[5]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[5]_i_2__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_fs[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[0]),
        .Q(\rxeq_fs_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[1]),
        .Q(\rxeq_fs_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[2]),
        .Q(\rxeq_fs_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[3]),
        .Q(\rxeq_fs_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[4]),
        .Q(\rxeq_fs_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[5]),
        .Q(\rxeq_fs_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[0]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_lf[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_lf[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[2]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_lf[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[3]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_lf[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[4]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_lf[4]));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \rxeq_lf[5]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(\rxeq_lf[5]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[5]_i_2__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_lf[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[0]),
        .Q(\rxeq_lf_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[1]),
        .Q(\rxeq_lf_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[2]),
        .Q(\rxeq_lf_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[3]),
        .Q(\rxeq_lf_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[4]),
        .Q(\rxeq_lf_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[5]),
        .Q(\rxeq_lf_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[0]),
        .Q(rxeq_lffs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[1]),
        .Q(rxeq_lffs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[2]),
        .Q(rxeq_lffs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[3]),
        .Q(rxeq_lffs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[4]),
        .Q(rxeq_lffs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[5]),
        .Q(rxeq_lffs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rxeq_lffs_sel_i_2__0
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(rxeq_lffs_sel_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    rxeq_lffs_sel_i_3__0
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(rxeq_lffs_sel_i_3__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_lffs_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_8),
        .Q(rxeq_lffs_sel_reg_n_0),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_new_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(\rxeq_new_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(rxeq_new_txcoeff_req_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[0]_i_1__0 
       (.I0(rxeq_preset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__0_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[0] ),
        .O(\rxeq_preset[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[1]_i_1__0 
       (.I0(rxeq_preset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__0_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[1] ),
        .O(\rxeq_preset[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[2]_i_1__0 
       (.I0(rxeq_preset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__0_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
    \rxeq_preset[2]_i_2__0 
       (.I0(\rxeq_preset[2]_i_3__0_n_0 ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I4(rxeq_adapt_done_reg_i_2__0_n_0),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rxeq_preset[2]_i_3__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_preset[2]_i_3__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[0]),
        .Q(rxeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[1]),
        .Q(rxeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[2]),
        .Q(rxeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1__0_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1__0_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1__0_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .Q(rxeq_preset_valid),
        .R(RST_CPLLRESET));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_rxeq_scan_20 rxeq_scan_i
       (.D({rxeq_scan_i_n_1,rxeq_scan_i_n_2,rxeq_scan_i_n_3}),
        .\FSM_onehot_fsm_rx_reg[5] ({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .Q({\FSM_onehot_fsm_rx_reg_n_0_[6] ,\FSM_onehot_fsm_rx_reg_n_0_[5] ,\FSM_onehot_fsm_rx_reg_n_0_[4] ,\FSM_onehot_fsm_rx_reg_n_0_[2] ,\FSM_onehot_fsm_rx_reg_n_0_[1] }),
        .RST_CPLLRESET(RST_CPLLRESET),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .adapt_done_reg_0(rxeq_scan_i_n_6),
        .\fs_reg1_reg[5]_0 ({\rxeq_fs_reg_n_0_[5] ,\rxeq_fs_reg_n_0_[4] ,\rxeq_fs_reg_n_0_[3] ,\rxeq_fs_reg_n_0_[2] ,\rxeq_fs_reg_n_0_[1] ,\rxeq_fs_reg_n_0_[0] }),
        .\lf_reg1_reg[5]_0 ({\rxeq_lf_reg_n_0_[5] ,\rxeq_lf_reg_n_0_[4] ,\rxeq_lf_reg_n_0_[3] ,\rxeq_lf_reg_n_0_[2] ,\rxeq_lf_reg_n_0_[1] ,\rxeq_lf_reg_n_0_[0] }),
        .new_txcoeff_done_reg_0(rxeq_scan_i_n_7),
        .new_txcoeff_done_reg_1(rxeq_scan_i_n_8),
        .\new_txcoeff_reg[2]_0 (rxeq_scan_i_n_0),
        .new_txcoeff_req_reg1_reg_0(rxeq_new_txcoeff_req_reg_n_0),
        .out(rxeq_control_reg2),
        .pipe_pclk_in(pipe_pclk_in),
        .\preset_reg1_reg[2]_0 ({\rxeq_preset_reg_n_0_[2] ,\rxeq_preset_reg_n_0_[1] ,\rxeq_preset_reg_n_0_[0] }),
        .rxeq_adapt_done_reg(rxeq_lffs_sel_i_3__0_n_0),
        .rxeq_adapt_done_reg_reg(rxeq_adapt_done_reg_i_2__0_n_0),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_reg_n_0),
        .rxeq_done(rxeq_done),
        .rxeq_lffs_sel_reg(rxeq_lffs_sel_i_2__0_n_0),
        .rxeq_lffs_sel_reg_0(rxeq_lffs_sel_reg_n_0),
        .\rxeq_new_txcoeff_reg[2] (\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ),
        .\rxeq_new_txcoeff_reg[2]_0 (\rxeq_new_txcoeff_reg_n_0_[2] ),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\txcoeff_reg1_reg[17]_0 ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,\rxeq_txcoeff_reg_n_0_[5] ,\rxeq_txcoeff_reg_n_0_[4] ,\rxeq_txcoeff_reg_n_0_[3] ,\rxeq_txcoeff_reg_n_0_[2] ,\rxeq_txcoeff_reg_n_0_[1] ,\rxeq_txcoeff_reg_n_0_[0] }),
        .\txpreset_reg1_reg[3]_0 ({\rxeq_txpreset_reg_n_0_[3] ,\rxeq_txpreset_reg_n_0_[2] ,\rxeq_txpreset_reg_n_0_[1] ,\rxeq_txpreset_reg_n_0_[0] }));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[0]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[0]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[10]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[10]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[11]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[11]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[12]_i_1__0 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[12]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[13]_i_1__0 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[13]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[14]_i_1__0 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[14]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[15]_i_1__0 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[15]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[16]_i_1__0 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[16]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[17]_i_1__0 
       (.I0(txeq_deemph_reg2[5]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[17]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[1]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[1]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[2]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[2]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[3]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[3]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[4]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[4]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[5]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[5]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[6]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[6]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[7]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[7]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[8]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[8]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[9]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[0]),
        .Q(\rxeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[1]),
        .Q(\rxeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[2]),
        .Q(\rxeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[3]),
        .Q(\rxeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[4]),
        .Q(\rxeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[5]),
        .Q(\rxeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[0]_i_1__0 
       (.I0(rxeq_txpreset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[1]_i_1__0 
       (.I0(rxeq_txpreset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[2]_i_1__0 
       (.I0(rxeq_txpreset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[2]));
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \rxeq_txpreset[3]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I1(\rxeq_txpreset[3]_i_3__0_n_0 ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(rxeq_control_reg2[1]),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_txpreset[3]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[3]_i_2__0 
       (.I0(rxeq_txpreset_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[3]));
  LUT3 #(
    .INIT(8'h01)) 
    \rxeq_txpreset[3]_i_3__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\rxeq_txpreset[3]_i_3__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[0]),
        .Q(rxeq_txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[1]),
        .Q(rxeq_txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[2]),
        .Q(rxeq_txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[3]),
        .Q(rxeq_txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txpreset[0]),
        .Q(\rxeq_txpreset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txpreset[1]),
        .Q(\rxeq_txpreset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txpreset[2]),
        .Q(\rxeq_txpreset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txpreset[3]),
        .Q(\rxeq_txpreset_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_CONTROL[0]),
        .Q(txeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_CONTROL[1]),
        .Q(txeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[0]),
        .Q(txeq_deemph_reg1[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[1]),
        .Q(txeq_deemph_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[2]),
        .Q(txeq_deemph_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[3]),
        .Q(txeq_deemph_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[4]),
        .Q(txeq_deemph_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[5]),
        .Q(txeq_deemph_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    txeq_done_i_1__0
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_done));
  FDRE #(
    .INIT(1'b0)) 
    txeq_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_done),
        .Q(PIPE_TXEQ_DONE),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00001000)) 
    \txeq_preset[0]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[0]));
  LUT5 #(
    .INIT(32'hABEAABAF)) 
    \txeq_preset[10]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[10]));
  LUT5 #(
    .INIT(32'hFFFF200D)) 
    \txeq_preset[11]_i_1__0 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[11]));
  LUT5 #(
    .INIT(32'h01151110)) 
    \txeq_preset[12]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[12]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[13]_i_1__0 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[13]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1__0 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[14]));
  LUT4 #(
    .INIT(16'hF0F1)) 
    \txeq_preset[15]_i_1__0 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[15]));
  LUT4 #(
    .INIT(16'h0006)) 
    \txeq_preset[16]_i_1__0 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(RST_CPLLRESET),
        .O(p_0_out[16]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \txeq_preset[17]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .O(\txeq_preset[17]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2__0 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[17]));
  LUT5 #(
    .INIT(32'h00001004)) 
    \txeq_preset[1]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[1]));
  LUT4 #(
    .INIT(16'h0E00)) 
    \txeq_preset[2]_i_1__0 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[0]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[2]));
  LUT5 #(
    .INIT(32'h01440140)) 
    \txeq_preset[3]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00001400)) 
    \txeq_preset[7]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(\txeq_preset[7]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAAAFBEAF)) 
    \txeq_preset[8]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(p_0_out[8]));
  LUT5 #(
    .INIT(32'hCCFCCFCD)) 
    \txeq_preset[9]_i_1__0 
       (.I0(txeq_preset_reg2[1]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[9]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h04)) 
    txeq_preset_done_i_1__0
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_preset_done_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_done_i_1__0_n_0),
        .Q(txeq_preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[0]),
        .Q(txeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[1]),
        .Q(txeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[2]),
        .Q(txeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[3]),
        .Q(txeq_preset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[0]),
        .Q(\txeq_preset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[10]),
        .Q(\txeq_preset_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[11]),
        .Q(\txeq_preset_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[12]),
        .Q(\txeq_preset_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[13]),
        .Q(\txeq_preset_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[14]),
        .Q(\txeq_preset_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[15]),
        .Q(\txeq_preset_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[16]),
        .Q(\txeq_preset_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[17]),
        .Q(\txeq_preset_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[1]),
        .Q(\txeq_preset_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[2]),
        .Q(\txeq_preset_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(\txeq_preset[3]_i_1__0_n_0 ),
        .Q(\txeq_preset_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(\txeq_preset[7]_i_1__0_n_0 ),
        .Q(\txeq_preset_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[8]),
        .Q(\txeq_preset_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[9]),
        .Q(\txeq_preset_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h45404040)) 
    \txeq_txcoeff[0]_i_1__0 
       (.I0(fsm_tx[2]),
        .I1(\txeq_txcoeff[0]_i_2__0_n_0 ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .O(\txeq_txcoeff[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[0]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[0] ),
        .O(\txeq_txcoeff[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[10]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[7]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[10]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[13]),
        .O(\txeq_txcoeff[10]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[10]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[13]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[14]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[10] ),
        .O(\txeq_txcoeff[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[11]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[8]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[11]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[14]),
        .O(\txeq_txcoeff[11]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[11]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[14]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[15]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[11] ),
        .O(\txeq_txcoeff[11]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[12]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[9]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[12]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[15]),
        .O(\txeq_txcoeff[12]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[12]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[15]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[0]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[12] ),
        .O(\txeq_txcoeff[12]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[13]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[10]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[13]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[13]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[13]_i_2__0 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[13] ),
        .O(\txeq_txcoeff[13]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[14]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[14]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[14]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[14]_i_2__0 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[2]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[14] ),
        .O(\txeq_txcoeff[14]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[15]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[11]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[15]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[2]),
        .O(\txeq_txcoeff[15]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[15]_i_2__0 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[3]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[15] ),
        .O(\txeq_txcoeff[15]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[16]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[12]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[16]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[16]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[16]_i_2__0 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[4]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[16] ),
        .O(\txeq_txcoeff[16]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[17]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[13]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[17]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[17]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[17]_i_2__0 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[17] ),
        .O(\txeq_txcoeff[17]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFF0F04FF)) 
    \txeq_txcoeff[18]_i_1__0 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'h22F3220022002200)) 
    \txeq_txcoeff[18]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[14]),
        .I1(fsm_tx[1]),
        .I2(\txeq_txcoeff[18]_i_3__0_n_0 ),
        .I3(fsm_tx[2]),
        .I4(txeq_deemph_reg2[5]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[18]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_txcoeff[18]_i_3__0 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\txeq_txcoeff[18]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[1]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[1]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[5]),
        .O(\txeq_txcoeff[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[1]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[5]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[6]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[1] ),
        .O(\txeq_txcoeff[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[2]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[0]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[2]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[6]),
        .O(\txeq_txcoeff[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[2]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[6]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[7]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[2] ),
        .O(\txeq_txcoeff[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[3]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[1]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[3]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[7]),
        .O(\txeq_txcoeff[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[3]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[7]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[8]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[3] ),
        .O(\txeq_txcoeff[3]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[4]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[4]_i_2__0_n_0 ),
        .O(\txeq_txcoeff[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[4]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[9]),
        .I1(EQ_TXEQ_DEEMPH_OUT[8]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[4]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[5]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[3]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[5]_i_2__0_n_0 ),
        .O(\txeq_txcoeff[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[5]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[10]),
        .I1(EQ_TXEQ_DEEMPH_OUT[9]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[5]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[6]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[4]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[6]_i_2__0_n_0 ),
        .O(\txeq_txcoeff[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[6]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(EQ_TXEQ_DEEMPH_OUT[10]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[7]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[7]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[7]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[11]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[7] ),
        .O(\txeq_txcoeff[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[8]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[5]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[8]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[11]),
        .O(\txeq_txcoeff[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[8]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[11]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[12]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[8] ),
        .O(\txeq_txcoeff[8]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[9]_i_1__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[6]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[9]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[12]),
        .O(\txeq_txcoeff[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[9]_i_2__0 
       (.I0(EQ_TXEQ_DEEMPH_OUT[12]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[13]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[9] ),
        .O(\txeq_txcoeff[9]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000004000F000400)) 
    \txeq_txcoeff_cnt[0]_i_1__0 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT5 #(
    .INIT(32'h00006000)) 
    \txeq_txcoeff_cnt[1]_i_1__0 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[2]),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[8]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[9]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[12]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[4]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1__0_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[7]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_eq" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_eq_8
   (PIPERX2EQLPNEWTXCOEFFORPRESET,
    EQ_TXEQ_DEEMPH_OUT,
    PIPE_TXEQ_DONE,
    PIPE_RXEQ_DONE,
    TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    pipe_rx2_eq_lffs_sel,
    rxeq_adapt_done_reg_0,
    RST_CPLLRESET,
    pipe_pclk_in,
    PIPE_TXEQ_CONTROL,
    PIPE_TXEQ_DEEMPH,
    PIPE_TXEQ_PRESET,
    rate_gen3_2,
    PIPE_RXEQ_PRESET,
    PIPE_RXEQ_CONTROL,
    PIPE_RXEQ_TXPRESET,
    PIPE_RXEQ_LFFS);
  output [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  output [15:0]EQ_TXEQ_DEEMPH_OUT;
  output [0:0]PIPE_TXEQ_DONE;
  output [0:0]PIPE_RXEQ_DONE;
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  output pipe_rx2_eq_lffs_sel;
  output rxeq_adapt_done_reg_0;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input [1:0]PIPE_TXEQ_CONTROL;
  input [5:0]PIPE_TXEQ_DEEMPH;
  input [3:0]PIPE_TXEQ_PRESET;
  input rate_gen3_2;
  input [2:0]PIPE_RXEQ_PRESET;
  input [1:0]PIPE_RXEQ_CONTROL;
  input [3:0]PIPE_RXEQ_TXPRESET;
  input [5:0]PIPE_RXEQ_LFFS;

  wire [15:0]EQ_TXEQ_DEEMPH_OUT;
  wire \FSM_onehot_fsm_rx[1]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm_rx[1]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm_rx[3]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm_rx[4]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_tx[1]_i_2__1_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_2__1_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_3__1_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_4__1_n_0 ;
  wire [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  wire [1:0]PIPE_RXEQ_CONTROL;
  wire [0:0]PIPE_RXEQ_DONE;
  wire [5:0]PIPE_RXEQ_LFFS;
  wire [2:0]PIPE_RXEQ_PRESET;
  wire [3:0]PIPE_RXEQ_TXPRESET;
  wire [1:0]PIPE_TXEQ_CONTROL;
  wire [5:0]PIPE_TXEQ_DEEMPH;
  wire [0:0]PIPE_TXEQ_DONE;
  wire [3:0]PIPE_TXEQ_PRESET;
  wire RST_CPLLRESET;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire [2:0]fsm_tx;
  wire [2:0]fsm_tx__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire [17:0]p_0_out;
  wire pipe_pclk_in;
  wire pipe_rx2_eq_lffs_sel;
  wire rate_gen3_2;
  wire rxeq_adapt_done_reg_0;
  wire rxeq_adapt_done_reg_i_2__1_n_0;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [1:0]rxeq_cnt;
  wire \rxeq_cnt[2]_i_1__1_n_0 ;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg2;
  wire rxeq_done;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1__1_n_0 ;
  wire \rxeq_fs_reg_n_0_[0] ;
  wire \rxeq_fs_reg_n_0_[1] ;
  wire \rxeq_fs_reg_n_0_[2] ;
  wire \rxeq_fs_reg_n_0_[3] ;
  wire \rxeq_fs_reg_n_0_[4] ;
  wire \rxeq_fs_reg_n_0_[5] ;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1__1_n_0 ;
  wire \rxeq_lf_reg_n_0_[0] ;
  wire \rxeq_lf_reg_n_0_[1] ;
  wire \rxeq_lf_reg_n_0_[2] ;
  wire \rxeq_lf_reg_n_0_[3] ;
  wire \rxeq_lf_reg_n_0_[4] ;
  wire \rxeq_lf_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_lffs_sel_i_2__1_n_0;
  wire rxeq_lffs_sel_i_3__1_n_0;
  wire rxeq_lffs_sel_reg_n_0;
  wire \rxeq_new_txcoeff_reg_n_0_[2] ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_reg_n_0;
  wire \rxeq_preset[0]_i_1__1_n_0 ;
  wire \rxeq_preset[1]_i_1__1_n_0 ;
  wire \rxeq_preset[2]_i_1__1_n_0 ;
  wire \rxeq_preset[2]_i_2__1_n_0 ;
  wire \rxeq_preset[2]_i_3__1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg2;
  wire \rxeq_preset_reg_n_0_[0] ;
  wire \rxeq_preset_reg_n_0_[1] ;
  wire \rxeq_preset_reg_n_0_[2] ;
  wire rxeq_preset_valid;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_3;
  wire rxeq_scan_i_n_6;
  wire rxeq_scan_i_n_7;
  wire rxeq_scan_i_n_8;
  wire [17:0]rxeq_txcoeff;
  wire \rxeq_txcoeff_reg_n_0_[0] ;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[1] ;
  wire \rxeq_txcoeff_reg_n_0_[2] ;
  wire \rxeq_txcoeff_reg_n_0_[3] ;
  wire \rxeq_txcoeff_reg_n_0_[4] ;
  wire \rxeq_txcoeff_reg_n_0_[5] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1__1_n_0 ;
  wire \rxeq_txpreset[3]_i_3__1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg2;
  wire \rxeq_txpreset_reg_n_0_[0] ;
  wire \rxeq_txpreset_reg_n_0_[1] ;
  wire \rxeq_txpreset_reg_n_0_[2] ;
  wire \rxeq_txpreset_reg_n_0_[3] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg2;
  wire txeq_done;
  wire \txeq_preset[17]_i_1__1_n_0 ;
  wire \txeq_preset[3]_i_1__1_n_0 ;
  wire \txeq_preset[7]_i_1__1_n_0 ;
  wire txeq_preset_done;
  wire txeq_preset_done_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg2;
  wire \txeq_preset_reg_n_0_[0] ;
  wire \txeq_preset_reg_n_0_[10] ;
  wire \txeq_preset_reg_n_0_[11] ;
  wire \txeq_preset_reg_n_0_[12] ;
  wire \txeq_preset_reg_n_0_[13] ;
  wire \txeq_preset_reg_n_0_[14] ;
  wire \txeq_preset_reg_n_0_[15] ;
  wire \txeq_preset_reg_n_0_[16] ;
  wire \txeq_preset_reg_n_0_[17] ;
  wire \txeq_preset_reg_n_0_[1] ;
  wire \txeq_preset_reg_n_0_[2] ;
  wire \txeq_preset_reg_n_0_[3] ;
  wire \txeq_preset_reg_n_0_[7] ;
  wire \txeq_preset_reg_n_0_[8] ;
  wire \txeq_preset_reg_n_0_[9] ;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1__1_n_0 ;
  wire \txeq_txcoeff[0]_i_2__1_n_0 ;
  wire \txeq_txcoeff[10]_i_1__1_n_0 ;
  wire \txeq_txcoeff[10]_i_2__1_n_0 ;
  wire \txeq_txcoeff[11]_i_1__1_n_0 ;
  wire \txeq_txcoeff[11]_i_2__1_n_0 ;
  wire \txeq_txcoeff[12]_i_1__1_n_0 ;
  wire \txeq_txcoeff[12]_i_2__1_n_0 ;
  wire \txeq_txcoeff[13]_i_1__1_n_0 ;
  wire \txeq_txcoeff[13]_i_2__1_n_0 ;
  wire \txeq_txcoeff[14]_i_1__1_n_0 ;
  wire \txeq_txcoeff[14]_i_2__1_n_0 ;
  wire \txeq_txcoeff[15]_i_1__1_n_0 ;
  wire \txeq_txcoeff[15]_i_2__1_n_0 ;
  wire \txeq_txcoeff[16]_i_1__1_n_0 ;
  wire \txeq_txcoeff[16]_i_2__1_n_0 ;
  wire \txeq_txcoeff[17]_i_1__1_n_0 ;
  wire \txeq_txcoeff[17]_i_2__1_n_0 ;
  wire \txeq_txcoeff[18]_i_2__1_n_0 ;
  wire \txeq_txcoeff[18]_i_3__1_n_0 ;
  wire \txeq_txcoeff[1]_i_1__1_n_0 ;
  wire \txeq_txcoeff[1]_i_2__1_n_0 ;
  wire \txeq_txcoeff[2]_i_1__1_n_0 ;
  wire \txeq_txcoeff[2]_i_2__1_n_0 ;
  wire \txeq_txcoeff[3]_i_1__1_n_0 ;
  wire \txeq_txcoeff[3]_i_2__1_n_0 ;
  wire \txeq_txcoeff[4]_i_1__1_n_0 ;
  wire \txeq_txcoeff[4]_i_2__1_n_0 ;
  wire \txeq_txcoeff[5]_i_1__1_n_0 ;
  wire \txeq_txcoeff[5]_i_2__1_n_0 ;
  wire \txeq_txcoeff[6]_i_1__1_n_0 ;
  wire \txeq_txcoeff[6]_i_2__1_n_0 ;
  wire \txeq_txcoeff[7]_i_1__1_n_0 ;
  wire \txeq_txcoeff[7]_i_2__1_n_0 ;
  wire \txeq_txcoeff[8]_i_1__1_n_0 ;
  wire \txeq_txcoeff[8]_i_2__1_n_0 ;
  wire \txeq_txcoeff[9]_i_1__1_n_0 ;
  wire \txeq_txcoeff[9]_i_2__1_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;

  LUT5 #(
    .INIT(32'hABABABAA)) 
    \FSM_onehot_fsm_rx[1]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ),
        .I1(rxeq_control_reg2[1]),
        .I2(rxeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm_rx[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_fsm_rx[1]_i_2__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    \FSM_onehot_fsm_rx[3]_i_1__1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'h2ABA2AAA)) 
    \FSM_onehot_fsm_rx[4]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[4]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[1]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_3),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[3]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[4]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hC073C043C073CC73)) 
    \FSM_sequential_fsm_tx[0]_i_1__1 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__1_n_0 ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(fsm_tx__0[0]));
  LUT6 #(
    .INIT(64'h3F703F7C3F7C0F70)) 
    \FSM_sequential_fsm_tx[1]_i_1__1 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__1_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(fsm_tx__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_fsm_tx[1]_i_2__1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_tx[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hA8A8A8A8A8AAA8A8)) 
    \FSM_sequential_fsm_tx[2]_i_1__1 
       (.I0(\FSM_sequential_fsm_tx[2]_i_2__1_n_0 ),
        .I1(\FSM_sequential_fsm_tx[2]_i_3__1_n_0 ),
        .I2(fsm_tx[2]),
        .I3(\FSM_sequential_fsm_tx[2]_i_4__1_n_0 ),
        .I4(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(fsm_tx__0[2]));
  LUT5 #(
    .INIT(32'h7777FFF7)) 
    \FSM_sequential_fsm_tx[2]_i_2__1 
       (.I0(fsm_tx[1]),
        .I1(fsm_tx[2]),
        .I2(txeq_control_reg2[1]),
        .I3(txeq_control_reg2[0]),
        .I4(fsm_tx[0]),
        .O(\FSM_sequential_fsm_tx[2]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h0F800080)) 
    \FSM_sequential_fsm_tx[2]_i_3__1 
       (.I0(txeq_control_reg2[1]),
        .I1(txeq_control_reg2[0]),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(txeq_preset_done),
        .O(\FSM_sequential_fsm_tx[2]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_fsm_tx[2]_i_4__1 
       (.I0(fsm_tx[1]),
        .I1(fsm_tx[0]),
        .O(\FSM_sequential_fsm_tx[2]_i_4__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[0]),
        .Q(fsm_tx[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[1]),
        .Q(fsm_tx[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm_tx__0[2]),
        .Q(fsm_tx[2]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_193
       (.I0(rxeq_user_txcoeff_reg2[17]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[17]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_194
       (.I0(rxeq_user_txcoeff_reg2[16]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[16]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_195
       (.I0(rxeq_user_txcoeff_reg2[15]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[15]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_196
       (.I0(rxeq_user_txcoeff_reg2[14]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[14]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_197
       (.I0(rxeq_user_txcoeff_reg2[13]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[13]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_198
       (.I0(rxeq_user_txcoeff_reg2[12]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[12]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_199
       (.I0(rxeq_user_txcoeff_reg2[11]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[11]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_200
       (.I0(rxeq_user_txcoeff_reg2[10]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[10]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_201
       (.I0(rxeq_user_txcoeff_reg2[9]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[9]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_202
       (.I0(rxeq_user_txcoeff_reg2[8]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[8]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_203
       (.I0(rxeq_user_txcoeff_reg2[7]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[7]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_204
       (.I0(rxeq_user_txcoeff_reg2[6]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[6]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_205
       (.I0(rxeq_user_txcoeff_reg2[5]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[5]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_206
       (.I0(rxeq_user_txcoeff_reg2[4]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[4]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_207
       (.I0(rxeq_user_txcoeff_reg2[3]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    PCIE_3_0_i_i_208
       (.I0(rxeq_user_txcoeff_reg2[2]),
        .I1(\rxeq_new_txcoeff_reg_n_0_[2] ),
        .I2(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[2]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_209
       (.I0(rxeq_user_txcoeff_reg2[1]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[1]));
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_0_i_i_210
       (.I0(rxeq_user_txcoeff_reg2[0]),
        .I1(rxeq_user_en_reg2),
        .O(PIPERX2EQLPNEWTXCOEFFORPRESET[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    PCIE_3_0_i_i_7
       (.I0(rxeq_user_mode_reg2),
        .I1(rxeq_user_en_reg2),
        .I2(rxeq_lffs_sel_reg_n_0),
        .O(pipe_rx2_eq_lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_gen3_2),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_22__0 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[14]),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_23__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[13]),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_24__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[12]),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_25__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[11]),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_26__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_27__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[3]),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_28__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[2]),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_29__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[1]),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_30__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[0]),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_31__1 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(gen3_reg2),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_32__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[10]),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_33__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[9]),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_34__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[8]),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_35__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[7]),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_36__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[6]),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_37__1 
       (.I0(gen3_reg2),
        .I1(EQ_TXEQ_DEEMPH_OUT[5]),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gth_channel.gthe2_channel_i_i_38__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_7),
        .Q(rxeq_adapt_done_reg_0),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    rxeq_adapt_done_reg_i_2__1
       (.I0(rxeq_control_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(rxeq_control_reg2[1]),
        .O(rxeq_adapt_done_reg_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_6),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h8888FFF8)) 
    \rxeq_cnt[0]_i_1__1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \rxeq_cnt[1]_i_1__1 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(\rxeq_cnt_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'h0EEEE000)) 
    \rxeq_cnt[2]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\rxeq_cnt_reg_n_0_[2] ),
        .O(\rxeq_cnt[2]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_cnt[2]_i_1__1_n_0 ),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_CONTROL[0]),
        .Q(rxeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_CONTROL[1]),
        .Q(rxeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_done),
        .Q(PIPE_RXEQ_DONE),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[0]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_fs[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[1]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_fs[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[2]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_fs[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[3]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_fs[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[4]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_fs[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    \rxeq_fs[5]_i_1__1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ),
        .O(\rxeq_fs[5]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[5]_i_2__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_fs[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[0]),
        .Q(\rxeq_fs_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[1]),
        .Q(\rxeq_fs_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[2]),
        .Q(\rxeq_fs_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[3]),
        .Q(\rxeq_fs_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[4]),
        .Q(\rxeq_fs_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[5]),
        .Q(\rxeq_fs_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[0]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_lf[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[1]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_lf[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[2]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_lf[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[3]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_lf[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[4]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_lf[4]));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \rxeq_lf[5]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(\rxeq_lf[5]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[5]_i_2__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_lf[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[0]),
        .Q(\rxeq_lf_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[1]),
        .Q(\rxeq_lf_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[2]),
        .Q(\rxeq_lf_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[3]),
        .Q(\rxeq_lf_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[4]),
        .Q(\rxeq_lf_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[5]),
        .Q(\rxeq_lf_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[0]),
        .Q(rxeq_lffs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[1]),
        .Q(rxeq_lffs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[2]),
        .Q(rxeq_lffs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[3]),
        .Q(rxeq_lffs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[4]),
        .Q(rxeq_lffs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_LFFS[5]),
        .Q(rxeq_lffs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rxeq_lffs_sel_i_2__1
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(rxeq_lffs_sel_i_2__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    rxeq_lffs_sel_i_3__1
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(rxeq_lffs_sel_i_3__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_lffs_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_8),
        .Q(rxeq_lffs_sel_reg_n_0),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_new_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(\rxeq_new_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(rxeq_new_txcoeff_req_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[0]_i_1__1 
       (.I0(rxeq_preset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__1_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[0] ),
        .O(\rxeq_preset[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[1]_i_1__1 
       (.I0(rxeq_preset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__1_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[1] ),
        .O(\rxeq_preset[1]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[2]_i_1__1 
       (.I0(rxeq_preset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__1_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
    \rxeq_preset[2]_i_2__1 
       (.I0(\rxeq_preset[2]_i_3__1_n_0 ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I4(rxeq_adapt_done_reg_i_2__1_n_0),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rxeq_preset[2]_i_3__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_preset[2]_i_3__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[0]),
        .Q(rxeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[1]),
        .Q(rxeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_PRESET[2]),
        .Q(rxeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1__1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1__1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1__1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .Q(rxeq_preset_valid),
        .R(RST_CPLLRESET));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_rxeq_scan_18 rxeq_scan_i
       (.D({rxeq_scan_i_n_1,rxeq_scan_i_n_2,rxeq_scan_i_n_3}),
        .\FSM_onehot_fsm_rx_reg[5] ({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .Q({\FSM_onehot_fsm_rx_reg_n_0_[6] ,\FSM_onehot_fsm_rx_reg_n_0_[5] ,\FSM_onehot_fsm_rx_reg_n_0_[4] ,\FSM_onehot_fsm_rx_reg_n_0_[2] ,\FSM_onehot_fsm_rx_reg_n_0_[1] }),
        .RST_CPLLRESET(RST_CPLLRESET),
        .adapt_done_reg_0(rxeq_scan_i_n_6),
        .\fs_reg1_reg[5]_0 ({\rxeq_fs_reg_n_0_[5] ,\rxeq_fs_reg_n_0_[4] ,\rxeq_fs_reg_n_0_[3] ,\rxeq_fs_reg_n_0_[2] ,\rxeq_fs_reg_n_0_[1] ,\rxeq_fs_reg_n_0_[0] }),
        .\lf_reg1_reg[5]_0 ({\rxeq_lf_reg_n_0_[5] ,\rxeq_lf_reg_n_0_[4] ,\rxeq_lf_reg_n_0_[3] ,\rxeq_lf_reg_n_0_[2] ,\rxeq_lf_reg_n_0_[1] ,\rxeq_lf_reg_n_0_[0] }),
        .new_txcoeff_done_reg_0(rxeq_scan_i_n_7),
        .new_txcoeff_done_reg_1(rxeq_scan_i_n_8),
        .\new_txcoeff_reg[2]_0 (rxeq_scan_i_n_0),
        .new_txcoeff_req_reg1_reg_0(rxeq_new_txcoeff_req_reg_n_0),
        .out(rxeq_control_reg2),
        .pipe_pclk_in(pipe_pclk_in),
        .\preset_reg1_reg[2]_0 ({\rxeq_preset_reg_n_0_[2] ,\rxeq_preset_reg_n_0_[1] ,\rxeq_preset_reg_n_0_[0] }),
        .rxeq_adapt_done_reg(rxeq_lffs_sel_i_3__1_n_0),
        .rxeq_adapt_done_reg_0(rxeq_adapt_done_reg_0),
        .rxeq_adapt_done_reg_reg(rxeq_adapt_done_reg_i_2__1_n_0),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_reg_n_0),
        .rxeq_done(rxeq_done),
        .rxeq_lffs_sel_reg(rxeq_lffs_sel_i_2__1_n_0),
        .rxeq_lffs_sel_reg_0(rxeq_lffs_sel_reg_n_0),
        .\rxeq_new_txcoeff_reg[2] (\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ),
        .\rxeq_new_txcoeff_reg[2]_0 (\rxeq_new_txcoeff_reg_n_0_[2] ),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\txcoeff_reg1_reg[17]_0 ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,\rxeq_txcoeff_reg_n_0_[5] ,\rxeq_txcoeff_reg_n_0_[4] ,\rxeq_txcoeff_reg_n_0_[3] ,\rxeq_txcoeff_reg_n_0_[2] ,\rxeq_txcoeff_reg_n_0_[1] ,\rxeq_txcoeff_reg_n_0_[0] }),
        .\txpreset_reg1_reg[3]_0 ({\rxeq_txpreset_reg_n_0_[3] ,\rxeq_txpreset_reg_n_0_[2] ,\rxeq_txpreset_reg_n_0_[1] ,\rxeq_txpreset_reg_n_0_[0] }));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[0]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[0]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[10]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[10]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[11]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[11]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[12]_i_1__1 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[12]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[13]_i_1__1 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[13]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[14]_i_1__1 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[14]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[15]_i_1__1 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[15]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[16]_i_1__1 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[16]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[17]_i_1__1 
       (.I0(txeq_deemph_reg2[5]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[17]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[1]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[1]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[2]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[2]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[3]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[3]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[4]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[4]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[5]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[5]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[6]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[6]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[7]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[7]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[8]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[8]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[9]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[0]),
        .Q(\rxeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[1]),
        .Q(\rxeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[2]),
        .Q(\rxeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[3]),
        .Q(\rxeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[4]),
        .Q(\rxeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[5]),
        .Q(\rxeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[0]_i_1__1 
       (.I0(rxeq_txpreset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[1]_i_1__1 
       (.I0(rxeq_txpreset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[2]_i_1__1 
       (.I0(rxeq_txpreset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[2]));
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \rxeq_txpreset[3]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I1(\rxeq_txpreset[3]_i_3__1_n_0 ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(rxeq_control_reg2[1]),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_txpreset[3]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[3]_i_2__1 
       (.I0(rxeq_txpreset_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[3]));
  LUT3 #(
    .INIT(8'h01)) 
    \rxeq_txpreset[3]_i_3__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\rxeq_txpreset[3]_i_3__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[0]),
        .Q(rxeq_txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[1]),
        .Q(rxeq_txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[2]),
        .Q(rxeq_txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXEQ_TXPRESET[3]),
        .Q(rxeq_txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txpreset[0]),
        .Q(\rxeq_txpreset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txpreset[1]),
        .Q(\rxeq_txpreset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txpreset[2]),
        .Q(\rxeq_txpreset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txpreset[3]),
        .Q(\rxeq_txpreset_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_CONTROL[0]),
        .Q(txeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_CONTROL[1]),
        .Q(txeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[0]),
        .Q(txeq_deemph_reg1[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[1]),
        .Q(txeq_deemph_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[2]),
        .Q(txeq_deemph_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[3]),
        .Q(txeq_deemph_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[4]),
        .Q(txeq_deemph_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_DEEMPH[5]),
        .Q(txeq_deemph_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    txeq_done_i_1__1
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_done));
  FDRE #(
    .INIT(1'b0)) 
    txeq_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_done),
        .Q(PIPE_TXEQ_DONE),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00001000)) 
    \txeq_preset[0]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[0]));
  LUT5 #(
    .INIT(32'hABEAABAF)) 
    \txeq_preset[10]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[10]));
  LUT5 #(
    .INIT(32'hFFFF200D)) 
    \txeq_preset[11]_i_1__1 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[11]));
  LUT5 #(
    .INIT(32'h01151110)) 
    \txeq_preset[12]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[12]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[13]_i_1__1 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[13]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1__1 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[14]));
  LUT4 #(
    .INIT(16'hF0F1)) 
    \txeq_preset[15]_i_1__1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[15]));
  LUT4 #(
    .INIT(16'h0006)) 
    \txeq_preset[16]_i_1__1 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(RST_CPLLRESET),
        .O(p_0_out[16]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \txeq_preset[17]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .O(\txeq_preset[17]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2__1 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[17]));
  LUT5 #(
    .INIT(32'h00001004)) 
    \txeq_preset[1]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[1]));
  LUT4 #(
    .INIT(16'h0E00)) 
    \txeq_preset[2]_i_1__1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[0]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[2]));
  LUT5 #(
    .INIT(32'h01440140)) 
    \txeq_preset[3]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h00001400)) 
    \txeq_preset[7]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(\txeq_preset[7]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAFBEAF)) 
    \txeq_preset[8]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(p_0_out[8]));
  LUT5 #(
    .INIT(32'hCCFCCFCD)) 
    \txeq_preset[9]_i_1__1 
       (.I0(txeq_preset_reg2[1]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[9]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'h04)) 
    txeq_preset_done_i_1__1
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_preset_done_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_done_i_1__1_n_0),
        .Q(txeq_preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[0]),
        .Q(txeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[1]),
        .Q(txeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[2]),
        .Q(txeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXEQ_PRESET[3]),
        .Q(txeq_preset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[0]),
        .Q(\txeq_preset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[10]),
        .Q(\txeq_preset_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[11]),
        .Q(\txeq_preset_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[12]),
        .Q(\txeq_preset_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[13]),
        .Q(\txeq_preset_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[14]),
        .Q(\txeq_preset_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[15]),
        .Q(\txeq_preset_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[16]),
        .Q(\txeq_preset_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[17]),
        .Q(\txeq_preset_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[1]),
        .Q(\txeq_preset_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[2]),
        .Q(\txeq_preset_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(\txeq_preset[3]_i_1__1_n_0 ),
        .Q(\txeq_preset_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(\txeq_preset[7]_i_1__1_n_0 ),
        .Q(\txeq_preset_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[8]),
        .Q(\txeq_preset_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[9]),
        .Q(\txeq_preset_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'h45404040)) 
    \txeq_txcoeff[0]_i_1__1 
       (.I0(fsm_tx[2]),
        .I1(\txeq_txcoeff[0]_i_2__1_n_0 ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .O(\txeq_txcoeff[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[0]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[0] ),
        .O(\txeq_txcoeff[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[10]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[7]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[10]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[13]),
        .O(\txeq_txcoeff[10]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[10]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[13]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[14]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[10] ),
        .O(\txeq_txcoeff[10]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[11]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[8]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[11]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[14]),
        .O(\txeq_txcoeff[11]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[11]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[14]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[15]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[11] ),
        .O(\txeq_txcoeff[11]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[12]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[9]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[12]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[15]),
        .O(\txeq_txcoeff[12]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[12]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[15]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[0]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[12] ),
        .O(\txeq_txcoeff[12]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[13]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[10]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[13]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[13]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[13]_i_2__1 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[13] ),
        .O(\txeq_txcoeff[13]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[14]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[14]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[14]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[14]_i_2__1 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[2]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[14] ),
        .O(\txeq_txcoeff[14]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[15]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[11]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[15]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[2]),
        .O(\txeq_txcoeff[15]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[15]_i_2__1 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[3]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[15] ),
        .O(\txeq_txcoeff[15]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[16]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[12]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[16]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[16]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[16]_i_2__1 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[4]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[16] ),
        .O(\txeq_txcoeff[16]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[17]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[13]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[17]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[17]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[17]_i_2__1 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[17] ),
        .O(\txeq_txcoeff[17]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFF0F04FF)) 
    \txeq_txcoeff[18]_i_1__1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'h22F3220022002200)) 
    \txeq_txcoeff[18]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[14]),
        .I1(fsm_tx[1]),
        .I2(\txeq_txcoeff[18]_i_3__1_n_0 ),
        .I3(fsm_tx[2]),
        .I4(txeq_deemph_reg2[5]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[18]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_txcoeff[18]_i_3__1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\txeq_txcoeff[18]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[1]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[1]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[5]),
        .O(\txeq_txcoeff[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[1]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[5]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[6]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[1] ),
        .O(\txeq_txcoeff[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[2]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[0]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[2]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[6]),
        .O(\txeq_txcoeff[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[2]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[6]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[7]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[2] ),
        .O(\txeq_txcoeff[2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[3]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[1]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[3]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[7]),
        .O(\txeq_txcoeff[3]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[3]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[7]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[8]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[3] ),
        .O(\txeq_txcoeff[3]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[4]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[4]_i_2__1_n_0 ),
        .O(\txeq_txcoeff[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[4]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[9]),
        .I1(EQ_TXEQ_DEEMPH_OUT[8]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[4]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[5]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[3]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[5]_i_2__1_n_0 ),
        .O(\txeq_txcoeff[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[5]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[10]),
        .I1(EQ_TXEQ_DEEMPH_OUT[9]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[5]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[6]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[4]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[6]_i_2__1_n_0 ),
        .O(\txeq_txcoeff[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[6]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(EQ_TXEQ_DEEMPH_OUT[10]),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[7]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[7]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[7]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[7]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[11]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[7] ),
        .O(\txeq_txcoeff[7]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[8]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[5]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[8]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[11]),
        .O(\txeq_txcoeff[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[8]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[11]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[12]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[8] ),
        .O(\txeq_txcoeff[8]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[9]_i_1__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[6]),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[9]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(EQ_TXEQ_DEEMPH_OUT[12]),
        .O(\txeq_txcoeff[9]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[9]_i_2__1 
       (.I0(EQ_TXEQ_DEEMPH_OUT[12]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(EQ_TXEQ_DEEMPH_OUT[13]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[9] ),
        .O(\txeq_txcoeff[9]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h000004000F000400)) 
    \txeq_txcoeff_cnt[0]_i_1__1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h00006000)) 
    \txeq_txcoeff_cnt[1]_i_1__1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[2]),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[8]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[9]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[12]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[4]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1__1_n_0 ),
        .Q(EQ_TXEQ_DEEMPH_OUT[7]),
        .R(RST_CPLLRESET));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_rate
   (SYNC_TXSYNC_START,
    RX8B10BEN0,
    gen3_reg_0,
    RATE_DRP_START,
    RATE_DRP_X16X20_MODE,
    RATE_DRP_X16,
    USER_RATE_RXSYNC,
    \fsm_reg[1]_0 ,
    USER_RESETOVRD_START,
    SYNC_RXSYNC_START,
    USER_RATE_DONE,
    rate_txpmareset_0,
    RXSYSCLKSEL,
    pipe_pclk_sel_out,
    RXRATE,
    qpllpd_reg_0,
    rate_cpllpd_0,
    qpllreset_reg_0,
    rate_cpllreset_0,
    out,
    \fsm[0]_i_9_0 ,
    Q,
    RST_CPLLRESET,
    PIPETXRATE,
    pipe_pclk_in,
    RATE_CPLLLOCK,
    RATE_QPLLLOCK,
    D,
    RATE_RXPMARESETDONE,
    pipe_mmcm_lock_in,
    phystatus_reg1_reg_0,
    RATE_TXRESETDONE,
    RATE_RXRESETDONE,
    RATE_TXRATEDONE,
    RATE_RXRATEDONE,
    RATE_TXSYNC_DONE);
  output SYNC_TXSYNC_START;
  output RX8B10BEN0;
  output gen3_reg_0;
  output RATE_DRP_START;
  output RATE_DRP_X16X20_MODE;
  output RATE_DRP_X16;
  output USER_RATE_RXSYNC;
  output [0:0]\fsm_reg[1]_0 ;
  output USER_RESETOVRD_START;
  output SYNC_RXSYNC_START;
  output USER_RATE_DONE;
  output rate_txpmareset_0;
  output [0:0]RXSYSCLKSEL;
  output [0:0]pipe_pclk_sel_out;
  output [0:0]RXRATE;
  output [0:0]qpllpd_reg_0;
  output rate_cpllpd_0;
  output [0:0]qpllreset_reg_0;
  output rate_cpllreset_0;
  input out;
  input \fsm[0]_i_9_0 ;
  input [1:0]Q;
  input RST_CPLLRESET;
  input [1:0]PIPETXRATE;
  input pipe_pclk_in;
  input RATE_CPLLLOCK;
  input RATE_QPLLLOCK;
  input [0:0]D;
  input RATE_RXPMARESETDONE;
  input pipe_mmcm_lock_in;
  input [0:0]phystatus_reg1_reg_0;
  input RATE_TXRESETDONE;
  input RATE_RXRESETDONE;
  input RATE_TXRATEDONE;
  input RATE_RXRATEDONE;
  input RATE_TXSYNC_DONE;

  wire [0:0]D;
  wire [1:0]PIPETXRATE;
  wire [1:0]Q;
  wire RATE_CPLLLOCK;
  wire RATE_DRP_START;
  wire RATE_DRP_X16;
  wire RATE_DRP_X16X20_MODE;
  wire RATE_QPLLLOCK;
  wire RATE_RXPMARESETDONE;
  wire RATE_RXRATEDONE;
  wire RATE_RXRESETDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXRESETDONE;
  wire RATE_TXSYNC_DONE;
  wire RST_CPLLRESET;
  wire RX8B10BEN0;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXSYNC_START;
  wire SYNC_TXSYNC_START;
  wire USER_RATE_DONE;
  wire USER_RATE_RXSYNC;
  wire USER_RESETOVRD_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg2;
  wire cpllpd_i_1_n_0;
  wire cpllreset_i_1_n_0;
  wire data90;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire drp_start_i_1_n_0;
  wire drp_x16_i_1_n_0;
  wire drp_x16x20_mode_i_1_n_0;
  wire [4:0]fsm;
  wire fsm1;
  wire \fsm[0]_i_10_n_0 ;
  wire \fsm[0]_i_11_n_0 ;
  wire \fsm[0]_i_12_n_0 ;
  wire \fsm[0]_i_2_n_0 ;
  wire \fsm[0]_i_5_n_0 ;
  wire \fsm[0]_i_6_n_0 ;
  wire \fsm[0]_i_7_n_0 ;
  wire \fsm[0]_i_8_n_0 ;
  wire \fsm[0]_i_9_0 ;
  wire \fsm[0]_i_9_n_0 ;
  wire \fsm[1]_i_2__0_n_0 ;
  wire \fsm[1]_i_3__0_n_0 ;
  wire \fsm[1]_i_5_n_0 ;
  wire \fsm[1]_i_6_n_0 ;
  wire \fsm[1]_i_7_n_0 ;
  wire \fsm[1]_i_8_n_0 ;
  wire \fsm[1]_i_9_n_0 ;
  wire \fsm[2]_i_2__0_n_0 ;
  wire \fsm[2]_i_3_n_0 ;
  wire \fsm[2]_i_4_n_0 ;
  wire \fsm[2]_i_5_n_0 ;
  wire \fsm[2]_i_7_n_0 ;
  wire \fsm[3]_i_2__0_n_0 ;
  wire \fsm[3]_i_3_n_0 ;
  wire \fsm[3]_i_4_n_0 ;
  wire \fsm[3]_i_5_n_0 ;
  wire \fsm[3]_i_6_n_0 ;
  wire \fsm[3]_i_7_n_0 ;
  wire \fsm[3]_i_8_n_0 ;
  wire \fsm[3]_i_9_n_0 ;
  wire \fsm[4]_i_2_n_0 ;
  wire \fsm[4]_i_3_n_0 ;
  wire \fsm_reg[0]_i_3_n_0 ;
  wire \fsm_reg[0]_i_4_n_0 ;
  wire [0:0]\fsm_reg[1]_0 ;
  wire \fsm_reg[1]_i_4_n_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire gen3_exit;
  wire gen3_exit_i_1_n_0;
  wire gen3_exit_i_2_n_0;
  wire gen3_i_1_n_0;
  wire gen3_i_2_n_0;
  wire gen3_i_3_n_0;
  wire gen3_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [3:0]p_0_in__0;
  wire pclk_sel_i_1_n_0;
  wire pclk_sel_i_2_n_0;
  wire phystatus;
  wire phystatus_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg1;
  wire [0:0]phystatus_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg2;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire pll_lock;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd;
  wire qpllpd_i_1__0_n_0;
  wire [0:0]qpllpd_reg_0;
  wire qpllreset;
  wire qpllreset_i_1__0_n_0;
  wire [0:0]qpllreset_reg_0;
  wire rate_cpllpd_0;
  wire rate_cpllreset_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg2;
  wire \rate_out[0]_i_1_n_0 ;
  wire \rate_out[0]_i_2_n_0 ;
  wire rate_txpmareset_0;
  wire ratedone;
  wire ratedone0;
  wire ratedone_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg2;
  wire rxratedone;
  wire rxratedone_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg2;
  wire \sysclksel[0]_i_1_n_0 ;
  wire \sysclksel[0]_i_2_n_0 ;
  wire \sysclksel[0]_i_3_n_0 ;
  wire \txdata_wait_cnt[3]_i_2_n_0 ;
  wire [3:0]txdata_wait_cnt_reg;
  wire txpmareset0;
  wire txpmareset_i_1_n_0;
  wire txpmareset_i_2_n_0;
  wire txratedone;
  wire txratedone_i_1_n_0;
  wire txratedone_i_2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_CPLLLOCK),
        .Q(cplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0400FFFF04000000)) 
    cpllpd_i_1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(qpllpd),
        .I5(rate_cpllpd_0),
        .O(cpllpd_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h80080002)) 
    cpllpd_i_2
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(qpllpd));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllpd_i_1_n_0),
        .Q(rate_cpllpd_0),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0400FFFF04000000)) 
    cpllreset_i_1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(qpllreset),
        .I5(rate_cpllreset_0),
        .O(cpllreset_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h80000024)) 
    cpllreset_i_2
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(qpllreset));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1_n_0),
        .Q(rate_cpllreset_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D),
        .Q(drp_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h08200108)) 
    drp_start_i_1
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(drp_start_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_start_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_start_i_1_n_0),
        .Q(RATE_DRP_START),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h09010010)) 
    drp_x16_i_1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(drp_x16_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16_i_1_n_0),
        .Q(RATE_DRP_X16),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h0840003A)) 
    drp_x16x20_mode_i_1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(drp_x16x20_mode_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16x20_mode_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16x20_mode_i_1_n_0),
        .Q(RATE_DRP_X16X20_MODE),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \fsm[0]_i_10 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg1[1]),
        .O(\fsm[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAA8A008000000000)) 
    \fsm[0]_i_11 
       (.I0(rst_idle_reg2),
        .I1(qplllock_reg2),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\fsm[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hFF202020)) 
    \fsm[0]_i_12 
       (.I0(txresetdone_reg2),
        .I1(phystatus_reg2),
        .I2(rxresetdone_reg2),
        .I3(out),
        .I4(\fsm[0]_i_9_0 ),
        .O(\fsm[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[0]_i_1__1 
       (.I0(\fsm[0]_i_2_n_0 ),
        .I1(\fsm_reg[0]_i_3_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg[0]_i_4_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[0]_i_5_n_0 ),
        .O(fsm[0]));
  LUT5 #(
    .INIT(32'h03880333)) 
    \fsm[0]_i_2 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txsync_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h03440344FF77FF44)) 
    \fsm[0]_i_5 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(pll_lock),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[0]_i_10_n_0 ),
        .I5(\fsm_reg_n_0_[0] ),
        .O(\fsm[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hCF770344)) 
    \fsm[0]_i_6 
       (.I0(rxpmaresetdone_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(data90),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h47774744)) 
    \fsm[0]_i_7 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(fsm1),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h3088308830BB3088)) 
    \fsm[0]_i_8 
       (.I0(\fsm[0]_i_11_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(drp_done_reg2),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(mmcm_lock_reg2),
        .I5(rxpmaresetdone_reg2),
        .O(\fsm[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h8BFF8BCC)) 
    \fsm[0]_i_9 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm[1]_i_9_n_0 ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm[0]_i_12_n_0 ),
        .O(\fsm[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[1]_i_1__1 
       (.I0(\fsm[1]_i_2__0_n_0 ),
        .I1(\fsm[1]_i_3__0_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg[1]_i_4_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[1]_i_5_n_0 ),
        .O(fsm[1]));
  LUT5 #(
    .INIT(32'h03777700)) 
    \fsm[1]_i_2__0 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txsync_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h7433FF007400FF00)) 
    \fsm[1]_i_3__0 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(drp_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(data90),
        .O(\fsm[1]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BBFC00)) 
    \fsm[1]_i_5 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm[1]_i_8_n_0 ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00D00FF0)) 
    \fsm[1]_i_6 
       (.I0(pll_lock),
        .I1(rst_idle_reg2),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[1]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \fsm[1]_i_7 
       (.I0(drp_done_reg2),
        .I1(data90),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm[1]_i_9_n_0 ),
        .O(\fsm[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h34F7FFFFFFFFFFFF)) 
    \fsm[1]_i_8 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .I4(rst_idle_reg2),
        .I5(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[1]_i_9 
       (.I0(txdata_wait_cnt_reg[3]),
        .I1(txdata_wait_cnt_reg[2]),
        .I2(txdata_wait_cnt_reg[0]),
        .I3(txdata_wait_cnt_reg[1]),
        .O(\fsm[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[2]_i_1__1 
       (.I0(\fsm[2]_i_2__0_n_0 ),
        .I1(\fsm[2]_i_3_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm[2]_i_4_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[2]_i_5_n_0 ),
        .O(fsm[2]));
  LUT5 #(
    .INIT(32'h3C400C40)) 
    \fsm[2]_i_2__0 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(txsync_done_reg2),
        .O(\fsm[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h4F7FFFFF4F7F0000)) 
    \fsm[2]_i_3 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(fsm1),
        .I4(\fsm_reg_n_0_[2] ),
        .I5(\fsm[2]_i_7_n_0 ),
        .O(\fsm[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0F0F0)) 
    \fsm[2]_i_4 
       (.I0(data90),
        .I1(drp_done_reg2),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(\fsm[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h4AFF4AAA)) 
    \fsm[2]_i_5 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(pll_lock),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[3]_i_5_n_0 ),
        .O(\fsm[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF2F2F2)) 
    \fsm[2]_i_6 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit),
        .I3(\fsm[0]_i_9_0 ),
        .I4(out),
        .I5(ratedone),
        .O(fsm1));
  LUT6 #(
    .INIT(64'h7040707070407040)) 
    \fsm[2]_i_7 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(rate_in_reg2[1]),
        .I4(rate_in_reg2[0]),
        .I5(gen3_exit),
        .O(\fsm[2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \fsm[2]_i_8 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .O(pll_lock));
  LUT6 #(
    .INIT(64'hB888B88888BB8888)) 
    \fsm[3]_i_2__0 
       (.I0(\fsm[3]_i_4_n_0 ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm[3]_i_5_n_0 ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\fsm[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h888888B8B8B888B8)) 
    \fsm[3]_i_3 
       (.I0(\fsm[3]_i_6_n_0 ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[3]_i_7_n_0 ),
        .I4(\fsm_reg_n_0_[1] ),
        .I5(\fsm[3]_i_8_n_0 ),
        .O(\fsm[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFCFAFA0FFFFFFFF)) 
    \fsm[3]_i_4 
       (.I0(data90),
        .I1(drp_done_reg2),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[3]_i_9_n_0 ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\fsm[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h0000309A)) 
    \fsm[3]_i_5 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg1[0]),
        .I3(rate_in_reg1[1]),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h26FF)) 
    \fsm[3]_i_6 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(rxsync_done_reg2),
        .I3(\fsm_reg_n_0_[2] ),
        .O(\fsm[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555777)) 
    \fsm[3]_i_7 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(ratedone),
        .I2(out),
        .I3(\fsm[0]_i_9_0 ),
        .I4(gen3_exit),
        .I5(gen3_i_2_n_0),
        .O(\fsm[3]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \fsm[3]_i_8 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(resetovrd_done_reg2),
        .O(\fsm[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAABAFFBFFFFFFFFF)) 
    \fsm[3]_i_9 
       (.I0(rst_idle_reg2),
        .I1(qplllock_reg2),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\fsm[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0008880800000000)) 
    \fsm[4]_i_2 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(data90),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .I5(\fsm_reg_n_0_[2] ),
        .O(\fsm[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h5F75FFFF)) 
    \fsm[4]_i_3 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rxsync_done_reg2),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(\fsm[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h0D)) 
    \fsm[4]_i_4 
       (.I0(gen3_exit),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .O(data90));
  FDSE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_CPLLRESET));
  MUXF7 \fsm_reg[0]_i_3 
       (.I0(\fsm[0]_i_6_n_0 ),
        .I1(\fsm[0]_i_7_n_0 ),
        .O(\fsm_reg[0]_i_3_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  MUXF7 \fsm_reg[0]_i_4 
       (.I0(\fsm[0]_i_8_n_0 ),
        .I1(\fsm[0]_i_9_n_0 ),
        .O(\fsm_reg[0]_i_4_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  FDSE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  MUXF7 \fsm_reg[1]_i_4 
       (.I0(\fsm[1]_i_6_n_0 ),
        .I1(\fsm[1]_i_7_n_0 ),
        .O(\fsm_reg[1]_i_4_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  MUXF7 \fsm_reg[3]_i_1 
       (.I0(\fsm[3]_i_2__0_n_0 ),
        .I1(\fsm[3]_i_3_n_0 ),
        .O(fsm[3]),
        .S(\fsm_reg_n_0_[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  MUXF7 \fsm_reg[4]_i_1 
       (.I0(\fsm[4]_i_2_n_0 ),
        .I1(\fsm[4]_i_3_n_0 ),
        .O(fsm[4]),
        .S(\fsm_reg_n_0_[4] ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    gen3_exit_i_1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(gen3_exit_i_2_n_0),
        .I4(gen3_exit),
        .O(gen3_exit_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000800000010000)) 
    gen3_exit_i_2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm[0]_i_10_n_0 ),
        .I5(\fsm_reg_n_0_[2] ),
        .O(gen3_exit_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_exit_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_exit_i_1_n_0),
        .Q(gen3_exit),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h2FFFFFFF20000000)) 
    gen3_i_1
       (.I0(gen3_i_2_n_0),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(gen3_i_3_n_0),
        .I5(gen3_reg_0),
        .O(gen3_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    gen3_i_2
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .O(gen3_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h81)) 
    gen3_i_3
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .O(gen3_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_i_1_n_0),
        .Q(gen3_reg_0),
        .R(RST_CPLLRESET));
  LUT1 #(
    .INIT(2'h1)) 
    \gth_channel.gthe2_channel_i_i_5 
       (.I0(gen3_reg_0),
        .O(RX8B10BEN0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h06FF0600)) 
    pclk_sel_i_1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(pclk_sel_i_2_n_0),
        .I4(pipe_pclk_sel_out),
        .O(pclk_sel_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h80020080)) 
    pclk_sel_i_2
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(pclk_sel_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_i_1_n_0),
        .Q(pipe_pclk_sel_out),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    phystatus_i_1
       (.I0(txratedone_i_2_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(phystatus_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(phystatus),
        .O(phystatus_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_i_1_n_0),
        .Q(phystatus),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1_reg_0),
        .Q(phystatus_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h4404FFFF44040000)) 
    qpllpd_i_1__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(qpllpd),
        .I5(qpllpd_reg_0),
        .O(qpllpd_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1__0_n_0),
        .Q(qpllpd_reg_0),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h4404FFFF44040000)) 
    qpllreset_i_1__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(qpllreset),
        .I5(qpllreset_reg_0),
        .O(qpllreset_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1__0_n_0),
        .Q(qpllreset_reg_0),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    rate_done_reg1_i_1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(USER_RATE_DONE));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    rate_idle_reg1_i_1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[1]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_in_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_in_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0444FFFF04440000)) 
    \rate_out[0]_i_1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\rate_out[0]_i_2_n_0 ),
        .I5(RXRATE),
        .O(\rate_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8800000000222000)) 
    \rate_out[0]_i_2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txpmareset0),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\rate_out[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \rate_out[0]_i_3 
       (.I0(gen3_exit),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .O(txpmareset0));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_out[0]_i_1_n_0 ),
        .Q(RXRATE),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h08800000)) 
    rate_rxsync_reg1_i_1
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(USER_RATE_RXSYNC));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    ratedone_i_1
       (.I0(txratedone_i_2_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(ratedone0),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(ratedone),
        .O(ratedone_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    ratedone_i_2
       (.I0(rxratedone),
        .I1(txratedone),
        .I2(phystatus),
        .O(ratedone0));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(ratedone_i_1_n_0),
        .Q(ratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(resetovrd_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_done_reg1),
        .Q(resetovrd_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    resetovrd_start_reg1_i_1
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(USER_RESETOVRD_START));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rst_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXPMARESETDONE),
        .Q(rxpmaresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    rxratedone_i_1
       (.I0(txratedone_i_2_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(rxratedone_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(rxratedone),
        .O(rxratedone_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_i_1_n_0),
        .Q(rxratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRATEDONE),
        .Q(rxratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_done_reg1),
        .Q(rxsync_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    rxsync_start_reg1_i_1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(SYNC_RXSYNC_START));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sysclksel[0]_i_1 
       (.I0(\sysclksel[0]_i_2_n_0 ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\sysclksel[0]_i_3_n_0 ),
        .I5(RXSYSCLKSEL),
        .O(\sysclksel[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \sysclksel[0]_i_2 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .O(\sysclksel[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sysclksel[0]_i_3 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .O(\sysclksel[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sysclksel_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\sysclksel[0]_i_1_n_0 ),
        .Q(RXSYSCLKSEL),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'hA2222222)) 
    \txdata_wait_cnt[0]_i_1 
       (.I0(\txdata_wait_cnt[3]_i_2_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1 
       (.I0(\txdata_wait_cnt[3]_i_2_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'hAA2A8080)) 
    \txdata_wait_cnt[2]_i_1 
       (.I0(\txdata_wait_cnt[3]_i_2_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'hAA80AA00)) 
    \txdata_wait_cnt[3]_i_1 
       (.I0(\txdata_wait_cnt[3]_i_2_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \txdata_wait_cnt[3]_i_2 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(\txdata_wait_cnt[3]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(txdata_wait_cnt_reg[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(txdata_wait_cnt_reg[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(txdata_wait_cnt_reg[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(txdata_wait_cnt_reg[3]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h00F2FFFF00F20000)) 
    txpmareset_i_1
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(txpmareset_i_2_n_0),
        .I5(rate_txpmareset_0),
        .O(txpmareset_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h80080020)) 
    txpmareset_i_2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(txpmareset_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txpmareset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpmareset_i_1_n_0),
        .Q(rate_txpmareset_0),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    txratedone_i_1
       (.I0(txratedone_i_2_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(txratedone_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(txratedone),
        .O(txratedone_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    txratedone_i_2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .O(txratedone_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_i_1_n_0),
        .Q(txratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRATEDONE),
        .Q(txratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXSYNC_DONE),
        .Q(txsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hFFFFFFFF04000000)) 
    txsync_start_reg1_i_1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(Q[0]),
        .O(SYNC_TXSYNC_START));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_rate" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_rate_15
   (SYNC_TXSYNC_START,
    RX8B10BEN0,
    rate_gen3_3,
    RATE_DRP_START,
    RATE_DRP_X16X20_MODE,
    RATE_DRP_X16,
    USER_RATE_RXSYNC,
    \fsm_reg[1]_0 ,
    USER_RESETOVRD_START,
    SYNC_RXSYNC_START,
    USER_RATE_DONE,
    rate_txpmareset_3,
    RXSYSCLKSEL,
    pipe_pclk_sel_out,
    RXRATE,
    qpllpd_reg_0,
    rate_cpllpd_3,
    qpllreset_reg_0,
    rate_cpllreset_3,
    out,
    \fsm[0]_i_9__2_0 ,
    Q,
    RST_CPLLRESET,
    PIPETXRATE,
    pipe_pclk_in,
    RATE_CPLLLOCK,
    QPLL_QPLLLOCK,
    D,
    RATE_RXPMARESETDONE,
    pipe_mmcm_lock_in,
    phystatus_reg1_reg_0,
    RATE_TXRESETDONE,
    RATE_RXRESETDONE,
    RATE_TXRATEDONE,
    RATE_RXRATEDONE,
    RATE_TXSYNC_DONE);
  output SYNC_TXSYNC_START;
  output RX8B10BEN0;
  output rate_gen3_3;
  output RATE_DRP_START;
  output RATE_DRP_X16X20_MODE;
  output RATE_DRP_X16;
  output USER_RATE_RXSYNC;
  output [0:0]\fsm_reg[1]_0 ;
  output USER_RESETOVRD_START;
  output SYNC_RXSYNC_START;
  output USER_RATE_DONE;
  output rate_txpmareset_3;
  output [0:0]RXSYSCLKSEL;
  output [0:0]pipe_pclk_sel_out;
  output [0:0]RXRATE;
  output [0:0]qpllpd_reg_0;
  output rate_cpllpd_3;
  output [0:0]qpllreset_reg_0;
  output rate_cpllreset_3;
  input out;
  input \fsm[0]_i_9__2_0 ;
  input [1:0]Q;
  input RST_CPLLRESET;
  input [1:0]PIPETXRATE;
  input pipe_pclk_in;
  input RATE_CPLLLOCK;
  input QPLL_QPLLLOCK;
  input [0:0]D;
  input RATE_RXPMARESETDONE;
  input pipe_mmcm_lock_in;
  input [0:0]phystatus_reg1_reg_0;
  input RATE_TXRESETDONE;
  input RATE_RXRESETDONE;
  input RATE_TXRATEDONE;
  input RATE_RXRATEDONE;
  input RATE_TXSYNC_DONE;

  wire [0:0]D;
  wire [1:0]PIPETXRATE;
  wire [1:0]Q;
  wire QPLL_QPLLLOCK;
  wire RATE_CPLLLOCK;
  wire RATE_DRP_START;
  wire RATE_DRP_X16;
  wire RATE_DRP_X16X20_MODE;
  wire RATE_RXPMARESETDONE;
  wire RATE_RXRATEDONE;
  wire RATE_RXRESETDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXRESETDONE;
  wire RATE_TXSYNC_DONE;
  wire RST_CPLLRESET;
  wire RX8B10BEN0;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXSYNC_START;
  wire SYNC_TXSYNC_START;
  wire USER_RATE_DONE;
  wire USER_RATE_RXSYNC;
  wire USER_RESETOVRD_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg2;
  wire cpllpd_i_1__2_n_0;
  wire cpllreset_i_1__2_n_0;
  wire data90;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire drp_start_i_1__2_n_0;
  wire drp_x16_i_1__2_n_0;
  wire drp_x16x20_mode_i_1__2_n_0;
  wire [4:0]fsm;
  wire fsm1;
  wire \fsm[0]_i_10__2_n_0 ;
  wire \fsm[0]_i_11__2_n_0 ;
  wire \fsm[0]_i_12__2_n_0 ;
  wire \fsm[0]_i_2__5_n_0 ;
  wire \fsm[0]_i_5__2_n_0 ;
  wire \fsm[0]_i_6__2_n_0 ;
  wire \fsm[0]_i_7__2_n_0 ;
  wire \fsm[0]_i_8__2_n_0 ;
  wire \fsm[0]_i_9__2_0 ;
  wire \fsm[0]_i_9__2_n_0 ;
  wire \fsm[1]_i_2__3_n_0 ;
  wire \fsm[1]_i_3__3_n_0 ;
  wire \fsm[1]_i_5__2_n_0 ;
  wire \fsm[1]_i_6__2_n_0 ;
  wire \fsm[1]_i_7__2_n_0 ;
  wire \fsm[1]_i_8__2_n_0 ;
  wire \fsm[1]_i_9__2_n_0 ;
  wire \fsm[2]_i_2__3_n_0 ;
  wire \fsm[2]_i_3__2_n_0 ;
  wire \fsm[2]_i_4__2_n_0 ;
  wire \fsm[2]_i_5__2_n_0 ;
  wire \fsm[2]_i_7__2_n_0 ;
  wire \fsm[3]_i_2__3_n_0 ;
  wire \fsm[3]_i_3__2_n_0 ;
  wire \fsm[3]_i_4__2_n_0 ;
  wire \fsm[3]_i_5__2_n_0 ;
  wire \fsm[3]_i_6__2_n_0 ;
  wire \fsm[3]_i_7__2_n_0 ;
  wire \fsm[3]_i_8__2_n_0 ;
  wire \fsm[3]_i_9__2_n_0 ;
  wire \fsm[4]_i_2__2_n_0 ;
  wire \fsm[4]_i_3__2_n_0 ;
  wire \fsm_reg[0]_i_3__2_n_0 ;
  wire \fsm_reg[0]_i_4__2_n_0 ;
  wire [0:0]\fsm_reg[1]_0 ;
  wire \fsm_reg[1]_i_4__2_n_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire gen3_exit;
  wire gen3_exit_i_1__2_n_0;
  wire gen3_exit_i_2__2_n_0;
  wire gen3_i_1__2_n_0;
  wire gen3_i_2__2_n_0;
  wire gen3_i_3__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [3:0]p_0_in__0;
  wire pclk_sel_i_1__2_n_0;
  wire pclk_sel_i_2__2_n_0;
  wire phystatus;
  wire phystatus_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg1;
  wire [0:0]phystatus_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg2;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire pll_lock;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd;
  wire qpllpd_i_1__3_n_0;
  wire [0:0]qpllpd_reg_0;
  wire qpllreset;
  wire qpllreset_i_1__3_n_0;
  wire [0:0]qpllreset_reg_0;
  wire rate_cpllpd_3;
  wire rate_cpllreset_3;
  wire rate_gen3_3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg2;
  wire \rate_out[0]_i_1__2_n_0 ;
  wire \rate_out[0]_i_2__2_n_0 ;
  wire rate_txpmareset_3;
  wire ratedone;
  wire ratedone0;
  wire ratedone_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg2;
  wire rxratedone;
  wire rxratedone_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg2;
  wire \sysclksel[0]_i_1__2_n_0 ;
  wire \sysclksel[0]_i_2__2_n_0 ;
  wire \sysclksel[0]_i_3__2_n_0 ;
  wire \txdata_wait_cnt[3]_i_2__2_n_0 ;
  wire [3:0]txdata_wait_cnt_reg;
  wire txpmareset0;
  wire txpmareset_i_1__2_n_0;
  wire txpmareset_i_2__2_n_0;
  wire txratedone;
  wire txratedone_i_1__2_n_0;
  wire txratedone_i_2__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_CPLLLOCK),
        .Q(cplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0400FFFF04000000)) 
    cpllpd_i_1__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(qpllpd),
        .I5(rate_cpllpd_3),
        .O(cpllpd_i_1__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT5 #(
    .INIT(32'h80080002)) 
    cpllpd_i_2__2
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(qpllpd));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllpd_i_1__2_n_0),
        .Q(rate_cpllpd_3),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0400FFFF04000000)) 
    cpllreset_i_1__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(qpllreset),
        .I5(rate_cpllreset_3),
        .O(cpllreset_i_1__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT5 #(
    .INIT(32'h80000024)) 
    cpllreset_i_2__2
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(qpllreset));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1__2_n_0),
        .Q(rate_cpllreset_3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D),
        .Q(drp_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT5 #(
    .INIT(32'h08200108)) 
    drp_start_i_1__2
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(drp_start_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_start_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_start_i_1__2_n_0),
        .Q(RATE_DRP_START),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT5 #(
    .INIT(32'h09010010)) 
    drp_x16_i_1__2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(drp_x16_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16_i_1__2_n_0),
        .Q(RATE_DRP_X16),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT5 #(
    .INIT(32'h0840003A)) 
    drp_x16x20_mode_i_1__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(drp_x16x20_mode_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16x20_mode_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16x20_mode_i_1__2_n_0),
        .Q(RATE_DRP_X16X20_MODE),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \fsm[0]_i_10__2 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg1[1]),
        .O(\fsm[0]_i_10__2_n_0 ));
  LUT6 #(
    .INIT(64'hAA8A008000000000)) 
    \fsm[0]_i_11__2 
       (.I0(rst_idle_reg2),
        .I1(qplllock_reg2),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\fsm[0]_i_11__2_n_0 ));
  LUT5 #(
    .INIT(32'hFF202020)) 
    \fsm[0]_i_12__2 
       (.I0(txresetdone_reg2),
        .I1(phystatus_reg2),
        .I2(rxresetdone_reg2),
        .I3(out),
        .I4(\fsm[0]_i_9__2_0 ),
        .O(\fsm[0]_i_12__2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[0]_i_1__7 
       (.I0(\fsm[0]_i_2__5_n_0 ),
        .I1(\fsm_reg[0]_i_3__2_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg[0]_i_4__2_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[0]_i_5__2_n_0 ),
        .O(fsm[0]));
  LUT5 #(
    .INIT(32'h03880333)) 
    \fsm[0]_i_2__5 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txsync_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[0]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'h03440344FF77FF44)) 
    \fsm[0]_i_5__2 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(pll_lock),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[0]_i_10__2_n_0 ),
        .I5(\fsm_reg_n_0_[0] ),
        .O(\fsm[0]_i_5__2_n_0 ));
  LUT5 #(
    .INIT(32'hCF770344)) 
    \fsm[0]_i_6__2 
       (.I0(rxpmaresetdone_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(data90),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[0]_i_6__2_n_0 ));
  LUT5 #(
    .INIT(32'h47774744)) 
    \fsm[0]_i_7__2 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(fsm1),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[0]_i_7__2_n_0 ));
  LUT6 #(
    .INIT(64'h3088308830BB3088)) 
    \fsm[0]_i_8__2 
       (.I0(\fsm[0]_i_11__2_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(drp_done_reg2),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(mmcm_lock_reg2),
        .I5(rxpmaresetdone_reg2),
        .O(\fsm[0]_i_8__2_n_0 ));
  LUT5 #(
    .INIT(32'h8BFF8BCC)) 
    \fsm[0]_i_9__2 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm[1]_i_9__2_n_0 ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm[0]_i_12__2_n_0 ),
        .O(\fsm[0]_i_9__2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[1]_i_1__7 
       (.I0(\fsm[1]_i_2__3_n_0 ),
        .I1(\fsm[1]_i_3__3_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg[1]_i_4__2_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[1]_i_5__2_n_0 ),
        .O(fsm[1]));
  LUT5 #(
    .INIT(32'h03777700)) 
    \fsm[1]_i_2__3 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txsync_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h7433FF007400FF00)) 
    \fsm[1]_i_3__3 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(drp_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(data90),
        .O(\fsm[1]_i_3__3_n_0 ));
  LUT5 #(
    .INIT(32'h30BBFC00)) 
    \fsm[1]_i_5__2 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm[1]_i_8__2_n_0 ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_5__2_n_0 ));
  LUT5 #(
    .INIT(32'h00D00FF0)) 
    \fsm[1]_i_6__2 
       (.I0(pll_lock),
        .I1(rst_idle_reg2),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[1]_i_6__2_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \fsm[1]_i_7__2 
       (.I0(drp_done_reg2),
        .I1(data90),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm[1]_i_9__2_n_0 ),
        .O(\fsm[1]_i_7__2_n_0 ));
  LUT6 #(
    .INIT(64'h34F7FFFFFFFFFFFF)) 
    \fsm[1]_i_8__2 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .I4(rst_idle_reg2),
        .I5(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_8__2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[1]_i_9__2 
       (.I0(txdata_wait_cnt_reg[3]),
        .I1(txdata_wait_cnt_reg[2]),
        .I2(txdata_wait_cnt_reg[0]),
        .I3(txdata_wait_cnt_reg[1]),
        .O(\fsm[1]_i_9__2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[2]_i_1__7 
       (.I0(\fsm[2]_i_2__3_n_0 ),
        .I1(\fsm[2]_i_3__2_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm[2]_i_4__2_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[2]_i_5__2_n_0 ),
        .O(fsm[2]));
  LUT5 #(
    .INIT(32'h3C400C40)) 
    \fsm[2]_i_2__3 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(txsync_done_reg2),
        .O(\fsm[2]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h4F7FFFFF4F7F0000)) 
    \fsm[2]_i_3__2 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(fsm1),
        .I4(\fsm_reg_n_0_[2] ),
        .I5(\fsm[2]_i_7__2_n_0 ),
        .O(\fsm[2]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0F0F0)) 
    \fsm[2]_i_4__2 
       (.I0(data90),
        .I1(drp_done_reg2),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(\fsm[2]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'h4AFF4AAA)) 
    \fsm[2]_i_5__2 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(pll_lock),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[3]_i_5__2_n_0 ),
        .O(\fsm[2]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF2F2F2)) 
    \fsm[2]_i_6__2 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit),
        .I3(\fsm[0]_i_9__2_0 ),
        .I4(out),
        .I5(ratedone),
        .O(fsm1));
  LUT6 #(
    .INIT(64'h7040707070407040)) 
    \fsm[2]_i_7__2 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(rate_in_reg2[1]),
        .I4(rate_in_reg2[0]),
        .I5(gen3_exit),
        .O(\fsm[2]_i_7__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \fsm[2]_i_8__2 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .O(pll_lock));
  LUT6 #(
    .INIT(64'hB888B88888BB8888)) 
    \fsm[3]_i_2__3 
       (.I0(\fsm[3]_i_4__2_n_0 ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm[3]_i_5__2_n_0 ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\fsm[3]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h888888B8B8B888B8)) 
    \fsm[3]_i_3__2 
       (.I0(\fsm[3]_i_6__2_n_0 ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[3]_i_7__2_n_0 ),
        .I4(\fsm_reg_n_0_[1] ),
        .I5(\fsm[3]_i_8__2_n_0 ),
        .O(\fsm[3]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hCFCFAFA0FFFFFFFF)) 
    \fsm[3]_i_4__2 
       (.I0(data90),
        .I1(drp_done_reg2),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[3]_i_9__2_n_0 ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\fsm[3]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'h0000309A)) 
    \fsm[3]_i_5__2 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg1[0]),
        .I3(rate_in_reg1[1]),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[3]_i_5__2_n_0 ));
  LUT4 #(
    .INIT(16'h26FF)) 
    \fsm[3]_i_6__2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(rxsync_done_reg2),
        .I3(\fsm_reg_n_0_[2] ),
        .O(\fsm[3]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555777)) 
    \fsm[3]_i_7__2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(ratedone),
        .I2(out),
        .I3(\fsm[0]_i_9__2_0 ),
        .I4(gen3_exit),
        .I5(gen3_i_2__2_n_0),
        .O(\fsm[3]_i_7__2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \fsm[3]_i_8__2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(resetovrd_done_reg2),
        .O(\fsm[3]_i_8__2_n_0 ));
  LUT6 #(
    .INIT(64'hAABAFFBFFFFFFFFF)) 
    \fsm[3]_i_9__2 
       (.I0(rst_idle_reg2),
        .I1(qplllock_reg2),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\fsm[3]_i_9__2_n_0 ));
  LUT6 #(
    .INIT(64'h0008880800000000)) 
    \fsm[4]_i_2__2 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(data90),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .I5(\fsm_reg_n_0_[2] ),
        .O(\fsm[4]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h5F75FFFF)) 
    \fsm[4]_i_3__2 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rxsync_done_reg2),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(\fsm[4]_i_3__2_n_0 ));
  LUT3 #(
    .INIT(8'h0D)) 
    \fsm[4]_i_4__2 
       (.I0(gen3_exit),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .O(data90));
  FDSE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_CPLLRESET));
  MUXF7 \fsm_reg[0]_i_3__2 
       (.I0(\fsm[0]_i_6__2_n_0 ),
        .I1(\fsm[0]_i_7__2_n_0 ),
        .O(\fsm_reg[0]_i_3__2_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  MUXF7 \fsm_reg[0]_i_4__2 
       (.I0(\fsm[0]_i_8__2_n_0 ),
        .I1(\fsm[0]_i_9__2_n_0 ),
        .O(\fsm_reg[0]_i_4__2_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  FDSE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  MUXF7 \fsm_reg[1]_i_4__2 
       (.I0(\fsm[1]_i_6__2_n_0 ),
        .I1(\fsm[1]_i_7__2_n_0 ),
        .O(\fsm_reg[1]_i_4__2_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  MUXF7 \fsm_reg[3]_i_1__2 
       (.I0(\fsm[3]_i_2__3_n_0 ),
        .I1(\fsm[3]_i_3__2_n_0 ),
        .O(fsm[3]),
        .S(\fsm_reg_n_0_[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  MUXF7 \fsm_reg[4]_i_1__2 
       (.I0(\fsm[4]_i_2__2_n_0 ),
        .I1(\fsm[4]_i_3__2_n_0 ),
        .O(fsm[4]),
        .S(\fsm_reg_n_0_[4] ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    gen3_exit_i_1__2
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(gen3_exit_i_2__2_n_0),
        .I4(gen3_exit),
        .O(gen3_exit_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h8000800000010000)) 
    gen3_exit_i_2__2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm[0]_i_10__2_n_0 ),
        .I5(\fsm_reg_n_0_[2] ),
        .O(gen3_exit_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_exit_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_exit_i_1__2_n_0),
        .Q(gen3_exit),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h2FFFFFFF20000000)) 
    gen3_i_1__2
       (.I0(gen3_i_2__2_n_0),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(gen3_i_3__2_n_0),
        .I5(rate_gen3_3),
        .O(gen3_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    gen3_i_2__2
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .O(gen3_i_2__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'h81)) 
    gen3_i_3__2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .O(gen3_i_3__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_i_1__2_n_0),
        .Q(rate_gen3_3),
        .R(RST_CPLLRESET));
  LUT1 #(
    .INIT(2'h1)) 
    \gth_channel.gthe2_channel_i_i_5__2 
       (.I0(rate_gen3_3),
        .O(RX8B10BEN0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h06FF0600)) 
    pclk_sel_i_1__2
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(pclk_sel_i_2__2_n_0),
        .I4(pipe_pclk_sel_out),
        .O(pclk_sel_i_1__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT5 #(
    .INIT(32'h80020080)) 
    pclk_sel_i_2__2
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(pclk_sel_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_i_1__2_n_0),
        .Q(pipe_pclk_sel_out),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    phystatus_i_1__2
       (.I0(txratedone_i_2__2_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(phystatus_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(phystatus),
        .O(phystatus_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_i_1__2_n_0),
        .Q(phystatus),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1_reg_0),
        .Q(phystatus_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(QPLL_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h4404FFFF44040000)) 
    qpllpd_i_1__3
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(qpllpd),
        .I5(qpllpd_reg_0),
        .O(qpllpd_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1__3_n_0),
        .Q(qpllpd_reg_0),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h4404FFFF44040000)) 
    qpllreset_i_1__3
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(qpllreset),
        .I5(qpllreset_reg_0),
        .O(qpllreset_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1__3_n_0),
        .Q(qpllreset_reg_0),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    rate_done_reg1_i_1__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(USER_RATE_DONE));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    rate_idle_reg1_i_1__2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[1]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_in_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_in_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0444FFFF04440000)) 
    \rate_out[0]_i_1__2 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\rate_out[0]_i_2__2_n_0 ),
        .I5(RXRATE),
        .O(\rate_out[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h8800000000222000)) 
    \rate_out[0]_i_2__2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txpmareset0),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\rate_out[0]_i_2__2_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \rate_out[0]_i_3__2 
       (.I0(gen3_exit),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .O(txpmareset0));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_out[0]_i_1__2_n_0 ),
        .Q(RXRATE),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT5 #(
    .INIT(32'h08800000)) 
    rate_rxsync_reg1_i_1__2
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(USER_RATE_RXSYNC));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    ratedone_i_1__2
       (.I0(txratedone_i_2__2_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(ratedone0),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(ratedone),
        .O(ratedone_i_1__2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    ratedone_i_2__2
       (.I0(rxratedone),
        .I1(txratedone),
        .I2(phystatus),
        .O(ratedone0));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(ratedone_i_1__2_n_0),
        .Q(ratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(resetovrd_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_done_reg1),
        .Q(resetovrd_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    resetovrd_start_reg1_i_1__2
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(USER_RESETOVRD_START));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rst_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXPMARESETDONE),
        .Q(rxpmaresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    rxratedone_i_1__2
       (.I0(txratedone_i_2__2_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(rxratedone_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(rxratedone),
        .O(rxratedone_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_i_1__2_n_0),
        .Q(rxratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRATEDONE),
        .Q(rxratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_done_reg1),
        .Q(rxsync_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    rxsync_start_reg1_i_1__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(SYNC_RXSYNC_START));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sysclksel[0]_i_1__2 
       (.I0(\sysclksel[0]_i_2__2_n_0 ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\sysclksel[0]_i_3__2_n_0 ),
        .I5(RXSYSCLKSEL),
        .O(\sysclksel[0]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \sysclksel[0]_i_2__2 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .O(\sysclksel[0]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sysclksel[0]_i_3__2 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .O(\sysclksel[0]_i_3__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sysclksel_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\sysclksel[0]_i_1__2_n_0 ),
        .Q(RXSYSCLKSEL),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT5 #(
    .INIT(32'hA2222222)) 
    \txdata_wait_cnt[0]_i_1__2 
       (.I0(\txdata_wait_cnt[3]_i_2__2_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1__2 
       (.I0(\txdata_wait_cnt[3]_i_2__2_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT5 #(
    .INIT(32'hAA2A8080)) 
    \txdata_wait_cnt[2]_i_1__2 
       (.I0(\txdata_wait_cnt[3]_i_2__2_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT5 #(
    .INIT(32'hAA80AA00)) 
    \txdata_wait_cnt[3]_i_1__2 
       (.I0(\txdata_wait_cnt[3]_i_2__2_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \txdata_wait_cnt[3]_i_2__2 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(\txdata_wait_cnt[3]_i_2__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(txdata_wait_cnt_reg[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(txdata_wait_cnt_reg[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(txdata_wait_cnt_reg[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(txdata_wait_cnt_reg[3]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h00F2FFFF00F20000)) 
    txpmareset_i_1__2
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(txpmareset_i_2__2_n_0),
        .I5(rate_txpmareset_3),
        .O(txpmareset_i_1__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT5 #(
    .INIT(32'h80080020)) 
    txpmareset_i_2__2
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(txpmareset_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txpmareset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpmareset_i_1__2_n_0),
        .Q(rate_txpmareset_3),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    txratedone_i_1__2
       (.I0(txratedone_i_2__2_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(txratedone_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(txratedone),
        .O(txratedone_i_1__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    txratedone_i_2__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .O(txratedone_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_i_1__2_n_0),
        .Q(txratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRATEDONE),
        .Q(txratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXSYNC_DONE),
        .Q(txsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hFFFFFFFF04000000)) 
    txsync_start_reg1_i_1__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(Q[0]),
        .O(SYNC_TXSYNC_START));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_rate" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_rate_3
   (SYNC_TXSYNC_START,
    QPLL_DRP_GEN3,
    rate_gen3_1,
    RX8B10BEN0,
    RATE_DRP_START,
    RATE_DRP_X16X20_MODE,
    RATE_DRP_X16,
    USER_RATE_RXSYNC,
    \fsm_reg[1]_0 ,
    USER_RESETOVRD_START,
    SYNC_RXSYNC_START,
    USER_RATE_DONE,
    rate_txpmareset_1,
    RXSYSCLKSEL,
    pipe_pclk_sel_out,
    RXRATE,
    qpllpd_reg_0,
    rate_cpllpd_1,
    qpllreset_reg_0,
    rate_cpllreset_1,
    out,
    \fsm[0]_i_9__0_0 ,
    Q,
    gen3_reg1_reg,
    rate_gen3_3,
    rate_gen3_2,
    RST_CPLLRESET,
    PIPETXRATE,
    pipe_pclk_in,
    RATE_CPLLLOCK,
    RATE_QPLLLOCK,
    D,
    RATE_RXPMARESETDONE,
    pipe_mmcm_lock_in,
    phystatus_reg1_reg_0,
    RATE_TXRESETDONE,
    RATE_RXRESETDONE,
    RATE_TXRATEDONE,
    RATE_RXRATEDONE,
    RATE_TXSYNC_DONE);
  output SYNC_TXSYNC_START;
  output QPLL_DRP_GEN3;
  output rate_gen3_1;
  output RX8B10BEN0;
  output RATE_DRP_START;
  output RATE_DRP_X16X20_MODE;
  output RATE_DRP_X16;
  output USER_RATE_RXSYNC;
  output [0:0]\fsm_reg[1]_0 ;
  output USER_RESETOVRD_START;
  output SYNC_RXSYNC_START;
  output USER_RATE_DONE;
  output rate_txpmareset_1;
  output [0:0]RXSYSCLKSEL;
  output [0:0]pipe_pclk_sel_out;
  output [0:0]RXRATE;
  output [0:0]qpllpd_reg_0;
  output rate_cpllpd_1;
  output [0:0]qpllreset_reg_0;
  output rate_cpllreset_1;
  input out;
  input \fsm[0]_i_9__0_0 ;
  input [1:0]Q;
  input gen3_reg1_reg;
  input rate_gen3_3;
  input rate_gen3_2;
  input RST_CPLLRESET;
  input [1:0]PIPETXRATE;
  input pipe_pclk_in;
  input RATE_CPLLLOCK;
  input RATE_QPLLLOCK;
  input [0:0]D;
  input RATE_RXPMARESETDONE;
  input pipe_mmcm_lock_in;
  input [0:0]phystatus_reg1_reg_0;
  input RATE_TXRESETDONE;
  input RATE_RXRESETDONE;
  input RATE_TXRATEDONE;
  input RATE_RXRATEDONE;
  input RATE_TXSYNC_DONE;

  wire [0:0]D;
  wire [1:0]PIPETXRATE;
  wire [1:0]Q;
  wire QPLL_DRP_GEN3;
  wire RATE_CPLLLOCK;
  wire RATE_DRP_START;
  wire RATE_DRP_X16;
  wire RATE_DRP_X16X20_MODE;
  wire RATE_QPLLLOCK;
  wire RATE_RXPMARESETDONE;
  wire RATE_RXRATEDONE;
  wire RATE_RXRESETDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXRESETDONE;
  wire RATE_TXSYNC_DONE;
  wire RST_CPLLRESET;
  wire RX8B10BEN0;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXSYNC_START;
  wire SYNC_TXSYNC_START;
  wire USER_RATE_DONE;
  wire USER_RATE_RXSYNC;
  wire USER_RESETOVRD_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg2;
  wire cpllpd_i_1__0_n_0;
  wire cpllreset_i_1__0_n_0;
  wire data90;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire drp_start_i_1__0_n_0;
  wire drp_x16_i_1__0_n_0;
  wire drp_x16x20_mode_i_1__0_n_0;
  wire [4:0]fsm;
  wire fsm1;
  wire \fsm[0]_i_10__0_n_0 ;
  wire \fsm[0]_i_11__0_n_0 ;
  wire \fsm[0]_i_12__0_n_0 ;
  wire \fsm[0]_i_2__1_n_0 ;
  wire \fsm[0]_i_5__0_n_0 ;
  wire \fsm[0]_i_6__0_n_0 ;
  wire \fsm[0]_i_7__0_n_0 ;
  wire \fsm[0]_i_8__0_n_0 ;
  wire \fsm[0]_i_9__0_0 ;
  wire \fsm[0]_i_9__0_n_0 ;
  wire \fsm[1]_i_2__1_n_0 ;
  wire \fsm[1]_i_3__1_n_0 ;
  wire \fsm[1]_i_5__0_n_0 ;
  wire \fsm[1]_i_6__0_n_0 ;
  wire \fsm[1]_i_7__0_n_0 ;
  wire \fsm[1]_i_8__0_n_0 ;
  wire \fsm[1]_i_9__0_n_0 ;
  wire \fsm[2]_i_2__1_n_0 ;
  wire \fsm[2]_i_3__0_n_0 ;
  wire \fsm[2]_i_4__0_n_0 ;
  wire \fsm[2]_i_5__0_n_0 ;
  wire \fsm[2]_i_7__0_n_0 ;
  wire \fsm[3]_i_2__1_n_0 ;
  wire \fsm[3]_i_3__0_n_0 ;
  wire \fsm[3]_i_4__0_n_0 ;
  wire \fsm[3]_i_5__0_n_0 ;
  wire \fsm[3]_i_6__0_n_0 ;
  wire \fsm[3]_i_7__0_n_0 ;
  wire \fsm[3]_i_8__0_n_0 ;
  wire \fsm[3]_i_9__0_n_0 ;
  wire \fsm[4]_i_2__0_n_0 ;
  wire \fsm[4]_i_3__0_n_0 ;
  wire \fsm_reg[0]_i_3__0_n_0 ;
  wire \fsm_reg[0]_i_4__0_n_0 ;
  wire [0:0]\fsm_reg[1]_0 ;
  wire \fsm_reg[1]_i_4__0_n_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire gen3_exit;
  wire gen3_exit_i_1__0_n_0;
  wire gen3_exit_i_2__0_n_0;
  wire gen3_i_1__0_n_0;
  wire gen3_i_2__0_n_0;
  wire gen3_i_3__0_n_0;
  wire gen3_reg1_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [3:0]p_0_in__0;
  wire pclk_sel_i_1__0_n_0;
  wire pclk_sel_i_2__0_n_0;
  wire phystatus;
  wire phystatus_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg1;
  wire [0:0]phystatus_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg2;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire pll_lock;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd;
  wire qpllpd_i_1__1_n_0;
  wire [0:0]qpllpd_reg_0;
  wire qpllreset;
  wire qpllreset_i_1__1_n_0;
  wire [0:0]qpllreset_reg_0;
  wire rate_cpllpd_1;
  wire rate_cpllreset_1;
  wire rate_gen3_1;
  wire rate_gen3_2;
  wire rate_gen3_3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg2;
  wire \rate_out[0]_i_1__0_n_0 ;
  wire \rate_out[0]_i_2__0_n_0 ;
  wire rate_txpmareset_1;
  wire ratedone;
  wire ratedone0;
  wire ratedone_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg2;
  wire rxratedone;
  wire rxratedone_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg2;
  wire \sysclksel[0]_i_1__0_n_0 ;
  wire \sysclksel[0]_i_2__0_n_0 ;
  wire \sysclksel[0]_i_3__0_n_0 ;
  wire \txdata_wait_cnt[3]_i_2__0_n_0 ;
  wire [3:0]txdata_wait_cnt_reg;
  wire txpmareset0;
  wire txpmareset_i_1__0_n_0;
  wire txpmareset_i_2__0_n_0;
  wire txratedone;
  wire txratedone_i_1__0_n_0;
  wire txratedone_i_2__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_CPLLLOCK),
        .Q(cplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0400FFFF04000000)) 
    cpllpd_i_1__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(qpllpd),
        .I5(rate_cpllpd_1),
        .O(cpllpd_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h80080002)) 
    cpllpd_i_2__0
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(qpllpd));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllpd_i_1__0_n_0),
        .Q(rate_cpllpd_1),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0400FFFF04000000)) 
    cpllreset_i_1__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(qpllreset),
        .I5(rate_cpllreset_1),
        .O(cpllreset_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h80000024)) 
    cpllreset_i_2__0
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(qpllreset));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1__0_n_0),
        .Q(rate_cpllreset_1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D),
        .Q(drp_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h08200108)) 
    drp_start_i_1__0
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(drp_start_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_start_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_start_i_1__0_n_0),
        .Q(RATE_DRP_START),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h09010010)) 
    drp_x16_i_1__0
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(drp_x16_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16_i_1__0_n_0),
        .Q(RATE_DRP_X16),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'h0840003A)) 
    drp_x16x20_mode_i_1__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(drp_x16x20_mode_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16x20_mode_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16x20_mode_i_1__0_n_0),
        .Q(RATE_DRP_X16X20_MODE),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \fsm[0]_i_10__0 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg1[1]),
        .O(\fsm[0]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hAA8A008000000000)) 
    \fsm[0]_i_11__0 
       (.I0(rst_idle_reg2),
        .I1(qplllock_reg2),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\fsm[0]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hFF202020)) 
    \fsm[0]_i_12__0 
       (.I0(txresetdone_reg2),
        .I1(phystatus_reg2),
        .I2(rxresetdone_reg2),
        .I3(out),
        .I4(\fsm[0]_i_9__0_0 ),
        .O(\fsm[0]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[0]_i_1__3 
       (.I0(\fsm[0]_i_2__1_n_0 ),
        .I1(\fsm_reg[0]_i_3__0_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg[0]_i_4__0_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[0]_i_5__0_n_0 ),
        .O(fsm[0]));
  LUT5 #(
    .INIT(32'h03880333)) 
    \fsm[0]_i_2__1 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txsync_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h03440344FF77FF44)) 
    \fsm[0]_i_5__0 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(pll_lock),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[0]_i_10__0_n_0 ),
        .I5(\fsm_reg_n_0_[0] ),
        .O(\fsm[0]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'hCF770344)) 
    \fsm[0]_i_6__0 
       (.I0(rxpmaresetdone_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(data90),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[0]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'h47774744)) 
    \fsm[0]_i_7__0 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(fsm1),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[0]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h3088308830BB3088)) 
    \fsm[0]_i_8__0 
       (.I0(\fsm[0]_i_11__0_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(drp_done_reg2),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(mmcm_lock_reg2),
        .I5(rxpmaresetdone_reg2),
        .O(\fsm[0]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'h8BFF8BCC)) 
    \fsm[0]_i_9__0 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm[1]_i_9__0_n_0 ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm[0]_i_12__0_n_0 ),
        .O(\fsm[0]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[1]_i_1__3 
       (.I0(\fsm[1]_i_2__1_n_0 ),
        .I1(\fsm[1]_i_3__1_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg[1]_i_4__0_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[1]_i_5__0_n_0 ),
        .O(fsm[1]));
  LUT5 #(
    .INIT(32'h03777700)) 
    \fsm[1]_i_2__1 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txsync_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h7433FF007400FF00)) 
    \fsm[1]_i_3__1 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(drp_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(data90),
        .O(\fsm[1]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h30BBFC00)) 
    \fsm[1]_i_5__0 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm[1]_i_8__0_n_0 ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'h00D00FF0)) 
    \fsm[1]_i_6__0 
       (.I0(pll_lock),
        .I1(rst_idle_reg2),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[1]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \fsm[1]_i_7__0 
       (.I0(drp_done_reg2),
        .I1(data90),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm[1]_i_9__0_n_0 ),
        .O(\fsm[1]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h34F7FFFFFFFFFFFF)) 
    \fsm[1]_i_8__0 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .I4(rst_idle_reg2),
        .I5(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_8__0_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[1]_i_9__0 
       (.I0(txdata_wait_cnt_reg[3]),
        .I1(txdata_wait_cnt_reg[2]),
        .I2(txdata_wait_cnt_reg[0]),
        .I3(txdata_wait_cnt_reg[1]),
        .O(\fsm[1]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[2]_i_1__3 
       (.I0(\fsm[2]_i_2__1_n_0 ),
        .I1(\fsm[2]_i_3__0_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm[2]_i_4__0_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[2]_i_5__0_n_0 ),
        .O(fsm[2]));
  LUT5 #(
    .INIT(32'h3C400C40)) 
    \fsm[2]_i_2__1 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(txsync_done_reg2),
        .O(\fsm[2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h4F7FFFFF4F7F0000)) 
    \fsm[2]_i_3__0 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(fsm1),
        .I4(\fsm_reg_n_0_[2] ),
        .I5(\fsm[2]_i_7__0_n_0 ),
        .O(\fsm[2]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0F0F0)) 
    \fsm[2]_i_4__0 
       (.I0(data90),
        .I1(drp_done_reg2),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(\fsm[2]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h4AFF4AAA)) 
    \fsm[2]_i_5__0 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(pll_lock),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[3]_i_5__0_n_0 ),
        .O(\fsm[2]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF2F2F2)) 
    \fsm[2]_i_6__0 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit),
        .I3(\fsm[0]_i_9__0_0 ),
        .I4(out),
        .I5(ratedone),
        .O(fsm1));
  LUT6 #(
    .INIT(64'h7040707070407040)) 
    \fsm[2]_i_7__0 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(rate_in_reg2[1]),
        .I4(rate_in_reg2[0]),
        .I5(gen3_exit),
        .O(\fsm[2]_i_7__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \fsm[2]_i_8__0 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .O(pll_lock));
  LUT6 #(
    .INIT(64'hB888B88888BB8888)) 
    \fsm[3]_i_2__1 
       (.I0(\fsm[3]_i_4__0_n_0 ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm[3]_i_5__0_n_0 ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\fsm[3]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h888888B8B8B888B8)) 
    \fsm[3]_i_3__0 
       (.I0(\fsm[3]_i_6__0_n_0 ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[3]_i_7__0_n_0 ),
        .I4(\fsm_reg_n_0_[1] ),
        .I5(\fsm[3]_i_8__0_n_0 ),
        .O(\fsm[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hCFCFAFA0FFFFFFFF)) 
    \fsm[3]_i_4__0 
       (.I0(data90),
        .I1(drp_done_reg2),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[3]_i_9__0_n_0 ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\fsm[3]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h0000309A)) 
    \fsm[3]_i_5__0 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg1[0]),
        .I3(rate_in_reg1[1]),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[3]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'h26FF)) 
    \fsm[3]_i_6__0 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(rxsync_done_reg2),
        .I3(\fsm_reg_n_0_[2] ),
        .O(\fsm[3]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555777)) 
    \fsm[3]_i_7__0 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(ratedone),
        .I2(out),
        .I3(\fsm[0]_i_9__0_0 ),
        .I4(gen3_exit),
        .I5(gen3_i_2__0_n_0),
        .O(\fsm[3]_i_7__0_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \fsm[3]_i_8__0 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(resetovrd_done_reg2),
        .O(\fsm[3]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hAABAFFBFFFFFFFFF)) 
    \fsm[3]_i_9__0 
       (.I0(rst_idle_reg2),
        .I1(qplllock_reg2),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\fsm[3]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'h0008880800000000)) 
    \fsm[4]_i_2__0 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(data90),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .I5(\fsm_reg_n_0_[2] ),
        .O(\fsm[4]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h5F75FFFF)) 
    \fsm[4]_i_3__0 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rxsync_done_reg2),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(\fsm[4]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'h0D)) 
    \fsm[4]_i_4__0 
       (.I0(gen3_exit),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .O(data90));
  FDSE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_CPLLRESET));
  MUXF7 \fsm_reg[0]_i_3__0 
       (.I0(\fsm[0]_i_6__0_n_0 ),
        .I1(\fsm[0]_i_7__0_n_0 ),
        .O(\fsm_reg[0]_i_3__0_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  MUXF7 \fsm_reg[0]_i_4__0 
       (.I0(\fsm[0]_i_8__0_n_0 ),
        .I1(\fsm[0]_i_9__0_n_0 ),
        .O(\fsm_reg[0]_i_4__0_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  FDSE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  MUXF7 \fsm_reg[1]_i_4__0 
       (.I0(\fsm[1]_i_6__0_n_0 ),
        .I1(\fsm[1]_i_7__0_n_0 ),
        .O(\fsm_reg[1]_i_4__0_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  MUXF7 \fsm_reg[3]_i_1__0 
       (.I0(\fsm[3]_i_2__1_n_0 ),
        .I1(\fsm[3]_i_3__0_n_0 ),
        .O(fsm[3]),
        .S(\fsm_reg_n_0_[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  MUXF7 \fsm_reg[4]_i_1__0 
       (.I0(\fsm[4]_i_2__0_n_0 ),
        .I1(\fsm[4]_i_3__0_n_0 ),
        .O(fsm[4]),
        .S(\fsm_reg_n_0_[4] ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    gen3_exit_i_1__0
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(gen3_exit_i_2__0_n_0),
        .I4(gen3_exit),
        .O(gen3_exit_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h8000800000010000)) 
    gen3_exit_i_2__0
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm[0]_i_10__0_n_0 ),
        .I5(\fsm_reg_n_0_[2] ),
        .O(gen3_exit_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_exit_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_exit_i_1__0_n_0),
        .Q(gen3_exit),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h2FFFFFFF20000000)) 
    gen3_i_1__0
       (.I0(gen3_i_2__0_n_0),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(gen3_i_3__0_n_0),
        .I5(rate_gen3_1),
        .O(gen3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    gen3_i_2__0
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .O(gen3_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h81)) 
    gen3_i_3__0
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .O(gen3_i_3__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_i_1__0_n_0),
        .Q(rate_gen3_1),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    gen3_reg1_i_1
       (.I0(rate_gen3_1),
        .I1(gen3_reg1_reg),
        .I2(rate_gen3_3),
        .I3(rate_gen3_2),
        .O(QPLL_DRP_GEN3));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gth_channel.gthe2_channel_i_i_5__0 
       (.I0(rate_gen3_1),
        .O(RX8B10BEN0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h06FF0600)) 
    pclk_sel_i_1__0
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(pclk_sel_i_2__0_n_0),
        .I4(pipe_pclk_sel_out),
        .O(pclk_sel_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'h80020080)) 
    pclk_sel_i_2__0
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(pclk_sel_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_i_1__0_n_0),
        .Q(pipe_pclk_sel_out),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    phystatus_i_1__0
       (.I0(txratedone_i_2__0_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(phystatus_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(phystatus),
        .O(phystatus_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_i_1__0_n_0),
        .Q(phystatus),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1_reg_0),
        .Q(phystatus_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h4404FFFF44040000)) 
    qpllpd_i_1__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(qpllpd),
        .I5(qpllpd_reg_0),
        .O(qpllpd_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1__1_n_0),
        .Q(qpllpd_reg_0),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h4404FFFF44040000)) 
    qpllreset_i_1__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(qpllreset),
        .I5(qpllreset_reg_0),
        .O(qpllreset_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1__1_n_0),
        .Q(qpllreset_reg_0),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    rate_done_reg1_i_1__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(USER_RATE_DONE));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    rate_idle_reg1_i_1__0
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[1]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_in_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_in_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0444FFFF04440000)) 
    \rate_out[0]_i_1__0 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\rate_out[0]_i_2__0_n_0 ),
        .I5(RXRATE),
        .O(\rate_out[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8800000000222000)) 
    \rate_out[0]_i_2__0 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txpmareset0),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\rate_out[0]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \rate_out[0]_i_3__0 
       (.I0(gen3_exit),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .O(txpmareset0));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_out[0]_i_1__0_n_0 ),
        .Q(RXRATE),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'h08800000)) 
    rate_rxsync_reg1_i_1__0
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(USER_RATE_RXSYNC));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    ratedone_i_1__0
       (.I0(txratedone_i_2__0_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(ratedone0),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(ratedone),
        .O(ratedone_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    ratedone_i_2__0
       (.I0(rxratedone),
        .I1(txratedone),
        .I2(phystatus),
        .O(ratedone0));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(ratedone_i_1__0_n_0),
        .Q(ratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(resetovrd_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_done_reg1),
        .Q(resetovrd_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    resetovrd_start_reg1_i_1__0
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(USER_RESETOVRD_START));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rst_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXPMARESETDONE),
        .Q(rxpmaresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    rxratedone_i_1__0
       (.I0(txratedone_i_2__0_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(rxratedone_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(rxratedone),
        .O(rxratedone_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_i_1__0_n_0),
        .Q(rxratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRATEDONE),
        .Q(rxratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_done_reg1),
        .Q(rxsync_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    rxsync_start_reg1_i_1__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(SYNC_RXSYNC_START));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sysclksel[0]_i_1__0 
       (.I0(\sysclksel[0]_i_2__0_n_0 ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\sysclksel[0]_i_3__0_n_0 ),
        .I5(RXSYSCLKSEL),
        .O(\sysclksel[0]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \sysclksel[0]_i_2__0 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .O(\sysclksel[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sysclksel[0]_i_3__0 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .O(\sysclksel[0]_i_3__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sysclksel_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\sysclksel[0]_i_1__0_n_0 ),
        .Q(RXSYSCLKSEL),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'hA2222222)) 
    \txdata_wait_cnt[0]_i_1__0 
       (.I0(\txdata_wait_cnt[3]_i_2__0_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1__0 
       (.I0(\txdata_wait_cnt[3]_i_2__0_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'hAA2A8080)) 
    \txdata_wait_cnt[2]_i_1__0 
       (.I0(\txdata_wait_cnt[3]_i_2__0_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'hAA80AA00)) 
    \txdata_wait_cnt[3]_i_1__0 
       (.I0(\txdata_wait_cnt[3]_i_2__0_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \txdata_wait_cnt[3]_i_2__0 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(\txdata_wait_cnt[3]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(txdata_wait_cnt_reg[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(txdata_wait_cnt_reg[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(txdata_wait_cnt_reg[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(txdata_wait_cnt_reg[3]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h00F2FFFF00F20000)) 
    txpmareset_i_1__0
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(txpmareset_i_2__0_n_0),
        .I5(rate_txpmareset_1),
        .O(txpmareset_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'h80080020)) 
    txpmareset_i_2__0
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(txpmareset_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txpmareset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpmareset_i_1__0_n_0),
        .Q(rate_txpmareset_1),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    txratedone_i_1__0
       (.I0(txratedone_i_2__0_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(txratedone_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(txratedone),
        .O(txratedone_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    txratedone_i_2__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .O(txratedone_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_i_1__0_n_0),
        .Q(txratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRATEDONE),
        .Q(txratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXSYNC_DONE),
        .Q(txsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hFFFFFFFF04000000)) 
    txsync_start_reg1_i_1__0
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(Q[0]),
        .O(SYNC_TXSYNC_START));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_rate" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_rate_9
   (SYNC_TXSYNC_START,
    RX8B10BEN0,
    rate_gen3_2,
    RATE_DRP_START,
    RATE_DRP_X16X20_MODE,
    RATE_DRP_X16,
    USER_RATE_RXSYNC,
    \fsm_reg[1]_0 ,
    USER_RESETOVRD_START,
    SYNC_RXSYNC_START,
    USER_RATE_DONE,
    rate_txpmareset_2,
    RXSYSCLKSEL,
    pipe_pclk_sel_out,
    RXRATE,
    qpllpd_reg_0,
    rate_cpllpd_2,
    qpllreset_reg_0,
    rate_cpllreset_2,
    out,
    \fsm[0]_i_9__1_0 ,
    Q,
    RST_CPLLRESET,
    PIPETXRATE,
    pipe_pclk_in,
    RATE_CPLLLOCK,
    RATE_QPLLLOCK,
    D,
    RATE_RXPMARESETDONE,
    pipe_mmcm_lock_in,
    phystatus_reg1_reg_0,
    RATE_TXRESETDONE,
    RATE_RXRESETDONE,
    RATE_TXRATEDONE,
    RATE_RXRATEDONE,
    RATE_TXSYNC_DONE);
  output SYNC_TXSYNC_START;
  output RX8B10BEN0;
  output rate_gen3_2;
  output RATE_DRP_START;
  output RATE_DRP_X16X20_MODE;
  output RATE_DRP_X16;
  output USER_RATE_RXSYNC;
  output [0:0]\fsm_reg[1]_0 ;
  output USER_RESETOVRD_START;
  output SYNC_RXSYNC_START;
  output USER_RATE_DONE;
  output rate_txpmareset_2;
  output [0:0]RXSYSCLKSEL;
  output [0:0]pipe_pclk_sel_out;
  output [0:0]RXRATE;
  output [0:0]qpllpd_reg_0;
  output rate_cpllpd_2;
  output [0:0]qpllreset_reg_0;
  output rate_cpllreset_2;
  input out;
  input \fsm[0]_i_9__1_0 ;
  input [1:0]Q;
  input RST_CPLLRESET;
  input [1:0]PIPETXRATE;
  input pipe_pclk_in;
  input RATE_CPLLLOCK;
  input RATE_QPLLLOCK;
  input [0:0]D;
  input RATE_RXPMARESETDONE;
  input pipe_mmcm_lock_in;
  input [0:0]phystatus_reg1_reg_0;
  input RATE_TXRESETDONE;
  input RATE_RXRESETDONE;
  input RATE_TXRATEDONE;
  input RATE_RXRATEDONE;
  input RATE_TXSYNC_DONE;

  wire [0:0]D;
  wire [1:0]PIPETXRATE;
  wire [1:0]Q;
  wire RATE_CPLLLOCK;
  wire RATE_DRP_START;
  wire RATE_DRP_X16;
  wire RATE_DRP_X16X20_MODE;
  wire RATE_QPLLLOCK;
  wire RATE_RXPMARESETDONE;
  wire RATE_RXRATEDONE;
  wire RATE_RXRESETDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXRESETDONE;
  wire RATE_TXSYNC_DONE;
  wire RST_CPLLRESET;
  wire RX8B10BEN0;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXSYNC_START;
  wire SYNC_TXSYNC_START;
  wire USER_RATE_DONE;
  wire USER_RATE_RXSYNC;
  wire USER_RESETOVRD_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg2;
  wire cpllpd_i_1__1_n_0;
  wire cpllreset_i_1__1_n_0;
  wire data90;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire drp_start_i_1__1_n_0;
  wire drp_x16_i_1__1_n_0;
  wire drp_x16x20_mode_i_1__1_n_0;
  wire [4:0]fsm;
  wire fsm1;
  wire \fsm[0]_i_10__1_n_0 ;
  wire \fsm[0]_i_11__1_n_0 ;
  wire \fsm[0]_i_12__1_n_0 ;
  wire \fsm[0]_i_2__3_n_0 ;
  wire \fsm[0]_i_5__1_n_0 ;
  wire \fsm[0]_i_6__1_n_0 ;
  wire \fsm[0]_i_7__1_n_0 ;
  wire \fsm[0]_i_8__1_n_0 ;
  wire \fsm[0]_i_9__1_0 ;
  wire \fsm[0]_i_9__1_n_0 ;
  wire \fsm[1]_i_2__2_n_0 ;
  wire \fsm[1]_i_3__2_n_0 ;
  wire \fsm[1]_i_5__1_n_0 ;
  wire \fsm[1]_i_6__1_n_0 ;
  wire \fsm[1]_i_7__1_n_0 ;
  wire \fsm[1]_i_8__1_n_0 ;
  wire \fsm[1]_i_9__1_n_0 ;
  wire \fsm[2]_i_2__2_n_0 ;
  wire \fsm[2]_i_3__1_n_0 ;
  wire \fsm[2]_i_4__1_n_0 ;
  wire \fsm[2]_i_5__1_n_0 ;
  wire \fsm[2]_i_7__1_n_0 ;
  wire \fsm[3]_i_2__2_n_0 ;
  wire \fsm[3]_i_3__1_n_0 ;
  wire \fsm[3]_i_4__1_n_0 ;
  wire \fsm[3]_i_5__1_n_0 ;
  wire \fsm[3]_i_6__1_n_0 ;
  wire \fsm[3]_i_7__1_n_0 ;
  wire \fsm[3]_i_8__1_n_0 ;
  wire \fsm[3]_i_9__1_n_0 ;
  wire \fsm[4]_i_2__1_n_0 ;
  wire \fsm[4]_i_3__1_n_0 ;
  wire \fsm_reg[0]_i_3__1_n_0 ;
  wire \fsm_reg[0]_i_4__1_n_0 ;
  wire [0:0]\fsm_reg[1]_0 ;
  wire \fsm_reg[1]_i_4__1_n_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire gen3_exit;
  wire gen3_exit_i_1__1_n_0;
  wire gen3_exit_i_2__1_n_0;
  wire gen3_i_1__1_n_0;
  wire gen3_i_2__1_n_0;
  wire gen3_i_3__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [3:0]p_0_in__0;
  wire pclk_sel_i_1__1_n_0;
  wire pclk_sel_i_2__1_n_0;
  wire phystatus;
  wire phystatus_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg1;
  wire [0:0]phystatus_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg2;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire pll_lock;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd;
  wire qpllpd_i_1__2_n_0;
  wire [0:0]qpllpd_reg_0;
  wire qpllreset;
  wire qpllreset_i_1__2_n_0;
  wire [0:0]qpllreset_reg_0;
  wire rate_cpllpd_2;
  wire rate_cpllreset_2;
  wire rate_gen3_2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg2;
  wire \rate_out[0]_i_1__1_n_0 ;
  wire \rate_out[0]_i_2__1_n_0 ;
  wire rate_txpmareset_2;
  wire ratedone;
  wire ratedone0;
  wire ratedone_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg2;
  wire rxratedone;
  wire rxratedone_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg2;
  wire \sysclksel[0]_i_1__1_n_0 ;
  wire \sysclksel[0]_i_2__1_n_0 ;
  wire \sysclksel[0]_i_3__1_n_0 ;
  wire \txdata_wait_cnt[3]_i_2__1_n_0 ;
  wire [3:0]txdata_wait_cnt_reg;
  wire txpmareset0;
  wire txpmareset_i_1__1_n_0;
  wire txpmareset_i_2__1_n_0;
  wire txratedone;
  wire txratedone_i_1__1_n_0;
  wire txratedone_i_2__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_CPLLLOCK),
        .Q(cplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0400FFFF04000000)) 
    cpllpd_i_1__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(qpllpd),
        .I5(rate_cpllpd_2),
        .O(cpllpd_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h80080002)) 
    cpllpd_i_2__1
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(qpllpd));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllpd_i_1__1_n_0),
        .Q(rate_cpllpd_2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0400FFFF04000000)) 
    cpllreset_i_1__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(qpllreset),
        .I5(rate_cpllreset_2),
        .O(cpllreset_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h80000024)) 
    cpllreset_i_2__1
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(qpllreset));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1__1_n_0),
        .Q(rate_cpllreset_2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D),
        .Q(drp_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h08200108)) 
    drp_start_i_1__1
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(drp_start_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_start_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_start_i_1__1_n_0),
        .Q(RATE_DRP_START),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h09010010)) 
    drp_x16_i_1__1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(drp_x16_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16_i_1__1_n_0),
        .Q(RATE_DRP_X16),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'h0840003A)) 
    drp_x16x20_mode_i_1__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(drp_x16x20_mode_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16x20_mode_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16x20_mode_i_1__1_n_0),
        .Q(RATE_DRP_X16X20_MODE),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \fsm[0]_i_10__1 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg1[1]),
        .O(\fsm[0]_i_10__1_n_0 ));
  LUT6 #(
    .INIT(64'hAA8A008000000000)) 
    \fsm[0]_i_11__1 
       (.I0(rst_idle_reg2),
        .I1(qplllock_reg2),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\fsm[0]_i_11__1_n_0 ));
  LUT5 #(
    .INIT(32'hFF202020)) 
    \fsm[0]_i_12__1 
       (.I0(txresetdone_reg2),
        .I1(phystatus_reg2),
        .I2(rxresetdone_reg2),
        .I3(out),
        .I4(\fsm[0]_i_9__1_0 ),
        .O(\fsm[0]_i_12__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[0]_i_1__5 
       (.I0(\fsm[0]_i_2__3_n_0 ),
        .I1(\fsm_reg[0]_i_3__1_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg[0]_i_4__1_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[0]_i_5__1_n_0 ),
        .O(fsm[0]));
  LUT5 #(
    .INIT(32'h03880333)) 
    \fsm[0]_i_2__3 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txsync_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[0]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h03440344FF77FF44)) 
    \fsm[0]_i_5__1 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(pll_lock),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[0]_i_10__1_n_0 ),
        .I5(\fsm_reg_n_0_[0] ),
        .O(\fsm[0]_i_5__1_n_0 ));
  LUT5 #(
    .INIT(32'hCF770344)) 
    \fsm[0]_i_6__1 
       (.I0(rxpmaresetdone_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(data90),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[0]_i_6__1_n_0 ));
  LUT5 #(
    .INIT(32'h47774744)) 
    \fsm[0]_i_7__1 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(fsm1),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[0]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'h3088308830BB3088)) 
    \fsm[0]_i_8__1 
       (.I0(\fsm[0]_i_11__1_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(drp_done_reg2),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(mmcm_lock_reg2),
        .I5(rxpmaresetdone_reg2),
        .O(\fsm[0]_i_8__1_n_0 ));
  LUT5 #(
    .INIT(32'h8BFF8BCC)) 
    \fsm[0]_i_9__1 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm[1]_i_9__1_n_0 ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm[0]_i_12__1_n_0 ),
        .O(\fsm[0]_i_9__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[1]_i_1__5 
       (.I0(\fsm[1]_i_2__2_n_0 ),
        .I1(\fsm[1]_i_3__2_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg[1]_i_4__1_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[1]_i_5__1_n_0 ),
        .O(fsm[1]));
  LUT5 #(
    .INIT(32'h03777700)) 
    \fsm[1]_i_2__2 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txsync_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h7433FF007400FF00)) 
    \fsm[1]_i_3__2 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(drp_done_reg2),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(data90),
        .O(\fsm[1]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h30BBFC00)) 
    \fsm[1]_i_5__1 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm[1]_i_8__1_n_0 ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_5__1_n_0 ));
  LUT5 #(
    .INIT(32'h00D00FF0)) 
    \fsm[1]_i_6__1 
       (.I0(pll_lock),
        .I1(rst_idle_reg2),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .O(\fsm[1]_i_6__1_n_0 ));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    \fsm[1]_i_7__1 
       (.I0(drp_done_reg2),
        .I1(data90),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm[1]_i_9__1_n_0 ),
        .O(\fsm[1]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'h34F7FFFFFFFFFFFF)) 
    \fsm[1]_i_8__1 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .I4(rst_idle_reg2),
        .I5(\fsm_reg_n_0_[0] ),
        .O(\fsm[1]_i_8__1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[1]_i_9__1 
       (.I0(txdata_wait_cnt_reg[3]),
        .I1(txdata_wait_cnt_reg[2]),
        .I2(txdata_wait_cnt_reg[0]),
        .I3(txdata_wait_cnt_reg[1]),
        .O(\fsm[1]_i_9__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \fsm[2]_i_1__5 
       (.I0(\fsm[2]_i_2__2_n_0 ),
        .I1(\fsm[2]_i_3__1_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm[2]_i_4__1_n_0 ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm[2]_i_5__1_n_0 ),
        .O(fsm[2]));
  LUT5 #(
    .INIT(32'h3C400C40)) 
    \fsm[2]_i_2__2 
       (.I0(rxsync_done_reg2),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(txsync_done_reg2),
        .O(\fsm[2]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h4F7FFFFF4F7F0000)) 
    \fsm[2]_i_3__1 
       (.I0(resetovrd_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(fsm1),
        .I4(\fsm_reg_n_0_[2] ),
        .I5(\fsm[2]_i_7__1_n_0 ),
        .O(\fsm[2]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0F0F0)) 
    \fsm[2]_i_4__1 
       (.I0(data90),
        .I1(drp_done_reg2),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(\fsm[2]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h4AFF4AAA)) 
    \fsm[2]_i_5__1 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(pll_lock),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[3]_i_5__1_n_0 ),
        .O(\fsm[2]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF2F2F2)) 
    \fsm[2]_i_6__1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit),
        .I3(\fsm[0]_i_9__1_0 ),
        .I4(out),
        .I5(ratedone),
        .O(fsm1));
  LUT6 #(
    .INIT(64'h7040707070407040)) 
    \fsm[2]_i_7__1 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(rate_in_reg2[1]),
        .I4(rate_in_reg2[0]),
        .I5(gen3_exit),
        .O(\fsm[2]_i_7__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \fsm[2]_i_8__1 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .O(pll_lock));
  LUT6 #(
    .INIT(64'hB888B88888BB8888)) 
    \fsm[3]_i_2__2 
       (.I0(\fsm[3]_i_4__1_n_0 ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm[3]_i_5__1_n_0 ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\fsm[3]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h888888B8B8B888B8)) 
    \fsm[3]_i_3__1 
       (.I0(\fsm[3]_i_6__1_n_0 ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[3]_i_7__1_n_0 ),
        .I4(\fsm_reg_n_0_[1] ),
        .I5(\fsm[3]_i_8__1_n_0 ),
        .O(\fsm[3]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hCFCFAFA0FFFFFFFF)) 
    \fsm[3]_i_4__1 
       (.I0(data90),
        .I1(drp_done_reg2),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm[3]_i_9__1_n_0 ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\fsm[3]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h0000309A)) 
    \fsm[3]_i_5__1 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg1[0]),
        .I3(rate_in_reg1[1]),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm[3]_i_5__1_n_0 ));
  LUT4 #(
    .INIT(16'h26FF)) 
    \fsm[3]_i_6__1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(rxsync_done_reg2),
        .I3(\fsm_reg_n_0_[2] ),
        .O(\fsm[3]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555777)) 
    \fsm[3]_i_7__1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(ratedone),
        .I2(out),
        .I3(\fsm[0]_i_9__1_0 ),
        .I4(gen3_exit),
        .I5(gen3_i_2__1_n_0),
        .O(\fsm[3]_i_7__1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \fsm[3]_i_8__1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(resetovrd_done_reg2),
        .O(\fsm[3]_i_8__1_n_0 ));
  LUT6 #(
    .INIT(64'hAABAFFBFFFFFFFFF)) 
    \fsm[3]_i_9__1 
       (.I0(rst_idle_reg2),
        .I1(qplllock_reg2),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\fsm[3]_i_9__1_n_0 ));
  LUT6 #(
    .INIT(64'h0008880800000000)) 
    \fsm[4]_i_2__1 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(data90),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(drp_done_reg2),
        .I5(\fsm_reg_n_0_[2] ),
        .O(\fsm[4]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h5F75FFFF)) 
    \fsm[4]_i_3__1 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(rxsync_done_reg2),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(\fsm[4]_i_3__1_n_0 ));
  LUT3 #(
    .INIT(8'h0D)) 
    \fsm[4]_i_4__1 
       (.I0(gen3_exit),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .O(data90));
  FDSE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_CPLLRESET));
  MUXF7 \fsm_reg[0]_i_3__1 
       (.I0(\fsm[0]_i_6__1_n_0 ),
        .I1(\fsm[0]_i_7__1_n_0 ),
        .O(\fsm_reg[0]_i_3__1_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  MUXF7 \fsm_reg[0]_i_4__1 
       (.I0(\fsm[0]_i_8__1_n_0 ),
        .I1(\fsm[0]_i_9__1_n_0 ),
        .O(\fsm_reg[0]_i_4__1_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  FDSE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  MUXF7 \fsm_reg[1]_i_4__1 
       (.I0(\fsm[1]_i_6__1_n_0 ),
        .I1(\fsm[1]_i_7__1_n_0 ),
        .O(\fsm_reg[1]_i_4__1_n_0 ),
        .S(\fsm_reg_n_0_[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  MUXF7 \fsm_reg[3]_i_1__1 
       (.I0(\fsm[3]_i_2__2_n_0 ),
        .I1(\fsm[3]_i_3__1_n_0 ),
        .O(fsm[3]),
        .S(\fsm_reg_n_0_[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fsm[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  MUXF7 \fsm_reg[4]_i_1__1 
       (.I0(\fsm[4]_i_2__1_n_0 ),
        .I1(\fsm[4]_i_3__1_n_0 ),
        .O(fsm[4]),
        .S(\fsm_reg_n_0_[4] ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    gen3_exit_i_1__1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(gen3_exit_i_2__1_n_0),
        .I4(gen3_exit),
        .O(gen3_exit_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h8000800000010000)) 
    gen3_exit_i_2__1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm[0]_i_10__1_n_0 ),
        .I5(\fsm_reg_n_0_[2] ),
        .O(gen3_exit_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_exit_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_exit_i_1__1_n_0),
        .Q(gen3_exit),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h2FFFFFFF20000000)) 
    gen3_i_1__1
       (.I0(gen3_i_2__1_n_0),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(gen3_i_3__1_n_0),
        .I5(rate_gen3_2),
        .O(gen3_i_1__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    gen3_i_2__1
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .O(gen3_i_2__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h81)) 
    gen3_i_3__1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .O(gen3_i_3__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_i_1__1_n_0),
        .Q(rate_gen3_2),
        .R(RST_CPLLRESET));
  LUT1 #(
    .INIT(2'h1)) 
    \gth_channel.gthe2_channel_i_i_5__1 
       (.I0(rate_gen3_2),
        .O(RX8B10BEN0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h06FF0600)) 
    pclk_sel_i_1__1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(pclk_sel_i_2__1_n_0),
        .I4(pipe_pclk_sel_out),
        .O(pclk_sel_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h80020080)) 
    pclk_sel_i_2__1
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(pclk_sel_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_i_1__1_n_0),
        .Q(pipe_pclk_sel_out),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    phystatus_i_1__1
       (.I0(txratedone_i_2__1_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(phystatus_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(phystatus),
        .O(phystatus_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_i_1__1_n_0),
        .Q(phystatus),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1_reg_0),
        .Q(phystatus_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h4404FFFF44040000)) 
    qpllpd_i_1__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(qpllpd),
        .I5(qpllpd_reg_0),
        .O(qpllpd_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1__2_n_0),
        .Q(qpllpd_reg_0),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h4404FFFF44040000)) 
    qpllreset_i_1__2
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(rate_in_reg2[1]),
        .I3(rate_in_reg2[0]),
        .I4(qpllreset),
        .I5(qpllreset_reg_0),
        .O(qpllreset_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1__2_n_0),
        .Q(qpllreset_reg_0),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    rate_done_reg1_i_1__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(USER_RATE_DONE));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    rate_idle_reg1_i_1__1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\fsm_reg[1]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_in_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_in_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0444FFFF04440000)) 
    \rate_out[0]_i_1__1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\rate_out[0]_i_2__1_n_0 ),
        .I5(RXRATE),
        .O(\rate_out[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8800000000222000)) 
    \rate_out[0]_i_2__1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(txpmareset0),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .I5(\fsm_reg_n_0_[1] ),
        .O(\rate_out[0]_i_2__1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \rate_out[0]_i_3__1 
       (.I0(gen3_exit),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .O(txpmareset0));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_out[0]_i_1__1_n_0 ),
        .Q(RXRATE),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h08800000)) 
    rate_rxsync_reg1_i_1__1
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(USER_RATE_RXSYNC));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    ratedone_i_1__1
       (.I0(txratedone_i_2__1_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(ratedone0),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(ratedone),
        .O(ratedone_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    ratedone_i_2__1
       (.I0(rxratedone),
        .I1(txratedone),
        .I2(phystatus),
        .O(ratedone0));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(ratedone_i_1__1_n_0),
        .Q(ratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(resetovrd_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_done_reg1),
        .Q(resetovrd_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    resetovrd_start_reg1_i_1__1
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[1] ),
        .O(USER_RESETOVRD_START));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rst_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXPMARESETDONE),
        .Q(rxpmaresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    rxratedone_i_1__1
       (.I0(txratedone_i_2__1_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(rxratedone_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(rxratedone),
        .O(rxratedone_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_i_1__1_n_0),
        .Q(rxratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRATEDONE),
        .Q(rxratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_done_reg1),
        .Q(rxsync_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    rxsync_start_reg1_i_1__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(SYNC_RXSYNC_START));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sysclksel[0]_i_1__1 
       (.I0(\sysclksel[0]_i_2__1_n_0 ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\sysclksel[0]_i_3__1_n_0 ),
        .I5(RXSYSCLKSEL),
        .O(\sysclksel[0]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \sysclksel[0]_i_2__1 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\fsm_reg_n_0_[4] ),
        .O(\sysclksel[0]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sysclksel[0]_i_3__1 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .O(\sysclksel[0]_i_3__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sysclksel_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\sysclksel[0]_i_1__1_n_0 ),
        .Q(RXSYSCLKSEL),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'hA2222222)) 
    \txdata_wait_cnt[0]_i_1__1 
       (.I0(\txdata_wait_cnt[3]_i_2__1_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1__1 
       (.I0(\txdata_wait_cnt[3]_i_2__1_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hAA2A8080)) 
    \txdata_wait_cnt[2]_i_1__1 
       (.I0(\txdata_wait_cnt[3]_i_2__1_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hAA80AA00)) 
    \txdata_wait_cnt[3]_i_1__1 
       (.I0(\txdata_wait_cnt[3]_i_2__1_n_0 ),
        .I1(txdata_wait_cnt_reg[0]),
        .I2(txdata_wait_cnt_reg[1]),
        .I3(txdata_wait_cnt_reg[3]),
        .I4(txdata_wait_cnt_reg[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \txdata_wait_cnt[3]_i_2__1 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(\txdata_wait_cnt[3]_i_2__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(txdata_wait_cnt_reg[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(txdata_wait_cnt_reg[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(txdata_wait_cnt_reg[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(txdata_wait_cnt_reg[3]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h00F2FFFF00F20000)) 
    txpmareset_i_1__1
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(txpmareset_i_2__1_n_0),
        .I5(rate_txpmareset_2),
        .O(txpmareset_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h80080020)) 
    txpmareset_i_2__1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(txpmareset_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txpmareset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpmareset_i_1__1_n_0),
        .Q(rate_txpmareset_2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0202000002000000)) 
    txratedone_i_1__1
       (.I0(txratedone_i_2__1_n_0),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(txratedone_reg2),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(txratedone),
        .O(txratedone_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    txratedone_i_2__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[4] ),
        .O(txratedone_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_i_1__1_n_0),
        .Q(txratedone),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRATEDONE),
        .Q(txratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXSYNC_DONE),
        .Q(txsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hFFFFFFFF04000000)) 
    txsync_start_reg1_i_1__1
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(Q[0]),
        .O(SYNC_TXSYNC_START));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_reset
   (SR,
    DRP_X16X20_MODE,
    RST_DRP_X16X20_MODE_reg_0,
    RST_DRP_X16X20_MODE_reg_1,
    RST_DRP_X16X20_MODE_reg_2,
    DRP_X16,
    RST_DRP_X16_reg_0,
    RST_DRP_X16_reg_1,
    RST_DRP_X16_reg_2,
    DRP_START,
    RST_DRP_START_reg_0,
    RST_DRP_START_reg_1,
    RST_DRP_START_reg_2,
    Q,
    RST_CPLLRESET,
    RST_RXUSRCLK_RESET,
    RST_DCLK_RESET,
    DRP_GTXRESET,
    rst_userrdy,
    out,
    RATE_DRP_X16X20_MODE,
    x16x20_mode_reg1_reg,
    x16x20_mode_reg1_reg_0,
    x16x20_mode_reg1_reg_1,
    RATE_DRP_X16,
    x16_reg1_reg,
    x16_reg1_reg_0,
    x16_reg1_reg_1,
    RATE_DRP_START,
    start_reg1_reg,
    start_reg1_reg_0,
    start_reg1_reg_1,
    pipe_pclk_in,
    pipe_mmcm_lock_in,
    RST_RESETDONE,
    D,
    RST_RATE_IDLE,
    RST_DRP_DONE,
    RST_RXPMARESETDONE,
    RST_PHYSTATUS,
    RST_TXSYNC_DONE,
    pipe_rxusrclk_in,
    pipe_dclk_in,
    RST_QPLL_IDLE,
    RST_RXCDRLOCK);
  output [0:0]SR;
  output DRP_X16X20_MODE;
  output RST_DRP_X16X20_MODE_reg_0;
  output RST_DRP_X16X20_MODE_reg_1;
  output RST_DRP_X16X20_MODE_reg_2;
  output DRP_X16;
  output RST_DRP_X16_reg_0;
  output RST_DRP_X16_reg_1;
  output RST_DRP_X16_reg_2;
  output DRP_START;
  output RST_DRP_START_reg_0;
  output RST_DRP_START_reg_1;
  output RST_DRP_START_reg_2;
  output [1:0]Q;
  output RST_CPLLRESET;
  output RST_RXUSRCLK_RESET;
  output RST_DCLK_RESET;
  output DRP_GTXRESET;
  output rst_userrdy;
  input out;
  input RATE_DRP_X16X20_MODE;
  input x16x20_mode_reg1_reg;
  input x16x20_mode_reg1_reg_0;
  input x16x20_mode_reg1_reg_1;
  input RATE_DRP_X16;
  input x16_reg1_reg;
  input x16_reg1_reg_0;
  input x16_reg1_reg_1;
  input RATE_DRP_START;
  input start_reg1_reg;
  input start_reg1_reg_0;
  input start_reg1_reg_1;
  input pipe_pclk_in;
  input pipe_mmcm_lock_in;
  input [3:0]RST_RESETDONE;
  input [3:0]D;
  input [3:0]RST_RATE_IDLE;
  input [3:0]RST_DRP_DONE;
  input [3:0]RST_RXPMARESETDONE;
  input [3:0]RST_PHYSTATUS;
  input [3:0]RST_TXSYNC_DONE;
  input pipe_rxusrclk_in;
  input pipe_dclk_in;
  input RST_QPLL_IDLE;
  input [3:0]RST_RXCDRLOCK;

  wire [3:0]D;
  wire DRP_GTXRESET;
  wire DRP_START;
  wire DRP_X16;
  wire DRP_X16X20_MODE;
  wire \FSM_onehot_fsm[0]_i_1_n_0 ;
  wire \FSM_onehot_fsm[0]_i_2_n_0 ;
  wire \FSM_onehot_fsm[10]_i_1_n_0 ;
  wire \FSM_onehot_fsm[11]_i_1_n_0 ;
  wire \FSM_onehot_fsm[12]_i_1_n_0 ;
  wire \FSM_onehot_fsm[12]_i_2_n_0 ;
  wire \FSM_onehot_fsm[13]_i_1_n_0 ;
  wire \FSM_onehot_fsm[14]_i_1_n_0 ;
  wire \FSM_onehot_fsm[15]_i_1_n_0 ;
  wire \FSM_onehot_fsm[15]_i_2_n_0 ;
  wire \FSM_onehot_fsm[15]_i_3_n_0 ;
  wire \FSM_onehot_fsm[16]_i_1_n_0 ;
  wire \FSM_onehot_fsm[1]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[1]_i_2_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[2]_i_2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[5]_i_1_n_0 ;
  wire \FSM_onehot_fsm[6]_i_1_n_0 ;
  wire \FSM_onehot_fsm[7]_i_1_n_0 ;
  wire \FSM_onehot_fsm[8]_i_1_n_0 ;
  wire \FSM_onehot_fsm[8]_i_3_n_0 ;
  wire \FSM_onehot_fsm[9]_i_1_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[0] ;
  wire \FSM_onehot_fsm_reg_n_0_[13] ;
  wire \FSM_onehot_fsm_reg_n_0_[14] ;
  wire \FSM_onehot_fsm_reg_n_0_[15] ;
  wire \FSM_onehot_fsm_reg_n_0_[16] ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_reg_n_0_[7] ;
  wire \FSM_onehot_fsm_reg_n_0_[8] ;
  wire \FSM_onehot_fsm_reg_n_0_[9] ;
  wire [1:0]Q;
  wire RATE_DRP_START;
  wire RATE_DRP_X16;
  wire RATE_DRP_X16X20_MODE;
  wire [3:0]RST_DRP_DONE;
  wire RST_DRP_START0;
  wire RST_DRP_START_reg_0;
  wire RST_DRP_START_reg_1;
  wire RST_DRP_START_reg_2;
  wire RST_DRP_X16X20_MODE0;
  wire RST_DRP_X16X20_MODE_reg_0;
  wire RST_DRP_X16X20_MODE_reg_1;
  wire RST_DRP_X16X20_MODE_reg_2;
  wire RST_DRP_X16_reg_0;
  wire RST_DRP_X16_reg_1;
  wire RST_DRP_X16_reg_2;
  wire [3:0]RST_PHYSTATUS;
  wire RST_QPLL_IDLE;
  wire [3:0]RST_RATE_IDLE;
  wire [3:0]RST_RESETDONE;
  wire [3:0]RST_RXCDRLOCK;
  wire [3:0]RST_RXPMARESETDONE;
  wire [3:0]RST_TXSYNC_DONE;
  wire [0:0]SR;
  wire \cfg_wait_cnt[2]_i_2_n_0 ;
  wire \cfg_wait_cnt[5]_i_2_n_0 ;
  wire [5:0]cfg_wait_cnt_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]cplllock_reg2;
  wire cpllpd;
  wire cpllreset;
  wire cpllreset_i_1__3_n_0;
  wire cpllreset_i_2__3_n_0;
  wire cpllreset_i_3_n_0;
  wire cpllreset_i_4_n_0;
  wire dclk_rst;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire dclk_rst_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire dclk_rst_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]drp_done_reg2;
  wire fsm2;
  wire fsm23_out;
  wire gtreset_i_1_n_0;
  wire in6;
  wire in7;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire p_0_in0_in;
  wire [5:0]p_0_in__0;
  wire p_1_in;
  wire p_1_in1_in;
  wire p_2_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]phystatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]phystatus_reg2;
  wire pipe_dclk_in;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire pipe_rxusrclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qpll_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qpll_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]resetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]resetdone_reg2;
  wire rst_drp_start;
  wire rst_drp_x16;
  wire rst_drp_x16x20_mode;
  wire rst_userrdy;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxpmaresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxusrclk_rst_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxusrclk_rst_reg2;
  wire start_reg1_reg;
  wire start_reg1_reg_0;
  wire start_reg1_reg_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txsync_done_reg2;
  wire userrdy;
  wire userrdy_i_1_n_0;
  wire x16_reg1_reg;
  wire x16_reg1_reg_0;
  wire x16_reg1_reg_1;
  wire x16x20_mode_reg1_reg;
  wire x16x20_mode_reg1_reg_0;
  wire x16x20_mode_reg1_reg_1;

  assign RST_CPLLRESET = cpllreset;
  assign RST_DCLK_RESET = dclk_rst_reg2;
  assign RST_RXUSRCLK_RESET = rxusrclk_rst_reg2;
  LUT4 #(
    .INIT(16'h4F44)) 
    \FSM_onehot_fsm[0]_i_1 
       (.I0(\FSM_onehot_fsm[0]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(fsm23_out),
        .I3(\FSM_onehot_fsm_reg_n_0_[0] ),
        .O(\FSM_onehot_fsm[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \FSM_onehot_fsm[0]_i_2 
       (.I0(cfg_wait_cnt_reg[5]),
        .I1(cfg_wait_cnt_reg[4]),
        .I2(cfg_wait_cnt_reg[3]),
        .I3(cfg_wait_cnt_reg[2]),
        .I4(cfg_wait_cnt_reg[0]),
        .I5(cfg_wait_cnt_reg[1]),
        .O(\FSM_onehot_fsm[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \FSM_onehot_fsm[10]_i_1 
       (.I0(txsync_done_reg2[3]),
        .I1(txsync_done_reg2[2]),
        .I2(txsync_done_reg2[1]),
        .I3(txsync_done_reg2[0]),
        .I4(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I5(Q[1]),
        .O(\FSM_onehot_fsm[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3FFFFFFF00000002)) 
    \FSM_onehot_fsm[11]_i_1 
       (.I0(p_0_in0_in),
        .I1(drp_done_reg2[1]),
        .I2(drp_done_reg2[0]),
        .I3(drp_done_reg2[3]),
        .I4(drp_done_reg2[2]),
        .I5(p_1_in1_in),
        .O(\FSM_onehot_fsm[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \FSM_onehot_fsm[12]_i_1 
       (.I0(\FSM_onehot_fsm[12]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I2(in6),
        .I3(p_0_in0_in),
        .O(\FSM_onehot_fsm[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_fsm[12]_i_2 
       (.I0(rxpmaresetdone_reg2[2]),
        .I1(rxpmaresetdone_reg2[3]),
        .I2(rxpmaresetdone_reg2[0]),
        .I3(rxpmaresetdone_reg2[1]),
        .O(\FSM_onehot_fsm[12]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_onehot_fsm[12]_i_3 
       (.I0(drp_done_reg2[1]),
        .I1(drp_done_reg2[0]),
        .I2(drp_done_reg2[3]),
        .I3(drp_done_reg2[2]),
        .O(in6));
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_fsm[13]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(drp_done_reg2[2]),
        .I2(drp_done_reg2[3]),
        .I3(drp_done_reg2[0]),
        .I4(drp_done_reg2[1]),
        .O(\FSM_onehot_fsm[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2AAAAAAA)) 
    \FSM_onehot_fsm[14]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I1(rxpmaresetdone_reg2[2]),
        .I2(rxpmaresetdone_reg2[3]),
        .I3(rxpmaresetdone_reg2[0]),
        .I4(rxpmaresetdone_reg2[1]),
        .I5(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(\FSM_onehot_fsm[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_fsm[15]_i_1 
       (.I0(\FSM_onehot_fsm[15]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm[15]_i_3_n_0 ),
        .O(\FSM_onehot_fsm[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_onehot_fsm[15]_i_2 
       (.I0(cplllock_reg2[3]),
        .I1(cplllock_reg2[2]),
        .I2(cplllock_reg2[1]),
        .I3(cplllock_reg2[0]),
        .O(\FSM_onehot_fsm[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_onehot_fsm[15]_i_3 
       (.I0(rate_idle_reg2[3]),
        .I1(rate_idle_reg2[2]),
        .I2(rate_idle_reg2[1]),
        .I3(rate_idle_reg2[0]),
        .O(\FSM_onehot_fsm[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hECCCCCCCCCCCCCC0)) 
    \FSM_onehot_fsm[16]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I2(rxpmaresetdone_reg2[2]),
        .I3(rxpmaresetdone_reg2[3]),
        .I4(rxpmaresetdone_reg2[0]),
        .I5(rxpmaresetdone_reg2[1]),
        .O(\FSM_onehot_fsm[16]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_fsm[1]_i_1__3 
       (.I0(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .O(\FSM_onehot_fsm[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT5 #(
    .INIT(32'h4000FFFF)) 
    \FSM_onehot_fsm[1]_i_2 
       (.I0(\cfg_wait_cnt[5]_i_2_n_0 ),
        .I1(cfg_wait_cnt_reg[3]),
        .I2(cfg_wait_cnt_reg[4]),
        .I3(cfg_wait_cnt_reg[5]),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \FSM_onehot_fsm[2]_i_1__3 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm[2]_i_2_n_0 ),
        .I2(resetdone_reg2[3]),
        .I3(resetdone_reg2[2]),
        .I4(resetdone_reg2[1]),
        .I5(resetdone_reg2[0]),
        .O(\FSM_onehot_fsm[2]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_onehot_fsm[2]_i_2 
       (.I0(phystatus_reg2[1]),
        .I1(phystatus_reg2[0]),
        .I2(phystatus_reg2[3]),
        .I3(phystatus_reg2[2]),
        .O(\FSM_onehot_fsm[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAA8)) 
    \FSM_onehot_fsm[3]_i_1__3 
       (.I0(Q[0]),
        .I1(txsync_done_reg2[3]),
        .I2(txsync_done_reg2[2]),
        .I3(txsync_done_reg2[1]),
        .I4(txsync_done_reg2[0]),
        .I5(cpllpd),
        .O(\FSM_onehot_fsm[3]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_fsm[4]_i_1__3 
       (.I0(mmcm_lock_reg2),
        .I1(userrdy),
        .I2(fsm2),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(\FSM_onehot_fsm[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_fsm[4]_i_2__3 
       (.I0(resetdone_reg2[0]),
        .I1(resetdone_reg2[1]),
        .I2(resetdone_reg2[2]),
        .I3(resetdone_reg2[3]),
        .I4(\FSM_onehot_fsm[2]_i_2_n_0 ),
        .O(fsm2));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_fsm[5]_i_1 
       (.I0(in7),
        .I1(p_1_in1_in),
        .I2(mmcm_lock_reg2),
        .I3(userrdy),
        .O(\FSM_onehot_fsm[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \FSM_onehot_fsm[5]_i_2 
       (.I0(drp_done_reg2[1]),
        .I1(drp_done_reg2[0]),
        .I2(drp_done_reg2[3]),
        .I3(drp_done_reg2[2]),
        .O(in7));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \FSM_onehot_fsm[6]_i_1 
       (.I0(\FSM_onehot_fsm[15]_i_3_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I2(in6),
        .I3(p_1_in),
        .O(\FSM_onehot_fsm[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAB2AAAAAAA)) 
    \FSM_onehot_fsm[7]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(drp_done_reg2[1]),
        .I2(drp_done_reg2[0]),
        .I3(drp_done_reg2[3]),
        .I4(drp_done_reg2[2]),
        .I5(p_1_in),
        .O(\FSM_onehot_fsm[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_fsm[8]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm[15]_i_2_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I3(fsm23_out),
        .O(\FSM_onehot_fsm[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \FSM_onehot_fsm[8]_i_2 
       (.I0(resetdone_reg2[0]),
        .I1(resetdone_reg2[1]),
        .I2(resetdone_reg2[2]),
        .I3(resetdone_reg2[3]),
        .I4(\FSM_onehot_fsm[8]_i_3_n_0 ),
        .O(fsm23_out));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_onehot_fsm[8]_i_3 
       (.I0(cplllock_reg2[1]),
        .I1(cplllock_reg2[0]),
        .I2(cplllock_reg2[3]),
        .I3(cplllock_reg2[2]),
        .O(\FSM_onehot_fsm[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0CCCCCCCCCCCCCCE)) 
    \FSM_onehot_fsm[9]_i_1 
       (.I0(Q[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I2(txsync_done_reg2[3]),
        .I3(txsync_done_reg2[2]),
        .I4(txsync_done_reg2[1]),
        .I5(txsync_done_reg2[0]),
        .O(\FSM_onehot_fsm[9]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[0]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[0] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[10]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[11]_i_1_n_0 ),
        .Q(p_1_in1_in),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[12]_i_1_n_0 ),
        .Q(p_0_in0_in),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[13]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[13] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[14]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[14] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[15]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[15] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[16]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[16] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__3_n_0 ),
        .Q(cpllpd),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[5]_i_1_n_0 ),
        .Q(userrdy),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[6]_i_1_n_0 ),
        .Q(p_1_in),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[7]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[7] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[8]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[8] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:01000000000000000,FSM_RXPMARESETDONE_2:10000000000000000,FSM_RXPMARESETDONE_1:00100000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[9]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[9] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'hE)) 
    RST_DRP_START_i_1
       (.I0(p_1_in),
        .I1(p_0_in0_in),
        .O(RST_DRP_START0));
  FDRE RST_DRP_START_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_DRP_START0),
        .Q(rst_drp_start),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    RST_DRP_X16X20_MODE_i_1
       (.I0(p_1_in),
        .I1(p_0_in0_in),
        .I2(p_1_in1_in),
        .I3(\FSM_onehot_fsm_reg_n_0_[7] ),
        .O(RST_DRP_X16X20_MODE0));
  FDRE RST_DRP_X16X20_MODE_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_DRP_X16X20_MODE0),
        .Q(rst_drp_x16x20_mode),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'hE)) 
    RST_DRP_X16_i_1
       (.I0(p_1_in),
        .I1(\FSM_onehot_fsm_reg_n_0_[7] ),
        .O(p_2_in));
  FDRE RST_DRP_X16_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_2_in),
        .Q(rst_drp_x16),
        .R(SR));
  LUT6 #(
    .INIT(64'h7555555500000000)) 
    \cfg_wait_cnt[0]_i_1 
       (.I0(cfg_wait_cnt_reg[0]),
        .I1(\cfg_wait_cnt[5]_i_2_n_0 ),
        .I2(cfg_wait_cnt_reg[3]),
        .I3(cfg_wait_cnt_reg[4]),
        .I4(cfg_wait_cnt_reg[5]),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'hABBA)) 
    \cfg_wait_cnt[1]_i_1 
       (.I0(\cfg_wait_cnt[2]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I2(cfg_wait_cnt_reg[1]),
        .I3(cfg_wait_cnt_reg[0]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT5 #(
    .INIT(32'hABBBBAAA)) 
    \cfg_wait_cnt[2]_i_1 
       (.I0(\cfg_wait_cnt[2]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I2(cfg_wait_cnt_reg[1]),
        .I3(cfg_wait_cnt_reg[0]),
        .I4(cfg_wait_cnt_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \cfg_wait_cnt[2]_i_2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(cfg_wait_cnt_reg[5]),
        .I2(cfg_wait_cnt_reg[4]),
        .I3(cfg_wait_cnt_reg[3]),
        .I4(\cfg_wait_cnt[5]_i_2_n_0 ),
        .O(\cfg_wait_cnt[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hD9990000)) 
    \cfg_wait_cnt[3]_i_1 
       (.I0(\cfg_wait_cnt[5]_i_2_n_0 ),
        .I1(cfg_wait_cnt_reg[3]),
        .I2(cfg_wait_cnt_reg[4]),
        .I3(cfg_wait_cnt_reg[5]),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'hF0B04040)) 
    \cfg_wait_cnt[4]_i_1 
       (.I0(\cfg_wait_cnt[5]_i_2_n_0 ),
        .I1(cfg_wait_cnt_reg[3]),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(cfg_wait_cnt_reg[5]),
        .I4(cfg_wait_cnt_reg[4]),
        .O(p_0_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'hFF000800)) 
    \cfg_wait_cnt[5]_i_1 
       (.I0(cfg_wait_cnt_reg[3]),
        .I1(cfg_wait_cnt_reg[4]),
        .I2(\cfg_wait_cnt[5]_i_2_n_0 ),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I4(cfg_wait_cnt_reg[5]),
        .O(p_0_in__0[5]));
  LUT3 #(
    .INIT(8'h7F)) 
    \cfg_wait_cnt[5]_i_2 
       (.I0(cfg_wait_cnt_reg[1]),
        .I1(cfg_wait_cnt_reg[0]),
        .I2(cfg_wait_cnt_reg[2]),
        .O(\cfg_wait_cnt[5]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(cfg_wait_cnt_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(cfg_wait_cnt_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(cfg_wait_cnt_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(cfg_wait_cnt_reg[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(cfg_wait_cnt_reg[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(cfg_wait_cnt_reg[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(cplllock_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(cplllock_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(cplllock_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[3]),
        .Q(cplllock_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[0]),
        .Q(cplllock_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[1]),
        .Q(cplllock_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[2]),
        .Q(cplllock_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[3]),
        .Q(cplllock_reg2[3]),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFFFE00)) 
    cpllreset_i_1__3
       (.I0(cpllreset_i_2__3_n_0),
        .I1(cpllreset_i_3_n_0),
        .I2(cpllreset_i_4_n_0),
        .I3(cpllreset),
        .I4(\FSM_onehot_fsm_reg_n_0_[0] ),
        .O(cpllreset_i_1__3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    cpllreset_i_2__3
       (.I0(p_1_in1_in),
        .I1(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I2(p_1_in),
        .I3(p_0_in0_in),
        .I4(Q[1]),
        .O(cpllreset_i_2__3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    cpllreset_i_3
       (.I0(Q[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I3(userrdy),
        .O(cpllreset_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    cpllreset_i_4
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(cpllpd),
        .O(cpllreset_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1__3_n_0),
        .Q(cpllreset),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    dclk_rst_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[1] ),
        .Q(dclk_rst),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    dclk_rst_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(dclk_rst),
        .Q(dclk_rst_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    dclk_rst_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(dclk_rst_reg1),
        .Q(dclk_rst_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_DRP_DONE[0]),
        .Q(drp_done_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_DRP_DONE[1]),
        .Q(drp_done_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_DRP_DONE[2]),
        .Q(drp_done_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_DRP_DONE[3]),
        .Q(drp_done_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1[0]),
        .Q(drp_done_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1[1]),
        .Q(drp_done_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1[2]),
        .Q(drp_done_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1[3]),
        .Q(drp_done_reg2[3]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \fsm[11]_i_1 
       (.I0(out),
        .O(SR));
  LUT3 #(
    .INIT(8'hBA)) 
    gtreset_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I2(DRP_GTXRESET),
        .O(gtreset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gtreset_i_1_n_0),
        .Q(DRP_GTXRESET),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_PHYSTATUS[0]),
        .Q(phystatus_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_PHYSTATUS[1]),
        .Q(phystatus_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_PHYSTATUS[2]),
        .Q(phystatus_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_PHYSTATUS[3]),
        .Q(phystatus_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1[0]),
        .Q(phystatus_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1[1]),
        .Q(phystatus_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1[2]),
        .Q(phystatus_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1[3]),
        .Q(phystatus_reg2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qpll_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_QPLL_IDLE),
        .Q(qpll_idle_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qpll_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpll_idle_reg1),
        .Q(qpll_idle_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RATE_IDLE[0]),
        .Q(rate_idle_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RATE_IDLE[1]),
        .Q(rate_idle_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RATE_IDLE[2]),
        .Q(rate_idle_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RATE_IDLE[3]),
        .Q(rate_idle_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1[0]),
        .Q(rate_idle_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1[1]),
        .Q(rate_idle_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1[2]),
        .Q(rate_idle_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1[3]),
        .Q(rate_idle_reg2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RESETDONE[0]),
        .Q(resetdone_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RESETDONE[1]),
        .Q(resetdone_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RESETDONE[2]),
        .Q(resetdone_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RESETDONE[3]),
        .Q(resetdone_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetdone_reg1[0]),
        .Q(resetdone_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetdone_reg1[1]),
        .Q(resetdone_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetdone_reg1[2]),
        .Q(resetdone_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetdone_reg1[3]),
        .Q(resetdone_reg2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RXCDRLOCK[0]),
        .Q(rxcdrlock_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RXCDRLOCK[1]),
        .Q(rxcdrlock_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RXCDRLOCK[2]),
        .Q(rxcdrlock_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RXCDRLOCK[3]),
        .Q(rxcdrlock_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1[0]),
        .Q(rxcdrlock_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1[1]),
        .Q(rxcdrlock_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1[2]),
        .Q(rxcdrlock_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1[3]),
        .Q(rxcdrlock_reg2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RXPMARESETDONE[0]),
        .Q(rxpmaresetdone_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RXPMARESETDONE[1]),
        .Q(rxpmaresetdone_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RXPMARESETDONE[2]),
        .Q(rxpmaresetdone_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_RXPMARESETDONE[3]),
        .Q(rxpmaresetdone_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1[0]),
        .Q(rxpmaresetdone_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1[1]),
        .Q(rxpmaresetdone_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1[2]),
        .Q(rxpmaresetdone_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1[3]),
        .Q(rxpmaresetdone_reg2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    rxusrclk_rst_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(cpllreset),
        .Q(rxusrclk_rst_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    rxusrclk_rst_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxusrclk_rst_reg1),
        .Q(rxusrclk_rst_reg2),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'hE)) 
    start_reg1_i_1__0
       (.I0(rst_drp_start),
        .I1(RATE_DRP_START),
        .O(DRP_START));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'hE)) 
    start_reg1_i_1__1
       (.I0(rst_drp_start),
        .I1(start_reg1_reg),
        .O(RST_DRP_START_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'hE)) 
    start_reg1_i_1__2
       (.I0(rst_drp_start),
        .I1(start_reg1_reg_0),
        .O(RST_DRP_START_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'hE)) 
    start_reg1_i_1__3
       (.I0(rst_drp_start),
        .I1(start_reg1_reg_1),
        .O(RST_DRP_START_reg_2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_TXSYNC_DONE[0]),
        .Q(txsync_done_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_TXSYNC_DONE[1]),
        .Q(txsync_done_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_TXSYNC_DONE[2]),
        .Q(txsync_done_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_TXSYNC_DONE[3]),
        .Q(txsync_done_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1[0]),
        .Q(txsync_done_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1[1]),
        .Q(txsync_done_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1[2]),
        .Q(txsync_done_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1[3]),
        .Q(txsync_done_reg2[3]),
        .R(SR));
  LUT3 #(
    .INIT(8'hB8)) 
    userrdy_i_1
       (.I0(mmcm_lock_reg2),
        .I1(userrdy),
        .I2(rst_userrdy),
        .O(userrdy_i_1_n_0));
  FDRE #(
    .INIT(1'b1)) 
    userrdy_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(userrdy_i_1_n_0),
        .Q(rst_userrdy),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'hE)) 
    x16_reg1_i_1
       (.I0(rst_drp_x16),
        .I1(RATE_DRP_X16),
        .O(DRP_X16));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'hE)) 
    x16_reg1_i_1__0
       (.I0(rst_drp_x16),
        .I1(x16_reg1_reg),
        .O(RST_DRP_X16_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'hE)) 
    x16_reg1_i_1__1
       (.I0(rst_drp_x16),
        .I1(x16_reg1_reg_0),
        .O(RST_DRP_X16_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'hE)) 
    x16_reg1_i_1__2
       (.I0(rst_drp_x16),
        .I1(x16_reg1_reg_1),
        .O(RST_DRP_X16_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'hE)) 
    x16x20_mode_reg1_i_1
       (.I0(rst_drp_x16x20_mode),
        .I1(RATE_DRP_X16X20_MODE),
        .O(DRP_X16X20_MODE));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'hE)) 
    x16x20_mode_reg1_i_1__0
       (.I0(rst_drp_x16x20_mode),
        .I1(x16x20_mode_reg1_reg),
        .O(RST_DRP_X16X20_MODE_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'hE)) 
    x16x20_mode_reg1_i_1__1
       (.I0(rst_drp_x16x20_mode),
        .I1(x16x20_mode_reg1_reg_0),
        .O(RST_DRP_X16X20_MODE_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'hE)) 
    x16x20_mode_reg1_i_1__2
       (.I0(rst_drp_x16x20_mode),
        .I1(x16x20_mode_reg1_reg_1),
        .O(RST_DRP_X16X20_MODE_reg_2));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_sync
   (out,
    txphaligndone_reg3_reg_0,
    sync_txdlyen_0,
    \txsync_fsm.txsync_done_reg_0 ,
    Q,
    RST_CPLLRESET,
    SYNC_TXPHALIGNDONE,
    pipe_pclk_in,
    SYNC_TXSYNC_START,
    pipe_mmcm_lock_in,
    SYNC_TXDLYSRESETDONE,
    SYNC_TXPHINITDONE,
    SYNC_GEN3,
    D,
    PIPE_RXELECIDLE,
    rxcdrlock_reg1_reg_0,
    SYNC_TXSYNCDONE,
    SYNC_RXSYNC_START,
    SYNC_RXDLYSRESETDONE,
    SYNC_RXPHALIGNDONE_M,
    SYNC_RXPHALIGNDONE_S,
    SYNC_RXSYNCDONE,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 );
  output out;
  output txphaligndone_reg3_reg_0;
  output sync_txdlyen_0;
  output [0:0]\txsync_fsm.txsync_done_reg_0 ;
  output [2:0]Q;
  input RST_CPLLRESET;
  input SYNC_TXPHALIGNDONE;
  input pipe_pclk_in;
  input SYNC_TXSYNC_START;
  input pipe_mmcm_lock_in;
  input SYNC_TXDLYSRESETDONE;
  input SYNC_TXPHINITDONE;
  input SYNC_GEN3;
  input [0:0]D;
  input [0:0]PIPE_RXELECIDLE;
  input [0:0]rxcdrlock_reg1_reg_0;
  input SYNC_TXSYNCDONE;
  input SYNC_RXSYNC_START;
  input SYNC_RXDLYSRESETDONE;
  input SYNC_RXPHALIGNDONE_M;
  input SYNC_RXPHALIGNDONE_S;
  input SYNC_RXSYNCDONE;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ;

  wire [0:0]D;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ;
  wire [0:0]PIPE_RXELECIDLE;
  wire [2:0]Q;
  wire RST_CPLLRESET;
  wire SYNC_GEN3;
  wire SYNC_RXDLYSRESETDONE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_RXSYNCDONE;
  wire SYNC_RXSYNC_START;
  wire SYNC_TXDLYSRESETDONE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire SYNC_TXSYNCDONE;
  wire SYNC_TXSYNC_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  wire [0:0]rxcdrlock_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg2;
  wire sync_txdlyen_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg3;
  wire \txsync_fsm.txdlyen_i_1_n_0 ;
  wire \txsync_fsm.txsync_done_i_1_n_0 ;
  wire [0:0]\txsync_fsm.txsync_done_reg_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg3;

  assign out = txphaligndone_reg2;
  assign txphaligndone_reg3_reg_0 = txphaligndone_reg3;
  LUT5 #(
    .INIT(32'h1D1DFF1D)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I2(txsync_start_reg2),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2 
       (.I0(Q[1]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1 
       (.I0(mmcm_lock_reg2),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I3(txsync_start_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1 
       (.I0(txdlysresetdone_reg2),
        .I1(txdlysresetdone_reg3),
        .I2(Q[0]),
        .I3(mmcm_lock_reg2),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(txdlysresetdone_reg2),
        .I3(txdlysresetdone_reg3),
        .I4(Q[0]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_2 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8F88FFFF88888888)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .I1(Q[2]),
        .I2(txphinitdone_reg3),
        .I3(txphinitdone_reg2),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ),
        .I5(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFEAEA2A002A2A)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ),
        .I3(txphaligndone_reg3),
        .I4(txphaligndone_reg2),
        .I5(Q[2]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ),
        .Q(Q[0]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ),
        .Q(Q[2]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D),
        .Q(rate_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1_reg_0),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXDLYSRESETDONE),
        .Q(rxdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXELECIDLE),
        .Q(rxelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_M),
        .Q(rxphaligndone_m_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_S),
        .Q(rxphaligndone_s_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXSYNC_START),
        .Q(rxsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXSYNCDONE),
        .Q(rxsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXDLYSRESETDONE),
        .Q(txdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHALIGNDONE),
        .Q(txphaligndone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHINITDONE),
        .Q(txphinitdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hABAAA8AA)) 
    \txsync_fsm.txdlyen_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ),
        .I2(txsync_start_reg2),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I4(sync_txdlyen_0),
        .O(\txsync_fsm.txdlyen_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txdlyen_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txdlyen_i_1_n_0 ),
        .Q(sync_txdlyen_0),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h222F222222202222)) 
    \txsync_fsm.txsync_done_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ),
        .I3(txsync_start_reg2),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I5(\txsync_fsm.txsync_done_reg_0 ),
        .O(\txsync_fsm.txsync_done_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1_n_0 ),
        .Q(\txsync_fsm.txsync_done_reg_0 ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START),
        .Q(txsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNCDONE),
        .Q(txsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_sync_10
   (Q,
    \txsync_fsm.txsync_done_reg_0 ,
    out,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    RST_CPLLRESET,
    pipe_pclk_in,
    SYNC_TXPHALIGNDONE,
    SYNC_TXSYNC_START,
    pipe_mmcm_lock_in,
    SYNC_TXDLYSRESETDONE,
    SYNC_TXPHINITDONE,
    SYNC_GEN3,
    D,
    PIPE_RXELECIDLE,
    rxcdrlock_reg1_reg_0,
    SYNC_TXSYNCDONE,
    SYNC_RXSYNC_START,
    SYNC_RXDLYSRESETDONE,
    SYNC_RXPHALIGNDONE_M,
    SYNC_RXPHALIGNDONE_S,
    SYNC_RXSYNCDONE,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 );
  output [2:0]Q;
  output [0:0]\txsync_fsm.txsync_done_reg_0 ;
  input out;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input SYNC_TXPHALIGNDONE;
  input SYNC_TXSYNC_START;
  input pipe_mmcm_lock_in;
  input SYNC_TXDLYSRESETDONE;
  input SYNC_TXPHINITDONE;
  input SYNC_GEN3;
  input [0:0]D;
  input [0:0]PIPE_RXELECIDLE;
  input [0:0]rxcdrlock_reg1_reg_0;
  input SYNC_TXSYNCDONE;
  input SYNC_RXSYNC_START;
  input SYNC_RXDLYSRESETDONE;
  input SYNC_RXPHALIGNDONE_M;
  input SYNC_RXPHALIGNDONE_S;
  input SYNC_RXSYNCDONE;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;

  wire [0:0]D;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ;
  wire [0:0]PIPE_RXELECIDLE;
  wire [2:0]Q;
  wire RST_CPLLRESET;
  wire SYNC_GEN3;
  wire SYNC_RXDLYSRESETDONE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_RXSYNCDONE;
  wire SYNC_RXSYNC_START;
  wire SYNC_TXDLYSRESETDONE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire SYNC_TXSYNCDONE;
  wire SYNC_TXSYNC_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  wire [0:0]rxcdrlock_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg3;
  wire \txsync_fsm.txsync_done_i_1__1_n_0 ;
  wire [0:0]\txsync_fsm.txsync_done_reg_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg3;

  LUT4 #(
    .INIT(16'hFF1D)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1_n_0 ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I2(txsync_start_reg2),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__1 
       (.I0(mmcm_lock_reg2),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I3(txsync_start_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__1 
       (.I0(txdlysresetdone_reg2),
        .I1(txdlysresetdone_reg3),
        .I2(Q[0]),
        .I3(mmcm_lock_reg2),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0_n_0 ),
        .I1(Q[1]),
        .I2(txdlysresetdone_reg2),
        .I3(txdlysresetdone_reg3),
        .I4(Q[0]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__1 
       (.I0(txphaligndone_reg3),
        .I1(txphaligndone_reg2),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .I3(Q[2]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0_n_0 ),
        .I5(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(out),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h8080AA80)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__1 
       (.I0(Q[2]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I2(out),
        .I3(txphaligndone_reg2),
        .I4(txphaligndone_reg3),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__1_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__1_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__1_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D),
        .Q(rate_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1_reg_0),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXDLYSRESETDONE),
        .Q(rxdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXELECIDLE),
        .Q(rxelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_M),
        .Q(rxphaligndone_m_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_S),
        .Q(rxphaligndone_s_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXSYNC_START),
        .Q(rxsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXSYNCDONE),
        .Q(rxsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXDLYSRESETDONE),
        .Q(txdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHALIGNDONE),
        .Q(txphaligndone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHINITDONE),
        .Q(txphinitdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hABAAA8AA)) 
    \txsync_fsm.txsync_done_i_1__1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1_n_0 ),
        .I2(txsync_start_reg2),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I4(\txsync_fsm.txsync_done_reg_0 ),
        .O(\txsync_fsm.txsync_done_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1__1_n_0 ),
        .Q(\txsync_fsm.txsync_done_reg_0 ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START),
        .Q(txsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNCDONE),
        .Q(txsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_sync_16
   (Q,
    \txsync_fsm.txsync_done_reg_0 ,
    out,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    RST_CPLLRESET,
    pipe_pclk_in,
    SYNC_TXPHALIGNDONE,
    SYNC_TXSYNC_START,
    pipe_mmcm_lock_in,
    SYNC_TXDLYSRESETDONE,
    SYNC_TXPHINITDONE,
    SYNC_GEN3,
    D,
    PIPE_RXELECIDLE,
    rxcdrlock_reg1_reg_0,
    SYNC_TXSYNCDONE,
    SYNC_RXSYNC_START,
    SYNC_RXDLYSRESETDONE,
    SYNC_RXPHALIGNDONE_M,
    SYNC_RXPHALIGNDONE_S,
    SYNC_RXSYNCDONE,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 );
  output [2:0]Q;
  output [0:0]\txsync_fsm.txsync_done_reg_0 ;
  input out;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input SYNC_TXPHALIGNDONE;
  input SYNC_TXSYNC_START;
  input pipe_mmcm_lock_in;
  input SYNC_TXDLYSRESETDONE;
  input SYNC_TXPHINITDONE;
  input SYNC_GEN3;
  input [0:0]D;
  input [0:0]PIPE_RXELECIDLE;
  input [0:0]rxcdrlock_reg1_reg_0;
  input SYNC_TXSYNCDONE;
  input SYNC_RXSYNC_START;
  input SYNC_RXDLYSRESETDONE;
  input SYNC_RXPHALIGNDONE_M;
  input SYNC_RXPHALIGNDONE_S;
  input SYNC_RXSYNCDONE;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;

  wire [0:0]D;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ;
  wire [0:0]PIPE_RXELECIDLE;
  wire [2:0]Q;
  wire RST_CPLLRESET;
  wire SYNC_GEN3;
  wire SYNC_RXDLYSRESETDONE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_RXSYNCDONE;
  wire SYNC_RXSYNC_START;
  wire SYNC_TXDLYSRESETDONE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire SYNC_TXSYNCDONE;
  wire SYNC_TXSYNC_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  wire [0:0]rxcdrlock_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg3;
  wire \txsync_fsm.txsync_done_i_1__2_n_0 ;
  wire [0:0]\txsync_fsm.txsync_done_reg_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg3;

  LUT4 #(
    .INIT(16'hFF1D)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__2 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2_n_0 ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I2(txsync_start_reg2),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__2 
       (.I0(mmcm_lock_reg2),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I3(txsync_start_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__2 
       (.I0(txdlysresetdone_reg2),
        .I1(txdlysresetdone_reg3),
        .I2(Q[0]),
        .I3(mmcm_lock_reg2),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__2 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1_n_0 ),
        .I1(Q[1]),
        .I2(txdlysresetdone_reg2),
        .I3(txdlysresetdone_reg3),
        .I4(Q[0]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__2 
       (.I0(txphaligndone_reg3),
        .I1(txphaligndone_reg2),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .I3(Q[2]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1_n_0 ),
        .I5(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(out),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h8080AA80)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__2 
       (.I0(Q[2]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I2(out),
        .I3(txphaligndone_reg2),
        .I4(txphaligndone_reg3),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__2_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__2_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__2_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D),
        .Q(rate_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1_reg_0),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXDLYSRESETDONE),
        .Q(rxdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXELECIDLE),
        .Q(rxelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_M),
        .Q(rxphaligndone_m_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_S),
        .Q(rxphaligndone_s_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXSYNC_START),
        .Q(rxsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXSYNCDONE),
        .Q(rxsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXDLYSRESETDONE),
        .Q(txdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHALIGNDONE),
        .Q(txphaligndone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHINITDONE),
        .Q(txphinitdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hABAAA8AA)) 
    \txsync_fsm.txsync_done_i_1__2 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2_n_0 ),
        .I2(txsync_start_reg2),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I4(\txsync_fsm.txsync_done_reg_0 ),
        .O(\txsync_fsm.txsync_done_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1__2_n_0 ),
        .Q(\txsync_fsm.txsync_done_reg_0 ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START),
        .Q(txsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNCDONE),
        .Q(txsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_sync_4
   (Q,
    \txsync_fsm.txsync_done_reg_0 ,
    out,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    RST_CPLLRESET,
    pipe_pclk_in,
    SYNC_TXPHALIGNDONE,
    SYNC_TXSYNC_START,
    pipe_mmcm_lock_in,
    SYNC_TXDLYSRESETDONE,
    SYNC_TXPHINITDONE,
    SYNC_GEN3,
    D,
    PIPE_RXELECIDLE,
    rxcdrlock_reg1_reg_0,
    SYNC_TXSYNCDONE,
    SYNC_RXSYNC_START,
    SYNC_RXDLYSRESETDONE,
    SYNC_RXPHALIGNDONE_M,
    SYNC_RXPHALIGNDONE_S,
    SYNC_RXSYNCDONE,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 );
  output [2:0]Q;
  output [0:0]\txsync_fsm.txsync_done_reg_0 ;
  input out;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input SYNC_TXPHALIGNDONE;
  input SYNC_TXSYNC_START;
  input pipe_mmcm_lock_in;
  input SYNC_TXDLYSRESETDONE;
  input SYNC_TXPHINITDONE;
  input SYNC_GEN3;
  input [0:0]D;
  input [0:0]PIPE_RXELECIDLE;
  input [0:0]rxcdrlock_reg1_reg_0;
  input SYNC_TXSYNCDONE;
  input SYNC_RXSYNC_START;
  input SYNC_RXDLYSRESETDONE;
  input SYNC_RXPHALIGNDONE_M;
  input SYNC_RXPHALIGNDONE_S;
  input SYNC_RXSYNCDONE;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;

  wire [0:0]D;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ;
  wire [0:0]PIPE_RXELECIDLE;
  wire [2:0]Q;
  wire RST_CPLLRESET;
  wire SYNC_GEN3;
  wire SYNC_RXDLYSRESETDONE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_RXSYNCDONE;
  wire SYNC_RXSYNC_START;
  wire SYNC_TXDLYSRESETDONE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire SYNC_TXSYNCDONE;
  wire SYNC_TXSYNC_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  wire [0:0]rxcdrlock_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg3;
  wire \txsync_fsm.txsync_done_i_1__0_n_0 ;
  wire [0:0]\txsync_fsm.txsync_done_reg_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg3;

  LUT4 #(
    .INIT(16'hFF1D)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__0 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0_n_0 ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I2(txsync_start_reg2),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__0 
       (.I0(mmcm_lock_reg2),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I3(txsync_start_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__0 
       (.I0(txdlysresetdone_reg2),
        .I1(txdlysresetdone_reg3),
        .I2(Q[0]),
        .I3(mmcm_lock_reg2),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__0 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__2_n_0 ),
        .I1(Q[1]),
        .I2(txdlysresetdone_reg2),
        .I3(txdlysresetdone_reg3),
        .I4(Q[0]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__0 
       (.I0(txphaligndone_reg3),
        .I1(txphaligndone_reg2),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .I3(Q[2]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__2_n_0 ),
        .I5(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__2 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(out),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h8080AA80)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__0 
       (.I0(Q[2]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I2(out),
        .I3(txphaligndone_reg2),
        .I4(txphaligndone_reg3),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__0_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__0_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__0_n_0 ),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D),
        .Q(rate_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1_reg_0),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXDLYSRESETDONE),
        .Q(rxdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXELECIDLE),
        .Q(rxelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_M),
        .Q(rxphaligndone_m_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_S),
        .Q(rxphaligndone_s_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXSYNC_START),
        .Q(rxsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXSYNCDONE),
        .Q(rxsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXDLYSRESETDONE),
        .Q(txdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHALIGNDONE),
        .Q(txphaligndone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHINITDONE),
        .Q(txphinitdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hABAAA8AA)) 
    \txsync_fsm.txsync_done_i_1__0 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[6] ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0_n_0 ),
        .I2(txsync_start_reg2),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[1] ),
        .I4(\txsync_fsm.txsync_done_reg_0 ),
        .O(\txsync_fsm.txsync_done_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1__0_n_0 ),
        .Q(\txsync_fsm.txsync_done_reg_0 ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START),
        .Q(txsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNCDONE),
        .Q(txsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(RST_CPLLRESET));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_user
   (out,
    SYNC_TXPHALIGNDONE,
    txelecidle_reg2_reg_0,
    txcompliance_reg2_reg_0,
    SYNC_TXPHINITDONE,
    rxsyncallin,
    \gth_channel.gthe2_channel_i ,
    \gth_channel.gthe2_channel_i_0 ,
    txelecidle_reg2_reg_1,
    USER_OOBCLK,
    PIPE_GEN3_RDY,
    \rxcdrlock_cnt_reg[3]_0 ,
    pipe_rx0_valid,
    pipe_rx0_phy_status,
    \converge_cnt_reg[1]_0 ,
    \converge_cnt_reg[13]_0 ,
    rxresetdone_reg2_reg_0,
    txcompliance_reg2_reg_1,
    converge_gen3_reg_0,
    RST_RXUSRCLK_RESET,
    txphaligndone_reg1_reg,
    txphaligndone_reg1_reg_0,
    txphaligndone_reg1_reg_1,
    txphaligndone_reg1_reg_2,
    txphinitdone_reg1_reg,
    txphinitdone_reg1_reg_0,
    txphinitdone_reg1_reg_1,
    \gth_channel.gthe2_channel_i_1 ,
    SYNC_RXPHALIGNDONE_M,
    \gth_channel.gthe2_channel_i_2 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ,
    RST_CPLLRESET,
    pipe_pclk_sel_out,
    pipe_pclk_in,
    pipe_oobclk_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    PIPE_TXELECIDLE,
    PIPE_TXCOMPLIANCE,
    gt_rxcdrlock_0,
    gt_rxvalid_0,
    pipe_rxusrclk_in,
    PIPE_RXSTATUS,
    D,
    Q,
    USER_RATE_RXSYNC,
    USER_RATE_DONE,
    rate_gen3_reg1_reg_0,
    pipe_rx0_eq_adapt_done,
    USER_RESETOVRD_START,
    PCIE_3_0_i);
  output out;
  output SYNC_TXPHALIGNDONE;
  output txelecidle_reg2_reg_0;
  output txcompliance_reg2_reg_0;
  output SYNC_TXPHINITDONE;
  output rxsyncallin;
  output \gth_channel.gthe2_channel_i ;
  output \gth_channel.gthe2_channel_i_0 ;
  output txelecidle_reg2_reg_1;
  output USER_OOBCLK;
  output [0:0]PIPE_GEN3_RDY;
  output [0:0]\rxcdrlock_cnt_reg[3]_0 ;
  output pipe_rx0_valid;
  output pipe_rx0_phy_status;
  output \converge_cnt_reg[1]_0 ;
  output \converge_cnt_reg[13]_0 ;
  output [0:0]rxresetdone_reg2_reg_0;
  output txcompliance_reg2_reg_1;
  output converge_gen3_reg_0;
  input RST_RXUSRCLK_RESET;
  input txphaligndone_reg1_reg;
  input txphaligndone_reg1_reg_0;
  input txphaligndone_reg1_reg_1;
  input txphaligndone_reg1_reg_2;
  input txphinitdone_reg1_reg;
  input txphinitdone_reg1_reg_0;
  input txphinitdone_reg1_reg_1;
  input \gth_channel.gthe2_channel_i_1 ;
  input SYNC_RXPHALIGNDONE_M;
  input \gth_channel.gthe2_channel_i_2 ;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  input RST_CPLLRESET;
  input [0:0]pipe_pclk_sel_out;
  input pipe_pclk_in;
  input pipe_oobclk_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input [0:0]PIPE_TXELECIDLE;
  input [0:0]PIPE_TXCOMPLIANCE;
  input gt_rxcdrlock_0;
  input gt_rxvalid_0;
  input pipe_rxusrclk_in;
  input [0:0]PIPE_RXSTATUS;
  input [0:0]D;
  input [0:0]Q;
  input USER_RATE_RXSYNC;
  input USER_RATE_DONE;
  input rate_gen3_reg1_reg_0;
  input pipe_rx0_eq_adapt_done;
  input USER_RESETOVRD_START;
  input [0:0]PCIE_3_0_i;

  wire [0:0]D;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  wire GT_RX_CONVERGE0_i_10_n_0;
  wire GT_RX_CONVERGE0_i_11_n_0;
  wire GT_RX_CONVERGE0_i_12_n_0;
  wire GT_RX_CONVERGE0_i_9_n_0;
  wire [0:0]PCIE_3_0_i;
  wire PCIE_3_0_i_i_295_n_0;
  wire [0:0]PIPE_GEN3_RDY;
  wire [0:0]PIPE_RXSTATUS;
  wire [0:0]PIPE_TXCOMPLIANCE;
  wire [0:0]PIPE_TXELECIDLE;
  wire [0:0]Q;
  wire RST_CPLLRESET;
  wire RST_RXUSRCLK_RESET;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire USER_OOBCLK;
  wire USER_RATE_DONE;
  wire USER_RATE_RXSYNC;
  wire USER_RESETOVRD_START;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \converge_cnt[0]_i_1__3_n_0 ;
  wire \converge_cnt[0]_i_4_n_0 ;
  wire \converge_cnt[0]_i_5_n_0 ;
  wire \converge_cnt[0]_i_6_n_0 ;
  wire [21:0]converge_cnt_reg;
  wire \converge_cnt_reg[0]_i_3_n_0 ;
  wire \converge_cnt_reg[0]_i_3_n_1 ;
  wire \converge_cnt_reg[0]_i_3_n_2 ;
  wire \converge_cnt_reg[0]_i_3_n_3 ;
  wire \converge_cnt_reg[0]_i_3_n_4 ;
  wire \converge_cnt_reg[0]_i_3_n_5 ;
  wire \converge_cnt_reg[0]_i_3_n_6 ;
  wire \converge_cnt_reg[0]_i_3_n_7 ;
  wire \converge_cnt_reg[12]_i_1_n_0 ;
  wire \converge_cnt_reg[12]_i_1_n_1 ;
  wire \converge_cnt_reg[12]_i_1_n_2 ;
  wire \converge_cnt_reg[12]_i_1_n_3 ;
  wire \converge_cnt_reg[12]_i_1_n_4 ;
  wire \converge_cnt_reg[12]_i_1_n_5 ;
  wire \converge_cnt_reg[12]_i_1_n_6 ;
  wire \converge_cnt_reg[12]_i_1_n_7 ;
  wire \converge_cnt_reg[13]_0 ;
  wire \converge_cnt_reg[16]_i_1_n_0 ;
  wire \converge_cnt_reg[16]_i_1_n_1 ;
  wire \converge_cnt_reg[16]_i_1_n_2 ;
  wire \converge_cnt_reg[16]_i_1_n_3 ;
  wire \converge_cnt_reg[16]_i_1_n_4 ;
  wire \converge_cnt_reg[16]_i_1_n_5 ;
  wire \converge_cnt_reg[16]_i_1_n_6 ;
  wire \converge_cnt_reg[16]_i_1_n_7 ;
  wire \converge_cnt_reg[1]_0 ;
  wire \converge_cnt_reg[20]_i_1_n_3 ;
  wire \converge_cnt_reg[20]_i_1_n_6 ;
  wire \converge_cnt_reg[20]_i_1_n_7 ;
  wire \converge_cnt_reg[4]_i_1_n_0 ;
  wire \converge_cnt_reg[4]_i_1_n_1 ;
  wire \converge_cnt_reg[4]_i_1_n_2 ;
  wire \converge_cnt_reg[4]_i_1_n_3 ;
  wire \converge_cnt_reg[4]_i_1_n_4 ;
  wire \converge_cnt_reg[4]_i_1_n_5 ;
  wire \converge_cnt_reg[4]_i_1_n_6 ;
  wire \converge_cnt_reg[4]_i_1_n_7 ;
  wire \converge_cnt_reg[8]_i_1_n_0 ;
  wire \converge_cnt_reg[8]_i_1_n_1 ;
  wire \converge_cnt_reg[8]_i_1_n_2 ;
  wire \converge_cnt_reg[8]_i_1_n_3 ;
  wire \converge_cnt_reg[8]_i_1_n_4 ;
  wire \converge_cnt_reg[8]_i_1_n_5 ;
  wire \converge_cnt_reg[8]_i_1_n_6 ;
  wire \converge_cnt_reg[8]_i_1_n_7 ;
  wire converge_gen3_i_1_n_0;
  wire converge_gen3_reg_0;
  wire gen3_rdy0;
  wire gt_rxcdrlock_0;
  wire gt_rxvalid_0;
  wire \gth_channel.gthe2_channel_i ;
  wire \gth_channel.gthe2_channel_i_0 ;
  wire \gth_channel.gthe2_channel_i_1 ;
  wire \gth_channel.gthe2_channel_i_2 ;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_i_1_n_0 ;
  wire [3:0]p_0_in__0;
  wire [3:0]p_0_in__1;
  wire [1:0]p_1_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg2;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire pipe_rx0_eq_adapt_done;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_valid;
  wire pipe_rxusrclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg1;
  wire rate_gen3_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire [3:0]rxcdrlock_cnt_reg;
  wire [0:0]\rxcdrlock_cnt_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  wire [0:0]rxresetdone_reg2_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg2;
  wire rxsyncallin;
  wire [3:0]rxvalid_cnt_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg2;
  wire sel;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg2;
  wire txcompliance_reg2_reg_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg2;
  wire txelecidle_reg2_reg_1;
  wire txphaligndone_reg1_reg;
  wire txphaligndone_reg1_reg_0;
  wire txphaligndone_reg1_reg_1;
  wire txphaligndone_reg1_reg_2;
  wire txphinitdone_reg1_reg;
  wire txphinitdone_reg1_reg_0;
  wire txphinitdone_reg1_reg_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  wire [3:1]\NLW_converge_cnt_reg[20]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[20]_i_1_O_UNCONNECTED ;

  assign out = rst_idle_reg2;
  assign txcompliance_reg2_reg_0 = txcompliance_reg2;
  assign txelecidle_reg2_reg_0 = txelecidle_reg2;
  LUT4 #(
    .INIT(16'h7077)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2 
       (.I0(txelecidle_reg2),
        .I1(txcompliance_reg2),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[5] ),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .O(txelecidle_reg2_reg_1));
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .O(txcompliance_reg2_reg_1));
  LUT4 #(
    .INIT(16'h7FFF)) 
    GT_RX_CONVERGE0_i_10
       (.I0(converge_cnt_reg[9]),
        .I1(converge_cnt_reg[8]),
        .I2(converge_cnt_reg[11]),
        .I3(converge_cnt_reg[10]),
        .O(GT_RX_CONVERGE0_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h1)) 
    GT_RX_CONVERGE0_i_11
       (.I0(converge_cnt_reg[6]),
        .I1(converge_cnt_reg[7]),
        .O(GT_RX_CONVERGE0_i_11_n_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    GT_RX_CONVERGE0_i_12
       (.I0(converge_cnt_reg[15]),
        .I1(converge_cnt_reg[18]),
        .I2(converge_cnt_reg[19]),
        .I3(converge_cnt_reg[17]),
        .I4(converge_cnt_reg[16]),
        .O(GT_RX_CONVERGE0_i_12_n_0));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    GT_RX_CONVERGE0_i_2
       (.I0(GT_RX_CONVERGE0_i_9_n_0),
        .I1(converge_cnt_reg[1]),
        .I2(converge_cnt_reg[0]),
        .I3(converge_cnt_reg[2]),
        .I4(converge_cnt_reg[3]),
        .I5(GT_RX_CONVERGE0_i_10_n_0),
        .O(\converge_cnt_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    GT_RX_CONVERGE0_i_3
       (.I0(converge_cnt_reg[13]),
        .I1(converge_cnt_reg[21]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[4]),
        .I4(GT_RX_CONVERGE0_i_11_n_0),
        .I5(GT_RX_CONVERGE0_i_12_n_0),
        .O(\converge_cnt_reg[13]_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    GT_RX_CONVERGE0_i_9
       (.I0(converge_cnt_reg[20]),
        .I1(converge_cnt_reg[14]),
        .I2(converge_cnt_reg[12]),
        .O(GT_RX_CONVERGE0_i_9_n_0));
  LUT5 #(
    .INIT(32'hFFFFA8FF)) 
    PCIE_3_0_i_i_2
       (.I0(PCIE_3_0_i),
        .I1(rate_idle_reg2),
        .I2(rate_rxsync_reg2),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(pipe_rx0_phy_status));
  LUT2 #(
    .INIT(4'h7)) 
    PCIE_3_0_i_i_295
       (.I0(rxvalid_cnt_reg[0]),
        .I1(rxvalid_cnt_reg[1]),
        .O(PCIE_3_0_i_i_295_n_0));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    PCIE_3_0_i_i_3
       (.I0(gt_rxvalid_0),
        .I1(rst_idle_reg2),
        .I2(rate_idle_reg2),
        .I3(rxvalid_cnt_reg[3]),
        .I4(rxvalid_cnt_reg[2]),
        .I5(PCIE_3_0_i_i_295_n_0),
        .O(pipe_rx0_valid));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \converge_cnt[0]_i_1__3 
       (.I0(rate_gen3_reg2),
        .I1(RST_RXUSRCLK_RESET),
        .I2(rate_idle_reg2),
        .I3(rst_idle_reg2),
        .O(\converge_cnt[0]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF5555555D)) 
    \converge_cnt[0]_i_2 
       (.I0(converge_cnt_reg[21]),
        .I1(\converge_cnt[0]_i_4_n_0 ),
        .I2(converge_cnt_reg[12]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[20]),
        .I5(\converge_cnt[0]_i_5_n_0 ),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \converge_cnt[0]_i_4 
       (.I0(converge_cnt_reg[3]),
        .I1(converge_cnt_reg[4]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[6]),
        .O(\converge_cnt[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0A0B0A0F0A0B0A0B)) 
    \converge_cnt[0]_i_5 
       (.I0(GT_RX_CONVERGE0_i_12_n_0),
        .I1(converge_cnt_reg[13]),
        .I2(converge_cnt_reg[20]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[12]),
        .I5(GT_RX_CONVERGE0_i_10_n_0),
        .O(\converge_cnt[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[0]_i_6 
       (.I0(converge_cnt_reg[0]),
        .O(\converge_cnt[0]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3_n_7 ),
        .Q(converge_cnt_reg[0]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[0]_i_3_n_0 ,\converge_cnt_reg[0]_i_3_n_1 ,\converge_cnt_reg[0]_i_3_n_2 ,\converge_cnt_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\converge_cnt_reg[0]_i_3_n_4 ,\converge_cnt_reg[0]_i_3_n_5 ,\converge_cnt_reg[0]_i_3_n_6 ,\converge_cnt_reg[0]_i_3_n_7 }),
        .S({converge_cnt_reg[3:1],\converge_cnt[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1_n_5 ),
        .Q(converge_cnt_reg[10]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1_n_4 ),
        .Q(converge_cnt_reg[11]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1_n_7 ),
        .Q(converge_cnt_reg[12]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[12]_i_1 
       (.CI(\converge_cnt_reg[8]_i_1_n_0 ),
        .CO({\converge_cnt_reg[12]_i_1_n_0 ,\converge_cnt_reg[12]_i_1_n_1 ,\converge_cnt_reg[12]_i_1_n_2 ,\converge_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[12]_i_1_n_4 ,\converge_cnt_reg[12]_i_1_n_5 ,\converge_cnt_reg[12]_i_1_n_6 ,\converge_cnt_reg[12]_i_1_n_7 }),
        .S(converge_cnt_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1_n_6 ),
        .Q(converge_cnt_reg[13]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1_n_5 ),
        .Q(converge_cnt_reg[14]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1_n_4 ),
        .Q(converge_cnt_reg[15]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1_n_7 ),
        .Q(converge_cnt_reg[16]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[16]_i_1 
       (.CI(\converge_cnt_reg[12]_i_1_n_0 ),
        .CO({\converge_cnt_reg[16]_i_1_n_0 ,\converge_cnt_reg[16]_i_1_n_1 ,\converge_cnt_reg[16]_i_1_n_2 ,\converge_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[16]_i_1_n_4 ,\converge_cnt_reg[16]_i_1_n_5 ,\converge_cnt_reg[16]_i_1_n_6 ,\converge_cnt_reg[16]_i_1_n_7 }),
        .S(converge_cnt_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1_n_6 ),
        .Q(converge_cnt_reg[17]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1_n_5 ),
        .Q(converge_cnt_reg[18]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1_n_4 ),
        .Q(converge_cnt_reg[19]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3_n_6 ),
        .Q(converge_cnt_reg[1]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1_n_7 ),
        .Q(converge_cnt_reg[20]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[20]_i_1 
       (.CI(\converge_cnt_reg[16]_i_1_n_0 ),
        .CO({\NLW_converge_cnt_reg[20]_i_1_CO_UNCONNECTED [3:1],\converge_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[20]_i_1_O_UNCONNECTED [3:2],\converge_cnt_reg[20]_i_1_n_6 ,\converge_cnt_reg[20]_i_1_n_7 }),
        .S({1'b0,1'b0,converge_cnt_reg[21:20]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1_n_6 ),
        .Q(converge_cnt_reg[21]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3_n_5 ),
        .Q(converge_cnt_reg[2]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3_n_4 ),
        .Q(converge_cnt_reg[3]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1_n_7 ),
        .Q(converge_cnt_reg[4]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[4]_i_1 
       (.CI(\converge_cnt_reg[0]_i_3_n_0 ),
        .CO({\converge_cnt_reg[4]_i_1_n_0 ,\converge_cnt_reg[4]_i_1_n_1 ,\converge_cnt_reg[4]_i_1_n_2 ,\converge_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[4]_i_1_n_4 ,\converge_cnt_reg[4]_i_1_n_5 ,\converge_cnt_reg[4]_i_1_n_6 ,\converge_cnt_reg[4]_i_1_n_7 }),
        .S(converge_cnt_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1_n_6 ),
        .Q(converge_cnt_reg[5]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1_n_5 ),
        .Q(converge_cnt_reg[6]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1_n_4 ),
        .Q(converge_cnt_reg[7]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1_n_7 ),
        .Q(converge_cnt_reg[8]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[8]_i_1 
       (.CI(\converge_cnt_reg[4]_i_1_n_0 ),
        .CO({\converge_cnt_reg[8]_i_1_n_0 ,\converge_cnt_reg[8]_i_1_n_1 ,\converge_cnt_reg[8]_i_1_n_2 ,\converge_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[8]_i_1_n_4 ,\converge_cnt_reg[8]_i_1_n_5 ,\converge_cnt_reg[8]_i_1_n_6 ,\converge_cnt_reg[8]_i_1_n_7 }),
        .S(converge_cnt_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1_n_6 ),
        .Q(converge_cnt_reg[9]),
        .R(\converge_cnt[0]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    converge_gen3_i_1
       (.I0(rxeq_adapt_done_reg2),
        .I1(rate_gen3_reg2),
        .I2(converge_gen3_reg_0),
        .O(converge_gen3_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    converge_gen3_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(converge_gen3_i_1_n_0),
        .Q(converge_gen3_reg_0),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    gen3_rdy_i_1
       (.I0(rate_gen3_reg2),
        .I1(rate_idle_reg2),
        .O(gen3_rdy0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_rdy_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gen3_rdy0),
        .Q(PIPE_GEN3_RDY),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'h00000000BBB0B0B0)) 
    \gth_channel.gthe2_channel_i_i_6 
       (.I0(\gth_channel.gthe2_channel_i_1 ),
        .I1(txphaligndone_reg1_reg_0),
        .I2(SYNC_RXPHALIGNDONE_M),
        .I3(txelecidle_reg2),
        .I4(txcompliance_reg2),
        .I5(\gth_channel.gthe2_channel_i_2 ),
        .O(rxsyncallin));
  LUT6 #(
    .INIT(64'h00000000BBB0B0B0)) 
    \gth_channel.gthe2_channel_i_i_6__0 
       (.I0(txphaligndone_reg1_reg),
        .I1(txphaligndone_reg1_reg_0),
        .I2(txphaligndone_reg1_reg_1),
        .I3(txelecidle_reg2),
        .I4(txcompliance_reg2),
        .I5(txphaligndone_reg1_reg_2),
        .O(\gth_channel.gthe2_channel_i_0 ));
  LUT6 #(
    .INIT(64'h00000000BBB0B0B0)) 
    \gth_channel.gthe2_channel_i_i_7 
       (.I0(txphaligndone_reg1_reg),
        .I1(txphaligndone_reg1_reg_0),
        .I2(txphaligndone_reg1_reg_1),
        .I3(txelecidle_reg2),
        .I4(txcompliance_reg2),
        .I5(txphaligndone_reg1_reg_2),
        .O(\gth_channel.gthe2_channel_i ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1 
       (.I0(oobclk_cnt[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(p_1_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(oobclk_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(oobclk_cnt[1]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1_n_0 ),
        .Q(USER_OOBCLK),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_pclk_sel_out),
        .Q(pclk_sel_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_DONE),
        .Q(rate_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1_reg_0),
        .Q(rate_gen3_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(D),
        .Q(rate_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_RXSYNC),
        .Q(rate_rxsync_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[0]_i_1 
       (.I0(rxresetdone_reg2),
        .I1(txresetdone_reg2),
        .O(rxresetdone_reg2_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RESETOVRD_START),
        .Q(resetovrd_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q),
        .Q(rst_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT5 #(
    .INIT(32'h8A0A0A0A)) 
    \rxcdrlock_cnt[0]_i_1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[0]));
  LUT5 #(
    .INIT(32'hA8282828)) 
    \rxcdrlock_cnt[1]_i_1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hAA802A80)) 
    \rxcdrlock_cnt[2]_i_1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    \rxcdrlock_cnt[3]_i_1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rxcdrlock_cnt_reg[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rxcdrlock_cnt_reg[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rxcdrlock_cnt_reg[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rxcdrlock_cnt_reg[3]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h80000000)) 
    rxcdrlock_reg1_i_1
       (.I0(rxcdrlock_cnt_reg[3]),
        .I1(rxcdrlock_cnt_reg[2]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[1]),
        .I4(gt_rxcdrlock_0),
        .O(\rxcdrlock_cnt_reg[3]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxcdrlock_0),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(pipe_rx0_eq_adapt_done),
        .Q(rxeq_adapt_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(PIPE_RXSTATUS),
        .Q(rxstatus_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'hC404040404040404)) 
    \rxvalid_cnt[0]_i_1 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg[0]),
        .I3(rxvalid_cnt_reg[1]),
        .I4(rxvalid_cnt_reg[2]),
        .I5(rxvalid_cnt_reg[3]),
        .O(p_0_in__1[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_cnt_reg[2]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[1]));
  LUT6 #(
    .INIT(64'h80BF000000C00000)) 
    \rxvalid_cnt[2]_i_1 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_cnt_reg[0]),
        .I2(rxvalid_cnt_reg[1]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg[2]),
        .O(p_0_in__1[2]));
  LUT6 #(
    .INIT(64'h8C08080808080808)) 
    \rxvalid_cnt[3]_i_1 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_reg2),
        .I2(rxstatus_reg2),
        .I3(rxvalid_cnt_reg[2]),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[0]),
        .Q(rxvalid_cnt_reg[0]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[1]),
        .Q(rxvalid_cnt_reg[1]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[2]),
        .Q(rxvalid_cnt_reg[2]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[3]),
        .Q(rxvalid_cnt_reg[3]),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_0),
        .Q(rxvalid_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXCOMPLIANCE),
        .Q(txcompliance_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXELECIDLE),
        .Q(txelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h00000000BBB0B0B0)) 
    txphaligndone_reg1_i_1
       (.I0(txphaligndone_reg1_reg),
        .I1(txphaligndone_reg1_reg_0),
        .I2(txphaligndone_reg1_reg_1),
        .I3(txelecidle_reg2),
        .I4(txcompliance_reg2),
        .I5(txphaligndone_reg1_reg_2),
        .O(SYNC_TXPHALIGNDONE));
  LUT6 #(
    .INIT(64'h00000000BBB0B0B0)) 
    txphinitdone_reg1_i_1
       (.I0(txphinitdone_reg1_reg),
        .I1(txphaligndone_reg1_reg_0),
        .I2(txphinitdone_reg1_reg_0),
        .I3(txelecidle_reg2),
        .I4(txcompliance_reg2),
        .I5(txphinitdone_reg1_reg_1),
        .O(SYNC_TXPHINITDONE));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_user" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_user_11
   (out,
    txcompliance_reg2_reg_0,
    txcompliance_reg2_reg_1,
    txelecidle_reg2_reg_0,
    txcompliance_reg2_reg_2,
    txcompliance_reg2_reg_3,
    USER_OOBCLK,
    PIPE_GEN3_RDY,
    \rxcdrlock_cnt_reg[3]_0 ,
    pipe_rx2_valid,
    pipe_rx2_phy_status,
    converge_gen3_reg_0,
    rxresetdone_reg2_reg_0,
    txcompliance_reg2_reg_4,
    RST_RXUSRCLK_RESET,
    txphaligndone_reg1_reg,
    txphaligndone_reg1_reg_0,
    txphaligndone_reg1_reg_1,
    txphaligndone_reg1_reg_2,
    txphinitdone_reg1_reg,
    txphinitdone_reg1_reg_0,
    \gth_channel.gthe2_channel_i ,
    \gth_channel.gthe2_channel_i_0 ,
    RST_CPLLRESET,
    pipe_pclk_sel_out,
    pipe_pclk_in,
    pipe_oobclk_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    PIPE_TXELECIDLE,
    PIPE_TXCOMPLIANCE,
    gt_rxcdrlock_2,
    gt_rxvalid_2,
    pipe_rxusrclk_in,
    PIPE_RXSTATUS,
    D,
    Q,
    USER_RATE_RXSYNC,
    USER_RATE_DONE,
    rate_gen3_2,
    rxeq_adapt_done_reg1_reg_0,
    USER_RESETOVRD_START,
    PCIE_3_0_i);
  output out;
  output txcompliance_reg2_reg_0;
  output txcompliance_reg2_reg_1;
  output txelecidle_reg2_reg_0;
  output txcompliance_reg2_reg_2;
  output txcompliance_reg2_reg_3;
  output USER_OOBCLK;
  output [0:0]PIPE_GEN3_RDY;
  output [0:0]\rxcdrlock_cnt_reg[3]_0 ;
  output pipe_rx2_valid;
  output pipe_rx2_phy_status;
  output converge_gen3_reg_0;
  output [0:0]rxresetdone_reg2_reg_0;
  output txcompliance_reg2_reg_4;
  input RST_RXUSRCLK_RESET;
  input txphaligndone_reg1_reg;
  input txphaligndone_reg1_reg_0;
  input txphaligndone_reg1_reg_1;
  input txphaligndone_reg1_reg_2;
  input txphinitdone_reg1_reg;
  input txphinitdone_reg1_reg_0;
  input \gth_channel.gthe2_channel_i ;
  input \gth_channel.gthe2_channel_i_0 ;
  input RST_CPLLRESET;
  input [0:0]pipe_pclk_sel_out;
  input pipe_pclk_in;
  input pipe_oobclk_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input [0:0]PIPE_TXELECIDLE;
  input [0:0]PIPE_TXCOMPLIANCE;
  input gt_rxcdrlock_2;
  input gt_rxvalid_2;
  input pipe_rxusrclk_in;
  input [0:0]PIPE_RXSTATUS;
  input [0:0]D;
  input [0:0]Q;
  input USER_RATE_RXSYNC;
  input USER_RATE_DONE;
  input rate_gen3_2;
  input rxeq_adapt_done_reg1_reg_0;
  input USER_RESETOVRD_START;
  input [0:0]PCIE_3_0_i;

  wire [0:0]D;
  wire GT_RX_CONVERGE0_i_18_n_0;
  wire GT_RX_CONVERGE0_i_19_n_0;
  wire GT_RX_CONVERGE0_i_20_n_0;
  wire GT_RX_CONVERGE0_i_21_n_0;
  wire GT_RX_CONVERGE0_i_22_n_0;
  wire [0:0]PCIE_3_0_i;
  wire PCIE_3_0_i_i_297_n_0;
  wire [0:0]PIPE_GEN3_RDY;
  wire [0:0]PIPE_RXSTATUS;
  wire [0:0]PIPE_TXCOMPLIANCE;
  wire [0:0]PIPE_TXELECIDLE;
  wire [0:0]Q;
  wire RST_CPLLRESET;
  wire RST_RXUSRCLK_RESET;
  wire USER_OOBCLK;
  wire USER_RATE_DONE;
  wire USER_RATE_RXSYNC;
  wire USER_RESETOVRD_START;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \converge_cnt[0]_i_1__5_n_0 ;
  wire \converge_cnt[0]_i_4__1_n_0 ;
  wire \converge_cnt[0]_i_5__1_n_0 ;
  wire \converge_cnt[0]_i_6__1_n_0 ;
  wire [21:0]converge_cnt_reg;
  wire \converge_cnt_reg[0]_i_3__1_n_0 ;
  wire \converge_cnt_reg[0]_i_3__1_n_1 ;
  wire \converge_cnt_reg[0]_i_3__1_n_2 ;
  wire \converge_cnt_reg[0]_i_3__1_n_3 ;
  wire \converge_cnt_reg[0]_i_3__1_n_4 ;
  wire \converge_cnt_reg[0]_i_3__1_n_5 ;
  wire \converge_cnt_reg[0]_i_3__1_n_6 ;
  wire \converge_cnt_reg[0]_i_3__1_n_7 ;
  wire \converge_cnt_reg[12]_i_1__1_n_0 ;
  wire \converge_cnt_reg[12]_i_1__1_n_1 ;
  wire \converge_cnt_reg[12]_i_1__1_n_2 ;
  wire \converge_cnt_reg[12]_i_1__1_n_3 ;
  wire \converge_cnt_reg[12]_i_1__1_n_4 ;
  wire \converge_cnt_reg[12]_i_1__1_n_5 ;
  wire \converge_cnt_reg[12]_i_1__1_n_6 ;
  wire \converge_cnt_reg[12]_i_1__1_n_7 ;
  wire \converge_cnt_reg[16]_i_1__1_n_0 ;
  wire \converge_cnt_reg[16]_i_1__1_n_1 ;
  wire \converge_cnt_reg[16]_i_1__1_n_2 ;
  wire \converge_cnt_reg[16]_i_1__1_n_3 ;
  wire \converge_cnt_reg[16]_i_1__1_n_4 ;
  wire \converge_cnt_reg[16]_i_1__1_n_5 ;
  wire \converge_cnt_reg[16]_i_1__1_n_6 ;
  wire \converge_cnt_reg[16]_i_1__1_n_7 ;
  wire \converge_cnt_reg[20]_i_1__1_n_3 ;
  wire \converge_cnt_reg[20]_i_1__1_n_6 ;
  wire \converge_cnt_reg[20]_i_1__1_n_7 ;
  wire \converge_cnt_reg[4]_i_1__1_n_0 ;
  wire \converge_cnt_reg[4]_i_1__1_n_1 ;
  wire \converge_cnt_reg[4]_i_1__1_n_2 ;
  wire \converge_cnt_reg[4]_i_1__1_n_3 ;
  wire \converge_cnt_reg[4]_i_1__1_n_4 ;
  wire \converge_cnt_reg[4]_i_1__1_n_5 ;
  wire \converge_cnt_reg[4]_i_1__1_n_6 ;
  wire \converge_cnt_reg[4]_i_1__1_n_7 ;
  wire \converge_cnt_reg[8]_i_1__1_n_0 ;
  wire \converge_cnt_reg[8]_i_1__1_n_1 ;
  wire \converge_cnt_reg[8]_i_1__1_n_2 ;
  wire \converge_cnt_reg[8]_i_1__1_n_3 ;
  wire \converge_cnt_reg[8]_i_1__1_n_4 ;
  wire \converge_cnt_reg[8]_i_1__1_n_5 ;
  wire \converge_cnt_reg[8]_i_1__1_n_6 ;
  wire \converge_cnt_reg[8]_i_1__1_n_7 ;
  wire converge_gen3_i_1__1_n_0;
  wire converge_gen3_reg_0;
  wire converge_gen3_reg_n_0;
  wire gen3_rdy0;
  wire gt_rxcdrlock_2;
  wire gt_rxvalid_2;
  wire \gth_channel.gthe2_channel_i ;
  wire \gth_channel.gthe2_channel_i_0 ;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_i_1__1_n_0 ;
  wire [3:0]p_0_in__0;
  wire [3:0]p_0_in__1;
  wire [1:0]p_1_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg2;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_valid;
  wire pipe_rxusrclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg2;
  wire rate_gen3_2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire [3:0]rxcdrlock_cnt_reg;
  wire [0:0]\rxcdrlock_cnt_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg1;
  wire rxeq_adapt_done_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  wire [0:0]rxresetdone_reg2_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg2;
  wire [3:0]rxvalid_cnt_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg2;
  wire sel;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg2;
  wire txcompliance_reg2_reg_0;
  wire txcompliance_reg2_reg_2;
  wire txcompliance_reg2_reg_3;
  wire txcompliance_reg2_reg_4;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg2;
  wire txphaligndone_reg1_reg;
  wire txphaligndone_reg1_reg_0;
  wire txphaligndone_reg1_reg_1;
  wire txphaligndone_reg1_reg_2;
  wire txphinitdone_reg1_reg;
  wire txphinitdone_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  wire [3:1]\NLW_converge_cnt_reg[20]_i_1__1_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[20]_i_1__1_O_UNCONNECTED ;

  assign out = rst_idle_reg2;
  assign txcompliance_reg2_reg_1 = txcompliance_reg2;
  assign txelecidle_reg2_reg_0 = txelecidle_reg2;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__0 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .O(txcompliance_reg2_reg_4));
  LUT3 #(
    .INIT(8'h01)) 
    GT_RX_CONVERGE0_i_18
       (.I0(converge_cnt_reg[20]),
        .I1(converge_cnt_reg[14]),
        .I2(converge_cnt_reg[12]),
        .O(GT_RX_CONVERGE0_i_18_n_0));
  LUT4 #(
    .INIT(16'h0100)) 
    GT_RX_CONVERGE0_i_19
       (.I0(converge_cnt_reg[1]),
        .I1(converge_cnt_reg[0]),
        .I2(converge_cnt_reg[2]),
        .I3(converge_cnt_reg[3]),
        .O(GT_RX_CONVERGE0_i_19_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    GT_RX_CONVERGE0_i_20
       (.I0(converge_cnt_reg[9]),
        .I1(converge_cnt_reg[8]),
        .I2(converge_cnt_reg[11]),
        .I3(converge_cnt_reg[10]),
        .O(GT_RX_CONVERGE0_i_20_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    GT_RX_CONVERGE0_i_21
       (.I0(converge_cnt_reg[6]),
        .I1(converge_cnt_reg[7]),
        .I2(converge_cnt_reg[4]),
        .I3(converge_cnt_reg[5]),
        .I4(converge_cnt_reg[21]),
        .I5(converge_cnt_reg[13]),
        .O(GT_RX_CONVERGE0_i_21_n_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    GT_RX_CONVERGE0_i_22
       (.I0(converge_cnt_reg[15]),
        .I1(converge_cnt_reg[18]),
        .I2(converge_cnt_reg[19]),
        .I3(converge_cnt_reg[17]),
        .I4(converge_cnt_reg[16]),
        .O(GT_RX_CONVERGE0_i_22_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
    GT_RX_CONVERGE0_i_5
       (.I0(GT_RX_CONVERGE0_i_18_n_0),
        .I1(GT_RX_CONVERGE0_i_19_n_0),
        .I2(GT_RX_CONVERGE0_i_20_n_0),
        .I3(GT_RX_CONVERGE0_i_21_n_0),
        .I4(GT_RX_CONVERGE0_i_22_n_0),
        .I5(converge_gen3_reg_n_0),
        .O(converge_gen3_reg_0));
  LUT2 #(
    .INIT(4'h7)) 
    PCIE_3_0_i_i_297
       (.I0(rxvalid_cnt_reg[0]),
        .I1(rxvalid_cnt_reg[1]),
        .O(PCIE_3_0_i_i_297_n_0));
  LUT5 #(
    .INIT(32'hFFFFA8FF)) 
    PCIE_3_0_i_i_8
       (.I0(PCIE_3_0_i),
        .I1(rate_idle_reg2),
        .I2(rate_rxsync_reg2),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(pipe_rx2_phy_status));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    PCIE_3_0_i_i_9
       (.I0(gt_rxvalid_2),
        .I1(rst_idle_reg2),
        .I2(rate_idle_reg2),
        .I3(rxvalid_cnt_reg[3]),
        .I4(rxvalid_cnt_reg[2]),
        .I5(PCIE_3_0_i_i_297_n_0),
        .O(pipe_rx2_valid));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \converge_cnt[0]_i_1__5 
       (.I0(rate_gen3_reg2),
        .I1(RST_RXUSRCLK_RESET),
        .I2(rate_idle_reg2),
        .I3(rst_idle_reg2),
        .O(\converge_cnt[0]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF5555555D)) 
    \converge_cnt[0]_i_2__1 
       (.I0(converge_cnt_reg[21]),
        .I1(\converge_cnt[0]_i_4__1_n_0 ),
        .I2(converge_cnt_reg[12]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[20]),
        .I5(\converge_cnt[0]_i_5__1_n_0 ),
        .O(sel));
  LUT5 #(
    .INIT(32'h00000001)) 
    \converge_cnt[0]_i_4__1 
       (.I0(converge_cnt_reg[3]),
        .I1(converge_cnt_reg[4]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[6]),
        .O(\converge_cnt[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h0A0B0A0F0A0B0A0B)) 
    \converge_cnt[0]_i_5__1 
       (.I0(GT_RX_CONVERGE0_i_22_n_0),
        .I1(converge_cnt_reg[13]),
        .I2(converge_cnt_reg[20]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[12]),
        .I5(GT_RX_CONVERGE0_i_20_n_0),
        .O(\converge_cnt[0]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[0]_i_6__1 
       (.I0(converge_cnt_reg[0]),
        .O(\converge_cnt[0]_i_6__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__1_n_7 ),
        .Q(converge_cnt_reg[0]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[0]_i_3__1 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[0]_i_3__1_n_0 ,\converge_cnt_reg[0]_i_3__1_n_1 ,\converge_cnt_reg[0]_i_3__1_n_2 ,\converge_cnt_reg[0]_i_3__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\converge_cnt_reg[0]_i_3__1_n_4 ,\converge_cnt_reg[0]_i_3__1_n_5 ,\converge_cnt_reg[0]_i_3__1_n_6 ,\converge_cnt_reg[0]_i_3__1_n_7 }),
        .S({converge_cnt_reg[3:1],\converge_cnt[0]_i_6__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__1_n_5 ),
        .Q(converge_cnt_reg[10]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__1_n_4 ),
        .Q(converge_cnt_reg[11]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[12]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[12]_i_1__1 
       (.CI(\converge_cnt_reg[8]_i_1__1_n_0 ),
        .CO({\converge_cnt_reg[12]_i_1__1_n_0 ,\converge_cnt_reg[12]_i_1__1_n_1 ,\converge_cnt_reg[12]_i_1__1_n_2 ,\converge_cnt_reg[12]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[12]_i_1__1_n_4 ,\converge_cnt_reg[12]_i_1__1_n_5 ,\converge_cnt_reg[12]_i_1__1_n_6 ,\converge_cnt_reg[12]_i_1__1_n_7 }),
        .S(converge_cnt_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[13]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__1_n_5 ),
        .Q(converge_cnt_reg[14]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__1_n_4 ),
        .Q(converge_cnt_reg[15]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[16]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[16]_i_1__1 
       (.CI(\converge_cnt_reg[12]_i_1__1_n_0 ),
        .CO({\converge_cnt_reg[16]_i_1__1_n_0 ,\converge_cnt_reg[16]_i_1__1_n_1 ,\converge_cnt_reg[16]_i_1__1_n_2 ,\converge_cnt_reg[16]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[16]_i_1__1_n_4 ,\converge_cnt_reg[16]_i_1__1_n_5 ,\converge_cnt_reg[16]_i_1__1_n_6 ,\converge_cnt_reg[16]_i_1__1_n_7 }),
        .S(converge_cnt_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[17]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__1_n_5 ),
        .Q(converge_cnt_reg[18]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__1_n_4 ),
        .Q(converge_cnt_reg[19]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__1_n_6 ),
        .Q(converge_cnt_reg[1]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[20]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[20]_i_1__1 
       (.CI(\converge_cnt_reg[16]_i_1__1_n_0 ),
        .CO({\NLW_converge_cnt_reg[20]_i_1__1_CO_UNCONNECTED [3:1],\converge_cnt_reg[20]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[20]_i_1__1_O_UNCONNECTED [3:2],\converge_cnt_reg[20]_i_1__1_n_6 ,\converge_cnt_reg[20]_i_1__1_n_7 }),
        .S({1'b0,1'b0,converge_cnt_reg[21:20]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[21]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__1_n_5 ),
        .Q(converge_cnt_reg[2]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__1_n_4 ),
        .Q(converge_cnt_reg[3]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[4]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[4]_i_1__1 
       (.CI(\converge_cnt_reg[0]_i_3__1_n_0 ),
        .CO({\converge_cnt_reg[4]_i_1__1_n_0 ,\converge_cnt_reg[4]_i_1__1_n_1 ,\converge_cnt_reg[4]_i_1__1_n_2 ,\converge_cnt_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[4]_i_1__1_n_4 ,\converge_cnt_reg[4]_i_1__1_n_5 ,\converge_cnt_reg[4]_i_1__1_n_6 ,\converge_cnt_reg[4]_i_1__1_n_7 }),
        .S(converge_cnt_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[5]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__1_n_5 ),
        .Q(converge_cnt_reg[6]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__1_n_4 ),
        .Q(converge_cnt_reg[7]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[8]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[8]_i_1__1 
       (.CI(\converge_cnt_reg[4]_i_1__1_n_0 ),
        .CO({\converge_cnt_reg[8]_i_1__1_n_0 ,\converge_cnt_reg[8]_i_1__1_n_1 ,\converge_cnt_reg[8]_i_1__1_n_2 ,\converge_cnt_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[8]_i_1__1_n_4 ,\converge_cnt_reg[8]_i_1__1_n_5 ,\converge_cnt_reg[8]_i_1__1_n_6 ,\converge_cnt_reg[8]_i_1__1_n_7 }),
        .S(converge_cnt_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[9]),
        .R(\converge_cnt[0]_i_1__5_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    converge_gen3_i_1__1
       (.I0(rxeq_adapt_done_reg2),
        .I1(rate_gen3_reg2),
        .I2(converge_gen3_reg_n_0),
        .O(converge_gen3_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    converge_gen3_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(converge_gen3_i_1__1_n_0),
        .Q(converge_gen3_reg_n_0),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    gen3_rdy_i_1__1
       (.I0(rate_gen3_reg2),
        .I1(rate_idle_reg2),
        .O(gen3_rdy0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_rdy_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gen3_rdy0),
        .Q(PIPE_GEN3_RDY),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'h0707070707FFFFFF)) 
    \gth_channel.gthe2_channel_i_i_51 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .I2(\gth_channel.gthe2_channel_i ),
        .I3(txphaligndone_reg1_reg_0),
        .I4(txphaligndone_reg1_reg_1),
        .I5(\gth_channel.gthe2_channel_i_0 ),
        .O(txcompliance_reg2_reg_3));
  LUT6 #(
    .INIT(64'h0707070707FFFFFF)) 
    \gth_channel.gthe2_channel_i_i_52 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .I2(txphaligndone_reg1_reg),
        .I3(txphaligndone_reg1_reg_0),
        .I4(txphaligndone_reg1_reg_1),
        .I5(txphaligndone_reg1_reg_2),
        .O(txcompliance_reg2_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1__1 
       (.I0(oobclk_cnt[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1__1 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(p_1_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(oobclk_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(oobclk_cnt[1]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1__1 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1__1_n_0 ),
        .Q(USER_OOBCLK),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_pclk_sel_out),
        .Q(pclk_sel_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_DONE),
        .Q(rate_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_2),
        .Q(rate_gen3_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(D),
        .Q(rate_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_RXSYNC),
        .Q(rate_rxsync_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[2]_i_1 
       (.I0(rxresetdone_reg2),
        .I1(txresetdone_reg2),
        .O(rxresetdone_reg2_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RESETOVRD_START),
        .Q(resetovrd_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q),
        .Q(rst_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT5 #(
    .INIT(32'h8A0A0A0A)) 
    \rxcdrlock_cnt[0]_i_1__1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[0]));
  LUT5 #(
    .INIT(32'hA8282828)) 
    \rxcdrlock_cnt[1]_i_1__1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hAA802A80)) 
    \rxcdrlock_cnt[2]_i_1__1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    \rxcdrlock_cnt[3]_i_1__1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rxcdrlock_cnt_reg[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rxcdrlock_cnt_reg[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rxcdrlock_cnt_reg[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rxcdrlock_cnt_reg[3]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h80000000)) 
    rxcdrlock_reg1_i_1__1
       (.I0(rxcdrlock_cnt_reg[3]),
        .I1(rxcdrlock_cnt_reg[2]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[1]),
        .I4(gt_rxcdrlock_2),
        .O(\rxcdrlock_cnt_reg[3]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxcdrlock_2),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1_reg_0),
        .Q(rxeq_adapt_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(PIPE_RXSTATUS),
        .Q(rxstatus_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'hC404040404040404)) 
    \rxvalid_cnt[0]_i_1__1 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg[0]),
        .I3(rxvalid_cnt_reg[1]),
        .I4(rxvalid_cnt_reg[2]),
        .I5(rxvalid_cnt_reg[3]),
        .O(p_0_in__1[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1__1 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_cnt_reg[2]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[1]));
  LUT6 #(
    .INIT(64'h80BF000000C00000)) 
    \rxvalid_cnt[2]_i_1__1 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_cnt_reg[0]),
        .I2(rxvalid_cnt_reg[1]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg[2]),
        .O(p_0_in__1[2]));
  LUT6 #(
    .INIT(64'h8C08080808080808)) 
    \rxvalid_cnt[3]_i_1__1 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_reg2),
        .I2(rxstatus_reg2),
        .I3(rxvalid_cnt_reg[2]),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[0]),
        .Q(rxvalid_cnt_reg[0]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[1]),
        .Q(rxvalid_cnt_reg[1]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[2]),
        .Q(rxvalid_cnt_reg[2]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[3]),
        .Q(rxvalid_cnt_reg[3]),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_2),
        .Q(rxvalid_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXCOMPLIANCE),
        .Q(txcompliance_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXELECIDLE),
        .Q(txelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0707070707FFFFFF)) 
    txphinitdone_reg1_i_2
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .I2(txphinitdone_reg1_reg),
        .I3(txphaligndone_reg1_reg_0),
        .I4(txphaligndone_reg1_reg_1),
        .I5(txphinitdone_reg1_reg_0),
        .O(txcompliance_reg2_reg_2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_user" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_user_17
   (out,
    txelecidle_reg2_reg_0,
    txcompliance_reg2_reg_0,
    USER_OOBCLK,
    PIPE_GEN3_RDY,
    \rxcdrlock_cnt_reg[3]_0 ,
    pipe_rx3_valid,
    pipe_rx3_phy_status,
    converge_gen3_reg_0,
    rxresetdone_reg2_reg_0,
    txcompliance_reg2_reg_1,
    RST_RXUSRCLK_RESET,
    RST_CPLLRESET,
    pipe_pclk_sel_out,
    pipe_pclk_in,
    pipe_oobclk_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    PIPE_TXELECIDLE,
    PIPE_TXCOMPLIANCE,
    gt_rxcdrlock_3,
    gt_rxvalid_3,
    pipe_rxusrclk_in,
    PIPE_RXSTATUS,
    D,
    Q,
    USER_RATE_RXSYNC,
    USER_RATE_DONE,
    rate_gen3_3,
    rxeq_adapt_done_reg1_reg_0,
    USER_RESETOVRD_START,
    PCIE_3_0_i);
  output out;
  output txelecidle_reg2_reg_0;
  output txcompliance_reg2_reg_0;
  output USER_OOBCLK;
  output [0:0]PIPE_GEN3_RDY;
  output [0:0]\rxcdrlock_cnt_reg[3]_0 ;
  output pipe_rx3_valid;
  output pipe_rx3_phy_status;
  output converge_gen3_reg_0;
  output [0:0]rxresetdone_reg2_reg_0;
  output txcompliance_reg2_reg_1;
  input RST_RXUSRCLK_RESET;
  input RST_CPLLRESET;
  input [0:0]pipe_pclk_sel_out;
  input pipe_pclk_in;
  input pipe_oobclk_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input [0:0]PIPE_TXELECIDLE;
  input [0:0]PIPE_TXCOMPLIANCE;
  input gt_rxcdrlock_3;
  input gt_rxvalid_3;
  input pipe_rxusrclk_in;
  input [0:0]PIPE_RXSTATUS;
  input [0:0]D;
  input [0:0]Q;
  input USER_RATE_RXSYNC;
  input USER_RATE_DONE;
  input rate_gen3_3;
  input rxeq_adapt_done_reg1_reg_0;
  input USER_RESETOVRD_START;
  input [0:0]PCIE_3_0_i;

  wire [0:0]D;
  wire GT_RX_CONVERGE0_i_13_n_0;
  wire GT_RX_CONVERGE0_i_14_n_0;
  wire GT_RX_CONVERGE0_i_15_n_0;
  wire GT_RX_CONVERGE0_i_16_n_0;
  wire GT_RX_CONVERGE0_i_17_n_0;
  wire [0:0]PCIE_3_0_i;
  wire PCIE_3_0_i_i_298_n_0;
  wire [0:0]PIPE_GEN3_RDY;
  wire [0:0]PIPE_RXSTATUS;
  wire [0:0]PIPE_TXCOMPLIANCE;
  wire [0:0]PIPE_TXELECIDLE;
  wire [0:0]Q;
  wire RST_CPLLRESET;
  wire RST_RXUSRCLK_RESET;
  wire USER_OOBCLK;
  wire USER_RATE_DONE;
  wire USER_RATE_RXSYNC;
  wire USER_RESETOVRD_START;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \converge_cnt[0]_i_1__6_n_0 ;
  wire \converge_cnt[0]_i_4__2_n_0 ;
  wire \converge_cnt[0]_i_5__2_n_0 ;
  wire \converge_cnt[0]_i_6__2_n_0 ;
  wire [21:0]converge_cnt_reg;
  wire \converge_cnt_reg[0]_i_3__2_n_0 ;
  wire \converge_cnt_reg[0]_i_3__2_n_1 ;
  wire \converge_cnt_reg[0]_i_3__2_n_2 ;
  wire \converge_cnt_reg[0]_i_3__2_n_3 ;
  wire \converge_cnt_reg[0]_i_3__2_n_4 ;
  wire \converge_cnt_reg[0]_i_3__2_n_5 ;
  wire \converge_cnt_reg[0]_i_3__2_n_6 ;
  wire \converge_cnt_reg[0]_i_3__2_n_7 ;
  wire \converge_cnt_reg[12]_i_1__2_n_0 ;
  wire \converge_cnt_reg[12]_i_1__2_n_1 ;
  wire \converge_cnt_reg[12]_i_1__2_n_2 ;
  wire \converge_cnt_reg[12]_i_1__2_n_3 ;
  wire \converge_cnt_reg[12]_i_1__2_n_4 ;
  wire \converge_cnt_reg[12]_i_1__2_n_5 ;
  wire \converge_cnt_reg[12]_i_1__2_n_6 ;
  wire \converge_cnt_reg[12]_i_1__2_n_7 ;
  wire \converge_cnt_reg[16]_i_1__2_n_0 ;
  wire \converge_cnt_reg[16]_i_1__2_n_1 ;
  wire \converge_cnt_reg[16]_i_1__2_n_2 ;
  wire \converge_cnt_reg[16]_i_1__2_n_3 ;
  wire \converge_cnt_reg[16]_i_1__2_n_4 ;
  wire \converge_cnt_reg[16]_i_1__2_n_5 ;
  wire \converge_cnt_reg[16]_i_1__2_n_6 ;
  wire \converge_cnt_reg[16]_i_1__2_n_7 ;
  wire \converge_cnt_reg[20]_i_1__2_n_3 ;
  wire \converge_cnt_reg[20]_i_1__2_n_6 ;
  wire \converge_cnt_reg[20]_i_1__2_n_7 ;
  wire \converge_cnt_reg[4]_i_1__2_n_0 ;
  wire \converge_cnt_reg[4]_i_1__2_n_1 ;
  wire \converge_cnt_reg[4]_i_1__2_n_2 ;
  wire \converge_cnt_reg[4]_i_1__2_n_3 ;
  wire \converge_cnt_reg[4]_i_1__2_n_4 ;
  wire \converge_cnt_reg[4]_i_1__2_n_5 ;
  wire \converge_cnt_reg[4]_i_1__2_n_6 ;
  wire \converge_cnt_reg[4]_i_1__2_n_7 ;
  wire \converge_cnt_reg[8]_i_1__2_n_0 ;
  wire \converge_cnt_reg[8]_i_1__2_n_1 ;
  wire \converge_cnt_reg[8]_i_1__2_n_2 ;
  wire \converge_cnt_reg[8]_i_1__2_n_3 ;
  wire \converge_cnt_reg[8]_i_1__2_n_4 ;
  wire \converge_cnt_reg[8]_i_1__2_n_5 ;
  wire \converge_cnt_reg[8]_i_1__2_n_6 ;
  wire \converge_cnt_reg[8]_i_1__2_n_7 ;
  wire converge_gen3_i_1__2_n_0;
  wire converge_gen3_reg_0;
  wire converge_gen3_reg_n_0;
  wire gen3_rdy0;
  wire gt_rxcdrlock_3;
  wire gt_rxvalid_3;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_i_1__2_n_0 ;
  wire [3:0]p_0_in__0;
  wire [3:0]p_0_in__1;
  wire [1:0]p_1_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg2;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_valid;
  wire pipe_rxusrclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg2;
  wire rate_gen3_3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire [3:0]rxcdrlock_cnt_reg;
  wire [0:0]\rxcdrlock_cnt_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg1;
  wire rxeq_adapt_done_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  wire [0:0]rxresetdone_reg2_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg2;
  wire [3:0]rxvalid_cnt_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg2;
  wire sel;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg2;
  wire txcompliance_reg2_reg_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  wire [3:1]\NLW_converge_cnt_reg[20]_i_1__2_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[20]_i_1__2_O_UNCONNECTED ;

  assign out = rst_idle_reg2;
  assign txcompliance_reg2_reg_0 = txcompliance_reg2;
  assign txelecidle_reg2_reg_0 = txelecidle_reg2;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__1 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .O(txcompliance_reg2_reg_1));
  LUT3 #(
    .INIT(8'h01)) 
    GT_RX_CONVERGE0_i_13
       (.I0(converge_cnt_reg[20]),
        .I1(converge_cnt_reg[14]),
        .I2(converge_cnt_reg[12]),
        .O(GT_RX_CONVERGE0_i_13_n_0));
  LUT4 #(
    .INIT(16'h0100)) 
    GT_RX_CONVERGE0_i_14
       (.I0(converge_cnt_reg[1]),
        .I1(converge_cnt_reg[0]),
        .I2(converge_cnt_reg[2]),
        .I3(converge_cnt_reg[3]),
        .O(GT_RX_CONVERGE0_i_14_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    GT_RX_CONVERGE0_i_15
       (.I0(converge_cnt_reg[9]),
        .I1(converge_cnt_reg[8]),
        .I2(converge_cnt_reg[11]),
        .I3(converge_cnt_reg[10]),
        .O(GT_RX_CONVERGE0_i_15_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    GT_RX_CONVERGE0_i_16
       (.I0(converge_cnt_reg[6]),
        .I1(converge_cnt_reg[7]),
        .I2(converge_cnt_reg[4]),
        .I3(converge_cnt_reg[5]),
        .I4(converge_cnt_reg[21]),
        .I5(converge_cnt_reg[13]),
        .O(GT_RX_CONVERGE0_i_16_n_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    GT_RX_CONVERGE0_i_17
       (.I0(converge_cnt_reg[15]),
        .I1(converge_cnt_reg[18]),
        .I2(converge_cnt_reg[19]),
        .I3(converge_cnt_reg[17]),
        .I4(converge_cnt_reg[16]),
        .O(GT_RX_CONVERGE0_i_17_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
    GT_RX_CONVERGE0_i_4
       (.I0(GT_RX_CONVERGE0_i_13_n_0),
        .I1(GT_RX_CONVERGE0_i_14_n_0),
        .I2(GT_RX_CONVERGE0_i_15_n_0),
        .I3(GT_RX_CONVERGE0_i_16_n_0),
        .I4(GT_RX_CONVERGE0_i_17_n_0),
        .I5(converge_gen3_reg_n_0),
        .O(converge_gen3_reg_0));
  LUT5 #(
    .INIT(32'hFFFFA8FF)) 
    PCIE_3_0_i_i_11
       (.I0(PCIE_3_0_i),
        .I1(rate_idle_reg2),
        .I2(rate_rxsync_reg2),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(pipe_rx3_phy_status));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    PCIE_3_0_i_i_12
       (.I0(gt_rxvalid_3),
        .I1(rst_idle_reg2),
        .I2(rate_idle_reg2),
        .I3(rxvalid_cnt_reg[3]),
        .I4(rxvalid_cnt_reg[2]),
        .I5(PCIE_3_0_i_i_298_n_0),
        .O(pipe_rx3_valid));
  LUT2 #(
    .INIT(4'h7)) 
    PCIE_3_0_i_i_298
       (.I0(rxvalid_cnt_reg[0]),
        .I1(rxvalid_cnt_reg[1]),
        .O(PCIE_3_0_i_i_298_n_0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \converge_cnt[0]_i_1__6 
       (.I0(rate_gen3_reg2),
        .I1(RST_RXUSRCLK_RESET),
        .I2(rate_idle_reg2),
        .I3(rst_idle_reg2),
        .O(\converge_cnt[0]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF5555555D)) 
    \converge_cnt[0]_i_2__2 
       (.I0(converge_cnt_reg[21]),
        .I1(\converge_cnt[0]_i_4__2_n_0 ),
        .I2(converge_cnt_reg[12]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[20]),
        .I5(\converge_cnt[0]_i_5__2_n_0 ),
        .O(sel));
  LUT5 #(
    .INIT(32'h00000001)) 
    \converge_cnt[0]_i_4__2 
       (.I0(converge_cnt_reg[3]),
        .I1(converge_cnt_reg[4]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[6]),
        .O(\converge_cnt[0]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0B0A0F0A0B0A0B)) 
    \converge_cnt[0]_i_5__2 
       (.I0(GT_RX_CONVERGE0_i_17_n_0),
        .I1(converge_cnt_reg[13]),
        .I2(converge_cnt_reg[20]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[12]),
        .I5(GT_RX_CONVERGE0_i_15_n_0),
        .O(\converge_cnt[0]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[0]_i_6__2 
       (.I0(converge_cnt_reg[0]),
        .O(\converge_cnt[0]_i_6__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__2_n_7 ),
        .Q(converge_cnt_reg[0]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[0]_i_3__2 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[0]_i_3__2_n_0 ,\converge_cnt_reg[0]_i_3__2_n_1 ,\converge_cnt_reg[0]_i_3__2_n_2 ,\converge_cnt_reg[0]_i_3__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\converge_cnt_reg[0]_i_3__2_n_4 ,\converge_cnt_reg[0]_i_3__2_n_5 ,\converge_cnt_reg[0]_i_3__2_n_6 ,\converge_cnt_reg[0]_i_3__2_n_7 }),
        .S({converge_cnt_reg[3:1],\converge_cnt[0]_i_6__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__2_n_5 ),
        .Q(converge_cnt_reg[10]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__2_n_4 ),
        .Q(converge_cnt_reg[11]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[12]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[12]_i_1__2 
       (.CI(\converge_cnt_reg[8]_i_1__2_n_0 ),
        .CO({\converge_cnt_reg[12]_i_1__2_n_0 ,\converge_cnt_reg[12]_i_1__2_n_1 ,\converge_cnt_reg[12]_i_1__2_n_2 ,\converge_cnt_reg[12]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[12]_i_1__2_n_4 ,\converge_cnt_reg[12]_i_1__2_n_5 ,\converge_cnt_reg[12]_i_1__2_n_6 ,\converge_cnt_reg[12]_i_1__2_n_7 }),
        .S(converge_cnt_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[13]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__2_n_5 ),
        .Q(converge_cnt_reg[14]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__2_n_4 ),
        .Q(converge_cnt_reg[15]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[16]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[16]_i_1__2 
       (.CI(\converge_cnt_reg[12]_i_1__2_n_0 ),
        .CO({\converge_cnt_reg[16]_i_1__2_n_0 ,\converge_cnt_reg[16]_i_1__2_n_1 ,\converge_cnt_reg[16]_i_1__2_n_2 ,\converge_cnt_reg[16]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[16]_i_1__2_n_4 ,\converge_cnt_reg[16]_i_1__2_n_5 ,\converge_cnt_reg[16]_i_1__2_n_6 ,\converge_cnt_reg[16]_i_1__2_n_7 }),
        .S(converge_cnt_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[17]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__2_n_5 ),
        .Q(converge_cnt_reg[18]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__2_n_4 ),
        .Q(converge_cnt_reg[19]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__2_n_6 ),
        .Q(converge_cnt_reg[1]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[20]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[20]_i_1__2 
       (.CI(\converge_cnt_reg[16]_i_1__2_n_0 ),
        .CO({\NLW_converge_cnt_reg[20]_i_1__2_CO_UNCONNECTED [3:1],\converge_cnt_reg[20]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[20]_i_1__2_O_UNCONNECTED [3:2],\converge_cnt_reg[20]_i_1__2_n_6 ,\converge_cnt_reg[20]_i_1__2_n_7 }),
        .S({1'b0,1'b0,converge_cnt_reg[21:20]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[21]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__2_n_5 ),
        .Q(converge_cnt_reg[2]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__2_n_4 ),
        .Q(converge_cnt_reg[3]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[4]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[4]_i_1__2 
       (.CI(\converge_cnt_reg[0]_i_3__2_n_0 ),
        .CO({\converge_cnt_reg[4]_i_1__2_n_0 ,\converge_cnt_reg[4]_i_1__2_n_1 ,\converge_cnt_reg[4]_i_1__2_n_2 ,\converge_cnt_reg[4]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[4]_i_1__2_n_4 ,\converge_cnt_reg[4]_i_1__2_n_5 ,\converge_cnt_reg[4]_i_1__2_n_6 ,\converge_cnt_reg[4]_i_1__2_n_7 }),
        .S(converge_cnt_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[5]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__2_n_5 ),
        .Q(converge_cnt_reg[6]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__2_n_4 ),
        .Q(converge_cnt_reg[7]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[8]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[8]_i_1__2 
       (.CI(\converge_cnt_reg[4]_i_1__2_n_0 ),
        .CO({\converge_cnt_reg[8]_i_1__2_n_0 ,\converge_cnt_reg[8]_i_1__2_n_1 ,\converge_cnt_reg[8]_i_1__2_n_2 ,\converge_cnt_reg[8]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[8]_i_1__2_n_4 ,\converge_cnt_reg[8]_i_1__2_n_5 ,\converge_cnt_reg[8]_i_1__2_n_6 ,\converge_cnt_reg[8]_i_1__2_n_7 }),
        .S(converge_cnt_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[9]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    converge_gen3_i_1__2
       (.I0(rxeq_adapt_done_reg2),
        .I1(rate_gen3_reg2),
        .I2(converge_gen3_reg_n_0),
        .O(converge_gen3_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    converge_gen3_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(converge_gen3_i_1__2_n_0),
        .Q(converge_gen3_reg_n_0),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    gen3_rdy_i_1__2
       (.I0(rate_gen3_reg2),
        .I1(rate_idle_reg2),
        .O(gen3_rdy0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_rdy_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gen3_rdy0),
        .Q(PIPE_GEN3_RDY),
        .R(RST_RXUSRCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1__2 
       (.I0(oobclk_cnt[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1__2 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(p_1_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(oobclk_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(oobclk_cnt[1]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1__2 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1__2_n_0 ),
        .Q(USER_OOBCLK),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_pclk_sel_out),
        .Q(pclk_sel_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_DONE),
        .Q(rate_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_3),
        .Q(rate_gen3_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(D),
        .Q(rate_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_RXSYNC),
        .Q(rate_rxsync_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[3]_i_1 
       (.I0(rxresetdone_reg2),
        .I1(txresetdone_reg2),
        .O(rxresetdone_reg2_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RESETOVRD_START),
        .Q(resetovrd_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q),
        .Q(rst_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT5 #(
    .INIT(32'h8A0A0A0A)) 
    \rxcdrlock_cnt[0]_i_1__2 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[0]));
  LUT5 #(
    .INIT(32'hA8282828)) 
    \rxcdrlock_cnt[1]_i_1__2 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hAA802A80)) 
    \rxcdrlock_cnt[2]_i_1__2 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    \rxcdrlock_cnt[3]_i_1__2 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rxcdrlock_cnt_reg[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rxcdrlock_cnt_reg[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rxcdrlock_cnt_reg[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rxcdrlock_cnt_reg[3]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h80000000)) 
    rxcdrlock_reg1_i_1__2
       (.I0(rxcdrlock_cnt_reg[3]),
        .I1(rxcdrlock_cnt_reg[2]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[1]),
        .I4(gt_rxcdrlock_3),
        .O(\rxcdrlock_cnt_reg[3]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxcdrlock_3),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1_reg_0),
        .Q(rxeq_adapt_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(PIPE_RXSTATUS),
        .Q(rxstatus_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'hC404040404040404)) 
    \rxvalid_cnt[0]_i_1__2 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg[0]),
        .I3(rxvalid_cnt_reg[1]),
        .I4(rxvalid_cnt_reg[2]),
        .I5(rxvalid_cnt_reg[3]),
        .O(p_0_in__1[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1__2 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_cnt_reg[2]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[1]));
  LUT6 #(
    .INIT(64'h80BF000000C00000)) 
    \rxvalid_cnt[2]_i_1__2 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_cnt_reg[0]),
        .I2(rxvalid_cnt_reg[1]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg[2]),
        .O(p_0_in__1[2]));
  LUT6 #(
    .INIT(64'h8C08080808080808)) 
    \rxvalid_cnt[3]_i_1__2 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_reg2),
        .I2(rxstatus_reg2),
        .I3(rxvalid_cnt_reg[2]),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[0]),
        .Q(rxvalid_cnt_reg[0]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[1]),
        .Q(rxvalid_cnt_reg[1]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[2]),
        .Q(rxvalid_cnt_reg[2]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[3]),
        .Q(rxvalid_cnt_reg[3]),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_3),
        .Q(rxvalid_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXCOMPLIANCE),
        .Q(txcompliance_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXELECIDLE),
        .Q(txelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_pipe_user" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_user_5
   (rst_idle_reg2_reg_0,
    txelecidle_reg2_reg_0,
    txcompliance_reg2_reg_0,
    USER_OOBCLK,
    PIPE_GEN3_RDY,
    \rxcdrlock_cnt_reg[3]_0 ,
    pipe_rx1_valid,
    pipe_rx1_phy_status,
    converge_gen3_reg_0,
    rxresetdone_reg2_reg_0,
    txcompliance_reg2_reg_1,
    RST_RXUSRCLK_RESET,
    out,
    \reg_phy_rdy_reg[1] ,
    \reg_phy_rdy_reg[1]_0 ,
    RST_CPLLRESET,
    pipe_pclk_sel_out,
    pipe_pclk_in,
    pipe_oobclk_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    PIPE_TXELECIDLE,
    PIPE_TXCOMPLIANCE,
    gt_rxcdrlock_1,
    gt_rxvalid_1,
    pipe_rxusrclk_in,
    PIPE_RXSTATUS,
    D,
    Q,
    USER_RATE_RXSYNC,
    USER_RATE_DONE,
    USER_RATE_GEN3,
    USER_RXEQ_ADAPT_DONE,
    USER_RESETOVRD_START,
    PCIE_3_0_i);
  output rst_idle_reg2_reg_0;
  output txelecidle_reg2_reg_0;
  output txcompliance_reg2_reg_0;
  output USER_OOBCLK;
  output [0:0]PIPE_GEN3_RDY;
  output [0:0]\rxcdrlock_cnt_reg[3]_0 ;
  output pipe_rx1_valid;
  output pipe_rx1_phy_status;
  output converge_gen3_reg_0;
  output [0:0]rxresetdone_reg2_reg_0;
  output txcompliance_reg2_reg_1;
  input RST_RXUSRCLK_RESET;
  input out;
  input \reg_phy_rdy_reg[1] ;
  input \reg_phy_rdy_reg[1]_0 ;
  input RST_CPLLRESET;
  input [0:0]pipe_pclk_sel_out;
  input pipe_pclk_in;
  input pipe_oobclk_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input [0:0]PIPE_TXELECIDLE;
  input [0:0]PIPE_TXCOMPLIANCE;
  input gt_rxcdrlock_1;
  input gt_rxvalid_1;
  input pipe_rxusrclk_in;
  input [0:0]PIPE_RXSTATUS;
  input [0:0]D;
  input [0:0]Q;
  input USER_RATE_RXSYNC;
  input USER_RATE_DONE;
  input USER_RATE_GEN3;
  input USER_RXEQ_ADAPT_DONE;
  input USER_RESETOVRD_START;
  input [0:0]PCIE_3_0_i;

  wire [0:0]D;
  wire GT_RX_CONVERGE0_i_6_n_0;
  wire GT_RX_CONVERGE0_i_7_n_0;
  wire GT_RX_CONVERGE0_i_8_n_0;
  wire [0:0]PCIE_3_0_i;
  wire PCIE_3_0_i_i_296_n_0;
  wire [0:0]PIPE_GEN3_RDY;
  wire [0:0]PIPE_RXSTATUS;
  wire [0:0]PIPE_TXCOMPLIANCE;
  wire [0:0]PIPE_TXELECIDLE;
  wire [0:0]Q;
  wire RST_CPLLRESET;
  wire RST_RXUSRCLK_RESET;
  wire USER_OOBCLK;
  wire USER_RATE_DONE;
  wire USER_RATE_GEN3;
  wire USER_RATE_RXSYNC;
  wire USER_RESETOVRD_START;
  wire USER_RXEQ_ADAPT_DONE;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \converge_cnt[0]_i_1__4_n_0 ;
  wire \converge_cnt[0]_i_4__0_n_0 ;
  wire \converge_cnt[0]_i_5__0_n_0 ;
  wire \converge_cnt[0]_i_6__0_n_0 ;
  wire \converge_cnt[0]_i_7_n_0 ;
  wire \converge_cnt[0]_i_8_n_0 ;
  wire [21:0]converge_cnt_reg;
  wire \converge_cnt_reg[0]_i_3__0_n_0 ;
  wire \converge_cnt_reg[0]_i_3__0_n_1 ;
  wire \converge_cnt_reg[0]_i_3__0_n_2 ;
  wire \converge_cnt_reg[0]_i_3__0_n_3 ;
  wire \converge_cnt_reg[0]_i_3__0_n_4 ;
  wire \converge_cnt_reg[0]_i_3__0_n_5 ;
  wire \converge_cnt_reg[0]_i_3__0_n_6 ;
  wire \converge_cnt_reg[0]_i_3__0_n_7 ;
  wire \converge_cnt_reg[12]_i_1__0_n_0 ;
  wire \converge_cnt_reg[12]_i_1__0_n_1 ;
  wire \converge_cnt_reg[12]_i_1__0_n_2 ;
  wire \converge_cnt_reg[12]_i_1__0_n_3 ;
  wire \converge_cnt_reg[12]_i_1__0_n_4 ;
  wire \converge_cnt_reg[12]_i_1__0_n_5 ;
  wire \converge_cnt_reg[12]_i_1__0_n_6 ;
  wire \converge_cnt_reg[12]_i_1__0_n_7 ;
  wire \converge_cnt_reg[16]_i_1__0_n_0 ;
  wire \converge_cnt_reg[16]_i_1__0_n_1 ;
  wire \converge_cnt_reg[16]_i_1__0_n_2 ;
  wire \converge_cnt_reg[16]_i_1__0_n_3 ;
  wire \converge_cnt_reg[16]_i_1__0_n_4 ;
  wire \converge_cnt_reg[16]_i_1__0_n_5 ;
  wire \converge_cnt_reg[16]_i_1__0_n_6 ;
  wire \converge_cnt_reg[16]_i_1__0_n_7 ;
  wire \converge_cnt_reg[20]_i_1__0_n_3 ;
  wire \converge_cnt_reg[20]_i_1__0_n_6 ;
  wire \converge_cnt_reg[20]_i_1__0_n_7 ;
  wire \converge_cnt_reg[4]_i_1__0_n_0 ;
  wire \converge_cnt_reg[4]_i_1__0_n_1 ;
  wire \converge_cnt_reg[4]_i_1__0_n_2 ;
  wire \converge_cnt_reg[4]_i_1__0_n_3 ;
  wire \converge_cnt_reg[4]_i_1__0_n_4 ;
  wire \converge_cnt_reg[4]_i_1__0_n_5 ;
  wire \converge_cnt_reg[4]_i_1__0_n_6 ;
  wire \converge_cnt_reg[4]_i_1__0_n_7 ;
  wire \converge_cnt_reg[8]_i_1__0_n_0 ;
  wire \converge_cnt_reg[8]_i_1__0_n_1 ;
  wire \converge_cnt_reg[8]_i_1__0_n_2 ;
  wire \converge_cnt_reg[8]_i_1__0_n_3 ;
  wire \converge_cnt_reg[8]_i_1__0_n_4 ;
  wire \converge_cnt_reg[8]_i_1__0_n_5 ;
  wire \converge_cnt_reg[8]_i_1__0_n_6 ;
  wire \converge_cnt_reg[8]_i_1__0_n_7 ;
  wire converge_gen3_i_1__0_n_0;
  wire converge_gen3_reg_0;
  wire converge_gen3_reg_n_0;
  wire gen3_rdy0;
  wire gt_rxcdrlock_1;
  wire gt_rxvalid_1;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_i_1__0_n_0 ;
  wire out;
  wire [3:0]p_0_in__0;
  wire [3:0]p_0_in__1;
  wire [1:0]p_1_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg2;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_valid;
  wire pipe_rxusrclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg2;
  wire \reg_phy_rdy_reg[1] ;
  wire \reg_phy_rdy_reg[1]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rst_idle_reg2_reg_0;
  wire [3:0]rxcdrlock_cnt_reg;
  wire [0:0]\rxcdrlock_cnt_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  wire [0:0]rxresetdone_reg2_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg2;
  wire [3:0]rxvalid_cnt_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg2;
  wire sel;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg2;
  wire txcompliance_reg2_reg_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  wire [3:1]\NLW_converge_cnt_reg[20]_i_1__0_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[20]_i_1__0_O_UNCONNECTED ;

  assign txcompliance_reg2_reg_0 = txcompliance_reg2;
  assign txelecidle_reg2_reg_0 = txelecidle_reg2;
  LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
    GT_RX_CONVERGE0_i_1
       (.I0(GT_RX_CONVERGE0_i_6_n_0),
        .I1(GT_RX_CONVERGE0_i_7_n_0),
        .I2(\converge_cnt[0]_i_6__0_n_0 ),
        .I3(GT_RX_CONVERGE0_i_8_n_0),
        .I4(\converge_cnt[0]_i_5__0_n_0 ),
        .I5(converge_gen3_reg_n_0),
        .O(converge_gen3_reg_0));
  LUT4 #(
    .INIT(16'h0100)) 
    GT_RX_CONVERGE0_i_6
       (.I0(converge_cnt_reg[1]),
        .I1(converge_cnt_reg[0]),
        .I2(converge_cnt_reg[2]),
        .I3(converge_cnt_reg[3]),
        .O(GT_RX_CONVERGE0_i_6_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    GT_RX_CONVERGE0_i_7
       (.I0(converge_cnt_reg[20]),
        .I1(converge_cnt_reg[14]),
        .I2(converge_cnt_reg[12]),
        .O(GT_RX_CONVERGE0_i_7_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    GT_RX_CONVERGE0_i_8
       (.I0(converge_cnt_reg[4]),
        .I1(converge_cnt_reg[5]),
        .I2(converge_cnt_reg[6]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[21]),
        .I5(converge_cnt_reg[13]),
        .O(GT_RX_CONVERGE0_i_8_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    PCIE_3_0_i_i_296
       (.I0(rxvalid_cnt_reg[0]),
        .I1(rxvalid_cnt_reg[1]),
        .O(PCIE_3_0_i_i_296_n_0));
  LUT5 #(
    .INIT(32'hFFFFA8FF)) 
    PCIE_3_0_i_i_5
       (.I0(PCIE_3_0_i),
        .I1(rate_rxsync_reg2),
        .I2(rate_idle_reg2),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(pipe_rx1_phy_status));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    PCIE_3_0_i_i_6
       (.I0(gt_rxvalid_1),
        .I1(rst_idle_reg2),
        .I2(rate_idle_reg2),
        .I3(PCIE_3_0_i_i_296_n_0),
        .I4(rxvalid_cnt_reg[2]),
        .I5(rxvalid_cnt_reg[3]),
        .O(pipe_rx1_valid));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \converge_cnt[0]_i_1__4 
       (.I0(rate_gen3_reg2),
        .I1(RST_RXUSRCLK_RESET),
        .I2(rate_idle_reg2),
        .I3(rst_idle_reg2),
        .O(\converge_cnt[0]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hAEAEAEAEAEAEAFAE)) 
    \converge_cnt[0]_i_2__0 
       (.I0(\converge_cnt[0]_i_4__0_n_0 ),
        .I1(\converge_cnt[0]_i_5__0_n_0 ),
        .I2(converge_cnt_reg[20]),
        .I3(\converge_cnt[0]_i_6__0_n_0 ),
        .I4(converge_cnt_reg[12]),
        .I5(converge_cnt_reg[14]),
        .O(sel));
  LUT6 #(
    .INIT(64'h5557555F55575557)) 
    \converge_cnt[0]_i_4__0 
       (.I0(converge_cnt_reg[21]),
        .I1(converge_cnt_reg[13]),
        .I2(converge_cnt_reg[20]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[12]),
        .I5(\converge_cnt[0]_i_8_n_0 ),
        .O(\converge_cnt[0]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \converge_cnt[0]_i_5__0 
       (.I0(converge_cnt_reg[16]),
        .I1(converge_cnt_reg[18]),
        .I2(converge_cnt_reg[19]),
        .I3(converge_cnt_reg[15]),
        .I4(converge_cnt_reg[17]),
        .O(\converge_cnt[0]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \converge_cnt[0]_i_6__0 
       (.I0(converge_cnt_reg[11]),
        .I1(converge_cnt_reg[10]),
        .I2(converge_cnt_reg[9]),
        .I3(converge_cnt_reg[8]),
        .O(\converge_cnt[0]_i_6__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[0]_i_7 
       (.I0(converge_cnt_reg[0]),
        .O(\converge_cnt[0]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \converge_cnt[0]_i_8 
       (.I0(converge_cnt_reg[3]),
        .I1(converge_cnt_reg[4]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[6]),
        .O(\converge_cnt[0]_i_8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__0_n_7 ),
        .Q(converge_cnt_reg[0]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[0]_i_3__0_n_0 ,\converge_cnt_reg[0]_i_3__0_n_1 ,\converge_cnt_reg[0]_i_3__0_n_2 ,\converge_cnt_reg[0]_i_3__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\converge_cnt_reg[0]_i_3__0_n_4 ,\converge_cnt_reg[0]_i_3__0_n_5 ,\converge_cnt_reg[0]_i_3__0_n_6 ,\converge_cnt_reg[0]_i_3__0_n_7 }),
        .S({converge_cnt_reg[3:1],\converge_cnt[0]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__0_n_5 ),
        .Q(converge_cnt_reg[10]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__0_n_4 ),
        .Q(converge_cnt_reg[11]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[12]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[12]_i_1__0 
       (.CI(\converge_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\converge_cnt_reg[12]_i_1__0_n_0 ,\converge_cnt_reg[12]_i_1__0_n_1 ,\converge_cnt_reg[12]_i_1__0_n_2 ,\converge_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[12]_i_1__0_n_4 ,\converge_cnt_reg[12]_i_1__0_n_5 ,\converge_cnt_reg[12]_i_1__0_n_6 ,\converge_cnt_reg[12]_i_1__0_n_7 }),
        .S(converge_cnt_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[13]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__0_n_5 ),
        .Q(converge_cnt_reg[14]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__0_n_4 ),
        .Q(converge_cnt_reg[15]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[16]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[16]_i_1__0 
       (.CI(\converge_cnt_reg[12]_i_1__0_n_0 ),
        .CO({\converge_cnt_reg[16]_i_1__0_n_0 ,\converge_cnt_reg[16]_i_1__0_n_1 ,\converge_cnt_reg[16]_i_1__0_n_2 ,\converge_cnt_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[16]_i_1__0_n_4 ,\converge_cnt_reg[16]_i_1__0_n_5 ,\converge_cnt_reg[16]_i_1__0_n_6 ,\converge_cnt_reg[16]_i_1__0_n_7 }),
        .S(converge_cnt_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[17]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__0_n_5 ),
        .Q(converge_cnt_reg[18]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__0_n_4 ),
        .Q(converge_cnt_reg[19]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__0_n_6 ),
        .Q(converge_cnt_reg[1]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[20]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[20]_i_1__0 
       (.CI(\converge_cnt_reg[16]_i_1__0_n_0 ),
        .CO({\NLW_converge_cnt_reg[20]_i_1__0_CO_UNCONNECTED [3:1],\converge_cnt_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[20]_i_1__0_O_UNCONNECTED [3:2],\converge_cnt_reg[20]_i_1__0_n_6 ,\converge_cnt_reg[20]_i_1__0_n_7 }),
        .S({1'b0,1'b0,converge_cnt_reg[21:20]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[21]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__0_n_5 ),
        .Q(converge_cnt_reg[2]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__0_n_4 ),
        .Q(converge_cnt_reg[3]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[4]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[4]_i_1__0 
       (.CI(\converge_cnt_reg[0]_i_3__0_n_0 ),
        .CO({\converge_cnt_reg[4]_i_1__0_n_0 ,\converge_cnt_reg[4]_i_1__0_n_1 ,\converge_cnt_reg[4]_i_1__0_n_2 ,\converge_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[4]_i_1__0_n_4 ,\converge_cnt_reg[4]_i_1__0_n_5 ,\converge_cnt_reg[4]_i_1__0_n_6 ,\converge_cnt_reg[4]_i_1__0_n_7 }),
        .S(converge_cnt_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[5]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__0_n_5 ),
        .Q(converge_cnt_reg[6]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__0_n_4 ),
        .Q(converge_cnt_reg[7]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[8]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \converge_cnt_reg[8]_i_1__0 
       (.CI(\converge_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\converge_cnt_reg[8]_i_1__0_n_0 ,\converge_cnt_reg[8]_i_1__0_n_1 ,\converge_cnt_reg[8]_i_1__0_n_2 ,\converge_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[8]_i_1__0_n_4 ,\converge_cnt_reg[8]_i_1__0_n_5 ,\converge_cnt_reg[8]_i_1__0_n_6 ,\converge_cnt_reg[8]_i_1__0_n_7 }),
        .S(converge_cnt_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_rxusrclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[9]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    converge_gen3_i_1__0
       (.I0(rxeq_adapt_done_reg2),
        .I1(rate_gen3_reg2),
        .I2(converge_gen3_reg_n_0),
        .O(converge_gen3_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    converge_gen3_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(converge_gen3_i_1__0_n_0),
        .Q(converge_gen3_reg_n_0),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    gen3_rdy_i_1__0
       (.I0(rate_gen3_reg2),
        .I1(rate_idle_reg2),
        .O(gen3_rdy0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_rdy_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gen3_rdy0),
        .Q(PIPE_GEN3_RDY),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h7)) 
    \gth_channel.gthe2_channel_i_i_50 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .O(txcompliance_reg2_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1__0 
       (.I0(oobclk_cnt[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1__0 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(p_1_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(oobclk_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(oobclk_cnt[1]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1__0 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1__0_n_0 ),
        .Q(USER_OOBCLK),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_pclk_sel_out),
        .Q(pclk_sel_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_DONE),
        .Q(rate_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_GEN3),
        .Q(rate_gen3_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(D),
        .Q(rate_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_RXSYNC),
        .Q(rate_rxsync_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \reg_phy_rdy[1]_i_1 
       (.I0(rst_idle_reg2),
        .I1(out),
        .I2(\reg_phy_rdy_reg[1] ),
        .I3(\reg_phy_rdy_reg[1]_0 ),
        .O(rst_idle_reg2_reg_0));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[1]_i_1 
       (.I0(rxresetdone_reg2),
        .I1(txresetdone_reg2),
        .O(rxresetdone_reg2_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RESETOVRD_START),
        .Q(resetovrd_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q),
        .Q(rst_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT5 #(
    .INIT(32'h8A0A0A0A)) 
    \rxcdrlock_cnt[0]_i_1__0 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[0]));
  LUT5 #(
    .INIT(32'hA8282828)) 
    \rxcdrlock_cnt[1]_i_1__0 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hAA802A80)) 
    \rxcdrlock_cnt[2]_i_1__0 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    \rxcdrlock_cnt[3]_i_1__0 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg[1]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[2]),
        .I4(rxcdrlock_cnt_reg[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rxcdrlock_cnt_reg[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rxcdrlock_cnt_reg[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rxcdrlock_cnt_reg[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rxcdrlock_cnt_reg[3]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h80000000)) 
    rxcdrlock_reg1_i_1__0
       (.I0(rxcdrlock_cnt_reg[3]),
        .I1(rxcdrlock_cnt_reg[2]),
        .I2(rxcdrlock_cnt_reg[0]),
        .I3(rxcdrlock_cnt_reg[1]),
        .I4(gt_rxcdrlock_1),
        .O(\rxcdrlock_cnt_reg[3]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxcdrlock_1),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RXEQ_ADAPT_DONE),
        .Q(rxeq_adapt_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(PIPE_RXSTATUS),
        .Q(rxstatus_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'hC000000044444444)) 
    \rxvalid_cnt[0]_i_1__0 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg[3]),
        .I3(rxvalid_cnt_reg[2]),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1__0 
       (.I0(rxvalid_cnt_reg[2]),
        .I1(rxvalid_cnt_reg[3]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[1]));
  LUT6 #(
    .INIT(64'h80BF000000C00000)) 
    \rxvalid_cnt[2]_i_1__0 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_cnt_reg[0]),
        .I2(rxvalid_cnt_reg[1]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg[2]),
        .O(p_0_in__1[2]));
  LUT6 #(
    .INIT(64'h8C08080808080808)) 
    \rxvalid_cnt[3]_i_1__0 
       (.I0(rxvalid_cnt_reg[3]),
        .I1(rxvalid_reg2),
        .I2(rxstatus_reg2),
        .I3(rxvalid_cnt_reg[2]),
        .I4(rxvalid_cnt_reg[1]),
        .I5(rxvalid_cnt_reg[0]),
        .O(p_0_in__1[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[0]),
        .Q(rxvalid_cnt_reg[0]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[1]),
        .Q(rxvalid_cnt_reg[1]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[2]),
        .Q(rxvalid_cnt_reg[2]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__1[3]),
        .Q(rxvalid_cnt_reg[3]),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_1),
        .Q(rxvalid_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXCOMPLIANCE),
        .Q(txcompliance_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_TXELECIDLE),
        .Q(txelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_wrapper
   (cpllpd,
    cpllpd_0,
    cpllpd_1,
    cpllpd_2,
    pci_exp_txn,
    pci_exp_txp,
    PIPE_RXELECIDLE,
    pipe_rxoutclk_out,
    pipe_txoutclk_out,
    PIPE_RXSTATUS,
    PIPE_RXDATA,
    PIPE_RXDATAK,
    PIPERX0EQLPNEWTXCOEFFORPRESET,
    PIPERX1EQLPNEWTXCOEFFORPRESET,
    rst_idle_reg2_reg,
    PIPERX2EQLPNEWTXCOEFFORPRESET,
    PIPERX3EQLPNEWTXCOEFFORPRESET,
    Q,
    PIPE_TXEQ_DONE,
    PIPE_RXEQ_DONE,
    pipe_rx0_eq_lffs_sel,
    pipe_rx0_eq_adapt_done,
    \txeq_txcoeff_reg[18] ,
    pipe_rx1_eq_lffs_sel,
    USER_RXEQ_ADAPT_DONE,
    \txeq_txcoeff_reg[18]_0 ,
    pipe_rx2_eq_lffs_sel,
    rxeq_adapt_done_reg,
    \txeq_txcoeff_reg[18]_1 ,
    pipe_rx3_eq_lffs_sel,
    rxeq_adapt_done_reg_0,
    pipe_pclk_sel_out,
    rate_cpllpd_0,
    rate_cpllpd_1,
    rate_cpllpd_2,
    rate_cpllpd_3,
    PIPE_GEN3_RDY,
    pipe_rx0_valid,
    pipe_rx0_phy_status,
    pipe_rx1_valid,
    pipe_rx1_phy_status,
    pipe_rx2_valid,
    pipe_rx2_phy_status,
    pipe_rx3_valid,
    pipe_rx3_phy_status,
    CPLLPD0,
    pipe_dclk_in,
    pci_exp_rxn,
    pci_exp_rxp,
    sys_clk,
    PIPE_RXPOLARITY,
    PIPE_RXSLIDE,
    pipe_rxusrclk_in,
    pipe_tx_deemph,
    pipe_tx_rcvr_det,
    PIPE_TXELECIDLE,
    pipe_tx_swing,
    pipe_pclk_in,
    PIPE_POWERDOWN,
    PIPETXMARGIN,
    PIPE_TXDATA,
    PIPE_TXCOMPLIANCE,
    PIPE_TXDATAK,
    CPLLPD0_3,
    CPLLPD0_4,
    CPLLPD0_5,
    sys_reset,
    PIPE_TXEQ_CONTROL,
    PIPE_TXEQ_DEEMPH,
    PIPE_TXEQ_PRESET,
    PIPE_RXEQ_PRESET,
    PIPE_RXEQ_CONTROL,
    PIPE_RXEQ_TXPRESET,
    PIPE_RXEQ_LFFS,
    pipe_mmcm_lock_in,
    PIPETXRATE,
    pipe_oobclk_in);
  output cpllpd;
  output cpllpd_0;
  output cpllpd_1;
  output cpllpd_2;
  output [3:0]pci_exp_txn;
  output [3:0]pci_exp_txp;
  output [3:0]PIPE_RXELECIDLE;
  output [3:0]pipe_rxoutclk_out;
  output pipe_txoutclk_out;
  output [11:0]PIPE_RXSTATUS;
  output [63:0]PIPE_RXDATA;
  output [7:0]PIPE_RXDATAK;
  output [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  output [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  output rst_idle_reg2_reg;
  output [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  output [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  output [15:0]Q;
  output [3:0]PIPE_TXEQ_DONE;
  output [3:0]PIPE_RXEQ_DONE;
  output pipe_rx0_eq_lffs_sel;
  output pipe_rx0_eq_adapt_done;
  output [15:0]\txeq_txcoeff_reg[18] ;
  output pipe_rx1_eq_lffs_sel;
  output USER_RXEQ_ADAPT_DONE;
  output [15:0]\txeq_txcoeff_reg[18]_0 ;
  output pipe_rx2_eq_lffs_sel;
  output rxeq_adapt_done_reg;
  output [15:0]\txeq_txcoeff_reg[18]_1 ;
  output pipe_rx3_eq_lffs_sel;
  output rxeq_adapt_done_reg_0;
  output [3:0]pipe_pclk_sel_out;
  output rate_cpllpd_0;
  output rate_cpllpd_1;
  output rate_cpllpd_2;
  output rate_cpllpd_3;
  output [3:0]PIPE_GEN3_RDY;
  output pipe_rx0_valid;
  output pipe_rx0_phy_status;
  output pipe_rx1_valid;
  output pipe_rx1_phy_status;
  output pipe_rx2_valid;
  output pipe_rx2_phy_status;
  output pipe_rx3_valid;
  output pipe_rx3_phy_status;
  input CPLLPD0;
  input pipe_dclk_in;
  input [3:0]pci_exp_rxn;
  input [3:0]pci_exp_rxp;
  input sys_clk;
  input [3:0]PIPE_RXPOLARITY;
  input [3:0]PIPE_RXSLIDE;
  input pipe_rxusrclk_in;
  input pipe_tx_deemph;
  input pipe_tx_rcvr_det;
  input [3:0]PIPE_TXELECIDLE;
  input pipe_tx_swing;
  input pipe_pclk_in;
  input [7:0]PIPE_POWERDOWN;
  input [2:0]PIPETXMARGIN;
  input [63:0]PIPE_TXDATA;
  input [3:0]PIPE_TXCOMPLIANCE;
  input [7:0]PIPE_TXDATAK;
  input CPLLPD0_3;
  input CPLLPD0_4;
  input CPLLPD0_5;
  input sys_reset;
  input [7:0]PIPE_TXEQ_CONTROL;
  input [23:0]PIPE_TXEQ_DEEMPH;
  input [15:0]PIPE_TXEQ_PRESET;
  input [11:0]PIPE_RXEQ_PRESET;
  input [7:0]PIPE_RXEQ_CONTROL;
  input [15:0]PIPE_RXEQ_TXPRESET;
  input [23:0]PIPE_RXEQ_LFFS;
  input pipe_mmcm_lock_in;
  input [1:0]PIPETXRATE;
  input pipe_oobclk_in;

  wire CPLLPD0;
  wire CPLLPD0_3;
  wire CPLLPD0_4;
  wire CPLLPD0_5;
  wire DRP_START0;
  wire DRP_START012_out;
  wire DRP_START04_out;
  wire DRP_START08_out;
  wire DRP_X160;
  wire DRP_X16013_out;
  wire DRP_X1605_out;
  wire DRP_X1609_out;
  wire DRP_X16X20_MODE0;
  wire DRP_X16X20_MODE010_out;
  wire DRP_X16X20_MODE011_out;
  wire DRP_X16X20_MODE014_out;
  wire GT_RX_CONVERGE0_n_0;
  wire [17:0]PIPERX0EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX1EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX2EQLPNEWTXCOEFFORPRESET;
  wire [17:0]PIPERX3EQLPNEWTXCOEFFORPRESET;
  wire [2:0]PIPETXMARGIN;
  wire [1:0]PIPETXRATE;
  wire [3:0]PIPE_GEN3_RDY;
  wire [7:0]PIPE_POWERDOWN;
  wire [63:0]PIPE_RXDATA;
  wire [7:0]PIPE_RXDATAK;
  wire [3:0]PIPE_RXELECIDLE;
  wire [7:0]PIPE_RXEQ_CONTROL;
  wire [3:0]PIPE_RXEQ_DONE;
  wire [23:0]PIPE_RXEQ_LFFS;
  wire [11:0]PIPE_RXEQ_PRESET;
  wire [15:0]PIPE_RXEQ_TXPRESET;
  wire [3:0]PIPE_RXPOLARITY;
  wire [3:0]PIPE_RXSLIDE;
  wire [11:0]PIPE_RXSTATUS;
  wire [3:0]PIPE_TXCOMPLIANCE;
  wire [63:0]PIPE_TXDATA;
  wire [7:0]PIPE_TXDATAK;
  wire [3:0]PIPE_TXELECIDLE;
  wire [7:0]PIPE_TXEQ_CONTROL;
  wire [23:0]PIPE_TXEQ_DEEMPH;
  wire [3:0]PIPE_TXEQ_DONE;
  wire [15:0]PIPE_TXEQ_PRESET;
  wire [15:0]Q;
  wire RX8B10BEN0;
  wire RX8B10BEN0_0;
  wire RX8B10BEN0_3;
  wire RX8B10BEN0_6;
  wire SYNC_TXSYNC_START0;
  wire SYNC_TXSYNC_START00_out;
  wire SYNC_TXSYNC_START03_out;
  wire SYNC_TXSYNC_START07_out;
  wire USER_RXEQ_ADAPT_DONE;
  wire cpllpd;
  wire cpllpd_0;
  wire cpllpd_1;
  wire cpllpd_2;
  wire drp_done_0;
  wire drp_done_1;
  wire drp_done_2;
  wire drp_done_3;
  wire [6:0]eq_txeq_maincursor_0;
  wire [6:0]eq_txeq_maincursor_14;
  wire [6:0]eq_txeq_maincursor_21;
  wire [6:0]eq_txeq_maincursor_7;
  wire [4:0]eq_txeq_postcursor_0;
  wire [4:0]eq_txeq_postcursor_10;
  wire [4:0]eq_txeq_postcursor_15;
  wire [4:0]eq_txeq_postcursor_5;
  wire [4:0]eq_txeq_precursor_0;
  wire [4:0]eq_txeq_precursor_10;
  wire [4:0]eq_txeq_precursor_15;
  wire [4:0]eq_txeq_precursor_5;
  wire gt_cpllpdrefclk;
  wire gt_phystatus_0;
  wire gt_phystatus_1;
  wire gt_phystatus_2;
  wire gt_phystatus_3;
  wire gt_rxcdrlock_0;
  wire gt_rxcdrlock_1;
  wire gt_rxcdrlock_2;
  wire gt_rxcdrlock_3;
  wire gt_rxratedone_0;
  wire gt_rxratedone_1;
  wire gt_rxratedone_2;
  wire gt_rxratedone_3;
  wire gt_rxresetdone_0;
  wire gt_rxresetdone_1;
  wire gt_rxresetdone_2;
  wire gt_rxresetdone_3;
  wire gt_rxsyncout_0;
  wire gt_rxvalid_0;
  wire gt_rxvalid_1;
  wire gt_rxvalid_2;
  wire gt_rxvalid_3;
  wire gt_txratedone_0;
  wire gt_txratedone_1;
  wire gt_txratedone_2;
  wire gt_txratedone_3;
  wire gt_txresetdone_0;
  wire gt_txresetdone_1;
  wire gt_txresetdone_2;
  wire gt_txresetdone_3;
  wire gt_txsyncdone_0;
  wire gt_txsyncdone_1;
  wire gt_txsyncdone_2;
  wire gt_txsyncdone_3;
  wire gt_txsyncout_0;
  wire p_0_in1_in;
  wire p_0_in1_in_1;
  wire p_0_in1_in_5;
  wire p_0_in1_in_7;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_in2_in_2;
  wire p_1_in2_in_4;
  wire p_1_in2_in_8;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire \pipe_lane[0].gt_wrapper_i_n_1 ;
  wire \pipe_lane[0].gt_wrapper_i_n_10 ;
  wire \pipe_lane[0].gt_wrapper_i_n_11 ;
  wire \pipe_lane[0].gt_wrapper_i_n_14 ;
  wire \pipe_lane[0].gt_wrapper_i_n_17 ;
  wire \pipe_lane[0].gt_wrapper_i_n_19 ;
  wire \pipe_lane[0].gt_wrapper_i_n_2 ;
  wire \pipe_lane[0].gt_wrapper_i_n_20 ;
  wire \pipe_lane[0].gt_wrapper_i_n_25 ;
  wire \pipe_lane[0].gt_wrapper_i_n_26 ;
  wire \pipe_lane[0].gt_wrapper_i_n_27 ;
  wire \pipe_lane[0].gt_wrapper_i_n_28 ;
  wire \pipe_lane[0].gt_wrapper_i_n_29 ;
  wire \pipe_lane[0].gt_wrapper_i_n_30 ;
  wire \pipe_lane[0].gt_wrapper_i_n_31 ;
  wire \pipe_lane[0].gt_wrapper_i_n_32 ;
  wire \pipe_lane[0].gt_wrapper_i_n_33 ;
  wire \pipe_lane[0].gt_wrapper_i_n_34 ;
  wire \pipe_lane[0].gt_wrapper_i_n_35 ;
  wire \pipe_lane[0].gt_wrapper_i_n_36 ;
  wire \pipe_lane[0].gt_wrapper_i_n_37 ;
  wire \pipe_lane[0].gt_wrapper_i_n_38 ;
  wire \pipe_lane[0].gt_wrapper_i_n_39 ;
  wire \pipe_lane[0].gt_wrapper_i_n_40 ;
  wire \pipe_lane[0].gt_wrapper_i_n_7 ;
  wire \pipe_lane[0].pipe_drp_i_n_0 ;
  wire \pipe_lane[0].pipe_drp_i_n_1 ;
  wire \pipe_lane[0].pipe_drp_i_n_10 ;
  wire \pipe_lane[0].pipe_drp_i_n_11 ;
  wire \pipe_lane[0].pipe_drp_i_n_12 ;
  wire \pipe_lane[0].pipe_drp_i_n_13 ;
  wire \pipe_lane[0].pipe_drp_i_n_14 ;
  wire \pipe_lane[0].pipe_drp_i_n_15 ;
  wire \pipe_lane[0].pipe_drp_i_n_16 ;
  wire \pipe_lane[0].pipe_drp_i_n_17 ;
  wire \pipe_lane[0].pipe_drp_i_n_18 ;
  wire \pipe_lane[0].pipe_drp_i_n_19 ;
  wire \pipe_lane[0].pipe_drp_i_n_2 ;
  wire \pipe_lane[0].pipe_drp_i_n_20 ;
  wire \pipe_lane[0].pipe_drp_i_n_21 ;
  wire \pipe_lane[0].pipe_drp_i_n_22 ;
  wire \pipe_lane[0].pipe_drp_i_n_23 ;
  wire \pipe_lane[0].pipe_drp_i_n_24 ;
  wire \pipe_lane[0].pipe_drp_i_n_25 ;
  wire \pipe_lane[0].pipe_drp_i_n_3 ;
  wire \pipe_lane[0].pipe_drp_i_n_4 ;
  wire \pipe_lane[0].pipe_drp_i_n_5 ;
  wire \pipe_lane[0].pipe_drp_i_n_6 ;
  wire \pipe_lane[0].pipe_drp_i_n_7 ;
  wire \pipe_lane[0].pipe_drp_i_n_8 ;
  wire \pipe_lane[0].pipe_drp_i_n_9 ;
  wire \pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_0 ;
  wire \pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_1 ;
  wire \pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_2 ;
  wire \pipe_lane[0].pipe_rate_i_n_2 ;
  wire \pipe_lane[0].pipe_sync_i_n_1 ;
  wire \pipe_lane[0].pipe_sync_i_n_3 ;
  wire \pipe_lane[0].pipe_user_i_n_0 ;
  wire \pipe_lane[0].pipe_user_i_n_11 ;
  wire \pipe_lane[0].pipe_user_i_n_14 ;
  wire \pipe_lane[0].pipe_user_i_n_15 ;
  wire \pipe_lane[0].pipe_user_i_n_17 ;
  wire \pipe_lane[0].pipe_user_i_n_18 ;
  wire \pipe_lane[0].pipe_user_i_n_4 ;
  wire \pipe_lane[0].pipe_user_i_n_6 ;
  wire \pipe_lane[0].pipe_user_i_n_7 ;
  wire \pipe_lane[0].pipe_user_i_n_8 ;
  wire \pipe_lane[1].gt_wrapper_i_n_1 ;
  wire \pipe_lane[1].gt_wrapper_i_n_10 ;
  wire \pipe_lane[1].gt_wrapper_i_n_11 ;
  wire \pipe_lane[1].gt_wrapper_i_n_14 ;
  wire \pipe_lane[1].gt_wrapper_i_n_16 ;
  wire \pipe_lane[1].gt_wrapper_i_n_17 ;
  wire \pipe_lane[1].gt_wrapper_i_n_18 ;
  wire \pipe_lane[1].gt_wrapper_i_n_2 ;
  wire \pipe_lane[1].gt_wrapper_i_n_22 ;
  wire \pipe_lane[1].gt_wrapper_i_n_23 ;
  wire \pipe_lane[1].gt_wrapper_i_n_24 ;
  wire \pipe_lane[1].gt_wrapper_i_n_25 ;
  wire \pipe_lane[1].gt_wrapper_i_n_26 ;
  wire \pipe_lane[1].gt_wrapper_i_n_27 ;
  wire \pipe_lane[1].gt_wrapper_i_n_28 ;
  wire \pipe_lane[1].gt_wrapper_i_n_29 ;
  wire \pipe_lane[1].gt_wrapper_i_n_30 ;
  wire \pipe_lane[1].gt_wrapper_i_n_31 ;
  wire \pipe_lane[1].gt_wrapper_i_n_32 ;
  wire \pipe_lane[1].gt_wrapper_i_n_33 ;
  wire \pipe_lane[1].gt_wrapper_i_n_34 ;
  wire \pipe_lane[1].gt_wrapper_i_n_35 ;
  wire \pipe_lane[1].gt_wrapper_i_n_36 ;
  wire \pipe_lane[1].gt_wrapper_i_n_37 ;
  wire \pipe_lane[1].gt_wrapper_i_n_7 ;
  wire \pipe_lane[1].pipe_drp_i_n_0 ;
  wire \pipe_lane[1].pipe_drp_i_n_1 ;
  wire \pipe_lane[1].pipe_drp_i_n_10 ;
  wire \pipe_lane[1].pipe_drp_i_n_11 ;
  wire \pipe_lane[1].pipe_drp_i_n_12 ;
  wire \pipe_lane[1].pipe_drp_i_n_13 ;
  wire \pipe_lane[1].pipe_drp_i_n_14 ;
  wire \pipe_lane[1].pipe_drp_i_n_15 ;
  wire \pipe_lane[1].pipe_drp_i_n_16 ;
  wire \pipe_lane[1].pipe_drp_i_n_17 ;
  wire \pipe_lane[1].pipe_drp_i_n_18 ;
  wire \pipe_lane[1].pipe_drp_i_n_19 ;
  wire \pipe_lane[1].pipe_drp_i_n_2 ;
  wire \pipe_lane[1].pipe_drp_i_n_20 ;
  wire \pipe_lane[1].pipe_drp_i_n_21 ;
  wire \pipe_lane[1].pipe_drp_i_n_22 ;
  wire \pipe_lane[1].pipe_drp_i_n_23 ;
  wire \pipe_lane[1].pipe_drp_i_n_24 ;
  wire \pipe_lane[1].pipe_drp_i_n_25 ;
  wire \pipe_lane[1].pipe_drp_i_n_3 ;
  wire \pipe_lane[1].pipe_drp_i_n_4 ;
  wire \pipe_lane[1].pipe_drp_i_n_5 ;
  wire \pipe_lane[1].pipe_drp_i_n_6 ;
  wire \pipe_lane[1].pipe_drp_i_n_7 ;
  wire \pipe_lane[1].pipe_drp_i_n_8 ;
  wire \pipe_lane[1].pipe_drp_i_n_9 ;
  wire \pipe_lane[1].pipe_rate_i_n_1 ;
  wire \pipe_lane[1].pipe_sync_i_n_3 ;
  wire \pipe_lane[1].pipe_user_i_n_10 ;
  wire \pipe_lane[1].pipe_user_i_n_5 ;
  wire \pipe_lane[1].pipe_user_i_n_8 ;
  wire \pipe_lane[2].gt_wrapper_i_n_1 ;
  wire \pipe_lane[2].gt_wrapper_i_n_10 ;
  wire \pipe_lane[2].gt_wrapper_i_n_11 ;
  wire \pipe_lane[2].gt_wrapper_i_n_14 ;
  wire \pipe_lane[2].gt_wrapper_i_n_16 ;
  wire \pipe_lane[2].gt_wrapper_i_n_17 ;
  wire \pipe_lane[2].gt_wrapper_i_n_18 ;
  wire \pipe_lane[2].gt_wrapper_i_n_2 ;
  wire \pipe_lane[2].gt_wrapper_i_n_22 ;
  wire \pipe_lane[2].gt_wrapper_i_n_23 ;
  wire \pipe_lane[2].gt_wrapper_i_n_24 ;
  wire \pipe_lane[2].gt_wrapper_i_n_25 ;
  wire \pipe_lane[2].gt_wrapper_i_n_26 ;
  wire \pipe_lane[2].gt_wrapper_i_n_27 ;
  wire \pipe_lane[2].gt_wrapper_i_n_28 ;
  wire \pipe_lane[2].gt_wrapper_i_n_29 ;
  wire \pipe_lane[2].gt_wrapper_i_n_30 ;
  wire \pipe_lane[2].gt_wrapper_i_n_31 ;
  wire \pipe_lane[2].gt_wrapper_i_n_32 ;
  wire \pipe_lane[2].gt_wrapper_i_n_33 ;
  wire \pipe_lane[2].gt_wrapper_i_n_34 ;
  wire \pipe_lane[2].gt_wrapper_i_n_35 ;
  wire \pipe_lane[2].gt_wrapper_i_n_36 ;
  wire \pipe_lane[2].gt_wrapper_i_n_37 ;
  wire \pipe_lane[2].gt_wrapper_i_n_7 ;
  wire \pipe_lane[2].pipe_drp_i_n_0 ;
  wire \pipe_lane[2].pipe_drp_i_n_1 ;
  wire \pipe_lane[2].pipe_drp_i_n_10 ;
  wire \pipe_lane[2].pipe_drp_i_n_11 ;
  wire \pipe_lane[2].pipe_drp_i_n_12 ;
  wire \pipe_lane[2].pipe_drp_i_n_13 ;
  wire \pipe_lane[2].pipe_drp_i_n_14 ;
  wire \pipe_lane[2].pipe_drp_i_n_15 ;
  wire \pipe_lane[2].pipe_drp_i_n_16 ;
  wire \pipe_lane[2].pipe_drp_i_n_17 ;
  wire \pipe_lane[2].pipe_drp_i_n_18 ;
  wire \pipe_lane[2].pipe_drp_i_n_19 ;
  wire \pipe_lane[2].pipe_drp_i_n_2 ;
  wire \pipe_lane[2].pipe_drp_i_n_20 ;
  wire \pipe_lane[2].pipe_drp_i_n_21 ;
  wire \pipe_lane[2].pipe_drp_i_n_22 ;
  wire \pipe_lane[2].pipe_drp_i_n_23 ;
  wire \pipe_lane[2].pipe_drp_i_n_24 ;
  wire \pipe_lane[2].pipe_drp_i_n_25 ;
  wire \pipe_lane[2].pipe_drp_i_n_3 ;
  wire \pipe_lane[2].pipe_drp_i_n_4 ;
  wire \pipe_lane[2].pipe_drp_i_n_5 ;
  wire \pipe_lane[2].pipe_drp_i_n_6 ;
  wire \pipe_lane[2].pipe_drp_i_n_7 ;
  wire \pipe_lane[2].pipe_drp_i_n_8 ;
  wire \pipe_lane[2].pipe_drp_i_n_9 ;
  wire \pipe_lane[2].pipe_sync_i_n_3 ;
  wire \pipe_lane[2].pipe_user_i_n_0 ;
  wire \pipe_lane[2].pipe_user_i_n_1 ;
  wire \pipe_lane[2].pipe_user_i_n_11 ;
  wire \pipe_lane[2].pipe_user_i_n_13 ;
  wire \pipe_lane[2].pipe_user_i_n_4 ;
  wire \pipe_lane[2].pipe_user_i_n_5 ;
  wire \pipe_lane[2].pipe_user_i_n_8 ;
  wire \pipe_lane[3].gt_wrapper_i_n_1 ;
  wire \pipe_lane[3].gt_wrapper_i_n_10 ;
  wire \pipe_lane[3].gt_wrapper_i_n_11 ;
  wire \pipe_lane[3].gt_wrapper_i_n_14 ;
  wire \pipe_lane[3].gt_wrapper_i_n_16 ;
  wire \pipe_lane[3].gt_wrapper_i_n_17 ;
  wire \pipe_lane[3].gt_wrapper_i_n_18 ;
  wire \pipe_lane[3].gt_wrapper_i_n_2 ;
  wire \pipe_lane[3].gt_wrapper_i_n_22 ;
  wire \pipe_lane[3].gt_wrapper_i_n_23 ;
  wire \pipe_lane[3].gt_wrapper_i_n_24 ;
  wire \pipe_lane[3].gt_wrapper_i_n_25 ;
  wire \pipe_lane[3].gt_wrapper_i_n_26 ;
  wire \pipe_lane[3].gt_wrapper_i_n_27 ;
  wire \pipe_lane[3].gt_wrapper_i_n_28 ;
  wire \pipe_lane[3].gt_wrapper_i_n_29 ;
  wire \pipe_lane[3].gt_wrapper_i_n_30 ;
  wire \pipe_lane[3].gt_wrapper_i_n_31 ;
  wire \pipe_lane[3].gt_wrapper_i_n_32 ;
  wire \pipe_lane[3].gt_wrapper_i_n_33 ;
  wire \pipe_lane[3].gt_wrapper_i_n_34 ;
  wire \pipe_lane[3].gt_wrapper_i_n_35 ;
  wire \pipe_lane[3].gt_wrapper_i_n_36 ;
  wire \pipe_lane[3].gt_wrapper_i_n_37 ;
  wire \pipe_lane[3].gt_wrapper_i_n_7 ;
  wire \pipe_lane[3].pipe_drp_i_n_0 ;
  wire \pipe_lane[3].pipe_drp_i_n_1 ;
  wire \pipe_lane[3].pipe_drp_i_n_10 ;
  wire \pipe_lane[3].pipe_drp_i_n_11 ;
  wire \pipe_lane[3].pipe_drp_i_n_12 ;
  wire \pipe_lane[3].pipe_drp_i_n_13 ;
  wire \pipe_lane[3].pipe_drp_i_n_14 ;
  wire \pipe_lane[3].pipe_drp_i_n_15 ;
  wire \pipe_lane[3].pipe_drp_i_n_16 ;
  wire \pipe_lane[3].pipe_drp_i_n_17 ;
  wire \pipe_lane[3].pipe_drp_i_n_18 ;
  wire \pipe_lane[3].pipe_drp_i_n_19 ;
  wire \pipe_lane[3].pipe_drp_i_n_2 ;
  wire \pipe_lane[3].pipe_drp_i_n_20 ;
  wire \pipe_lane[3].pipe_drp_i_n_21 ;
  wire \pipe_lane[3].pipe_drp_i_n_22 ;
  wire \pipe_lane[3].pipe_drp_i_n_23 ;
  wire \pipe_lane[3].pipe_drp_i_n_24 ;
  wire \pipe_lane[3].pipe_drp_i_n_25 ;
  wire \pipe_lane[3].pipe_drp_i_n_3 ;
  wire \pipe_lane[3].pipe_drp_i_n_4 ;
  wire \pipe_lane[3].pipe_drp_i_n_5 ;
  wire \pipe_lane[3].pipe_drp_i_n_6 ;
  wire \pipe_lane[3].pipe_drp_i_n_7 ;
  wire \pipe_lane[3].pipe_drp_i_n_8 ;
  wire \pipe_lane[3].pipe_drp_i_n_9 ;
  wire \pipe_lane[3].pipe_sync_i_n_3 ;
  wire \pipe_lane[3].pipe_user_i_n_0 ;
  wire \pipe_lane[3].pipe_user_i_n_10 ;
  wire \pipe_lane[3].pipe_user_i_n_5 ;
  wire \pipe_lane[3].pipe_user_i_n_8 ;
  wire pipe_mmcm_lock_in;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire pipe_reset_i_n_0;
  wire pipe_reset_i_n_13;
  wire pipe_rx0_eq_adapt_done;
  wire pipe_rx0_eq_lffs_sel;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_valid;
  wire pipe_rx1_eq_lffs_sel;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_valid;
  wire pipe_rx2_eq_lffs_sel;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_valid;
  wire pipe_rx3_eq_lffs_sel;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_valid;
  wire [3:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_swing;
  wire pipe_txoutclk_out;
  wire qdrp_done;
  wire \qpll_reset.qpll_reset_i_n_2 ;
  wire qrst_drp_start;
  wire qrst_qpllpd;
  wire qrst_qpllreset;
  wire rate_cpllpd_0;
  wire rate_cpllpd_1;
  wire rate_cpllpd_2;
  wire rate_cpllpd_3;
  wire rate_cpllreset_0;
  wire rate_cpllreset_1;
  wire rate_cpllreset_2;
  wire rate_cpllreset_3;
  wire rate_done_0;
  wire rate_done_1;
  wire rate_done_2;
  wire rate_done_3;
  wire rate_drp_start_0;
  wire rate_drp_start_1;
  wire rate_drp_start_2;
  wire rate_drp_start_3;
  wire rate_drp_x16_0;
  wire rate_drp_x16_1;
  wire rate_drp_x16_2;
  wire rate_drp_x16_3;
  wire rate_drp_x16x20_mode_0;
  wire rate_drp_x16x20_mode_1;
  wire rate_drp_x16x20_mode_2;
  wire rate_drp_x16x20_mode_3;
  wire rate_gen3_1;
  wire rate_gen3_2;
  wire rate_gen3_3;
  wire rate_idle_0;
  wire rate_idle_1;
  wire rate_idle_2;
  wire rate_idle_3;
  wire [3:0]rate_qpllpd;
  wire [3:0]rate_qpllreset;
  wire [0:0]rate_rate_0;
  wire [0:0]rate_rate_3;
  wire [0:0]rate_rate_6;
  wire [0:0]rate_rate_9;
  wire rate_resetovrd_start_0;
  wire rate_resetovrd_start_1;
  wire rate_resetovrd_start_2;
  wire rate_resetovrd_start_3;
  wire rate_rxsync_0;
  wire rate_rxsync_1;
  wire rate_rxsync_2;
  wire rate_rxsync_3;
  wire rate_rxsync_start_0;
  wire rate_rxsync_start_1;
  wire rate_rxsync_start_2;
  wire rate_rxsync_start_3;
  wire [0:0]rate_sysclksel_0;
  wire [0:0]rate_sysclksel_2;
  wire [0:0]rate_sysclksel_4;
  wire [0:0]rate_sysclksel_6;
  wire rate_txpmareset_0;
  wire rate_txpmareset_1;
  wire rate_txpmareset_2;
  wire rate_txpmareset_3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire reset_n_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire reset_n_reg2;
  wire rst_cpllreset;
  wire rst_dclk_reset;
  wire rst_gtreset;
  wire rst_idle_reg2_reg;
  wire rst_rxusrclk_reset;
  wire rst_txsync_start;
  wire rst_userrdy;
  wire rxdlysresetdone_3;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_0;
  wire rxphaligndone_s_3;
  wire rxsyncallin;
  wire sync_txdlyen_0;
  wire sync_txdlysreset_0;
  wire sync_txdlysreset_1;
  wire sync_txdlysreset_2;
  wire sync_txdlysreset_3;
  wire sync_txphalign_0;
  wire sync_txphalign_1;
  wire sync_txphalign_2;
  wire sync_txphalign_3;
  wire sync_txphinit_0;
  wire sync_txphinit_1;
  wire sync_txphinit_2;
  wire sync_txphinit_3;
  wire sys_clk;
  wire sys_reset;
  wire txdlysresetdone_3;
  wire [15:0]\txeq_txcoeff_reg[18] ;
  wire [15:0]\txeq_txcoeff_reg[18]_0 ;
  wire [15:0]\txeq_txcoeff_reg[18]_1 ;
  wire txsyncallin;
  wire user_oobclk_0;
  wire user_oobclk_1;
  wire user_oobclk_2;
  wire user_oobclk_3;
  wire [3:0]user_resetdone;

  LUT6 #(
    .INIT(64'hAA80000000000000)) 
    GT_RX_CONVERGE0
       (.I0(\pipe_lane[1].pipe_user_i_n_8 ),
        .I1(\pipe_lane[0].pipe_user_i_n_14 ),
        .I2(\pipe_lane[0].pipe_user_i_n_15 ),
        .I3(\pipe_lane[0].pipe_user_i_n_18 ),
        .I4(\pipe_lane[3].pipe_user_i_n_8 ),
        .I5(\pipe_lane[2].pipe_user_i_n_11 ),
        .O(GT_RX_CONVERGE0_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG cpllpd_refclk_inst
       (.I(sys_clk),
        .O(gt_cpllpdrefclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_wrapper \pipe_lane[0].gt_wrapper_i 
       (.CPLLPD0(CPLLPD0),
        .D(gt_phystatus_0),
        .DRPADDR({\pipe_lane[0].pipe_drp_i_n_2 ,\pipe_lane[0].pipe_drp_i_n_3 ,\pipe_lane[0].pipe_drp_i_n_4 ,\pipe_lane[0].pipe_drp_i_n_5 ,\pipe_lane[0].pipe_drp_i_n_6 ,\pipe_lane[0].pipe_drp_i_n_7 ,\pipe_lane[0].pipe_drp_i_n_8 ,\pipe_lane[0].pipe_drp_i_n_9 }),
        .DRPDI({\pipe_lane[0].pipe_drp_i_n_10 ,\pipe_lane[0].pipe_drp_i_n_11 ,\pipe_lane[0].pipe_drp_i_n_12 ,\pipe_lane[0].pipe_drp_i_n_13 ,\pipe_lane[0].pipe_drp_i_n_14 ,\pipe_lane[0].pipe_drp_i_n_15 ,\pipe_lane[0].pipe_drp_i_n_16 ,\pipe_lane[0].pipe_drp_i_n_17 ,\pipe_lane[0].pipe_drp_i_n_18 ,\pipe_lane[0].pipe_drp_i_n_19 ,\pipe_lane[0].pipe_drp_i_n_20 ,\pipe_lane[0].pipe_drp_i_n_21 ,\pipe_lane[0].pipe_drp_i_n_22 ,\pipe_lane[0].pipe_drp_i_n_23 ,\pipe_lane[0].pipe_drp_i_n_24 ,\pipe_lane[0].pipe_drp_i_n_25 }),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_RDY(\pipe_lane[0].gt_wrapper_i_n_2 ),
        .PIPETXMARGIN(PIPETXMARGIN),
        .PIPE_POWERDOWN(PIPE_POWERDOWN[1:0]),
        .PIPE_RXDATA(PIPE_RXDATA[15:0]),
        .PIPE_RXDATAK(PIPE_RXDATAK[1:0]),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[0]),
        .PIPE_RXPOLARITY(PIPE_RXPOLARITY[0]),
        .PIPE_RXSLIDE(PIPE_RXSLIDE[0]),
        .PIPE_RXSTATUS(PIPE_RXSTATUS[2:0]),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE[0]),
        .PIPE_TXDATA(PIPE_TXDATA[15:0]),
        .PIPE_TXDATAK(PIPE_TXDATAK[1:0]),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE[0]),
        .Q({sync_txphalign_0,sync_txphinit_0,sync_txdlysreset_0}),
        .QPLL_QPLLOUTCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_1 ),
        .QPLL_QPLLOUTREFCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_2 ),
        .RATE_CPLLLOCK(\pipe_lane[0].gt_wrapper_i_n_1 ),
        .RATE_RXPMARESETDONE(\pipe_lane[0].gt_wrapper_i_n_11 ),
        .RATE_RXRATEDONE(gt_rxratedone_0),
        .RATE_RXRESETDONE(gt_rxresetdone_0),
        .RATE_TXRATEDONE(gt_txratedone_0),
        .RATE_TXRESETDONE(gt_txresetdone_0),
        .RST_CPLLRESET(rst_cpllreset),
        .RX8B10BEN0(RX8B10BEN0),
        .RXRATE(rate_rate_0),
        .RXSYSCLKSEL(rate_sysclksel_0),
        .SYNC_RXPHALIGNDONE_M(\pipe_lane[0].gt_wrapper_i_n_10 ),
        .SYNC_RXSYNCDONE(\pipe_lane[0].gt_wrapper_i_n_14 ),
        .SYNC_TXSYNCDONE(gt_txsyncdone_0),
        .TXMAINCURSOR(eq_txeq_maincursor_0),
        .TXPOSTCURSOR(eq_txeq_postcursor_0),
        .TXPRECURSOR(eq_txeq_precursor_0),
        .USER_OOBCLK(user_oobclk_0),
        .cpllpd(cpllpd),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .gt_rxcdrlock_0(gt_rxcdrlock_0),
        .gt_rxsyncout_0(gt_rxsyncout_0),
        .gt_rxvalid_0(gt_rxvalid_0),
        .gt_txsyncout_0(gt_txsyncout_0),
        .\gth_channel.gthe2_channel_i_0 (\pipe_lane[0].gt_wrapper_i_n_7 ),
        .\gth_channel.gthe2_channel_i_1 (\pipe_lane[0].gt_wrapper_i_n_17 ),
        .\gth_channel.gthe2_channel_i_2 (\pipe_lane[0].gt_wrapper_i_n_19 ),
        .\gth_channel.gthe2_channel_i_3 (\pipe_lane[0].gt_wrapper_i_n_20 ),
        .\gth_channel.gthe2_channel_i_4 ({\pipe_lane[0].gt_wrapper_i_n_25 ,\pipe_lane[0].gt_wrapper_i_n_26 ,\pipe_lane[0].gt_wrapper_i_n_27 ,\pipe_lane[0].gt_wrapper_i_n_28 ,\pipe_lane[0].gt_wrapper_i_n_29 ,\pipe_lane[0].gt_wrapper_i_n_30 ,\pipe_lane[0].gt_wrapper_i_n_31 ,\pipe_lane[0].gt_wrapper_i_n_32 ,\pipe_lane[0].gt_wrapper_i_n_33 ,\pipe_lane[0].gt_wrapper_i_n_34 ,\pipe_lane[0].gt_wrapper_i_n_35 ,\pipe_lane[0].gt_wrapper_i_n_36 ,\pipe_lane[0].gt_wrapper_i_n_37 ,\pipe_lane[0].gt_wrapper_i_n_38 ,\pipe_lane[0].gt_wrapper_i_n_39 ,\pipe_lane[0].gt_wrapper_i_n_40 }),
        .\gth_channel.gthe2_channel_i_5 (\pipe_lane[0].pipe_drp_i_n_0 ),
        .\gth_channel.gthe2_channel_i_6 (\pipe_lane[0].pipe_drp_i_n_1 ),
        .\gth_channel.gthe2_channel_i_7 (GT_RX_CONVERGE0_n_0),
        .\gth_channel.gthe2_channel_i_8 (\pipe_lane[0].pipe_user_i_n_7 ),
        .pci_exp_rxn(pci_exp_rxn[0]),
        .pci_exp_rxp(pci_exp_rxp[0]),
        .pci_exp_txn(pci_exp_txn[0]),
        .pci_exp_txp(pci_exp_txp[0]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rxoutclk_out(pipe_rxoutclk_out[0]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_swing(pipe_tx_swing),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .rate_cpllreset_0(rate_cpllreset_0),
        .rate_txpmareset_0(rate_txpmareset_0),
        .rst_userrdy(rst_userrdy),
        .rxsyncallin(rxsyncallin),
        .sync_txdlyen_0(sync_txdlyen_0),
        .sys_clk(sys_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_drp \pipe_lane[0].pipe_drp_i 
       (.DRPADDR({\pipe_lane[0].pipe_drp_i_n_2 ,\pipe_lane[0].pipe_drp_i_n_3 ,\pipe_lane[0].pipe_drp_i_n_4 ,\pipe_lane[0].pipe_drp_i_n_5 ,\pipe_lane[0].pipe_drp_i_n_6 ,\pipe_lane[0].pipe_drp_i_n_7 ,\pipe_lane[0].pipe_drp_i_n_8 ,\pipe_lane[0].pipe_drp_i_n_9 }),
        .DRPDI({\pipe_lane[0].pipe_drp_i_n_10 ,\pipe_lane[0].pipe_drp_i_n_11 ,\pipe_lane[0].pipe_drp_i_n_12 ,\pipe_lane[0].pipe_drp_i_n_13 ,\pipe_lane[0].pipe_drp_i_n_14 ,\pipe_lane[0].pipe_drp_i_n_15 ,\pipe_lane[0].pipe_drp_i_n_16 ,\pipe_lane[0].pipe_drp_i_n_17 ,\pipe_lane[0].pipe_drp_i_n_18 ,\pipe_lane[0].pipe_drp_i_n_19 ,\pipe_lane[0].pipe_drp_i_n_20 ,\pipe_lane[0].pipe_drp_i_n_21 ,\pipe_lane[0].pipe_drp_i_n_22 ,\pipe_lane[0].pipe_drp_i_n_23 ,\pipe_lane[0].pipe_drp_i_n_24 ,\pipe_lane[0].pipe_drp_i_n_25 }),
        .DRP_DO({\pipe_lane[0].gt_wrapper_i_n_25 ,\pipe_lane[0].gt_wrapper_i_n_26 ,\pipe_lane[0].gt_wrapper_i_n_27 ,\pipe_lane[0].gt_wrapper_i_n_28 ,\pipe_lane[0].gt_wrapper_i_n_29 ,\pipe_lane[0].gt_wrapper_i_n_30 ,\pipe_lane[0].gt_wrapper_i_n_31 ,\pipe_lane[0].gt_wrapper_i_n_32 ,\pipe_lane[0].gt_wrapper_i_n_33 ,\pipe_lane[0].gt_wrapper_i_n_34 ,\pipe_lane[0].gt_wrapper_i_n_35 ,\pipe_lane[0].gt_wrapper_i_n_36 ,\pipe_lane[0].gt_wrapper_i_n_37 ,\pipe_lane[0].gt_wrapper_i_n_38 ,\pipe_lane[0].gt_wrapper_i_n_39 ,\pipe_lane[0].gt_wrapper_i_n_40 }),
        .DRP_DONE(drp_done_0),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_RDY(\pipe_lane[0].gt_wrapper_i_n_2 ),
        .DRP_START(DRP_START08_out),
        .DRP_X16(DRP_X1609_out),
        .DRP_X16X20_MODE(DRP_X16X20_MODE010_out),
        .PIPETXRATE(PIPETXRATE),
        .RST_DCLK_RESET(rst_dclk_reset),
        .\fsm_reg[2]_0 (\pipe_lane[0].pipe_drp_i_n_1 ),
        .\fsm_reg[4]_0 (\pipe_lane[0].pipe_drp_i_n_0 ),
        .pipe_dclk_in(pipe_dclk_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_eq \pipe_lane[0].pipe_eq.pipe_eq_i 
       (.EQ_TXEQ_DEEMPH_OUT(Q),
        .PIPERX0EQLPNEWTXCOEFFORPRESET(PIPERX0EQLPNEWTXCOEFFORPRESET),
        .PIPE_RXEQ_CONTROL(PIPE_RXEQ_CONTROL[1:0]),
        .PIPE_RXEQ_DONE(PIPE_RXEQ_DONE[0]),
        .PIPE_RXEQ_LFFS(PIPE_RXEQ_LFFS[5:0]),
        .PIPE_RXEQ_PRESET(PIPE_RXEQ_PRESET[2:0]),
        .PIPE_RXEQ_TXPRESET(PIPE_RXEQ_TXPRESET[3:0]),
        .PIPE_TXEQ_CONTROL(PIPE_TXEQ_CONTROL[1:0]),
        .PIPE_TXEQ_DEEMPH(PIPE_TXEQ_DEEMPH[5:0]),
        .PIPE_TXEQ_DONE(PIPE_TXEQ_DONE[0]),
        .PIPE_TXEQ_PRESET(PIPE_TXEQ_PRESET[3:0]),
        .RST_CPLLRESET(rst_cpllreset),
        .TXMAINCURSOR(eq_txeq_maincursor_0),
        .TXPOSTCURSOR(eq_txeq_postcursor_0),
        .TXPRECURSOR(eq_txeq_precursor_0),
        .gen3_reg1_reg_0(\pipe_lane[0].pipe_rate_i_n_2 ),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_eq_adapt_done(pipe_rx0_eq_adapt_done),
        .pipe_rx0_eq_lffs_sel(pipe_rx0_eq_lffs_sel));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_common \pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i 
       (.QPLL_DRP_DONE(qdrp_done),
        .QPLL_DRP_GEN3(\pipe_lane[1].pipe_rate_i_n_1 ),
        .QPLL_DRP_START(qrst_drp_start),
        .QPLL_QPLLLOCK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_0 ),
        .QPLL_QPLLOUTCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_1 ),
        .QPLL_QPLLOUTREFCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_2 ),
        .QPLL_QPLLPD(qrst_qpllpd),
        .QPLL_QPLLRESET(qrst_qpllreset),
        .RST_DCLK_RESET(rst_dclk_reset),
        .pipe_dclk_in(pipe_dclk_in),
        .sys_clk(sys_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_rate \pipe_lane[0].pipe_rate_i 
       (.D(drp_done_0),
        .PIPETXRATE(PIPETXRATE),
        .Q({pipe_reset_i_n_13,rst_txsync_start}),
        .RATE_CPLLLOCK(\pipe_lane[0].gt_wrapper_i_n_1 ),
        .RATE_DRP_START(rate_drp_start_0),
        .RATE_DRP_X16(rate_drp_x16_0),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_0),
        .RATE_QPLLLOCK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_0 ),
        .RATE_RXPMARESETDONE(\pipe_lane[0].gt_wrapper_i_n_11 ),
        .RATE_RXRATEDONE(gt_rxratedone_0),
        .RATE_RXRESETDONE(gt_rxresetdone_0),
        .RATE_TXRATEDONE(gt_txratedone_0),
        .RATE_TXRESETDONE(gt_txresetdone_0),
        .RATE_TXSYNC_DONE(\pipe_lane[0].pipe_sync_i_n_3 ),
        .RST_CPLLRESET(rst_cpllreset),
        .RX8B10BEN0(RX8B10BEN0),
        .RXRATE(rate_rate_0),
        .RXSYSCLKSEL(rate_sysclksel_0),
        .SYNC_RXSYNC_START(rate_rxsync_start_0),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START07_out),
        .USER_RATE_DONE(rate_done_0),
        .USER_RATE_RXSYNC(rate_rxsync_0),
        .USER_RESETOVRD_START(rate_resetovrd_start_0),
        .\fsm[0]_i_9_0 (p_0_in1_in),
        .\fsm_reg[1]_0 (rate_idle_0),
        .gen3_reg_0(\pipe_lane[0].pipe_rate_i_n_2 ),
        .out(p_1_in2_in),
        .phystatus_reg1_reg_0(gt_phystatus_0),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[0]),
        .qpllpd_reg_0(rate_qpllpd[0]),
        .qpllreset_reg_0(rate_qpllreset[0]),
        .rate_cpllpd_0(rate_cpllpd_0),
        .rate_cpllreset_0(rate_cpllreset_0),
        .rate_txpmareset_0(rate_txpmareset_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_sync \pipe_lane[0].pipe_sync_i 
       (.D(rate_idle_0),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 (\pipe_lane[0].pipe_user_i_n_8 ),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 (\pipe_lane[0].pipe_user_i_n_17 ),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 (p_1_in2_in),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 (p_0_in1_in),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[0]),
        .Q({sync_txphalign_0,sync_txphinit_0,sync_txdlysreset_0}),
        .RST_CPLLRESET(rst_cpllreset),
        .SYNC_GEN3(\pipe_lane[0].pipe_rate_i_n_2 ),
        .SYNC_RXDLYSRESETDONE(rxdlysresetdone_3),
        .SYNC_RXPHALIGNDONE_M(\pipe_lane[0].gt_wrapper_i_n_10 ),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_RXSYNCDONE(\pipe_lane[0].gt_wrapper_i_n_14 ),
        .SYNC_RXSYNC_START(rate_rxsync_start_0),
        .SYNC_TXDLYSRESETDONE(txdlysresetdone_3),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_4 ),
        .SYNC_TXSYNCDONE(gt_txsyncdone_0),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START07_out),
        .out(p_1_in),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .rxcdrlock_reg1_reg_0(\pipe_lane[0].pipe_user_i_n_11 ),
        .sync_txdlyen_0(sync_txdlyen_0),
        .txphaligndone_reg3_reg_0(\pipe_lane[0].pipe_sync_i_n_1 ),
        .\txsync_fsm.txsync_done_reg_0 (\pipe_lane[0].pipe_sync_i_n_3 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_user \pipe_lane[0].pipe_user_i 
       (.D(rate_idle_0),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5] (\pipe_lane[0].pipe_sync_i_n_1 ),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 (p_1_in),
        .PCIE_3_0_i(gt_phystatus_0),
        .PIPE_GEN3_RDY(PIPE_GEN3_RDY[0]),
        .PIPE_RXSTATUS(PIPE_RXSTATUS[2]),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE[0]),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE[0]),
        .Q(pipe_reset_i_n_13),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_RXUSRCLK_RESET(rst_rxusrclk_reset),
        .SYNC_RXPHALIGNDONE_M(\pipe_lane[0].gt_wrapper_i_n_10 ),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_4 ),
        .USER_OOBCLK(user_oobclk_0),
        .USER_RATE_DONE(rate_done_0),
        .USER_RATE_RXSYNC(rate_rxsync_0),
        .USER_RESETOVRD_START(rate_resetovrd_start_0),
        .USER_RXRESETDONE(gt_rxresetdone_0),
        .USER_TXRESETDONE(gt_txresetdone_0),
        .\converge_cnt_reg[13]_0 (\pipe_lane[0].pipe_user_i_n_15 ),
        .\converge_cnt_reg[1]_0 (\pipe_lane[0].pipe_user_i_n_14 ),
        .converge_gen3_reg_0(\pipe_lane[0].pipe_user_i_n_18 ),
        .gt_rxcdrlock_0(gt_rxcdrlock_0),
        .gt_rxvalid_0(gt_rxvalid_0),
        .\gth_channel.gthe2_channel_i (\pipe_lane[0].pipe_user_i_n_6 ),
        .\gth_channel.gthe2_channel_i_0 (\pipe_lane[0].pipe_user_i_n_7 ),
        .\gth_channel.gthe2_channel_i_1 (\pipe_lane[1].gt_wrapper_i_n_10 ),
        .\gth_channel.gthe2_channel_i_2 (\pipe_lane[2].pipe_user_i_n_5 ),
        .out(\pipe_lane[0].pipe_user_i_n_0 ),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[0]),
        .pipe_rx0_eq_adapt_done(pipe_rx0_eq_adapt_done),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .rate_gen3_reg1_reg_0(\pipe_lane[0].pipe_rate_i_n_2 ),
        .\rxcdrlock_cnt_reg[3]_0 (\pipe_lane[0].pipe_user_i_n_11 ),
        .rxresetdone_reg2_reg_0(user_resetdone[0]),
        .rxsyncallin(rxsyncallin),
        .txcompliance_reg2_reg_0(p_0_in1_in),
        .txcompliance_reg2_reg_1(\pipe_lane[0].pipe_user_i_n_17 ),
        .txelecidle_reg2_reg_0(p_1_in2_in),
        .txelecidle_reg2_reg_1(\pipe_lane[0].pipe_user_i_n_8 ),
        .txphaligndone_reg1_reg(\pipe_lane[1].gt_wrapper_i_n_17 ),
        .txphaligndone_reg1_reg_0(\pipe_lane[1].pipe_user_i_n_10 ),
        .txphaligndone_reg1_reg_1(\pipe_lane[0].gt_wrapper_i_n_19 ),
        .txphaligndone_reg1_reg_2(\pipe_lane[2].pipe_user_i_n_1 ),
        .txphinitdone_reg1_reg(\pipe_lane[1].gt_wrapper_i_n_18 ),
        .txphinitdone_reg1_reg_0(\pipe_lane[0].gt_wrapper_i_n_20 ),
        .txphinitdone_reg1_reg_1(\pipe_lane[2].pipe_user_i_n_4 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_wrapper_0 \pipe_lane[1].gt_wrapper_i 
       (.CPLLPD0_3(CPLLPD0_3),
        .D(gt_phystatus_1),
        .DRPADDR({\pipe_lane[1].pipe_drp_i_n_18 ,\pipe_lane[1].pipe_drp_i_n_19 ,\pipe_lane[1].pipe_drp_i_n_20 ,\pipe_lane[1].pipe_drp_i_n_21 ,\pipe_lane[1].pipe_drp_i_n_22 ,\pipe_lane[1].pipe_drp_i_n_23 ,\pipe_lane[1].pipe_drp_i_n_24 ,\pipe_lane[1].pipe_drp_i_n_25 }),
        .DRPDI({\pipe_lane[1].pipe_drp_i_n_2 ,\pipe_lane[1].pipe_drp_i_n_3 ,\pipe_lane[1].pipe_drp_i_n_4 ,\pipe_lane[1].pipe_drp_i_n_5 ,\pipe_lane[1].pipe_drp_i_n_6 ,\pipe_lane[1].pipe_drp_i_n_7 ,\pipe_lane[1].pipe_drp_i_n_8 ,\pipe_lane[1].pipe_drp_i_n_9 ,\pipe_lane[1].pipe_drp_i_n_10 ,\pipe_lane[1].pipe_drp_i_n_11 ,\pipe_lane[1].pipe_drp_i_n_12 ,\pipe_lane[1].pipe_drp_i_n_13 ,\pipe_lane[1].pipe_drp_i_n_14 ,\pipe_lane[1].pipe_drp_i_n_15 ,\pipe_lane[1].pipe_drp_i_n_16 ,\pipe_lane[1].pipe_drp_i_n_17 }),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_RDY(\pipe_lane[1].gt_wrapper_i_n_2 ),
        .PIPETXMARGIN(PIPETXMARGIN),
        .PIPE_POWERDOWN(PIPE_POWERDOWN[3:2]),
        .PIPE_RXDATA(PIPE_RXDATA[31:16]),
        .PIPE_RXDATAK(PIPE_RXDATAK[3:2]),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[1]),
        .PIPE_RXPOLARITY(PIPE_RXPOLARITY[1]),
        .PIPE_RXSLIDE(PIPE_RXSLIDE[1]),
        .PIPE_RXSTATUS(PIPE_RXSTATUS[5:3]),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE[1]),
        .PIPE_TXDATA(PIPE_TXDATA[31:16]),
        .PIPE_TXDATAK(PIPE_TXDATAK[3:2]),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE[1]),
        .Q({sync_txphalign_1,sync_txphinit_1,sync_txdlysreset_1}),
        .QPLL_QPLLOUTCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_1 ),
        .QPLL_QPLLOUTREFCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_2 ),
        .RATE_CPLLLOCK(\pipe_lane[1].gt_wrapper_i_n_1 ),
        .RATE_RXPMARESETDONE(\pipe_lane[1].gt_wrapper_i_n_11 ),
        .RATE_RXRATEDONE(gt_rxratedone_1),
        .RATE_RXRESETDONE(gt_rxresetdone_1),
        .RATE_TXRATEDONE(gt_txratedone_1),
        .RATE_TXRESETDONE(gt_txresetdone_1),
        .RST_CPLLRESET(rst_cpllreset),
        .RX8B10BEN0(RX8B10BEN0_0),
        .RXRATE(rate_rate_3),
        .RXSYSCLKSEL(rate_sysclksel_2),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_RXSYNCDONE(\pipe_lane[1].gt_wrapper_i_n_14 ),
        .SYNC_TXSYNCDONE(gt_txsyncdone_1),
        .TXMAINCURSOR(eq_txeq_maincursor_7),
        .TXPOSTCURSOR(eq_txeq_postcursor_5),
        .TXPRECURSOR(eq_txeq_precursor_5),
        .USER_OOBCLK(user_oobclk_1),
        .cpllpd_0(cpllpd_0),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .gt_rxcdrlock_1(gt_rxcdrlock_1),
        .gt_rxsyncout_0(gt_rxsyncout_0),
        .gt_rxvalid_1(gt_rxvalid_1),
        .gt_txsyncout_0(gt_txsyncout_0),
        .\gth_channel.gthe2_channel_i_0 (\pipe_lane[1].gt_wrapper_i_n_7 ),
        .\gth_channel.gthe2_channel_i_1 (\pipe_lane[1].gt_wrapper_i_n_10 ),
        .\gth_channel.gthe2_channel_i_2 (\pipe_lane[1].gt_wrapper_i_n_16 ),
        .\gth_channel.gthe2_channel_i_3 (\pipe_lane[1].gt_wrapper_i_n_17 ),
        .\gth_channel.gthe2_channel_i_4 (\pipe_lane[1].gt_wrapper_i_n_18 ),
        .\gth_channel.gthe2_channel_i_5 ({\pipe_lane[1].gt_wrapper_i_n_22 ,\pipe_lane[1].gt_wrapper_i_n_23 ,\pipe_lane[1].gt_wrapper_i_n_24 ,\pipe_lane[1].gt_wrapper_i_n_25 ,\pipe_lane[1].gt_wrapper_i_n_26 ,\pipe_lane[1].gt_wrapper_i_n_27 ,\pipe_lane[1].gt_wrapper_i_n_28 ,\pipe_lane[1].gt_wrapper_i_n_29 ,\pipe_lane[1].gt_wrapper_i_n_30 ,\pipe_lane[1].gt_wrapper_i_n_31 ,\pipe_lane[1].gt_wrapper_i_n_32 ,\pipe_lane[1].gt_wrapper_i_n_33 ,\pipe_lane[1].gt_wrapper_i_n_34 ,\pipe_lane[1].gt_wrapper_i_n_35 ,\pipe_lane[1].gt_wrapper_i_n_36 ,\pipe_lane[1].gt_wrapper_i_n_37 }),
        .\gth_channel.gthe2_channel_i_6 (\pipe_lane[1].pipe_drp_i_n_0 ),
        .\gth_channel.gthe2_channel_i_7 (\pipe_lane[1].pipe_drp_i_n_1 ),
        .\gth_channel.gthe2_channel_i_8 (GT_RX_CONVERGE0_n_0),
        .\gth_channel.gthe2_channel_i_9 (\pipe_lane[0].pipe_user_i_n_7 ),
        .pci_exp_rxn(pci_exp_rxn[1]),
        .pci_exp_rxp(pci_exp_rxp[1]),
        .pci_exp_txn(pci_exp_txn[1]),
        .pci_exp_txp(pci_exp_txp[1]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rxoutclk_out(pipe_rxoutclk_out[1]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_swing(pipe_tx_swing),
        .rate_cpllreset_1(rate_cpllreset_1),
        .rate_txpmareset_1(rate_txpmareset_1),
        .rst_userrdy(rst_userrdy),
        .rxphaligndone_s_reg1_reg(\pipe_lane[3].gt_wrapper_i_n_10 ),
        .rxphaligndone_s_reg1_reg_0(\pipe_lane[2].gt_wrapper_i_n_10 ),
        .rxsyncallin(rxsyncallin),
        .sys_clk(sys_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_drp_1 \pipe_lane[1].pipe_drp_i 
       (.DRPADDR({\pipe_lane[1].pipe_drp_i_n_18 ,\pipe_lane[1].pipe_drp_i_n_19 ,\pipe_lane[1].pipe_drp_i_n_20 ,\pipe_lane[1].pipe_drp_i_n_21 ,\pipe_lane[1].pipe_drp_i_n_22 ,\pipe_lane[1].pipe_drp_i_n_23 ,\pipe_lane[1].pipe_drp_i_n_24 ,\pipe_lane[1].pipe_drp_i_n_25 }),
        .DRPDI({\pipe_lane[1].pipe_drp_i_n_2 ,\pipe_lane[1].pipe_drp_i_n_3 ,\pipe_lane[1].pipe_drp_i_n_4 ,\pipe_lane[1].pipe_drp_i_n_5 ,\pipe_lane[1].pipe_drp_i_n_6 ,\pipe_lane[1].pipe_drp_i_n_7 ,\pipe_lane[1].pipe_drp_i_n_8 ,\pipe_lane[1].pipe_drp_i_n_9 ,\pipe_lane[1].pipe_drp_i_n_10 ,\pipe_lane[1].pipe_drp_i_n_11 ,\pipe_lane[1].pipe_drp_i_n_12 ,\pipe_lane[1].pipe_drp_i_n_13 ,\pipe_lane[1].pipe_drp_i_n_14 ,\pipe_lane[1].pipe_drp_i_n_15 ,\pipe_lane[1].pipe_drp_i_n_16 ,\pipe_lane[1].pipe_drp_i_n_17 }),
        .DRP_DO({\pipe_lane[1].gt_wrapper_i_n_22 ,\pipe_lane[1].gt_wrapper_i_n_23 ,\pipe_lane[1].gt_wrapper_i_n_24 ,\pipe_lane[1].gt_wrapper_i_n_25 ,\pipe_lane[1].gt_wrapper_i_n_26 ,\pipe_lane[1].gt_wrapper_i_n_27 ,\pipe_lane[1].gt_wrapper_i_n_28 ,\pipe_lane[1].gt_wrapper_i_n_29 ,\pipe_lane[1].gt_wrapper_i_n_30 ,\pipe_lane[1].gt_wrapper_i_n_31 ,\pipe_lane[1].gt_wrapper_i_n_32 ,\pipe_lane[1].gt_wrapper_i_n_33 ,\pipe_lane[1].gt_wrapper_i_n_34 ,\pipe_lane[1].gt_wrapper_i_n_35 ,\pipe_lane[1].gt_wrapper_i_n_36 ,\pipe_lane[1].gt_wrapper_i_n_37 }),
        .DRP_DONE(drp_done_1),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_RDY(\pipe_lane[1].gt_wrapper_i_n_2 ),
        .DRP_START(DRP_START04_out),
        .DRP_X16(DRP_X1605_out),
        .DRP_X16X20_MODE(DRP_X16X20_MODE0),
        .PIPETXRATE(PIPETXRATE),
        .RST_DCLK_RESET(rst_dclk_reset),
        .\fsm_reg[2]_0 (\pipe_lane[1].pipe_drp_i_n_1 ),
        .\fsm_reg[4]_0 (\pipe_lane[1].pipe_drp_i_n_0 ),
        .pipe_dclk_in(pipe_dclk_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_eq_2 \pipe_lane[1].pipe_eq.pipe_eq_i 
       (.EQ_TXEQ_DEEMPH_OUT(\txeq_txcoeff_reg[18] ),
        .PIPERX1EQLPNEWTXCOEFFORPRESET(PIPERX1EQLPNEWTXCOEFFORPRESET),
        .PIPE_RXEQ_CONTROL(PIPE_RXEQ_CONTROL[3:2]),
        .PIPE_RXEQ_DONE(PIPE_RXEQ_DONE[1]),
        .PIPE_RXEQ_LFFS(PIPE_RXEQ_LFFS[11:6]),
        .PIPE_RXEQ_PRESET(PIPE_RXEQ_PRESET[5:3]),
        .PIPE_RXEQ_TXPRESET(PIPE_RXEQ_TXPRESET[7:4]),
        .PIPE_TXEQ_CONTROL(PIPE_TXEQ_CONTROL[3:2]),
        .PIPE_TXEQ_DEEMPH(PIPE_TXEQ_DEEMPH[11:6]),
        .PIPE_TXEQ_DONE(PIPE_TXEQ_DONE[1]),
        .PIPE_TXEQ_PRESET(PIPE_TXEQ_PRESET[7:4]),
        .RST_CPLLRESET(rst_cpllreset),
        .TXMAINCURSOR(eq_txeq_maincursor_7),
        .TXPOSTCURSOR(eq_txeq_postcursor_5),
        .TXPRECURSOR(eq_txeq_precursor_5),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx1_eq_lffs_sel(pipe_rx1_eq_lffs_sel),
        .rate_gen3_1(rate_gen3_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_rate_3 \pipe_lane[1].pipe_rate_i 
       (.D(drp_done_1),
        .PIPETXRATE(PIPETXRATE),
        .Q({pipe_reset_i_n_13,rst_txsync_start}),
        .QPLL_DRP_GEN3(\pipe_lane[1].pipe_rate_i_n_1 ),
        .RATE_CPLLLOCK(\pipe_lane[1].gt_wrapper_i_n_1 ),
        .RATE_DRP_START(rate_drp_start_1),
        .RATE_DRP_X16(rate_drp_x16_1),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_1),
        .RATE_QPLLLOCK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_0 ),
        .RATE_RXPMARESETDONE(\pipe_lane[1].gt_wrapper_i_n_11 ),
        .RATE_RXRATEDONE(gt_rxratedone_1),
        .RATE_RXRESETDONE(gt_rxresetdone_1),
        .RATE_TXRATEDONE(gt_txratedone_1),
        .RATE_TXRESETDONE(gt_txresetdone_1),
        .RATE_TXSYNC_DONE(\pipe_lane[1].pipe_sync_i_n_3 ),
        .RST_CPLLRESET(rst_cpllreset),
        .RX8B10BEN0(RX8B10BEN0_0),
        .RXRATE(rate_rate_3),
        .RXSYSCLKSEL(rate_sysclksel_2),
        .SYNC_RXSYNC_START(rate_rxsync_start_1),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START03_out),
        .USER_RATE_DONE(rate_done_1),
        .USER_RATE_RXSYNC(rate_rxsync_1),
        .USER_RESETOVRD_START(rate_resetovrd_start_1),
        .\fsm[0]_i_9__0_0 (p_0_in1_in_1),
        .\fsm_reg[1]_0 (rate_idle_1),
        .gen3_reg1_reg(\pipe_lane[0].pipe_rate_i_n_2 ),
        .out(p_1_in2_in_2),
        .phystatus_reg1_reg_0(gt_phystatus_1),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[1]),
        .qpllpd_reg_0(rate_qpllpd[1]),
        .qpllreset_reg_0(rate_qpllreset[1]),
        .rate_cpllpd_1(rate_cpllpd_1),
        .rate_cpllreset_1(rate_cpllreset_1),
        .rate_gen3_1(rate_gen3_1),
        .rate_gen3_2(rate_gen3_2),
        .rate_gen3_3(rate_gen3_3),
        .rate_txpmareset_1(rate_txpmareset_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_sync_4 \pipe_lane[1].pipe_sync_i 
       (.D(rate_idle_1),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 (\pipe_lane[1].pipe_user_i_n_10 ),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 (p_0_in1_in_1),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[1]),
        .Q({sync_txphalign_1,sync_txphinit_1,sync_txdlysreset_1}),
        .RST_CPLLRESET(rst_cpllreset),
        .SYNC_GEN3(rate_gen3_1),
        .SYNC_RXDLYSRESETDONE(rxdlysresetdone_3),
        .SYNC_RXPHALIGNDONE_M(\pipe_lane[0].gt_wrapper_i_n_10 ),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_RXSYNCDONE(\pipe_lane[1].gt_wrapper_i_n_14 ),
        .SYNC_RXSYNC_START(rate_rxsync_start_1),
        .SYNC_TXDLYSRESETDONE(txdlysresetdone_3),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_4 ),
        .SYNC_TXSYNCDONE(gt_txsyncdone_1),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START03_out),
        .out(p_1_in2_in_2),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .rxcdrlock_reg1_reg_0(\pipe_lane[1].pipe_user_i_n_5 ),
        .\txsync_fsm.txsync_done_reg_0 (\pipe_lane[1].pipe_sync_i_n_3 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_user_5 \pipe_lane[1].pipe_user_i 
       (.D(rate_idle_1),
        .PCIE_3_0_i(gt_phystatus_1),
        .PIPE_GEN3_RDY(PIPE_GEN3_RDY[1]),
        .PIPE_RXSTATUS(PIPE_RXSTATUS[5]),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE[1]),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE[1]),
        .Q(pipe_reset_i_n_13),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_RXUSRCLK_RESET(rst_rxusrclk_reset),
        .USER_OOBCLK(user_oobclk_1),
        .USER_RATE_DONE(rate_done_1),
        .USER_RATE_GEN3(rate_gen3_1),
        .USER_RATE_RXSYNC(rate_rxsync_1),
        .USER_RESETOVRD_START(rate_resetovrd_start_1),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .USER_RXRESETDONE(gt_rxresetdone_1),
        .USER_TXRESETDONE(gt_txresetdone_1),
        .converge_gen3_reg_0(\pipe_lane[1].pipe_user_i_n_8 ),
        .gt_rxcdrlock_1(gt_rxcdrlock_1),
        .gt_rxvalid_1(gt_rxvalid_1),
        .out(\pipe_lane[0].pipe_user_i_n_0 ),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[1]),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_valid(pipe_rx1_valid),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .\reg_phy_rdy_reg[1] (\pipe_lane[3].pipe_user_i_n_0 ),
        .\reg_phy_rdy_reg[1]_0 (\pipe_lane[2].pipe_user_i_n_0 ),
        .rst_idle_reg2_reg_0(rst_idle_reg2_reg),
        .\rxcdrlock_cnt_reg[3]_0 (\pipe_lane[1].pipe_user_i_n_5 ),
        .rxresetdone_reg2_reg_0(user_resetdone[1]),
        .txcompliance_reg2_reg_0(p_0_in1_in_1),
        .txcompliance_reg2_reg_1(\pipe_lane[1].pipe_user_i_n_10 ),
        .txelecidle_reg2_reg_0(p_1_in2_in_2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_wrapper_6 \pipe_lane[2].gt_wrapper_i 
       (.CPLLPD0_4(CPLLPD0_4),
        .D(gt_phystatus_2),
        .DRPADDR({\pipe_lane[2].pipe_drp_i_n_18 ,\pipe_lane[2].pipe_drp_i_n_19 ,\pipe_lane[2].pipe_drp_i_n_20 ,\pipe_lane[2].pipe_drp_i_n_21 ,\pipe_lane[2].pipe_drp_i_n_22 ,\pipe_lane[2].pipe_drp_i_n_23 ,\pipe_lane[2].pipe_drp_i_n_24 ,\pipe_lane[2].pipe_drp_i_n_25 }),
        .DRPDI({\pipe_lane[2].pipe_drp_i_n_2 ,\pipe_lane[2].pipe_drp_i_n_3 ,\pipe_lane[2].pipe_drp_i_n_4 ,\pipe_lane[2].pipe_drp_i_n_5 ,\pipe_lane[2].pipe_drp_i_n_6 ,\pipe_lane[2].pipe_drp_i_n_7 ,\pipe_lane[2].pipe_drp_i_n_8 ,\pipe_lane[2].pipe_drp_i_n_9 ,\pipe_lane[2].pipe_drp_i_n_10 ,\pipe_lane[2].pipe_drp_i_n_11 ,\pipe_lane[2].pipe_drp_i_n_12 ,\pipe_lane[2].pipe_drp_i_n_13 ,\pipe_lane[2].pipe_drp_i_n_14 ,\pipe_lane[2].pipe_drp_i_n_15 ,\pipe_lane[2].pipe_drp_i_n_16 ,\pipe_lane[2].pipe_drp_i_n_17 }),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_RDY(\pipe_lane[2].gt_wrapper_i_n_2 ),
        .PIPETXMARGIN(PIPETXMARGIN),
        .PIPE_POWERDOWN(PIPE_POWERDOWN[5:4]),
        .PIPE_RXDATA(PIPE_RXDATA[47:32]),
        .PIPE_RXDATAK(PIPE_RXDATAK[5:4]),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[2]),
        .PIPE_RXPOLARITY(PIPE_RXPOLARITY[2]),
        .PIPE_RXSLIDE(PIPE_RXSLIDE[2]),
        .PIPE_RXSTATUS(PIPE_RXSTATUS[8:6]),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE[2]),
        .PIPE_TXDATA(PIPE_TXDATA[47:32]),
        .PIPE_TXDATAK(PIPE_TXDATAK[5:4]),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE[2]),
        .Q({sync_txphalign_2,sync_txphinit_2,sync_txdlysreset_2}),
        .QPLL_QPLLOUTCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_1 ),
        .QPLL_QPLLOUTREFCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_2 ),
        .RATE_CPLLLOCK(\pipe_lane[2].gt_wrapper_i_n_1 ),
        .RATE_RXPMARESETDONE(\pipe_lane[2].gt_wrapper_i_n_11 ),
        .RATE_RXRATEDONE(gt_rxratedone_2),
        .RATE_RXRESETDONE(gt_rxresetdone_2),
        .RATE_TXRATEDONE(gt_txratedone_2),
        .RATE_TXRESETDONE(gt_txresetdone_2),
        .RST_CPLLRESET(rst_cpllreset),
        .RX8B10BEN0(RX8B10BEN0_3),
        .RXRATE(rate_rate_6),
        .RXSYSCLKSEL(rate_sysclksel_4),
        .SYNC_RXSYNCDONE(\pipe_lane[2].gt_wrapper_i_n_14 ),
        .SYNC_TXSYNCDONE(gt_txsyncdone_2),
        .TXMAINCURSOR(eq_txeq_maincursor_14),
        .TXPOSTCURSOR(eq_txeq_postcursor_10),
        .TXPRECURSOR(eq_txeq_precursor_10),
        .USER_OOBCLK(user_oobclk_2),
        .cpllpd_1(cpllpd_1),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .gt_rxcdrlock_2(gt_rxcdrlock_2),
        .gt_rxsyncout_0(gt_rxsyncout_0),
        .gt_rxvalid_2(gt_rxvalid_2),
        .gt_txsyncout_0(gt_txsyncout_0),
        .\gth_channel.gthe2_channel_i_0 (\pipe_lane[2].gt_wrapper_i_n_7 ),
        .\gth_channel.gthe2_channel_i_1 (\pipe_lane[2].gt_wrapper_i_n_10 ),
        .\gth_channel.gthe2_channel_i_2 (\pipe_lane[2].gt_wrapper_i_n_16 ),
        .\gth_channel.gthe2_channel_i_3 (\pipe_lane[2].gt_wrapper_i_n_17 ),
        .\gth_channel.gthe2_channel_i_4 (\pipe_lane[2].gt_wrapper_i_n_18 ),
        .\gth_channel.gthe2_channel_i_5 ({\pipe_lane[2].gt_wrapper_i_n_22 ,\pipe_lane[2].gt_wrapper_i_n_23 ,\pipe_lane[2].gt_wrapper_i_n_24 ,\pipe_lane[2].gt_wrapper_i_n_25 ,\pipe_lane[2].gt_wrapper_i_n_26 ,\pipe_lane[2].gt_wrapper_i_n_27 ,\pipe_lane[2].gt_wrapper_i_n_28 ,\pipe_lane[2].gt_wrapper_i_n_29 ,\pipe_lane[2].gt_wrapper_i_n_30 ,\pipe_lane[2].gt_wrapper_i_n_31 ,\pipe_lane[2].gt_wrapper_i_n_32 ,\pipe_lane[2].gt_wrapper_i_n_33 ,\pipe_lane[2].gt_wrapper_i_n_34 ,\pipe_lane[2].gt_wrapper_i_n_35 ,\pipe_lane[2].gt_wrapper_i_n_36 ,\pipe_lane[2].gt_wrapper_i_n_37 }),
        .\gth_channel.gthe2_channel_i_6 (\pipe_lane[2].pipe_drp_i_n_0 ),
        .\gth_channel.gthe2_channel_i_7 (\pipe_lane[2].pipe_drp_i_n_1 ),
        .\gth_channel.gthe2_channel_i_8 (GT_RX_CONVERGE0_n_0),
        .\gth_channel.gthe2_channel_i_9 (\pipe_lane[0].pipe_user_i_n_6 ),
        .pci_exp_rxn(pci_exp_rxn[2]),
        .pci_exp_rxp(pci_exp_rxp[2]),
        .pci_exp_txn(pci_exp_txn[2]),
        .pci_exp_txp(pci_exp_txp[2]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rxoutclk_out(pipe_rxoutclk_out[2]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_swing(pipe_tx_swing),
        .rate_cpllreset_2(rate_cpllreset_2),
        .rate_txpmareset_2(rate_txpmareset_2),
        .rst_userrdy(rst_userrdy),
        .rxsyncallin(rxsyncallin),
        .sys_clk(sys_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_drp_7 \pipe_lane[2].pipe_drp_i 
       (.DRPADDR({\pipe_lane[2].pipe_drp_i_n_18 ,\pipe_lane[2].pipe_drp_i_n_19 ,\pipe_lane[2].pipe_drp_i_n_20 ,\pipe_lane[2].pipe_drp_i_n_21 ,\pipe_lane[2].pipe_drp_i_n_22 ,\pipe_lane[2].pipe_drp_i_n_23 ,\pipe_lane[2].pipe_drp_i_n_24 ,\pipe_lane[2].pipe_drp_i_n_25 }),
        .DRPDI({\pipe_lane[2].pipe_drp_i_n_2 ,\pipe_lane[2].pipe_drp_i_n_3 ,\pipe_lane[2].pipe_drp_i_n_4 ,\pipe_lane[2].pipe_drp_i_n_5 ,\pipe_lane[2].pipe_drp_i_n_6 ,\pipe_lane[2].pipe_drp_i_n_7 ,\pipe_lane[2].pipe_drp_i_n_8 ,\pipe_lane[2].pipe_drp_i_n_9 ,\pipe_lane[2].pipe_drp_i_n_10 ,\pipe_lane[2].pipe_drp_i_n_11 ,\pipe_lane[2].pipe_drp_i_n_12 ,\pipe_lane[2].pipe_drp_i_n_13 ,\pipe_lane[2].pipe_drp_i_n_14 ,\pipe_lane[2].pipe_drp_i_n_15 ,\pipe_lane[2].pipe_drp_i_n_16 ,\pipe_lane[2].pipe_drp_i_n_17 }),
        .DRP_DO({\pipe_lane[2].gt_wrapper_i_n_22 ,\pipe_lane[2].gt_wrapper_i_n_23 ,\pipe_lane[2].gt_wrapper_i_n_24 ,\pipe_lane[2].gt_wrapper_i_n_25 ,\pipe_lane[2].gt_wrapper_i_n_26 ,\pipe_lane[2].gt_wrapper_i_n_27 ,\pipe_lane[2].gt_wrapper_i_n_28 ,\pipe_lane[2].gt_wrapper_i_n_29 ,\pipe_lane[2].gt_wrapper_i_n_30 ,\pipe_lane[2].gt_wrapper_i_n_31 ,\pipe_lane[2].gt_wrapper_i_n_32 ,\pipe_lane[2].gt_wrapper_i_n_33 ,\pipe_lane[2].gt_wrapper_i_n_34 ,\pipe_lane[2].gt_wrapper_i_n_35 ,\pipe_lane[2].gt_wrapper_i_n_36 ,\pipe_lane[2].gt_wrapper_i_n_37 }),
        .DRP_DONE(drp_done_2),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_RDY(\pipe_lane[2].gt_wrapper_i_n_2 ),
        .DRP_START(DRP_START0),
        .DRP_X16(DRP_X160),
        .DRP_X16X20_MODE(DRP_X16X20_MODE011_out),
        .PIPETXRATE(PIPETXRATE),
        .RST_DCLK_RESET(rst_dclk_reset),
        .\fsm_reg[2]_0 (\pipe_lane[2].pipe_drp_i_n_1 ),
        .\fsm_reg[4]_0 (\pipe_lane[2].pipe_drp_i_n_0 ),
        .pipe_dclk_in(pipe_dclk_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_eq_8 \pipe_lane[2].pipe_eq.pipe_eq_i 
       (.EQ_TXEQ_DEEMPH_OUT(\txeq_txcoeff_reg[18]_0 ),
        .PIPERX2EQLPNEWTXCOEFFORPRESET(PIPERX2EQLPNEWTXCOEFFORPRESET),
        .PIPE_RXEQ_CONTROL(PIPE_RXEQ_CONTROL[5:4]),
        .PIPE_RXEQ_DONE(PIPE_RXEQ_DONE[2]),
        .PIPE_RXEQ_LFFS(PIPE_RXEQ_LFFS[17:12]),
        .PIPE_RXEQ_PRESET(PIPE_RXEQ_PRESET[8:6]),
        .PIPE_RXEQ_TXPRESET(PIPE_RXEQ_TXPRESET[11:8]),
        .PIPE_TXEQ_CONTROL(PIPE_TXEQ_CONTROL[5:4]),
        .PIPE_TXEQ_DEEMPH(PIPE_TXEQ_DEEMPH[17:12]),
        .PIPE_TXEQ_DONE(PIPE_TXEQ_DONE[2]),
        .PIPE_TXEQ_PRESET(PIPE_TXEQ_PRESET[11:8]),
        .RST_CPLLRESET(rst_cpllreset),
        .TXMAINCURSOR(eq_txeq_maincursor_14),
        .TXPOSTCURSOR(eq_txeq_postcursor_10),
        .TXPRECURSOR(eq_txeq_precursor_10),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx2_eq_lffs_sel(pipe_rx2_eq_lffs_sel),
        .rate_gen3_2(rate_gen3_2),
        .rxeq_adapt_done_reg_0(rxeq_adapt_done_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_rate_9 \pipe_lane[2].pipe_rate_i 
       (.D(drp_done_2),
        .PIPETXRATE(PIPETXRATE),
        .Q({pipe_reset_i_n_13,rst_txsync_start}),
        .RATE_CPLLLOCK(\pipe_lane[2].gt_wrapper_i_n_1 ),
        .RATE_DRP_START(rate_drp_start_2),
        .RATE_DRP_X16(rate_drp_x16_2),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_2),
        .RATE_QPLLLOCK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_0 ),
        .RATE_RXPMARESETDONE(\pipe_lane[2].gt_wrapper_i_n_11 ),
        .RATE_RXRATEDONE(gt_rxratedone_2),
        .RATE_RXRESETDONE(gt_rxresetdone_2),
        .RATE_TXRATEDONE(gt_txratedone_2),
        .RATE_TXRESETDONE(gt_txresetdone_2),
        .RATE_TXSYNC_DONE(\pipe_lane[2].pipe_sync_i_n_3 ),
        .RST_CPLLRESET(rst_cpllreset),
        .RX8B10BEN0(RX8B10BEN0_3),
        .RXRATE(rate_rate_6),
        .RXSYSCLKSEL(rate_sysclksel_4),
        .SYNC_RXSYNC_START(rate_rxsync_start_2),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START00_out),
        .USER_RATE_DONE(rate_done_2),
        .USER_RATE_RXSYNC(rate_rxsync_2),
        .USER_RESETOVRD_START(rate_resetovrd_start_2),
        .\fsm[0]_i_9__1_0 (p_0_in1_in_5),
        .\fsm_reg[1]_0 (rate_idle_2),
        .out(p_1_in2_in_4),
        .phystatus_reg1_reg_0(gt_phystatus_2),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[2]),
        .qpllpd_reg_0(rate_qpllpd[2]),
        .qpllreset_reg_0(rate_qpllreset[2]),
        .rate_cpllpd_2(rate_cpllpd_2),
        .rate_cpllreset_2(rate_cpllreset_2),
        .rate_gen3_2(rate_gen3_2),
        .rate_txpmareset_2(rate_txpmareset_2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_sync_10 \pipe_lane[2].pipe_sync_i 
       (.D(rate_idle_2),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 (\pipe_lane[2].pipe_user_i_n_13 ),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 (p_0_in1_in_5),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[2]),
        .Q({sync_txphalign_2,sync_txphinit_2,sync_txdlysreset_2}),
        .RST_CPLLRESET(rst_cpllreset),
        .SYNC_GEN3(rate_gen3_2),
        .SYNC_RXDLYSRESETDONE(rxdlysresetdone_3),
        .SYNC_RXPHALIGNDONE_M(\pipe_lane[0].gt_wrapper_i_n_10 ),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_RXSYNCDONE(\pipe_lane[2].gt_wrapper_i_n_14 ),
        .SYNC_RXSYNC_START(rate_rxsync_start_2),
        .SYNC_TXDLYSRESETDONE(txdlysresetdone_3),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_4 ),
        .SYNC_TXSYNCDONE(gt_txsyncdone_2),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START00_out),
        .out(p_1_in2_in_4),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .rxcdrlock_reg1_reg_0(\pipe_lane[2].pipe_user_i_n_8 ),
        .\txsync_fsm.txsync_done_reg_0 (\pipe_lane[2].pipe_sync_i_n_3 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_user_11 \pipe_lane[2].pipe_user_i 
       (.D(rate_idle_2),
        .PCIE_3_0_i(gt_phystatus_2),
        .PIPE_GEN3_RDY(PIPE_GEN3_RDY[2]),
        .PIPE_RXSTATUS(PIPE_RXSTATUS[8]),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE[2]),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE[2]),
        .Q(pipe_reset_i_n_13),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_RXUSRCLK_RESET(rst_rxusrclk_reset),
        .USER_OOBCLK(user_oobclk_2),
        .USER_RATE_DONE(rate_done_2),
        .USER_RATE_RXSYNC(rate_rxsync_2),
        .USER_RESETOVRD_START(rate_resetovrd_start_2),
        .USER_RXRESETDONE(gt_rxresetdone_2),
        .USER_TXRESETDONE(gt_txresetdone_2),
        .converge_gen3_reg_0(\pipe_lane[2].pipe_user_i_n_11 ),
        .gt_rxcdrlock_2(gt_rxcdrlock_2),
        .gt_rxvalid_2(gt_rxvalid_2),
        .\gth_channel.gthe2_channel_i (\pipe_lane[2].gt_wrapper_i_n_10 ),
        .\gth_channel.gthe2_channel_i_0 (\pipe_lane[3].gt_wrapper_i_n_10 ),
        .out(\pipe_lane[2].pipe_user_i_n_0 ),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[2]),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_valid(pipe_rx2_valid),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .rate_gen3_2(rate_gen3_2),
        .\rxcdrlock_cnt_reg[3]_0 (\pipe_lane[2].pipe_user_i_n_8 ),
        .rxeq_adapt_done_reg1_reg_0(rxeq_adapt_done_reg),
        .rxresetdone_reg2_reg_0(user_resetdone[2]),
        .txcompliance_reg2_reg_0(\pipe_lane[2].pipe_user_i_n_1 ),
        .txcompliance_reg2_reg_1(p_0_in1_in_5),
        .txcompliance_reg2_reg_2(\pipe_lane[2].pipe_user_i_n_4 ),
        .txcompliance_reg2_reg_3(\pipe_lane[2].pipe_user_i_n_5 ),
        .txcompliance_reg2_reg_4(\pipe_lane[2].pipe_user_i_n_13 ),
        .txelecidle_reg2_reg_0(p_1_in2_in_4),
        .txphaligndone_reg1_reg(\pipe_lane[2].gt_wrapper_i_n_17 ),
        .txphaligndone_reg1_reg_0(p_0_in1_in_7),
        .txphaligndone_reg1_reg_1(p_1_in2_in_8),
        .txphaligndone_reg1_reg_2(\pipe_lane[3].gt_wrapper_i_n_17 ),
        .txphinitdone_reg1_reg(\pipe_lane[2].gt_wrapper_i_n_18 ),
        .txphinitdone_reg1_reg_0(\pipe_lane[3].gt_wrapper_i_n_18 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_gt_wrapper_12 \pipe_lane[3].gt_wrapper_i 
       (.CPLLPD0_5(CPLLPD0_5),
        .D(gt_phystatus_3),
        .DRPADDR({\pipe_lane[3].pipe_drp_i_n_18 ,\pipe_lane[3].pipe_drp_i_n_19 ,\pipe_lane[3].pipe_drp_i_n_20 ,\pipe_lane[3].pipe_drp_i_n_21 ,\pipe_lane[3].pipe_drp_i_n_22 ,\pipe_lane[3].pipe_drp_i_n_23 ,\pipe_lane[3].pipe_drp_i_n_24 ,\pipe_lane[3].pipe_drp_i_n_25 }),
        .DRPDI({\pipe_lane[3].pipe_drp_i_n_2 ,\pipe_lane[3].pipe_drp_i_n_3 ,\pipe_lane[3].pipe_drp_i_n_4 ,\pipe_lane[3].pipe_drp_i_n_5 ,\pipe_lane[3].pipe_drp_i_n_6 ,\pipe_lane[3].pipe_drp_i_n_7 ,\pipe_lane[3].pipe_drp_i_n_8 ,\pipe_lane[3].pipe_drp_i_n_9 ,\pipe_lane[3].pipe_drp_i_n_10 ,\pipe_lane[3].pipe_drp_i_n_11 ,\pipe_lane[3].pipe_drp_i_n_12 ,\pipe_lane[3].pipe_drp_i_n_13 ,\pipe_lane[3].pipe_drp_i_n_14 ,\pipe_lane[3].pipe_drp_i_n_15 ,\pipe_lane[3].pipe_drp_i_n_16 ,\pipe_lane[3].pipe_drp_i_n_17 }),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_RDY(\pipe_lane[3].gt_wrapper_i_n_2 ),
        .PIPETXMARGIN(PIPETXMARGIN),
        .PIPE_POWERDOWN(PIPE_POWERDOWN[7:6]),
        .PIPE_RXDATA(PIPE_RXDATA[63:48]),
        .PIPE_RXDATAK(PIPE_RXDATAK[7:6]),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[3]),
        .PIPE_RXPOLARITY(PIPE_RXPOLARITY[3]),
        .PIPE_RXSLIDE(PIPE_RXSLIDE[3]),
        .PIPE_RXSTATUS(PIPE_RXSTATUS[11:9]),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE[3]),
        .PIPE_TXDATA(PIPE_TXDATA[63:48]),
        .PIPE_TXDATAK(PIPE_TXDATAK[7:6]),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE[3]),
        .Q({sync_txphalign_3,sync_txphinit_3,sync_txdlysreset_3}),
        .QPLL_QPLLOUTCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_1 ),
        .QPLL_QPLLOUTREFCLK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_2 ),
        .RATE_CPLLLOCK(\pipe_lane[3].gt_wrapper_i_n_1 ),
        .RATE_RXPMARESETDONE(\pipe_lane[3].gt_wrapper_i_n_11 ),
        .RATE_RXRATEDONE(gt_rxratedone_3),
        .RATE_RXRESETDONE(gt_rxresetdone_3),
        .RATE_TXRATEDONE(gt_txratedone_3),
        .RATE_TXRESETDONE(gt_txresetdone_3),
        .RST_CPLLRESET(rst_cpllreset),
        .RX8B10BEN0(RX8B10BEN0_6),
        .RXRATE(rate_rate_9),
        .RXSYSCLKSEL(rate_sysclksel_6),
        .SYNC_RXSYNCDONE(\pipe_lane[3].gt_wrapper_i_n_14 ),
        .SYNC_TXSYNCDONE(gt_txsyncdone_3),
        .TXMAINCURSOR(eq_txeq_maincursor_21),
        .TXPOSTCURSOR(eq_txeq_postcursor_15),
        .TXPRECURSOR(eq_txeq_precursor_15),
        .USER_OOBCLK(user_oobclk_3),
        .cpllpd_2(cpllpd_2),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .gt_rxcdrlock_3(gt_rxcdrlock_3),
        .gt_rxsyncout_0(gt_rxsyncout_0),
        .gt_rxvalid_3(gt_rxvalid_3),
        .gt_txsyncout_0(gt_txsyncout_0),
        .\gth_channel.gthe2_channel_i_0 (\pipe_lane[3].gt_wrapper_i_n_7 ),
        .\gth_channel.gthe2_channel_i_1 (\pipe_lane[3].gt_wrapper_i_n_10 ),
        .\gth_channel.gthe2_channel_i_2 (\pipe_lane[3].gt_wrapper_i_n_16 ),
        .\gth_channel.gthe2_channel_i_3 (\pipe_lane[3].gt_wrapper_i_n_17 ),
        .\gth_channel.gthe2_channel_i_4 (\pipe_lane[3].gt_wrapper_i_n_18 ),
        .\gth_channel.gthe2_channel_i_5 ({\pipe_lane[3].gt_wrapper_i_n_22 ,\pipe_lane[3].gt_wrapper_i_n_23 ,\pipe_lane[3].gt_wrapper_i_n_24 ,\pipe_lane[3].gt_wrapper_i_n_25 ,\pipe_lane[3].gt_wrapper_i_n_26 ,\pipe_lane[3].gt_wrapper_i_n_27 ,\pipe_lane[3].gt_wrapper_i_n_28 ,\pipe_lane[3].gt_wrapper_i_n_29 ,\pipe_lane[3].gt_wrapper_i_n_30 ,\pipe_lane[3].gt_wrapper_i_n_31 ,\pipe_lane[3].gt_wrapper_i_n_32 ,\pipe_lane[3].gt_wrapper_i_n_33 ,\pipe_lane[3].gt_wrapper_i_n_34 ,\pipe_lane[3].gt_wrapper_i_n_35 ,\pipe_lane[3].gt_wrapper_i_n_36 ,\pipe_lane[3].gt_wrapper_i_n_37 }),
        .\gth_channel.gthe2_channel_i_6 (\pipe_lane[3].pipe_drp_i_n_0 ),
        .\gth_channel.gthe2_channel_i_7 (\pipe_lane[3].pipe_drp_i_n_1 ),
        .\gth_channel.gthe2_channel_i_8 (GT_RX_CONVERGE0_n_0),
        .\gth_channel.gthe2_channel_i_9 (\pipe_lane[0].pipe_user_i_n_6 ),
        .pci_exp_rxn(pci_exp_rxn[3]),
        .pci_exp_rxp(pci_exp_rxp[3]),
        .pci_exp_txn(pci_exp_txn[3]),
        .pci_exp_txp(pci_exp_txp[3]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rxoutclk_out(pipe_rxoutclk_out[3]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_swing(pipe_tx_swing),
        .rate_cpllreset_3(rate_cpllreset_3),
        .rate_txpmareset_3(rate_txpmareset_3),
        .rst_userrdy(rst_userrdy),
        .rxsyncallin(rxsyncallin),
        .sys_clk(sys_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_drp_13 \pipe_lane[3].pipe_drp_i 
       (.DRPADDR({\pipe_lane[3].pipe_drp_i_n_18 ,\pipe_lane[3].pipe_drp_i_n_19 ,\pipe_lane[3].pipe_drp_i_n_20 ,\pipe_lane[3].pipe_drp_i_n_21 ,\pipe_lane[3].pipe_drp_i_n_22 ,\pipe_lane[3].pipe_drp_i_n_23 ,\pipe_lane[3].pipe_drp_i_n_24 ,\pipe_lane[3].pipe_drp_i_n_25 }),
        .DRPDI({\pipe_lane[3].pipe_drp_i_n_2 ,\pipe_lane[3].pipe_drp_i_n_3 ,\pipe_lane[3].pipe_drp_i_n_4 ,\pipe_lane[3].pipe_drp_i_n_5 ,\pipe_lane[3].pipe_drp_i_n_6 ,\pipe_lane[3].pipe_drp_i_n_7 ,\pipe_lane[3].pipe_drp_i_n_8 ,\pipe_lane[3].pipe_drp_i_n_9 ,\pipe_lane[3].pipe_drp_i_n_10 ,\pipe_lane[3].pipe_drp_i_n_11 ,\pipe_lane[3].pipe_drp_i_n_12 ,\pipe_lane[3].pipe_drp_i_n_13 ,\pipe_lane[3].pipe_drp_i_n_14 ,\pipe_lane[3].pipe_drp_i_n_15 ,\pipe_lane[3].pipe_drp_i_n_16 ,\pipe_lane[3].pipe_drp_i_n_17 }),
        .DRP_DO({\pipe_lane[3].gt_wrapper_i_n_22 ,\pipe_lane[3].gt_wrapper_i_n_23 ,\pipe_lane[3].gt_wrapper_i_n_24 ,\pipe_lane[3].gt_wrapper_i_n_25 ,\pipe_lane[3].gt_wrapper_i_n_26 ,\pipe_lane[3].gt_wrapper_i_n_27 ,\pipe_lane[3].gt_wrapper_i_n_28 ,\pipe_lane[3].gt_wrapper_i_n_29 ,\pipe_lane[3].gt_wrapper_i_n_30 ,\pipe_lane[3].gt_wrapper_i_n_31 ,\pipe_lane[3].gt_wrapper_i_n_32 ,\pipe_lane[3].gt_wrapper_i_n_33 ,\pipe_lane[3].gt_wrapper_i_n_34 ,\pipe_lane[3].gt_wrapper_i_n_35 ,\pipe_lane[3].gt_wrapper_i_n_36 ,\pipe_lane[3].gt_wrapper_i_n_37 }),
        .DRP_DONE(drp_done_3),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_RDY(\pipe_lane[3].gt_wrapper_i_n_2 ),
        .DRP_START(DRP_START012_out),
        .DRP_X16(DRP_X16013_out),
        .DRP_X16X20_MODE(DRP_X16X20_MODE014_out),
        .PIPETXRATE(PIPETXRATE),
        .RST_DCLK_RESET(rst_dclk_reset),
        .\fsm_reg[2]_0 (\pipe_lane[3].pipe_drp_i_n_1 ),
        .\fsm_reg[4]_0 (\pipe_lane[3].pipe_drp_i_n_0 ),
        .pipe_dclk_in(pipe_dclk_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_eq_14 \pipe_lane[3].pipe_eq.pipe_eq_i 
       (.EQ_TXEQ_DEEMPH_OUT(\txeq_txcoeff_reg[18]_1 ),
        .PIPERX3EQLPNEWTXCOEFFORPRESET(PIPERX3EQLPNEWTXCOEFFORPRESET),
        .PIPE_RXEQ_CONTROL(PIPE_RXEQ_CONTROL[7:6]),
        .PIPE_RXEQ_DONE(PIPE_RXEQ_DONE[3]),
        .PIPE_RXEQ_LFFS(PIPE_RXEQ_LFFS[23:18]),
        .PIPE_RXEQ_PRESET(PIPE_RXEQ_PRESET[11:9]),
        .PIPE_RXEQ_TXPRESET(PIPE_RXEQ_TXPRESET[15:12]),
        .PIPE_TXEQ_CONTROL(PIPE_TXEQ_CONTROL[7:6]),
        .PIPE_TXEQ_DEEMPH(PIPE_TXEQ_DEEMPH[23:18]),
        .PIPE_TXEQ_DONE(PIPE_TXEQ_DONE[3]),
        .PIPE_TXEQ_PRESET(PIPE_TXEQ_PRESET[15:12]),
        .RST_CPLLRESET(rst_cpllreset),
        .TXMAINCURSOR(eq_txeq_maincursor_21),
        .TXPOSTCURSOR(eq_txeq_postcursor_15),
        .TXPRECURSOR(eq_txeq_precursor_15),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx3_eq_lffs_sel(pipe_rx3_eq_lffs_sel),
        .rate_gen3_3(rate_gen3_3),
        .rxeq_adapt_done_reg_0(rxeq_adapt_done_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_rate_15 \pipe_lane[3].pipe_rate_i 
       (.D(drp_done_3),
        .PIPETXRATE(PIPETXRATE),
        .Q({pipe_reset_i_n_13,rst_txsync_start}),
        .QPLL_QPLLLOCK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_0 ),
        .RATE_CPLLLOCK(\pipe_lane[3].gt_wrapper_i_n_1 ),
        .RATE_DRP_START(rate_drp_start_3),
        .RATE_DRP_X16(rate_drp_x16_3),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_3),
        .RATE_RXPMARESETDONE(\pipe_lane[3].gt_wrapper_i_n_11 ),
        .RATE_RXRATEDONE(gt_rxratedone_3),
        .RATE_RXRESETDONE(gt_rxresetdone_3),
        .RATE_TXRATEDONE(gt_txratedone_3),
        .RATE_TXRESETDONE(gt_txresetdone_3),
        .RATE_TXSYNC_DONE(\pipe_lane[3].pipe_sync_i_n_3 ),
        .RST_CPLLRESET(rst_cpllreset),
        .RX8B10BEN0(RX8B10BEN0_6),
        .RXRATE(rate_rate_9),
        .RXSYSCLKSEL(rate_sysclksel_6),
        .SYNC_RXSYNC_START(rate_rxsync_start_3),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START0),
        .USER_RATE_DONE(rate_done_3),
        .USER_RATE_RXSYNC(rate_rxsync_3),
        .USER_RESETOVRD_START(rate_resetovrd_start_3),
        .\fsm[0]_i_9__2_0 (p_0_in1_in_7),
        .\fsm_reg[1]_0 (rate_idle_3),
        .out(p_1_in2_in_8),
        .phystatus_reg1_reg_0(gt_phystatus_3),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[3]),
        .qpllpd_reg_0(rate_qpllpd[3]),
        .qpllreset_reg_0(rate_qpllreset[3]),
        .rate_cpllpd_3(rate_cpllpd_3),
        .rate_cpllreset_3(rate_cpllreset_3),
        .rate_gen3_3(rate_gen3_3),
        .rate_txpmareset_3(rate_txpmareset_3));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_sync_16 \pipe_lane[3].pipe_sync_i 
       (.D(rate_idle_3),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 (\pipe_lane[3].pipe_user_i_n_10 ),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 (p_0_in1_in_7),
        .PIPE_RXELECIDLE(PIPE_RXELECIDLE[3]),
        .Q({sync_txphalign_3,sync_txphinit_3,sync_txdlysreset_3}),
        .RST_CPLLRESET(rst_cpllreset),
        .SYNC_GEN3(rate_gen3_3),
        .SYNC_RXDLYSRESETDONE(rxdlysresetdone_3),
        .SYNC_RXPHALIGNDONE_M(\pipe_lane[0].gt_wrapper_i_n_10 ),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_RXSYNCDONE(\pipe_lane[3].gt_wrapper_i_n_14 ),
        .SYNC_RXSYNC_START(rate_rxsync_start_3),
        .SYNC_TXDLYSRESETDONE(txdlysresetdone_3),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_4 ),
        .SYNC_TXSYNCDONE(gt_txsyncdone_3),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START0),
        .out(p_1_in2_in_8),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .rxcdrlock_reg1_reg_0(\pipe_lane[3].pipe_user_i_n_5 ),
        .\txsync_fsm.txsync_done_reg_0 (\pipe_lane[3].pipe_sync_i_n_3 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_user_17 \pipe_lane[3].pipe_user_i 
       (.D(rate_idle_3),
        .PCIE_3_0_i(gt_phystatus_3),
        .PIPE_GEN3_RDY(PIPE_GEN3_RDY[3]),
        .PIPE_RXSTATUS(PIPE_RXSTATUS[11]),
        .PIPE_TXCOMPLIANCE(PIPE_TXCOMPLIANCE[3]),
        .PIPE_TXELECIDLE(PIPE_TXELECIDLE[3]),
        .Q(pipe_reset_i_n_13),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_RXUSRCLK_RESET(rst_rxusrclk_reset),
        .USER_OOBCLK(user_oobclk_3),
        .USER_RATE_DONE(rate_done_3),
        .USER_RATE_RXSYNC(rate_rxsync_3),
        .USER_RESETOVRD_START(rate_resetovrd_start_3),
        .USER_RXRESETDONE(gt_rxresetdone_3),
        .USER_TXRESETDONE(gt_txresetdone_3),
        .converge_gen3_reg_0(\pipe_lane[3].pipe_user_i_n_8 ),
        .gt_rxcdrlock_3(gt_rxcdrlock_3),
        .gt_rxvalid_3(gt_rxvalid_3),
        .out(\pipe_lane[3].pipe_user_i_n_0 ),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[3]),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_valid(pipe_rx3_valid),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .rate_gen3_3(rate_gen3_3),
        .\rxcdrlock_cnt_reg[3]_0 (\pipe_lane[3].pipe_user_i_n_5 ),
        .rxeq_adapt_done_reg1_reg_0(rxeq_adapt_done_reg_0),
        .rxresetdone_reg2_reg_0(user_resetdone[3]),
        .txcompliance_reg2_reg_0(p_0_in1_in_7),
        .txcompliance_reg2_reg_1(\pipe_lane[3].pipe_user_i_n_10 ),
        .txelecidle_reg2_reg_0(p_1_in2_in_8));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_pipe_reset pipe_reset_i
       (.D({\pipe_lane[3].gt_wrapper_i_n_1 ,\pipe_lane[2].gt_wrapper_i_n_1 ,\pipe_lane[1].gt_wrapper_i_n_1 ,\pipe_lane[0].gt_wrapper_i_n_1 }),
        .DRP_GTXRESET(rst_gtreset),
        .DRP_START(DRP_START08_out),
        .DRP_X16(DRP_X1609_out),
        .DRP_X16X20_MODE(DRP_X16X20_MODE010_out),
        .Q({pipe_reset_i_n_13,rst_txsync_start}),
        .RATE_DRP_START(rate_drp_start_0),
        .RATE_DRP_X16(rate_drp_x16_0),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_0),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_DCLK_RESET(rst_dclk_reset),
        .RST_DRP_DONE({drp_done_3,drp_done_2,drp_done_1,drp_done_0}),
        .RST_DRP_START_reg_0(DRP_START04_out),
        .RST_DRP_START_reg_1(DRP_START0),
        .RST_DRP_START_reg_2(DRP_START012_out),
        .RST_DRP_X16X20_MODE_reg_0(DRP_X16X20_MODE0),
        .RST_DRP_X16X20_MODE_reg_1(DRP_X16X20_MODE011_out),
        .RST_DRP_X16X20_MODE_reg_2(DRP_X16X20_MODE014_out),
        .RST_DRP_X16_reg_0(DRP_X1605_out),
        .RST_DRP_X16_reg_1(DRP_X160),
        .RST_DRP_X16_reg_2(DRP_X16013_out),
        .RST_PHYSTATUS({gt_phystatus_3,gt_phystatus_2,gt_phystatus_1,gt_phystatus_0}),
        .RST_QPLL_IDLE(\qpll_reset.qpll_reset_i_n_2 ),
        .RST_RATE_IDLE({rate_idle_3,rate_idle_2,rate_idle_1,rate_idle_0}),
        .RST_RESETDONE(user_resetdone),
        .RST_RXCDRLOCK({\pipe_lane[3].pipe_user_i_n_5 ,\pipe_lane[2].pipe_user_i_n_8 ,\pipe_lane[1].pipe_user_i_n_5 ,\pipe_lane[0].pipe_user_i_n_11 }),
        .RST_RXPMARESETDONE({\pipe_lane[3].gt_wrapper_i_n_11 ,\pipe_lane[2].gt_wrapper_i_n_11 ,\pipe_lane[1].gt_wrapper_i_n_11 ,\pipe_lane[0].gt_wrapper_i_n_11 }),
        .RST_RXUSRCLK_RESET(rst_rxusrclk_reset),
        .RST_TXSYNC_DONE({\pipe_lane[3].pipe_sync_i_n_3 ,\pipe_lane[2].pipe_sync_i_n_3 ,\pipe_lane[1].pipe_sync_i_n_3 ,\pipe_lane[0].pipe_sync_i_n_3 }),
        .SR(pipe_reset_i_n_0),
        .out(reset_n_reg2),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .rst_userrdy(rst_userrdy),
        .start_reg1_reg(rate_drp_start_1),
        .start_reg1_reg_0(rate_drp_start_2),
        .start_reg1_reg_1(rate_drp_start_3),
        .x16_reg1_reg(rate_drp_x16_1),
        .x16_reg1_reg_0(rate_drp_x16_2),
        .x16_reg1_reg_1(rate_drp_x16_3),
        .x16x20_mode_reg1_reg(rate_drp_x16x20_mode_1),
        .x16x20_mode_reg1_reg_0(rate_drp_x16x20_mode_2),
        .x16x20_mode_reg1_reg_1(rate_drp_x16x20_mode_3));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_qpll_reset \qpll_reset.qpll_reset_i 
       (.D(rate_qpllpd),
        .PIPETXRATE(PIPETXRATE),
        .QPLL_DRP_DONE(qdrp_done),
        .QPLL_DRP_START(qrst_drp_start),
        .QPLL_QPLLLOCK(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_0 ),
        .QPLL_QPLLPD(qrst_qpllpd),
        .QPLL_QPLLRESET(qrst_qpllreset),
        .RST_QPLL_IDLE(\qpll_reset.qpll_reset_i_n_2 ),
        .SS(pipe_reset_i_n_0),
        .\cplllock_reg1_reg[3]_0 ({\pipe_lane[3].gt_wrapper_i_n_1 ,\pipe_lane[2].gt_wrapper_i_n_1 ,\pipe_lane[1].gt_wrapper_i_n_1 ,\pipe_lane[0].gt_wrapper_i_n_1 }),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .\qpllreset_in_reg1_reg[3]_0 (rate_qpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE reset_n_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(sys_reset),
        .D(1'b1),
        .Q(reset_n_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE reset_n_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(sys_reset),
        .D(reset_n_reg1),
        .Q(reset_n_reg2));
  LUT4 #(
    .INIT(16'h8000)) 
    rxdlysresetdone_0
       (.I0(\pipe_lane[1].gt_wrapper_i_n_7 ),
        .I1(\pipe_lane[0].gt_wrapper_i_n_7 ),
        .I2(\pipe_lane[3].gt_wrapper_i_n_7 ),
        .I3(\pipe_lane[2].gt_wrapper_i_n_7 ),
        .O(rxdlysresetdone_3));
  LUT4 #(
    .INIT(16'h8000)) 
    txdlysresetdone_0
       (.I0(\pipe_lane[1].gt_wrapper_i_n_16 ),
        .I1(\pipe_lane[0].gt_wrapper_i_n_17 ),
        .I2(\pipe_lane[3].gt_wrapper_i_n_16 ),
        .I3(\pipe_lane[2].gt_wrapper_i_n_16 ),
        .O(txdlysresetdone_3));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_qpll_drp
   (QPLL_DRP_DONE,
    Q,
    \di_reg[15]_0 ,
    qpll_drp_en,
    qpll_drp_we,
    RST_DCLK_RESET,
    QPLL_DRP_START,
    pipe_dclk_in,
    qpll_drp_rdy,
    QPLL_QPLLLOCK,
    QPLL_DRP_GEN3,
    D);
  output QPLL_DRP_DONE;
  output [4:0]Q;
  output [15:0]\di_reg[15]_0 ;
  output qpll_drp_en;
  output qpll_drp_we;
  input RST_DCLK_RESET;
  input QPLL_DRP_START;
  input pipe_dclk_in;
  input qpll_drp_rdy;
  input QPLL_QPLLLOCK;
  input QPLL_DRP_GEN3;
  input [15:0]D;

  wire [15:0]D;
  wire [4:0]Q;
  wire QPLL_DRP_DONE;
  wire QPLL_DRP_GEN3;
  wire QPLL_DRP_START;
  wire QPLL_QPLLLOCK;
  wire RST_DCLK_RESET;
  wire \addr[0]_i_1_n_0 ;
  wire \addr[1]_i_1_n_0 ;
  wire \addr[2]_i_1_n_0 ;
  wire \addr[5]_i_1_n_0 ;
  wire \addr[7]_i_1_n_0 ;
  wire \crscode_reg_n_0_[0] ;
  wire \crscode_reg_n_0_[1] ;
  wire \crscode_reg_n_0_[2] ;
  wire \crscode_reg_n_0_[3] ;
  wire \crscode_reg_n_0_[4] ;
  wire \crscode_reg_n_0_[5] ;
  wire [15:0]di;
  wire \di[11]_i_2_n_0 ;
  wire \di[12]_i_2_n_0 ;
  wire \di[13]_i_2_n_0 ;
  wire \di[14]_i_2_n_0 ;
  wire \di[15]_i_2_n_0 ;
  wire [15:0]\di_reg[15]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done;
  wire \fsm[1]_i_2_n_0 ;
  wire \fsm[1]_i_3_n_0 ;
  wire \fsm_inferred__1/i___0_n_0 ;
  wire \fsm_inferred__1/i___1_n_0 ;
  wire \fsm_inferred__1/i__n_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire \fsm_reg_n_0_[5] ;
  wire \fsm_reg_n_0_[6] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire \gth_common.gthe2_common_i_i_3_n_0 ;
  wire \gth_common.gthe2_common_i_i_4_n_0 ;
  wire index;
  wire \index[0]_i_1_n_0 ;
  wire \index[0]_i_2_n_0 ;
  wire \index[1]_i_1_n_0 ;
  wire \index[2]_i_1_n_0 ;
  wire \index[2]_i_2_n_0 ;
  wire \index[2]_i_3_n_0 ;
  wire \index[2]_i_5_n_0 ;
  wire \index_reg_n_0_[0] ;
  wire \index_reg_n_0_[1] ;
  wire \index_reg_n_0_[2] ;
  wire [1:0]load_cnt;
  wire \load_cnt[0]_i_1_n_0 ;
  wire \load_cnt[1]_i_1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire ovrd_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire ovrd_reg2;
  wire [6:0]p_0_in__0;
  wire p_1_in;
  wire [5:0]p_2_in;
  wire pipe_dclk_in;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;

  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \addr[0]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\addr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \addr[1]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .O(\addr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h4D)) 
    \addr[2]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\addr[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \addr[5]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .O(\addr[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \addr[7]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .O(\addr[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[5]_i_1_n_0 ),
        .Q(Q[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[7]_i_1_n_0 ),
        .Q(Q[4]),
        .R(RST_DCLK_RESET));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[0]_i_1 
       (.I0(do_reg2[1]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[1]_i_1 
       (.I0(do_reg2[2]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[2]_i_1 
       (.I0(do_reg2[3]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[3]_i_1 
       (.I0(do_reg2[4]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[4]_i_1 
       (.I0(do_reg2[5]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[4]));
  LUT4 #(
    .INIT(16'hC080)) 
    \crscode[5]_i_1 
       (.I0(ovrd_reg2),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[5]_i_2 
       (.I0(do_reg2[6]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[5]));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[0] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[0]),
        .Q(\crscode_reg_n_0_[0] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[1] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[1]),
        .Q(\crscode_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[2] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[2]),
        .Q(\crscode_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[3] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[3]),
        .Q(\crscode_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[4] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[4]),
        .Q(\crscode_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[5] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[5]),
        .Q(\crscode_reg_n_0_[5] ),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[0]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[0]),
        .O(di[0]));
  LUT5 #(
    .INIT(32'h0CC5CCCC)) 
    \di[10]_i_1 
       (.I0(\crscode_reg_n_0_[0] ),
        .I1(do_reg2[10]),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .O(di[10]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000090)) 
    \di[11]_i_1 
       (.I0(\crscode_reg_n_0_[0] ),
        .I1(\crscode_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\di[11]_i_2_n_0 ),
        .O(di[11]));
  LUT5 #(
    .INIT(32'h40FF4022)) 
    \di[11]_i_2 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(ovrd_reg2),
        .I3(\index_reg_n_0_[2] ),
        .I4(do_reg2[11]),
        .O(\di[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAAAC3AA)) 
    \di[12]_i_1 
       (.I0(do_reg2[12]),
        .I1(\di[12]_i_2_n_0 ),
        .I2(\crscode_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(di[12]));
  LUT2 #(
    .INIT(4'hE)) 
    \di[12]_i_2 
       (.I0(\crscode_reg_n_0_[0] ),
        .I1(\crscode_reg_n_0_[1] ),
        .O(\di[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00AAAAFFAAAAC3AA)) 
    \di[13]_i_1 
       (.I0(do_reg2[13]),
        .I1(\di[13]_i_2_n_0 ),
        .I2(\crscode_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(di[13]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \di[13]_i_2 
       (.I0(\crscode_reg_n_0_[1] ),
        .I1(\crscode_reg_n_0_[0] ),
        .I2(\crscode_reg_n_0_[2] ),
        .O(\di[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0AAFAA3A)) 
    \di[14]_i_1 
       (.I0(do_reg2[14]),
        .I1(\di[14]_i_2_n_0 ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[1] ),
        .O(di[14]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \di[14]_i_2 
       (.I0(\crscode_reg_n_0_[3] ),
        .I1(\crscode_reg_n_0_[1] ),
        .I2(\crscode_reg_n_0_[0] ),
        .I3(\crscode_reg_n_0_[2] ),
        .I4(\crscode_reg_n_0_[4] ),
        .O(\di[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0CC5CCCC)) 
    \di[15]_i_1 
       (.I0(\di[15]_i_2_n_0 ),
        .I1(do_reg2[15]),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .O(di[15]));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFE)) 
    \di[15]_i_2 
       (.I0(\crscode_reg_n_0_[1] ),
        .I1(\crscode_reg_n_0_[0] ),
        .I2(\crscode_reg_n_0_[2] ),
        .I3(\crscode_reg_n_0_[3] ),
        .I4(\crscode_reg_n_0_[4] ),
        .I5(\crscode_reg_n_0_[5] ),
        .O(\di[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[1]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[1]),
        .O(di[1]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[2]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[2]),
        .O(di[2]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[3]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[3]),
        .O(di[3]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[4]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[4]),
        .O(di[4]));
  LUT4 #(
    .INIT(16'h2AAB)) 
    \di[5]_i_1 
       (.I0(do_reg2[5]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[2] ),
        .O(di[5]));
  LUT4 #(
    .INIT(16'h2BA8)) 
    \di[6]_i_1 
       (.I0(do_reg2[6]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[0] ),
        .O(di[6]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[7]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[7]),
        .O(di[7]));
  LUT4 #(
    .INIT(16'h2AAB)) 
    \di[8]_i_1 
       (.I0(do_reg2[8]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[2] ),
        .O(di[8]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[9]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[9]),
        .O(di[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[0]),
        .Q(\di_reg[15]_0 [0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[10]),
        .Q(\di_reg[15]_0 [10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[11]),
        .Q(\di_reg[15]_0 [11]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[12]),
        .Q(\di_reg[15]_0 [12]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[13]),
        .Q(\di_reg[15]_0 [13]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[14]),
        .Q(\di_reg[15]_0 [14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[15]),
        .Q(\di_reg[15]_0 [15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[1]),
        .Q(\di_reg[15]_0 [1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[2]),
        .Q(\di_reg[15]_0 [2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[3]),
        .Q(\di_reg[15]_0 [3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[4]),
        .Q(\di_reg[15]_0 [4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[5]),
        .Q(\di_reg[15]_0 [5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[6]),
        .Q(\di_reg[15]_0 [6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[7]),
        .Q(\di_reg[15]_0 [7]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[8]),
        .Q(\di_reg[15]_0 [8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[9]),
        .Q(\di_reg[15]_0 [9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    done_i_1
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[6] ),
        .I2(start_reg2),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(\gth_common.gthe2_common_i_i_4_n_0 ),
        .O(done));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done),
        .Q(QPLL_DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT5 #(
    .INIT(32'h5DFF5D5D)) 
    \fsm[0]_i_1__0 
       (.I0(\fsm_inferred__1/i___1_n_0 ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(start_reg2),
        .I3(\fsm[1]_i_3_n_0 ),
        .I4(\fsm_reg_n_0_[6] ),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'hFFAAEAAAEAAAEAAA)) 
    \fsm[1]_i_1__0 
       (.I0(\fsm[1]_i_2_n_0 ),
        .I1(start_reg2),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_inferred__1/i___1_n_0 ),
        .I4(\fsm_reg_n_0_[6] ),
        .I5(\fsm[1]_i_3_n_0 ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h0888)) 
    \fsm[1]_i_2 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_inferred__1/i___1_n_0 ),
        .I2(load_cnt[1]),
        .I3(load_cnt[0]),
        .O(\fsm[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \fsm[1]_i_3 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\fsm[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[2]_i_1__0 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_inferred__1/i___1_n_0 ),
        .I2(load_cnt[1]),
        .I3(load_cnt[0]),
        .O(p_0_in__0[2]));
  LUT4 #(
    .INIT(16'h88C8)) 
    \fsm[3]_i_1__0 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_inferred__1/i___1_n_0 ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(rdy_reg2),
        .O(p_0_in__0[3]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[4]_i_1__0 
       (.I0(rdy_reg2),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_inferred__1/i___1_n_0 ),
        .O(p_0_in__0[4]));
  LUT4 #(
    .INIT(16'h88C8)) 
    \fsm[5]_i_1__0 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_inferred__1/i___1_n_0 ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(rdy_reg2),
        .O(p_0_in__0[5]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[6]_i_1 
       (.I0(rdy_reg2),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_inferred__1/i___1_n_0 ),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \fsm_inferred__1/i_ 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(\fsm_inferred__1/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \fsm_inferred__1/i___0 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(\fsm_inferred__1/i___0_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \fsm_inferred__1/i___1 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(\fsm_inferred__1/i__n_0 ),
        .I4(\fsm_inferred__1/i___0_n_0 ),
        .O(\fsm_inferred__1/i___1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(\fsm_reg_n_0_[5] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(\fsm_reg_n_0_[6] ),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(QPLL_DRP_GEN3),
        .Q(gen3_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h0000000000000014)) 
    \gth_common.gthe2_common_i_i_1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[6] ),
        .I4(\fsm_reg_n_0_[1] ),
        .I5(\gth_common.gthe2_common_i_i_3_n_0 ),
        .O(qpll_drp_en));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \gth_common.gthe2_common_i_i_2 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\gth_common.gthe2_common_i_i_4_n_0 ),
        .O(qpll_drp_we));
  LUT2 #(
    .INIT(4'hE)) 
    \gth_common.gthe2_common_i_i_3 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[5] ),
        .O(\gth_common.gthe2_common_i_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \gth_common.gthe2_common_i_i_4 
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .O(\gth_common.gthe2_common_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFFF20000000)) 
    \index[0]_i_1 
       (.I0(\index[0]_i_2_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(\index[2]_i_3_n_0 ),
        .I4(index),
        .I5(\index_reg_n_0_[0] ),
        .O(\index[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \index[0]_i_2 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .O(\index[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1000FFFFC0000000)) 
    \index[1]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index[2]_i_2_n_0 ),
        .I3(\index[2]_i_3_n_0 ),
        .I4(index),
        .I5(\index_reg_n_0_[1] ),
        .O(\index[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5000FFFF80000000)) 
    \index[2]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index[2]_i_2_n_0 ),
        .I3(\index[2]_i_3_n_0 ),
        .I4(index),
        .I5(\index_reg_n_0_[2] ),
        .O(\index[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \index[2]_i_2 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[1] ),
        .O(\index[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \index[2]_i_3 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(\index[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEED)) 
    \index[2]_i_4 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\index[2]_i_5_n_0 ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[5] ),
        .I5(\fsm_reg_n_0_[4] ),
        .O(index));
  LUT2 #(
    .INIT(4'hE)) 
    \index[2]_i_5 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[6] ),
        .O(\index[2]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\index[0]_i_1_n_0 ),
        .Q(\index_reg_n_0_[0] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\index[1]_i_1_n_0 ),
        .Q(\index_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\index[2]_i_1_n_0 ),
        .Q(\index_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h00B00000)) 
    \load_cnt[0]_i_1 
       (.I0(load_cnt[1]),
        .I1(load_cnt[0]),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[6] ),
        .I4(\index[2]_i_3_n_0 ),
        .O(\load_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h00E00000)) 
    \load_cnt[1]_i_1 
       (.I0(load_cnt[1]),
        .I1(load_cnt[0]),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[6] ),
        .I4(\index[2]_i_3_n_0 ),
        .O(\load_cnt[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1_n_0 ),
        .Q(load_cnt[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[1]_i_1_n_0 ),
        .Q(load_cnt[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE ovrd_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(ovrd_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE ovrd_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ovrd_reg1),
        .Q(ovrd_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(QPLL_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(qpll_drp_rdy),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(QPLL_DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_qpll_reset
   (QPLL_QPLLRESET,
    QPLL_QPLLPD,
    RST_QPLL_IDLE,
    QPLL_DRP_START,
    SS,
    QPLL_DRP_DONE,
    pipe_pclk_in,
    QPLL_QPLLLOCK,
    pipe_mmcm_lock_in,
    D,
    PIPETXRATE,
    \qpllreset_in_reg1_reg[3]_0 ,
    \cplllock_reg1_reg[3]_0 );
  output QPLL_QPLLRESET;
  output QPLL_QPLLPD;
  output RST_QPLL_IDLE;
  output QPLL_DRP_START;
  input [0:0]SS;
  input QPLL_DRP_DONE;
  input pipe_pclk_in;
  input QPLL_QPLLLOCK;
  input pipe_mmcm_lock_in;
  input [3:0]D;
  input [1:0]PIPETXRATE;
  input [3:0]\qpllreset_in_reg1_reg[3]_0 ;
  input [3:0]\cplllock_reg1_reg[3]_0 ;

  wire [3:0]D;
  wire [1:0]PIPETXRATE;
  wire QPLL_DRP_DONE;
  wire QPLL_DRP_START;
  wire QPLL_QPLLLOCK;
  wire QPLL_QPLLPD;
  wire QPLL_QPLLRESET;
  wire RST_QPLL_IDLE;
  wire [0:0]SS;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]cplllock_reg1;
  wire [3:0]\cplllock_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]cplllock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire \fsm[11]_i_3_n_0 ;
  wire \fsm[11]_i_4_n_0 ;
  wire \fsm[11]_i_5_n_0 ;
  wire \fsm[2]_i_2_n_0 ;
  wire \fsm[3]_i_2_n_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[10] ;
  wire \fsm_reg_n_0_[11] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire \fsm_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire [11:0]p_0_in__0;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire qpll_idle_reg1_i_2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd;
  wire qpllpd_i_1_n_0;
  wire qpllpd_i_2_n_0;
  wire qpllpd_i_4_n_0;
  wire qpllpd_i_5_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]qpllpd_in_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]qpllpd_in_reg2;
  wire qpllreset_i_1_n_0;
  wire qpllreset_i_2_n_0;
  wire qpllreset_i_3_n_0;
  wire qpllreset_i_4_n_0;
  wire qpllreset_i_5_n_0;
  wire qpllreset_i_6_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]qpllreset_in_reg1;
  wire [3:0]\qpllreset_in_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]qpllreset_in_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  wire start_reg1_i_2_n_0;
  wire start_reg1_i_3_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [0]),
        .Q(cplllock_reg1[0]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [1]),
        .Q(cplllock_reg1[1]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [2]),
        .Q(cplllock_reg1[2]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [3]),
        .Q(cplllock_reg1[3]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[0]),
        .Q(cplllock_reg2[0]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[1]),
        .Q(cplllock_reg2[1]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[2]),
        .Q(cplllock_reg2[2]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[3]),
        .Q(cplllock_reg2[3]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(QPLL_DRP_DONE),
        .Q(drp_done_reg1),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(SS));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \fsm[0]_i_1 
       (.I0(\fsm_reg_n_0_[11] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm[11]_i_3_n_0 ),
        .O(p_0_in__0[0]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[10]_i_1 
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(qplllock_reg2),
        .I2(\fsm[11]_i_3_n_0 ),
        .O(p_0_in__0[10]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \fsm[11]_i_2 
       (.I0(\fsm[11]_i_3_n_0 ),
        .I1(\fsm_reg_n_0_[10] ),
        .O(p_0_in__0[11]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT4 #(
    .INIT(16'h0016)) 
    \fsm[11]_i_3 
       (.I0(\fsm_reg_n_0_[10] ),
        .I1(\fsm_reg_n_0_[11] ),
        .I2(\fsm[11]_i_4_n_0 ),
        .I3(\fsm[11]_i_5_n_0 ),
        .O(\fsm[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    \fsm[11]_i_4 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .I5(\fsm_reg_n_0_[5] ),
        .O(\fsm[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEE8)) 
    \fsm[11]_i_5 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[4] ),
        .I5(\fsm_reg_n_0_[5] ),
        .O(\fsm[11]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h8F)) 
    \fsm[1]_i_1 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm[2]_i_2_n_0 ),
        .I2(\fsm[11]_i_3_n_0 ),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hF0404040)) 
    \fsm[2]_i_1 
       (.I0(\fsm[2]_i_2_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm[11]_i_3_n_0 ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm[3]_i_2_n_0 ),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \fsm[2]_i_2 
       (.I0(cplllock_reg2[0]),
        .I1(cplllock_reg2[3]),
        .I2(qplllock_reg2),
        .I3(cplllock_reg2[2]),
        .I4(cplllock_reg2[1]),
        .O(\fsm[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8F008800)) 
    \fsm[3]_i_1 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm[3]_i_2_n_0 ),
        .I3(\fsm[11]_i_3_n_0 ),
        .I4(\fsm_reg_n_0_[2] ),
        .O(p_0_in__0[3]));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \fsm[3]_i_2 
       (.I0(cplllock_reg2[0]),
        .I1(cplllock_reg2[3]),
        .I2(mmcm_lock_reg2),
        .I3(cplllock_reg2[2]),
        .I4(cplllock_reg2[1]),
        .O(\fsm[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h4440)) 
    \fsm[4]_i_1 
       (.I0(drp_done_reg2),
        .I1(\fsm[11]_i_3_n_0 ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(p_0_in__0[4]));
  LUT5 #(
    .INIT(32'h8080F080)) 
    \fsm[5]_i_1 
       (.I0(drp_done_reg2),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm[11]_i_3_n_0 ),
        .I3(\fsm_reg_n_0_[5] ),
        .I4(qplllock_reg2),
        .O(p_0_in__0[5]));
  (* FSM_ENCODED_STATES = "FSM_DRP_START_NOM:000000001000,FSM_QPLL_RESET:000100000000,FSM_MMCM_LOCK:000000000100,FSM_DRP_DONE_OPT:000010000000,FSM_QPLL_PD:100000000000,FSM_WAIT_LOCK:000000000010,FSM_DRP_START_OPT:000001000000,FSM_DRP_DONE_NOM:000000010000,FSM_QPLLLOCK2:001000000000,FSM_IDLE:000000000001,FSM_QPLLLOCK:000000100000,FSM_QPLL_PDRESET:010000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_DRP_START_NOM:000000001000,FSM_QPLL_RESET:000100000000,FSM_MMCM_LOCK:000000000100,FSM_DRP_DONE_OPT:000010000000,FSM_QPLL_PD:100000000000,FSM_WAIT_LOCK:000000000010,FSM_DRP_START_OPT:000001000000,FSM_DRP_DONE_NOM:000000010000,FSM_QPLLLOCK2:001000000000,FSM_IDLE:000000000001,FSM_QPLLLOCK:000000100000,FSM_QPLL_PDRESET:010000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[10]),
        .Q(\fsm_reg_n_0_[10] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_DRP_START_NOM:000000001000,FSM_QPLL_RESET:000100000000,FSM_MMCM_LOCK:000000000100,FSM_DRP_DONE_OPT:000010000000,FSM_QPLL_PD:100000000000,FSM_WAIT_LOCK:000000000010,FSM_DRP_START_OPT:000001000000,FSM_DRP_DONE_NOM:000000010000,FSM_QPLLLOCK2:001000000000,FSM_IDLE:000000000001,FSM_QPLLLOCK:000000100000,FSM_QPLL_PDRESET:010000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[11]),
        .Q(\fsm_reg_n_0_[11] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_DRP_START_NOM:000000001000,FSM_QPLL_RESET:000100000000,FSM_MMCM_LOCK:000000000100,FSM_DRP_DONE_OPT:000010000000,FSM_QPLL_PD:100000000000,FSM_WAIT_LOCK:000000000010,FSM_DRP_START_OPT:000001000000,FSM_DRP_DONE_NOM:000000010000,FSM_QPLLLOCK2:001000000000,FSM_IDLE:000000000001,FSM_QPLLLOCK:000000100000,FSM_QPLL_PDRESET:010000000000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .S(SS));
  (* FSM_ENCODED_STATES = "FSM_DRP_START_NOM:000000001000,FSM_QPLL_RESET:000100000000,FSM_MMCM_LOCK:000000000100,FSM_DRP_DONE_OPT:000010000000,FSM_QPLL_PD:100000000000,FSM_WAIT_LOCK:000000000010,FSM_DRP_START_OPT:000001000000,FSM_DRP_DONE_NOM:000000010000,FSM_QPLLLOCK2:001000000000,FSM_IDLE:000000000001,FSM_QPLLLOCK:000000100000,FSM_QPLL_PDRESET:010000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_DRP_START_NOM:000000001000,FSM_QPLL_RESET:000100000000,FSM_MMCM_LOCK:000000000100,FSM_DRP_DONE_OPT:000010000000,FSM_QPLL_PD:100000000000,FSM_WAIT_LOCK:000000000010,FSM_DRP_START_OPT:000001000000,FSM_DRP_DONE_NOM:000000010000,FSM_QPLLLOCK2:001000000000,FSM_IDLE:000000000001,FSM_QPLLLOCK:000000100000,FSM_QPLL_PDRESET:010000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_DRP_START_NOM:000000001000,FSM_QPLL_RESET:000100000000,FSM_MMCM_LOCK:000000000100,FSM_DRP_DONE_OPT:000010000000,FSM_QPLL_PD:100000000000,FSM_WAIT_LOCK:000000000010,FSM_DRP_START_OPT:000001000000,FSM_DRP_DONE_NOM:000000010000,FSM_QPLLLOCK2:001000000000,FSM_IDLE:000000000001,FSM_QPLLLOCK:000000100000,FSM_QPLL_PDRESET:010000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_DRP_START_NOM:000000001000,FSM_QPLL_RESET:000100000000,FSM_MMCM_LOCK:000000000100,FSM_DRP_DONE_OPT:000010000000,FSM_QPLL_PD:100000000000,FSM_WAIT_LOCK:000000000010,FSM_DRP_START_OPT:000001000000,FSM_DRP_DONE_NOM:000000010000,FSM_QPLLLOCK2:001000000000,FSM_IDLE:000000000001,FSM_QPLLLOCK:000000100000,FSM_QPLL_PDRESET:010000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(\fsm_reg_n_0_[5] ),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(SS));
  LUT3 #(
    .INIT(8'h40)) 
    qpll_idle_reg1_i_1
       (.I0(\fsm_reg_n_0_[11] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(qpll_idle_reg1_i_2_n_0),
        .O(RST_QPLL_IDLE));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    qpll_idle_reg1_i_2
       (.I0(\fsm_reg_n_0_[10] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[1] ),
        .I5(\fsm_reg_n_0_[2] ),
        .O(qpll_idle_reg1_i_2_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qplllock_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(QPLL_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qplllock_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(SS));
  LUT3 #(
    .INIT(8'hB8)) 
    qpllpd_i_1
       (.I0(qpllpd_i_2_n_0),
        .I1(qpllpd),
        .I2(QPLL_QPLLPD),
        .O(qpllpd_i_1_n_0));
  LUT6 #(
    .INIT(64'h8C888C8888888C88)) 
    qpllpd_i_2
       (.I0(qpllpd_i_4_n_0),
        .I1(qpll_idle_reg1_i_2_n_0),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[11] ),
        .I4(rate_reg2[1]),
        .I5(rate_reg2[0]),
        .O(qpllpd_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFF9)) 
    qpllpd_i_3
       (.I0(\fsm_reg_n_0_[10] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[11] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(qpllreset_i_5_n_0),
        .I5(qpllpd_i_5_n_0),
        .O(qpllpd));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    qpllpd_i_4
       (.I0(qpllpd_in_reg2[2]),
        .I1(qpllpd_in_reg2[3]),
        .I2(qpllpd_in_reg2[0]),
        .I3(qpllpd_in_reg2[1]),
        .I4(\fsm_reg_n_0_[11] ),
        .I5(\fsm_reg_n_0_[0] ),
        .O(qpllpd_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    qpllpd_i_5
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[4] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[2] ),
        .O(qpllpd_i_5_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(qpllpd_in_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(qpllpd_in_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(qpllpd_in_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[3]),
        .Q(qpllpd_in_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_in_reg1[0]),
        .Q(qpllpd_in_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_in_reg1[1]),
        .Q(qpllpd_in_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_in_reg1[2]),
        .Q(qpllpd_in_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_in_reg1[3]),
        .Q(qpllpd_in_reg2[3]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1_n_0),
        .Q(QPLL_QPLLPD),
        .R(SS));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    qpllreset_i_1
       (.I0(qpllreset_i_2_n_0),
        .I1(qpllreset_i_3_n_0),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(\fsm_reg_n_0_[10] ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(QPLL_QPLLRESET),
        .O(qpllreset_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    qpllreset_i_2
       (.I0(qpllreset_i_4_n_0),
        .I1(qpllreset_i_5_n_0),
        .I2(start_reg1_i_3_n_0),
        .I3(\fsm_reg_n_0_[10] ),
        .I4(\fsm_reg_n_0_[5] ),
        .I5(qpllreset_i_6_n_0),
        .O(qpllreset_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'hFFFEFEE9)) 
    qpllreset_i_3
       (.I0(\fsm_reg_n_0_[11] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[3] ),
        .O(qpllreset_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    qpllreset_i_4
       (.I0(qpllreset_in_reg2[2]),
        .I1(qpllreset_in_reg2[3]),
        .I2(qpllreset_in_reg2[0]),
        .I3(qpllreset_in_reg2[1]),
        .I4(\fsm_reg_n_0_[11] ),
        .I5(\fsm_reg_n_0_[0] ),
        .O(qpllreset_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    qpllreset_i_5
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(qpllreset_i_5_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    qpllreset_i_6
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(qpllreset_i_6_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\qpllreset_in_reg1_reg[3]_0 [0]),
        .Q(qpllreset_in_reg1[0]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\qpllreset_in_reg1_reg[3]_0 [1]),
        .Q(qpllreset_in_reg1[1]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\qpllreset_in_reg1_reg[3]_0 [2]),
        .Q(qpllreset_in_reg1[2]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\qpllreset_in_reg1_reg[3]_0 [3]),
        .Q(qpllreset_in_reg1[3]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_in_reg1[0]),
        .Q(qpllreset_in_reg2[0]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_in_reg1[1]),
        .Q(qpllreset_in_reg2[1]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_in_reg1[2]),
        .Q(qpllreset_in_reg2[2]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_in_reg1[3]),
        .Q(qpllreset_in_reg2[3]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1_n_0),
        .Q(QPLL_QPLLRESET),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[0]),
        .Q(rate_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPETXRATE[1]),
        .Q(rate_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(SS));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    start_reg1_i_1
       (.I0(start_reg1_i_2_n_0),
        .I1(start_reg1_i_3_n_0),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[3] ),
        .I5(\fsm_reg_n_0_[4] ),
        .O(QPLL_DRP_START));
  LUT2 #(
    .INIT(4'hE)) 
    start_reg1_i_2
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(\fsm_reg_n_0_[10] ),
        .O(start_reg1_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT2 #(
    .INIT(4'hE)) 
    start_reg1_i_3
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[11] ),
        .O(start_reg1_i_3_n_0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_qpll_wrapper
   (qpll_drp_rdy,
    QPLL_QPLLLOCK,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    D,
    pipe_dclk_in,
    qpll_drp_en,
    qpll_drp_we,
    sys_clk,
    QPLL_QPLLPD,
    QPLL_QPLLRESET,
    \gth_common.gthe2_common_i_0 ,
    Q);
  output qpll_drp_rdy;
  output QPLL_QPLLLOCK;
  output QPLL_QPLLOUTCLK;
  output QPLL_QPLLOUTREFCLK;
  output [15:0]D;
  input pipe_dclk_in;
  input qpll_drp_en;
  input qpll_drp_we;
  input sys_clk;
  input QPLL_QPLLPD;
  input QPLL_QPLLRESET;
  input [15:0]\gth_common.gthe2_common_i_0 ;
  input [4:0]Q;

  wire [15:0]D;
  wire [4:0]Q;
  wire QPLL_QPLLLOCK;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire QPLL_QPLLPD;
  wire QPLL_QPLLRESET;
  wire [15:0]\gth_common.gthe2_common_i_0 ;
  wire pipe_dclk_in;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  wire sys_clk;
  wire \NLW_gth_common.gthe2_common_i_QPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gth_common.gthe2_common_i_QPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gth_common.gthe2_common_i_REFCLKOUTMONITOR_UNCONNECTED ;
  wire [15:0]\NLW_gth_common.gthe2_common_i_PMARSVDOUT_UNCONNECTED ;
  wire [7:0]\NLW_gth_common.gthe2_common_i_QPLLDMONITOR_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SET_SPEEDUP_SIM_TRUE = "TRUE" *) 
  GTHE2_COMMON #(
    .BIAS_CFG(64'h0000040000001050),
    .COMMON_CFG(32'h0000005C),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_QPLLLOCKDETCLK_INVERTED(1'b0),
    .QPLL_CFG(27'h04801C7),
    .QPLL_CLKOUT_CFG(4'b1111),
    .QPLL_COARSE_FREQ_OVRD(6'b010000),
    .QPLL_COARSE_FREQ_OVRD_EN(1'b0),
    .QPLL_CP(10'b0011111111),
    .QPLL_CP_MONITOR_EN(1'b0),
    .QPLL_DMONITOR_SEL(1'b0),
    .QPLL_FBDIV(10'b0100100000),
    .QPLL_FBDIV_MONITOR_EN(1'b0),
    .QPLL_FBDIV_RATIO(1'b1),
    .QPLL_INIT_CFG(24'h000006),
    .QPLL_LOCK_CFG(16'h05E8),
    .QPLL_LPF(4'b1101),
    .QPLL_REFCLK_DIV(1),
    .QPLL_RP_COMP(1'b0),
    .QPLL_VTRL_RESET(2'b00),
    .RCAL_CFG(2'b00),
    .RSVD_ATTR0(16'h0000),
    .RSVD_ATTR1(16'h0000),
    .SIM_QPLLREFCLK_SEL(3'b001),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_VERSION("2.0")) 
    \gth_common.gthe2_common_i 
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .BGRCALOVRDENB(1'b1),
        .DRPADDR({Q[4],1'b0,Q[3],Q[3],Q[4],Q[2:0]}),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(\gth_common.gthe2_common_i_0 ),
        .DRPDO(D),
        .DRPEN(qpll_drp_en),
        .DRPRDY(qpll_drp_rdy),
        .DRPWE(qpll_drp_we),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .PMARSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDOUT(\NLW_gth_common.gthe2_common_i_PMARSVDOUT_UNCONNECTED [15:0]),
        .QPLLDMONITOR(\NLW_gth_common.gthe2_common_i_QPLLDMONITOR_UNCONNECTED [7:0]),
        .QPLLFBCLKLOST(\NLW_gth_common.gthe2_common_i_QPLLFBCLKLOST_UNCONNECTED ),
        .QPLLLOCK(QPLL_QPLLLOCK),
        .QPLLLOCKDETCLK(1'b0),
        .QPLLLOCKEN(1'b1),
        .QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .QPLLOUTRESET(1'b0),
        .QPLLPD(QPLL_QPLLPD),
        .QPLLREFCLKLOST(\NLW_gth_common.gthe2_common_i_QPLLREFCLKLOST_UNCONNECTED ),
        .QPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .QPLLRESET(QPLL_QPLLRESET),
        .QPLLRSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD2({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR(\NLW_gth_common.gthe2_common_i_REFCLKOUTMONITOR_UNCONNECTED ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_rxeq_scan
   (\new_txcoeff_reg[2]_0 ,
    D,
    rxeq_new_txcoeff_req,
    rxeq_done,
    adapt_done_reg_0,
    new_txcoeff_done_reg_0,
    new_txcoeff_done_reg_1,
    RST_CPLLRESET,
    pipe_pclk_in,
    new_txcoeff_req_reg1_reg_0,
    rxeq_preset_valid,
    out,
    \rxeq_new_txcoeff_reg[2] ,
    Q,
    \rxeq_new_txcoeff_reg[2]_0 ,
    \FSM_onehot_fsm_rx_reg[5] ,
    rxeq_adapt_done_reg_reg,
    rxeq_adapt_done_reg_reg_0,
    rxeq_adapt_done_reg,
    rxeq_adapt_done_reg_0,
    rxeq_lffs_sel_reg,
    rxeq_lffs_sel_reg_0,
    \preset_reg1_reg[2]_0 ,
    \txpreset_reg1_reg[3]_0 ,
    \txcoeff_reg1_reg[17]_0 ,
    \fs_reg1_reg[5]_0 ,
    \lf_reg1_reg[5]_0 );
  output \new_txcoeff_reg[2]_0 ;
  output [2:0]D;
  output rxeq_new_txcoeff_req;
  output rxeq_done;
  output adapt_done_reg_0;
  output new_txcoeff_done_reg_0;
  output new_txcoeff_done_reg_1;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input new_txcoeff_req_reg1_reg_0;
  input rxeq_preset_valid;
  input [1:0]out;
  input \rxeq_new_txcoeff_reg[2] ;
  input [4:0]Q;
  input \rxeq_new_txcoeff_reg[2]_0 ;
  input [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  input rxeq_adapt_done_reg_reg;
  input rxeq_adapt_done_reg_reg_0;
  input rxeq_adapt_done_reg;
  input rxeq_adapt_done_reg_0;
  input rxeq_lffs_sel_reg;
  input rxeq_lffs_sel_reg_0;
  input [2:0]\preset_reg1_reg[2]_0 ;
  input [3:0]\txpreset_reg1_reg[3]_0 ;
  input [17:0]\txcoeff_reg1_reg[17]_0 ;
  input [5:0]\fs_reg1_reg[5]_0 ;
  input [5:0]\lf_reg1_reg[5]_0 ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_3__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_10__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_11__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_12__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_13__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_14__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_9__2_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx[6]_i_2__2_n_0 ;
  wire [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  wire [4:0]Q;
  wire RST_CPLLRESET;
  wire adapt_done;
  wire adapt_done_cnt_i_1__2_n_0;
  wire adapt_done_cnt_i_2__2_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire adapt_done_reg_0;
  wire [22:0]converge_cnt;
  wire [22:1]converge_cnt0;
  wire [22:0]converge_cnt_0;
  wire \converge_cnt_reg[12]_i_2__2_n_0 ;
  wire \converge_cnt_reg[12]_i_2__2_n_1 ;
  wire \converge_cnt_reg[12]_i_2__2_n_2 ;
  wire \converge_cnt_reg[12]_i_2__2_n_3 ;
  wire \converge_cnt_reg[16]_i_2__2_n_0 ;
  wire \converge_cnt_reg[16]_i_2__2_n_1 ;
  wire \converge_cnt_reg[16]_i_2__2_n_2 ;
  wire \converge_cnt_reg[16]_i_2__2_n_3 ;
  wire \converge_cnt_reg[20]_i_2__2_n_0 ;
  wire \converge_cnt_reg[20]_i_2__2_n_1 ;
  wire \converge_cnt_reg[20]_i_2__2_n_2 ;
  wire \converge_cnt_reg[20]_i_2__2_n_3 ;
  wire \converge_cnt_reg[22]_i_2__2_n_3 ;
  wire \converge_cnt_reg[4]_i_2__2_n_0 ;
  wire \converge_cnt_reg[4]_i_2__2_n_1 ;
  wire \converge_cnt_reg[4]_i_2__2_n_2 ;
  wire \converge_cnt_reg[4]_i_2__2_n_3 ;
  wire \converge_cnt_reg[8]_i_2__2_n_0 ;
  wire \converge_cnt_reg[8]_i_2__2_n_1 ;
  wire \converge_cnt_reg[8]_i_2__2_n_2 ;
  wire \converge_cnt_reg[8]_i_2__2_n_3 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg1;
  wire [5:0]\fs_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg1;
  wire [5:0]\lf_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg2;
  wire lffs_sel_i_1__2_n_0;
  wire [2:2]new_txcoeff;
  wire \new_txcoeff[2]_i_1__2_n_0 ;
  wire new_txcoeff_done;
  wire new_txcoeff_done_reg_0;
  wire new_txcoeff_done_reg_1;
  wire \new_txcoeff_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg1;
  wire new_txcoeff_req_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pipe_pclk_in;
  wire preset_done;
  wire preset_done_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg1;
  wire [2:0]\preset_reg1_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg2;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_0;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire rxeq_done;
  wire rxeq_lffs_sel_reg;
  wire rxeq_lffs_sel_reg_0;
  wire \rxeq_new_txcoeff_reg[2] ;
  wire \rxeq_new_txcoeff_reg[2]_0 ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_preset_valid;
  wire rxeqscan_adapt_done;
  wire rxeqscan_lffs_sel;
  wire rxeqscan_new_txcoeff_done;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg1;
  wire [17:0]\txcoeff_reg1_reg[17]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg1;
  wire [3:0]\txpreset_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg2;
  wire [3:1]\NLW_converge_cnt_reg[22]_i_2__2_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[22]_i_2__2_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0F00CFCF0F11CFDD)) 
    \FSM_onehot_fsm[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I2(preset_valid_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1__2 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABBBBBBBA)) 
    \FSM_onehot_fsm[3]_i_1__2 
       (.I0(\FSM_onehot_fsm[3]_i_2__2_n_0 ),
        .I1(\FSM_onehot_fsm[3]_i_3__2_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_3__2_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_4__2_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_5__2_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_6__2_n_0 ),
        .O(\FSM_onehot_fsm[3]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_onehot_fsm[3]_i_2__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(new_txcoeff_req_reg2),
        .I2(preset_valid_reg2),
        .O(\FSM_onehot_fsm[3]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_onehot_fsm[3]_i_3__2 
       (.I0(adapt_done_cnt_reg_n_0),
        .I1(out[1]),
        .I2(out[0]),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    \FSM_onehot_fsm[4]_i_10__2 
       (.I0(converge_cnt[13]),
        .I1(converge_cnt[2]),
        .I2(converge_cnt[21]),
        .I3(converge_cnt[19]),
        .O(\FSM_onehot_fsm[4]_i_10__2_n_0 ));
  LUT4 #(
    .INIT(16'hBFFF)) 
    \FSM_onehot_fsm[4]_i_11__2 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(converge_cnt[11]),
        .I3(converge_cnt[8]),
        .O(\FSM_onehot_fsm[4]_i_11__2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_fsm[4]_i_12__2 
       (.I0(converge_cnt[22]),
        .I1(converge_cnt[0]),
        .I2(converge_cnt[7]),
        .O(\FSM_onehot_fsm[4]_i_12__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF7FFFFFFFF)) 
    \FSM_onehot_fsm[4]_i_13__2 
       (.I0(converge_cnt[9]),
        .I1(converge_cnt[10]),
        .I2(converge_cnt[4]),
        .I3(converge_cnt[5]),
        .I4(converge_cnt[12]),
        .I5(converge_cnt[15]),
        .O(\FSM_onehot_fsm[4]_i_13__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_14__2 
       (.I0(converge_cnt[17]),
        .I1(converge_cnt[18]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[1]),
        .O(\FSM_onehot_fsm[4]_i_14__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAAABAAAAAAAA)) 
    \FSM_onehot_fsm[4]_i_1__2 
       (.I0(\FSM_onehot_fsm[4]_i_2__2_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3__2_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_4__2_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_5__2_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_6__2_n_0 ),
        .I5(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888F88888)) 
    \FSM_onehot_fsm[4]_i_2__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(out[0]),
        .I4(out[1]),
        .I5(adapt_done_cnt_reg_n_0),
        .O(\FSM_onehot_fsm[4]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \FSM_onehot_fsm[4]_i_3__2 
       (.I0(converge_cnt[1]),
        .I1(converge_cnt[20]),
        .I2(converge_cnt[18]),
        .I3(converge_cnt[17]),
        .I4(\FSM_onehot_fsm[4]_i_7__2_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFDFFFFFFFD)) 
    \FSM_onehot_fsm[4]_i_4__2 
       (.I0(converge_cnt[15]),
        .I1(converge_cnt[12]),
        .I2(converge_cnt[4]),
        .I3(converge_cnt[5]),
        .I4(out[1]),
        .I5(out[0]),
        .O(\FSM_onehot_fsm[4]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \FSM_onehot_fsm[4]_i_5__2 
       (.I0(converge_cnt[19]),
        .I1(converge_cnt[7]),
        .I2(converge_cnt[11]),
        .I3(\FSM_onehot_fsm[4]_i_8__2_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_9__2_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \FSM_onehot_fsm[4]_i_6__2 
       (.I0(\FSM_onehot_fsm[4]_i_10__2_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_11__2_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_12__2_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_13__2_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_14__2_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_7__2_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_6__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_7__2 
       (.I0(converge_cnt[16]),
        .I1(converge_cnt[3]),
        .I2(converge_cnt[14]),
        .I3(converge_cnt[6]),
        .O(\FSM_onehot_fsm[4]_i_7__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_8__2 
       (.I0(converge_cnt[9]),
        .I1(converge_cnt[10]),
        .I2(converge_cnt[8]),
        .I3(converge_cnt[0]),
        .O(\FSM_onehot_fsm[4]_i_8__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_onehot_fsm[4]_i_9__2 
       (.I0(converge_cnt[22]),
        .I1(converge_cnt[13]),
        .I2(converge_cnt[2]),
        .I3(converge_cnt[21]),
        .O(\FSM_onehot_fsm[4]_i_9__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \FSM_onehot_fsm_rx[2]_i_1__2 
       (.I0(out[1]),
        .I1(Q[0]),
        .I2(out[0]),
        .I3(preset_done),
        .I4(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \FSM_onehot_fsm_rx[5]_i_1__2 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(\FSM_onehot_fsm_rx_reg[5] [2]),
        .I3(\FSM_onehot_fsm_rx_reg[5] [0]),
        .I4(\FSM_onehot_fsm_rx_reg[5] [1]),
        .I5(Q[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \FSM_onehot_fsm_rx[6]_i_1__2 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .I3(preset_done),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_rx[6]_i_2__2_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm_rx[6]_i_2__2 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .O(\FSM_onehot_fsm_rx[6]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AAAFFFF0800)) 
    adapt_done_cnt_i_1__2
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .I5(adapt_done_cnt_i_2__2_n_0),
        .O(adapt_done_cnt_i_1__2_n_0));
  LUT5 #(
    .INIT(32'h55005503)) 
    adapt_done_cnt_i_2__2
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(adapt_done_cnt_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1__2_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hF8000000)) 
    adapt_done_i_1__2
       (.I0(out[1]),
        .I1(out[0]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(new_txcoeff_req_reg2),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h44444044)) 
    \converge_cnt[0]_i_1__2 
       (.I0(converge_cnt[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[0]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[10]_i_1__2 
       (.I0(converge_cnt0[10]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[10]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[11]_i_1__2 
       (.I0(converge_cnt0[11]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[11]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[12]_i_1__2 
       (.I0(converge_cnt0[12]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[12]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[13]_i_1__2 
       (.I0(converge_cnt0[13]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[13]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[14]_i_1__2 
       (.I0(converge_cnt0[14]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[14]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[15]_i_1__2 
       (.I0(converge_cnt0[15]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[15]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[16]_i_1__2 
       (.I0(converge_cnt0[16]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[16]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[17]_i_1__2 
       (.I0(converge_cnt0[17]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[17]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[18]_i_1__2 
       (.I0(converge_cnt0[18]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[18]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[19]_i_1__2 
       (.I0(converge_cnt0[19]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[19]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[1]_i_1__2 
       (.I0(converge_cnt0[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[1]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[20]_i_1__2 
       (.I0(converge_cnt0[20]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[20]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[21]_i_1__2 
       (.I0(converge_cnt0[21]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[21]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[22]_i_1__2 
       (.I0(converge_cnt0[22]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[22]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[2]_i_1__2 
       (.I0(converge_cnt0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[2]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[3]_i_1__2 
       (.I0(converge_cnt0[3]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[3]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[4]_i_1__2 
       (.I0(converge_cnt0[4]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[4]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[5]_i_1__2 
       (.I0(converge_cnt0[5]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[5]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[6]_i_1__2 
       (.I0(converge_cnt0[6]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[6]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[7]_i_1__2 
       (.I0(converge_cnt0[7]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[7]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[8]_i_1__2 
       (.I0(converge_cnt0[8]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[8]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[9]_i_1__2 
       (.I0(converge_cnt0[9]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[0]),
        .Q(converge_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[10]),
        .Q(converge_cnt[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[11]),
        .Q(converge_cnt[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[12]),
        .Q(converge_cnt[12]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[12]_i_2__2 
       (.CI(\converge_cnt_reg[8]_i_2__2_n_0 ),
        .CO({\converge_cnt_reg[12]_i_2__2_n_0 ,\converge_cnt_reg[12]_i_2__2_n_1 ,\converge_cnt_reg[12]_i_2__2_n_2 ,\converge_cnt_reg[12]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[12:9]),
        .S(converge_cnt[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[13]),
        .Q(converge_cnt[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[14]),
        .Q(converge_cnt[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[15]),
        .Q(converge_cnt[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[16]),
        .Q(converge_cnt[16]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[16]_i_2__2 
       (.CI(\converge_cnt_reg[12]_i_2__2_n_0 ),
        .CO({\converge_cnt_reg[16]_i_2__2_n_0 ,\converge_cnt_reg[16]_i_2__2_n_1 ,\converge_cnt_reg[16]_i_2__2_n_2 ,\converge_cnt_reg[16]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[16:13]),
        .S(converge_cnt[16:13]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[17]),
        .Q(converge_cnt[17]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[18]),
        .Q(converge_cnt[18]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[19]),
        .Q(converge_cnt[19]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[1]),
        .Q(converge_cnt[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[20]),
        .Q(converge_cnt[20]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[20]_i_2__2 
       (.CI(\converge_cnt_reg[16]_i_2__2_n_0 ),
        .CO({\converge_cnt_reg[20]_i_2__2_n_0 ,\converge_cnt_reg[20]_i_2__2_n_1 ,\converge_cnt_reg[20]_i_2__2_n_2 ,\converge_cnt_reg[20]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[20:17]),
        .S(converge_cnt[20:17]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[21]),
        .Q(converge_cnt[21]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[22] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[22]),
        .Q(converge_cnt[22]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[22]_i_2__2 
       (.CI(\converge_cnt_reg[20]_i_2__2_n_0 ),
        .CO({\NLW_converge_cnt_reg[22]_i_2__2_CO_UNCONNECTED [3:1],\converge_cnt_reg[22]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[22]_i_2__2_O_UNCONNECTED [3:2],converge_cnt0[22:21]}),
        .S({1'b0,1'b0,converge_cnt[22:21]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[2]),
        .Q(converge_cnt[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[3]),
        .Q(converge_cnt[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[4]),
        .Q(converge_cnt[4]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[4]_i_2__2 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[4]_i_2__2_n_0 ,\converge_cnt_reg[4]_i_2__2_n_1 ,\converge_cnt_reg[4]_i_2__2_n_2 ,\converge_cnt_reg[4]_i_2__2_n_3 }),
        .CYINIT(converge_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[4:1]),
        .S(converge_cnt[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[5]),
        .Q(converge_cnt[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[6]),
        .Q(converge_cnt[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[7]),
        .Q(converge_cnt[7]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[8]),
        .Q(converge_cnt[8]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[8]_i_2__2 
       (.CI(\converge_cnt_reg[4]_i_2__2_n_0 ),
        .CO({\converge_cnt_reg[8]_i_2__2_n_0 ,\converge_cnt_reg[8]_i_2__2_n_1 ,\converge_cnt_reg[8]_i_2__2_n_2 ,\converge_cnt_reg[8]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[8:5]),
        .S(converge_cnt[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[9]),
        .Q(converge_cnt[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [0]),
        .Q(fs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [1]),
        .Q(fs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [2]),
        .Q(fs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [3]),
        .Q(fs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [4]),
        .Q(fs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [5]),
        .Q(fs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [0]),
        .Q(lf_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [1]),
        .Q(lf_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [2]),
        .Q(lf_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [3]),
        .Q(lf_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [4]),
        .Q(lf_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [5]),
        .Q(lf_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hAAAAAAFEAAAAAA02)) 
    lffs_sel_i_1__2
       (.I0(\FSM_onehot_fsm[3]_i_2__2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(rxeqscan_lffs_sel),
        .O(lffs_sel_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    lffs_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lffs_sel_i_1__2_n_0),
        .Q(rxeqscan_lffs_sel),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hDDDDDDDC88888888)) 
    \new_txcoeff[2]_i_1__2 
       (.I0(\FSM_onehot_fsm[3]_i_2__2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I5(new_txcoeff),
        .O(\new_txcoeff[2]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1__2
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \new_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\new_txcoeff[2]_i_1__2_n_0 ),
        .Q(new_txcoeff),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1_reg_0),
        .Q(new_txcoeff_req_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1__2
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(preset_valid_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(preset_done_1));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_done_1),
        .Q(preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [0]),
        .Q(preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [1]),
        .Q(preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [2]),
        .Q(preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hA800FFFFA8000000)) 
    rxeq_adapt_done_i_1__2
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg_reg_0),
        .I2(rxeqscan_adapt_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg),
        .I5(rxeq_adapt_done_reg_0),
        .O(new_txcoeff_done_reg_0));
  LUT6 #(
    .INIT(64'hFF00FF33AA00A800)) 
    rxeq_adapt_done_reg_i_1__2
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg),
        .I2(rxeqscan_new_txcoeff_done),
        .I3(Q[3]),
        .I4(\rxeq_new_txcoeff_reg[2] ),
        .I5(rxeq_adapt_done_reg_reg_0),
        .O(adapt_done_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    rxeq_done_i_1__2
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(rxeqscan_new_txcoeff_done),
        .O(rxeq_done));
  LUT6 #(
    .INIT(64'h80FFFFFF80FF0000)) 
    rxeq_lffs_sel_i_1__2
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(rxeqscan_lffs_sel),
        .I3(rxeq_lffs_sel_reg),
        .I4(rxeq_adapt_done_reg),
        .I5(rxeq_lffs_sel_reg_0),
        .O(new_txcoeff_done_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'hA3B3A080)) 
    \rxeq_new_txcoeff[2]_i_1__2 
       (.I0(new_txcoeff),
        .I1(\rxeq_new_txcoeff_reg[2] ),
        .I2(Q[3]),
        .I3(rxeqscan_new_txcoeff_done),
        .I4(\rxeq_new_txcoeff_reg[2]_0 ),
        .O(\new_txcoeff_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h2)) 
    rxeq_new_txcoeff_req_i_1__2
       (.I0(Q[3]),
        .I1(rxeqscan_new_txcoeff_done),
        .O(rxeq_new_txcoeff_req));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [0]),
        .Q(txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [10]),
        .Q(txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [11]),
        .Q(txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [12]),
        .Q(txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [13]),
        .Q(txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [14]),
        .Q(txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [15]),
        .Q(txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [16]),
        .Q(txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [17]),
        .Q(txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [1]),
        .Q(txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [2]),
        .Q(txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [3]),
        .Q(txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [4]),
        .Q(txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [5]),
        .Q(txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [6]),
        .Q(txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [7]),
        .Q(txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [8]),
        .Q(txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [9]),
        .Q(txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [0]),
        .Q(txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [1]),
        .Q(txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [2]),
        .Q(txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [3]),
        .Q(txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_rxeq_scan" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_rxeq_scan_18
   (\new_txcoeff_reg[2]_0 ,
    D,
    rxeq_new_txcoeff_req,
    rxeq_done,
    adapt_done_reg_0,
    new_txcoeff_done_reg_0,
    new_txcoeff_done_reg_1,
    RST_CPLLRESET,
    pipe_pclk_in,
    new_txcoeff_req_reg1_reg_0,
    rxeq_preset_valid,
    out,
    \rxeq_new_txcoeff_reg[2] ,
    Q,
    \rxeq_new_txcoeff_reg[2]_0 ,
    \FSM_onehot_fsm_rx_reg[5] ,
    rxeq_adapt_done_reg_reg,
    rxeq_adapt_done_reg_reg_0,
    rxeq_adapt_done_reg,
    rxeq_adapt_done_reg_0,
    rxeq_lffs_sel_reg,
    rxeq_lffs_sel_reg_0,
    \preset_reg1_reg[2]_0 ,
    \txpreset_reg1_reg[3]_0 ,
    \txcoeff_reg1_reg[17]_0 ,
    \fs_reg1_reg[5]_0 ,
    \lf_reg1_reg[5]_0 );
  output \new_txcoeff_reg[2]_0 ;
  output [2:0]D;
  output rxeq_new_txcoeff_req;
  output rxeq_done;
  output adapt_done_reg_0;
  output new_txcoeff_done_reg_0;
  output new_txcoeff_done_reg_1;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input new_txcoeff_req_reg1_reg_0;
  input rxeq_preset_valid;
  input [1:0]out;
  input \rxeq_new_txcoeff_reg[2] ;
  input [4:0]Q;
  input \rxeq_new_txcoeff_reg[2]_0 ;
  input [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  input rxeq_adapt_done_reg_reg;
  input rxeq_adapt_done_reg_reg_0;
  input rxeq_adapt_done_reg;
  input rxeq_adapt_done_reg_0;
  input rxeq_lffs_sel_reg;
  input rxeq_lffs_sel_reg_0;
  input [2:0]\preset_reg1_reg[2]_0 ;
  input [3:0]\txpreset_reg1_reg[3]_0 ;
  input [17:0]\txcoeff_reg1_reg[17]_0 ;
  input [5:0]\fs_reg1_reg[5]_0 ;
  input [5:0]\lf_reg1_reg[5]_0 ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm[3]_i_3__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_10__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_11__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_12__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_13__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_14__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_9__1_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx[6]_i_2__1_n_0 ;
  wire [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  wire [4:0]Q;
  wire RST_CPLLRESET;
  wire adapt_done;
  wire adapt_done_cnt_i_1__1_n_0;
  wire adapt_done_cnt_i_2__1_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire adapt_done_reg_0;
  wire [22:0]converge_cnt;
  wire [22:1]converge_cnt0;
  wire [22:0]converge_cnt_0;
  wire \converge_cnt_reg[12]_i_2__1_n_0 ;
  wire \converge_cnt_reg[12]_i_2__1_n_1 ;
  wire \converge_cnt_reg[12]_i_2__1_n_2 ;
  wire \converge_cnt_reg[12]_i_2__1_n_3 ;
  wire \converge_cnt_reg[16]_i_2__1_n_0 ;
  wire \converge_cnt_reg[16]_i_2__1_n_1 ;
  wire \converge_cnt_reg[16]_i_2__1_n_2 ;
  wire \converge_cnt_reg[16]_i_2__1_n_3 ;
  wire \converge_cnt_reg[20]_i_2__1_n_0 ;
  wire \converge_cnt_reg[20]_i_2__1_n_1 ;
  wire \converge_cnt_reg[20]_i_2__1_n_2 ;
  wire \converge_cnt_reg[20]_i_2__1_n_3 ;
  wire \converge_cnt_reg[22]_i_2__1_n_3 ;
  wire \converge_cnt_reg[4]_i_2__1_n_0 ;
  wire \converge_cnt_reg[4]_i_2__1_n_1 ;
  wire \converge_cnt_reg[4]_i_2__1_n_2 ;
  wire \converge_cnt_reg[4]_i_2__1_n_3 ;
  wire \converge_cnt_reg[8]_i_2__1_n_0 ;
  wire \converge_cnt_reg[8]_i_2__1_n_1 ;
  wire \converge_cnt_reg[8]_i_2__1_n_2 ;
  wire \converge_cnt_reg[8]_i_2__1_n_3 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg1;
  wire [5:0]\fs_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg1;
  wire [5:0]\lf_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg2;
  wire lffs_sel_i_1__1_n_0;
  wire [2:2]new_txcoeff;
  wire \new_txcoeff[2]_i_1__1_n_0 ;
  wire new_txcoeff_done;
  wire new_txcoeff_done_reg_0;
  wire new_txcoeff_done_reg_1;
  wire \new_txcoeff_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg1;
  wire new_txcoeff_req_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pipe_pclk_in;
  wire preset_done;
  wire preset_done_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg1;
  wire [2:0]\preset_reg1_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg2;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_0;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire rxeq_done;
  wire rxeq_lffs_sel_reg;
  wire rxeq_lffs_sel_reg_0;
  wire \rxeq_new_txcoeff_reg[2] ;
  wire \rxeq_new_txcoeff_reg[2]_0 ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_preset_valid;
  wire rxeqscan_adapt_done;
  wire rxeqscan_lffs_sel;
  wire rxeqscan_new_txcoeff_done;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg1;
  wire [17:0]\txcoeff_reg1_reg[17]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg1;
  wire [3:0]\txpreset_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg2;
  wire [3:1]\NLW_converge_cnt_reg[22]_i_2__1_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[22]_i_2__1_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0F00CFCF0F11CFDD)) 
    \FSM_onehot_fsm[1]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I2(preset_valid_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1__1 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABBBBBBBA)) 
    \FSM_onehot_fsm[3]_i_1__1 
       (.I0(\FSM_onehot_fsm[3]_i_2__1_n_0 ),
        .I1(\FSM_onehot_fsm[3]_i_3__1_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_3__1_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_4__1_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_5__1_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_6__1_n_0 ),
        .O(\FSM_onehot_fsm[3]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_onehot_fsm[3]_i_2__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(new_txcoeff_req_reg2),
        .I2(preset_valid_reg2),
        .O(\FSM_onehot_fsm[3]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_onehot_fsm[3]_i_3__1 
       (.I0(adapt_done_cnt_reg_n_0),
        .I1(out[1]),
        .I2(out[0]),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    \FSM_onehot_fsm[4]_i_10__1 
       (.I0(converge_cnt[13]),
        .I1(converge_cnt[2]),
        .I2(converge_cnt[21]),
        .I3(converge_cnt[19]),
        .O(\FSM_onehot_fsm[4]_i_10__1_n_0 ));
  LUT4 #(
    .INIT(16'hBFFF)) 
    \FSM_onehot_fsm[4]_i_11__1 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(converge_cnt[11]),
        .I3(converge_cnt[8]),
        .O(\FSM_onehot_fsm[4]_i_11__1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_fsm[4]_i_12__1 
       (.I0(converge_cnt[22]),
        .I1(converge_cnt[0]),
        .I2(converge_cnt[7]),
        .O(\FSM_onehot_fsm[4]_i_12__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF7FFFFFFFF)) 
    \FSM_onehot_fsm[4]_i_13__1 
       (.I0(converge_cnt[9]),
        .I1(converge_cnt[10]),
        .I2(converge_cnt[4]),
        .I3(converge_cnt[5]),
        .I4(converge_cnt[12]),
        .I5(converge_cnt[15]),
        .O(\FSM_onehot_fsm[4]_i_13__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_14__1 
       (.I0(converge_cnt[17]),
        .I1(converge_cnt[18]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[1]),
        .O(\FSM_onehot_fsm[4]_i_14__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAAABAAAAAAAA)) 
    \FSM_onehot_fsm[4]_i_1__1 
       (.I0(\FSM_onehot_fsm[4]_i_2__1_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3__1_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_4__1_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_5__1_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_6__1_n_0 ),
        .I5(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888F88888)) 
    \FSM_onehot_fsm[4]_i_2__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(out[0]),
        .I4(out[1]),
        .I5(adapt_done_cnt_reg_n_0),
        .O(\FSM_onehot_fsm[4]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \FSM_onehot_fsm[4]_i_3__1 
       (.I0(converge_cnt[1]),
        .I1(converge_cnt[20]),
        .I2(converge_cnt[18]),
        .I3(converge_cnt[17]),
        .I4(\FSM_onehot_fsm[4]_i_7__1_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFDFFFFFFFD)) 
    \FSM_onehot_fsm[4]_i_4__1 
       (.I0(converge_cnt[15]),
        .I1(converge_cnt[12]),
        .I2(converge_cnt[4]),
        .I3(converge_cnt[5]),
        .I4(out[1]),
        .I5(out[0]),
        .O(\FSM_onehot_fsm[4]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \FSM_onehot_fsm[4]_i_5__1 
       (.I0(converge_cnt[19]),
        .I1(converge_cnt[7]),
        .I2(converge_cnt[11]),
        .I3(\FSM_onehot_fsm[4]_i_8__1_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_9__1_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \FSM_onehot_fsm[4]_i_6__1 
       (.I0(\FSM_onehot_fsm[4]_i_10__1_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_11__1_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_12__1_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_13__1_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_14__1_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_7__1_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_6__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_7__1 
       (.I0(converge_cnt[16]),
        .I1(converge_cnt[3]),
        .I2(converge_cnt[14]),
        .I3(converge_cnt[6]),
        .O(\FSM_onehot_fsm[4]_i_7__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_8__1 
       (.I0(converge_cnt[9]),
        .I1(converge_cnt[10]),
        .I2(converge_cnt[8]),
        .I3(converge_cnt[0]),
        .O(\FSM_onehot_fsm[4]_i_8__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_onehot_fsm[4]_i_9__1 
       (.I0(converge_cnt[22]),
        .I1(converge_cnt[13]),
        .I2(converge_cnt[2]),
        .I3(converge_cnt[21]),
        .O(\FSM_onehot_fsm[4]_i_9__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \FSM_onehot_fsm_rx[2]_i_1__1 
       (.I0(out[1]),
        .I1(Q[0]),
        .I2(out[0]),
        .I3(preset_done),
        .I4(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \FSM_onehot_fsm_rx[5]_i_1__1 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(\FSM_onehot_fsm_rx_reg[5] [2]),
        .I3(\FSM_onehot_fsm_rx_reg[5] [0]),
        .I4(\FSM_onehot_fsm_rx_reg[5] [1]),
        .I5(Q[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \FSM_onehot_fsm_rx[6]_i_1__1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .I3(preset_done),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_rx[6]_i_2__1_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm_rx[6]_i_2__1 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .O(\FSM_onehot_fsm_rx[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000AAAFFFF0800)) 
    adapt_done_cnt_i_1__1
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .I5(adapt_done_cnt_i_2__1_n_0),
        .O(adapt_done_cnt_i_1__1_n_0));
  LUT5 #(
    .INIT(32'h55005503)) 
    adapt_done_cnt_i_2__1
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(adapt_done_cnt_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1__1_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hF8000000)) 
    adapt_done_i_1__1
       (.I0(out[1]),
        .I1(out[0]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(new_txcoeff_req_reg2),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h44444044)) 
    \converge_cnt[0]_i_1__1 
       (.I0(converge_cnt[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[0]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[10]_i_1__1 
       (.I0(converge_cnt0[10]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[10]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[11]_i_1__1 
       (.I0(converge_cnt0[11]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[11]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[12]_i_1__1 
       (.I0(converge_cnt0[12]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[12]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[13]_i_1__1 
       (.I0(converge_cnt0[13]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[13]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[14]_i_1__1 
       (.I0(converge_cnt0[14]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[14]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[15]_i_1__1 
       (.I0(converge_cnt0[15]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[15]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[16]_i_1__1 
       (.I0(converge_cnt0[16]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[16]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[17]_i_1__1 
       (.I0(converge_cnt0[17]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[17]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[18]_i_1__1 
       (.I0(converge_cnt0[18]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[18]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[19]_i_1__1 
       (.I0(converge_cnt0[19]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[19]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[1]_i_1__1 
       (.I0(converge_cnt0[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[1]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[20]_i_1__1 
       (.I0(converge_cnt0[20]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[20]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[21]_i_1__1 
       (.I0(converge_cnt0[21]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[21]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[22]_i_1__1 
       (.I0(converge_cnt0[22]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[22]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[2]_i_1__1 
       (.I0(converge_cnt0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[2]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[3]_i_1__1 
       (.I0(converge_cnt0[3]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[3]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[4]_i_1__1 
       (.I0(converge_cnt0[4]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[4]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[5]_i_1__1 
       (.I0(converge_cnt0[5]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[5]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[6]_i_1__1 
       (.I0(converge_cnt0[6]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[6]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[7]_i_1__1 
       (.I0(converge_cnt0[7]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[7]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[8]_i_1__1 
       (.I0(converge_cnt0[8]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[8]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[9]_i_1__1 
       (.I0(converge_cnt0[9]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[0]),
        .Q(converge_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[10]),
        .Q(converge_cnt[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[11]),
        .Q(converge_cnt[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[12]),
        .Q(converge_cnt[12]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[12]_i_2__1 
       (.CI(\converge_cnt_reg[8]_i_2__1_n_0 ),
        .CO({\converge_cnt_reg[12]_i_2__1_n_0 ,\converge_cnt_reg[12]_i_2__1_n_1 ,\converge_cnt_reg[12]_i_2__1_n_2 ,\converge_cnt_reg[12]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[12:9]),
        .S(converge_cnt[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[13]),
        .Q(converge_cnt[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[14]),
        .Q(converge_cnt[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[15]),
        .Q(converge_cnt[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[16]),
        .Q(converge_cnt[16]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[16]_i_2__1 
       (.CI(\converge_cnt_reg[12]_i_2__1_n_0 ),
        .CO({\converge_cnt_reg[16]_i_2__1_n_0 ,\converge_cnt_reg[16]_i_2__1_n_1 ,\converge_cnt_reg[16]_i_2__1_n_2 ,\converge_cnt_reg[16]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[16:13]),
        .S(converge_cnt[16:13]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[17]),
        .Q(converge_cnt[17]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[18]),
        .Q(converge_cnt[18]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[19]),
        .Q(converge_cnt[19]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[1]),
        .Q(converge_cnt[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[20]),
        .Q(converge_cnt[20]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[20]_i_2__1 
       (.CI(\converge_cnt_reg[16]_i_2__1_n_0 ),
        .CO({\converge_cnt_reg[20]_i_2__1_n_0 ,\converge_cnt_reg[20]_i_2__1_n_1 ,\converge_cnt_reg[20]_i_2__1_n_2 ,\converge_cnt_reg[20]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[20:17]),
        .S(converge_cnt[20:17]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[21]),
        .Q(converge_cnt[21]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[22] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[22]),
        .Q(converge_cnt[22]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[22]_i_2__1 
       (.CI(\converge_cnt_reg[20]_i_2__1_n_0 ),
        .CO({\NLW_converge_cnt_reg[22]_i_2__1_CO_UNCONNECTED [3:1],\converge_cnt_reg[22]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[22]_i_2__1_O_UNCONNECTED [3:2],converge_cnt0[22:21]}),
        .S({1'b0,1'b0,converge_cnt[22:21]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[2]),
        .Q(converge_cnt[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[3]),
        .Q(converge_cnt[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[4]),
        .Q(converge_cnt[4]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[4]_i_2__1 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[4]_i_2__1_n_0 ,\converge_cnt_reg[4]_i_2__1_n_1 ,\converge_cnt_reg[4]_i_2__1_n_2 ,\converge_cnt_reg[4]_i_2__1_n_3 }),
        .CYINIT(converge_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[4:1]),
        .S(converge_cnt[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[5]),
        .Q(converge_cnt[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[6]),
        .Q(converge_cnt[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[7]),
        .Q(converge_cnt[7]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[8]),
        .Q(converge_cnt[8]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[8]_i_2__1 
       (.CI(\converge_cnt_reg[4]_i_2__1_n_0 ),
        .CO({\converge_cnt_reg[8]_i_2__1_n_0 ,\converge_cnt_reg[8]_i_2__1_n_1 ,\converge_cnt_reg[8]_i_2__1_n_2 ,\converge_cnt_reg[8]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[8:5]),
        .S(converge_cnt[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[9]),
        .Q(converge_cnt[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [0]),
        .Q(fs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [1]),
        .Q(fs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [2]),
        .Q(fs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [3]),
        .Q(fs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [4]),
        .Q(fs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [5]),
        .Q(fs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [0]),
        .Q(lf_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [1]),
        .Q(lf_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [2]),
        .Q(lf_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [3]),
        .Q(lf_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [4]),
        .Q(lf_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [5]),
        .Q(lf_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hAAAAAAFEAAAAAA02)) 
    lffs_sel_i_1__1
       (.I0(\FSM_onehot_fsm[3]_i_2__1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(rxeqscan_lffs_sel),
        .O(lffs_sel_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    lffs_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lffs_sel_i_1__1_n_0),
        .Q(rxeqscan_lffs_sel),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hDDDDDDDC88888888)) 
    \new_txcoeff[2]_i_1__1 
       (.I0(\FSM_onehot_fsm[3]_i_2__1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I5(new_txcoeff),
        .O(\new_txcoeff[2]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1__1
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \new_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\new_txcoeff[2]_i_1__1_n_0 ),
        .Q(new_txcoeff),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1_reg_0),
        .Q(new_txcoeff_req_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1__1
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(preset_valid_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(preset_done_1));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_done_1),
        .Q(preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [0]),
        .Q(preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [1]),
        .Q(preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [2]),
        .Q(preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hA800FFFFA8000000)) 
    rxeq_adapt_done_i_1__1
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg_reg_0),
        .I2(rxeqscan_adapt_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg),
        .I5(rxeq_adapt_done_reg_0),
        .O(new_txcoeff_done_reg_0));
  LUT6 #(
    .INIT(64'hFF00FF33AA00A800)) 
    rxeq_adapt_done_reg_i_1__1
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg),
        .I2(rxeqscan_new_txcoeff_done),
        .I3(Q[3]),
        .I4(\rxeq_new_txcoeff_reg[2] ),
        .I5(rxeq_adapt_done_reg_reg_0),
        .O(adapt_done_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    rxeq_done_i_1__1
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(rxeqscan_new_txcoeff_done),
        .O(rxeq_done));
  LUT6 #(
    .INIT(64'h80FFFFFF80FF0000)) 
    rxeq_lffs_sel_i_1__1
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(rxeqscan_lffs_sel),
        .I3(rxeq_lffs_sel_reg),
        .I4(rxeq_adapt_done_reg),
        .I5(rxeq_lffs_sel_reg_0),
        .O(new_txcoeff_done_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'hA3B3A080)) 
    \rxeq_new_txcoeff[2]_i_1__1 
       (.I0(new_txcoeff),
        .I1(\rxeq_new_txcoeff_reg[2] ),
        .I2(Q[3]),
        .I3(rxeqscan_new_txcoeff_done),
        .I4(\rxeq_new_txcoeff_reg[2]_0 ),
        .O(\new_txcoeff_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h2)) 
    rxeq_new_txcoeff_req_i_1__1
       (.I0(Q[3]),
        .I1(rxeqscan_new_txcoeff_done),
        .O(rxeq_new_txcoeff_req));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [0]),
        .Q(txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [10]),
        .Q(txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [11]),
        .Q(txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [12]),
        .Q(txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [13]),
        .Q(txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [14]),
        .Q(txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [15]),
        .Q(txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [16]),
        .Q(txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [17]),
        .Q(txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [1]),
        .Q(txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [2]),
        .Q(txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [3]),
        .Q(txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [4]),
        .Q(txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [5]),
        .Q(txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [6]),
        .Q(txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [7]),
        .Q(txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [8]),
        .Q(txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [9]),
        .Q(txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [0]),
        .Q(txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [1]),
        .Q(txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [2]),
        .Q(txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [3]),
        .Q(txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_rxeq_scan" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_rxeq_scan_20
   (\new_txcoeff_reg[2]_0 ,
    D,
    rxeq_new_txcoeff_req,
    rxeq_done,
    adapt_done_reg_0,
    new_txcoeff_done_reg_0,
    new_txcoeff_done_reg_1,
    RST_CPLLRESET,
    pipe_pclk_in,
    new_txcoeff_req_reg1_reg_0,
    rxeq_preset_valid,
    out,
    \rxeq_new_txcoeff_reg[2] ,
    Q,
    \rxeq_new_txcoeff_reg[2]_0 ,
    \FSM_onehot_fsm_rx_reg[5] ,
    rxeq_adapt_done_reg_reg,
    rxeq_adapt_done_reg_reg_0,
    rxeq_adapt_done_reg,
    USER_RXEQ_ADAPT_DONE,
    rxeq_lffs_sel_reg,
    rxeq_lffs_sel_reg_0,
    \preset_reg1_reg[2]_0 ,
    \txpreset_reg1_reg[3]_0 ,
    \txcoeff_reg1_reg[17]_0 ,
    \fs_reg1_reg[5]_0 ,
    \lf_reg1_reg[5]_0 );
  output \new_txcoeff_reg[2]_0 ;
  output [2:0]D;
  output rxeq_new_txcoeff_req;
  output rxeq_done;
  output adapt_done_reg_0;
  output new_txcoeff_done_reg_0;
  output new_txcoeff_done_reg_1;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input new_txcoeff_req_reg1_reg_0;
  input rxeq_preset_valid;
  input [1:0]out;
  input \rxeq_new_txcoeff_reg[2] ;
  input [4:0]Q;
  input \rxeq_new_txcoeff_reg[2]_0 ;
  input [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  input rxeq_adapt_done_reg_reg;
  input rxeq_adapt_done_reg_reg_0;
  input rxeq_adapt_done_reg;
  input USER_RXEQ_ADAPT_DONE;
  input rxeq_lffs_sel_reg;
  input rxeq_lffs_sel_reg_0;
  input [2:0]\preset_reg1_reg[2]_0 ;
  input [3:0]\txpreset_reg1_reg[3]_0 ;
  input [17:0]\txcoeff_reg1_reg[17]_0 ;
  input [5:0]\fs_reg1_reg[5]_0 ;
  input [5:0]\lf_reg1_reg[5]_0 ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[3]_i_3__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_10__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_11__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_12__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_13__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_14__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_9__0_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx[6]_i_2__0_n_0 ;
  wire [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  wire [4:0]Q;
  wire RST_CPLLRESET;
  wire USER_RXEQ_ADAPT_DONE;
  wire adapt_done;
  wire adapt_done_cnt_i_1__0_n_0;
  wire adapt_done_cnt_i_2__0_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire adapt_done_reg_0;
  wire [22:0]converge_cnt;
  wire [22:1]converge_cnt0;
  wire [22:0]converge_cnt_0;
  wire \converge_cnt_reg[12]_i_2__0_n_0 ;
  wire \converge_cnt_reg[12]_i_2__0_n_1 ;
  wire \converge_cnt_reg[12]_i_2__0_n_2 ;
  wire \converge_cnt_reg[12]_i_2__0_n_3 ;
  wire \converge_cnt_reg[16]_i_2__0_n_0 ;
  wire \converge_cnt_reg[16]_i_2__0_n_1 ;
  wire \converge_cnt_reg[16]_i_2__0_n_2 ;
  wire \converge_cnt_reg[16]_i_2__0_n_3 ;
  wire \converge_cnt_reg[20]_i_2__0_n_0 ;
  wire \converge_cnt_reg[20]_i_2__0_n_1 ;
  wire \converge_cnt_reg[20]_i_2__0_n_2 ;
  wire \converge_cnt_reg[20]_i_2__0_n_3 ;
  wire \converge_cnt_reg[22]_i_2__0_n_3 ;
  wire \converge_cnt_reg[4]_i_2__0_n_0 ;
  wire \converge_cnt_reg[4]_i_2__0_n_1 ;
  wire \converge_cnt_reg[4]_i_2__0_n_2 ;
  wire \converge_cnt_reg[4]_i_2__0_n_3 ;
  wire \converge_cnt_reg[8]_i_2__0_n_0 ;
  wire \converge_cnt_reg[8]_i_2__0_n_1 ;
  wire \converge_cnt_reg[8]_i_2__0_n_2 ;
  wire \converge_cnt_reg[8]_i_2__0_n_3 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg1;
  wire [5:0]\fs_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg1;
  wire [5:0]\lf_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg2;
  wire lffs_sel_i_1__0_n_0;
  wire [2:2]new_txcoeff;
  wire \new_txcoeff[2]_i_1__0_n_0 ;
  wire new_txcoeff_done;
  wire new_txcoeff_done_reg_0;
  wire new_txcoeff_done_reg_1;
  wire \new_txcoeff_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg1;
  wire new_txcoeff_req_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pipe_pclk_in;
  wire preset_done;
  wire preset_done_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg1;
  wire [2:0]\preset_reg1_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg2;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire rxeq_done;
  wire rxeq_lffs_sel_reg;
  wire rxeq_lffs_sel_reg_0;
  wire \rxeq_new_txcoeff_reg[2] ;
  wire \rxeq_new_txcoeff_reg[2]_0 ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_preset_valid;
  wire rxeqscan_adapt_done;
  wire rxeqscan_lffs_sel;
  wire rxeqscan_new_txcoeff_done;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg1;
  wire [17:0]\txcoeff_reg1_reg[17]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg1;
  wire [3:0]\txpreset_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg2;
  wire [3:1]\NLW_converge_cnt_reg[22]_i_2__0_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[22]_i_2__0_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0F00CFCF0F11CFDD)) 
    \FSM_onehot_fsm[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I2(preset_valid_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1__0 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABBBBBBBA)) 
    \FSM_onehot_fsm[3]_i_1__0 
       (.I0(\FSM_onehot_fsm[3]_i_2__0_n_0 ),
        .I1(\FSM_onehot_fsm[3]_i_3__0_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_3__0_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_4__0_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_5__0_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_6__0_n_0 ),
        .O(\FSM_onehot_fsm[3]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_onehot_fsm[3]_i_2__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(new_txcoeff_req_reg2),
        .I2(preset_valid_reg2),
        .O(\FSM_onehot_fsm[3]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_onehot_fsm[3]_i_3__0 
       (.I0(adapt_done_cnt_reg_n_0),
        .I1(out[1]),
        .I2(out[0]),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    \FSM_onehot_fsm[4]_i_10__0 
       (.I0(converge_cnt[13]),
        .I1(converge_cnt[2]),
        .I2(converge_cnt[21]),
        .I3(converge_cnt[19]),
        .O(\FSM_onehot_fsm[4]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'hBFFF)) 
    \FSM_onehot_fsm[4]_i_11__0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(converge_cnt[11]),
        .I3(converge_cnt[8]),
        .O(\FSM_onehot_fsm[4]_i_11__0_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_fsm[4]_i_12__0 
       (.I0(converge_cnt[22]),
        .I1(converge_cnt[0]),
        .I2(converge_cnt[7]),
        .O(\FSM_onehot_fsm[4]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF7FFFFFFFF)) 
    \FSM_onehot_fsm[4]_i_13__0 
       (.I0(converge_cnt[9]),
        .I1(converge_cnt[10]),
        .I2(converge_cnt[4]),
        .I3(converge_cnt[5]),
        .I4(converge_cnt[12]),
        .I5(converge_cnt[15]),
        .O(\FSM_onehot_fsm[4]_i_13__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_14__0 
       (.I0(converge_cnt[17]),
        .I1(converge_cnt[18]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[1]),
        .O(\FSM_onehot_fsm[4]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAAABAAAAAAAA)) 
    \FSM_onehot_fsm[4]_i_1__0 
       (.I0(\FSM_onehot_fsm[4]_i_2__0_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3__0_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_4__0_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_5__0_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_6__0_n_0 ),
        .I5(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888F88888)) 
    \FSM_onehot_fsm[4]_i_2__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(out[0]),
        .I4(out[1]),
        .I5(adapt_done_cnt_reg_n_0),
        .O(\FSM_onehot_fsm[4]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \FSM_onehot_fsm[4]_i_3__0 
       (.I0(converge_cnt[1]),
        .I1(converge_cnt[20]),
        .I2(converge_cnt[18]),
        .I3(converge_cnt[17]),
        .I4(\FSM_onehot_fsm[4]_i_7__0_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFDFFFFFFFD)) 
    \FSM_onehot_fsm[4]_i_4__0 
       (.I0(converge_cnt[15]),
        .I1(converge_cnt[12]),
        .I2(converge_cnt[4]),
        .I3(converge_cnt[5]),
        .I4(out[1]),
        .I5(out[0]),
        .O(\FSM_onehot_fsm[4]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \FSM_onehot_fsm[4]_i_5__0 
       (.I0(converge_cnt[19]),
        .I1(converge_cnt[7]),
        .I2(converge_cnt[11]),
        .I3(\FSM_onehot_fsm[4]_i_8__0_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_9__0_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \FSM_onehot_fsm[4]_i_6__0 
       (.I0(\FSM_onehot_fsm[4]_i_10__0_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_11__0_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_12__0_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_13__0_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_14__0_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_7__0_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_6__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_7__0 
       (.I0(converge_cnt[16]),
        .I1(converge_cnt[3]),
        .I2(converge_cnt[14]),
        .I3(converge_cnt[6]),
        .O(\FSM_onehot_fsm[4]_i_7__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_8__0 
       (.I0(converge_cnt[9]),
        .I1(converge_cnt[10]),
        .I2(converge_cnt[8]),
        .I3(converge_cnt[0]),
        .O(\FSM_onehot_fsm[4]_i_8__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_onehot_fsm[4]_i_9__0 
       (.I0(converge_cnt[22]),
        .I1(converge_cnt[13]),
        .I2(converge_cnt[2]),
        .I3(converge_cnt[21]),
        .O(\FSM_onehot_fsm[4]_i_9__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \FSM_onehot_fsm_rx[2]_i_1__0 
       (.I0(out[1]),
        .I1(Q[0]),
        .I2(out[0]),
        .I3(preset_done),
        .I4(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \FSM_onehot_fsm_rx[5]_i_1__0 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(\FSM_onehot_fsm_rx_reg[5] [2]),
        .I3(\FSM_onehot_fsm_rx_reg[5] [0]),
        .I4(\FSM_onehot_fsm_rx_reg[5] [1]),
        .I5(Q[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \FSM_onehot_fsm_rx[6]_i_1__0 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .I3(preset_done),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_rx[6]_i_2__0_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm_rx[6]_i_2__0 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .O(\FSM_onehot_fsm_rx[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000AAAFFFF0800)) 
    adapt_done_cnt_i_1__0
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .I5(adapt_done_cnt_i_2__0_n_0),
        .O(adapt_done_cnt_i_1__0_n_0));
  LUT5 #(
    .INIT(32'h55005503)) 
    adapt_done_cnt_i_2__0
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(adapt_done_cnt_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1__0_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hF8000000)) 
    adapt_done_i_1__0
       (.I0(out[1]),
        .I1(out[0]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(new_txcoeff_req_reg2),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h44444044)) 
    \converge_cnt[0]_i_1__0 
       (.I0(converge_cnt[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[0]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[10]_i_1__0 
       (.I0(converge_cnt0[10]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[10]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[11]_i_1__0 
       (.I0(converge_cnt0[11]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[11]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[12]_i_1__0 
       (.I0(converge_cnt0[12]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[12]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[13]_i_1__0 
       (.I0(converge_cnt0[13]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[13]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[14]_i_1__0 
       (.I0(converge_cnt0[14]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[14]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[15]_i_1__0 
       (.I0(converge_cnt0[15]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[15]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[16]_i_1__0 
       (.I0(converge_cnt0[16]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[16]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[17]_i_1__0 
       (.I0(converge_cnt0[17]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[17]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[18]_i_1__0 
       (.I0(converge_cnt0[18]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[18]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[19]_i_1__0 
       (.I0(converge_cnt0[19]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[19]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[1]_i_1__0 
       (.I0(converge_cnt0[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[1]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[20]_i_1__0 
       (.I0(converge_cnt0[20]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[20]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[21]_i_1__0 
       (.I0(converge_cnt0[21]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[21]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[22]_i_1__0 
       (.I0(converge_cnt0[22]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[22]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[2]_i_1__0 
       (.I0(converge_cnt0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[2]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[3]_i_1__0 
       (.I0(converge_cnt0[3]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[3]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[4]_i_1__0 
       (.I0(converge_cnt0[4]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[4]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[5]_i_1__0 
       (.I0(converge_cnt0[5]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[5]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[6]_i_1__0 
       (.I0(converge_cnt0[6]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[6]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[7]_i_1__0 
       (.I0(converge_cnt0[7]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[7]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[8]_i_1__0 
       (.I0(converge_cnt0[8]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[8]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[9]_i_1__0 
       (.I0(converge_cnt0[9]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[0]),
        .Q(converge_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[10]),
        .Q(converge_cnt[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[11]),
        .Q(converge_cnt[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[12]),
        .Q(converge_cnt[12]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[12]_i_2__0 
       (.CI(\converge_cnt_reg[8]_i_2__0_n_0 ),
        .CO({\converge_cnt_reg[12]_i_2__0_n_0 ,\converge_cnt_reg[12]_i_2__0_n_1 ,\converge_cnt_reg[12]_i_2__0_n_2 ,\converge_cnt_reg[12]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[12:9]),
        .S(converge_cnt[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[13]),
        .Q(converge_cnt[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[14]),
        .Q(converge_cnt[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[15]),
        .Q(converge_cnt[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[16]),
        .Q(converge_cnt[16]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[16]_i_2__0 
       (.CI(\converge_cnt_reg[12]_i_2__0_n_0 ),
        .CO({\converge_cnt_reg[16]_i_2__0_n_0 ,\converge_cnt_reg[16]_i_2__0_n_1 ,\converge_cnt_reg[16]_i_2__0_n_2 ,\converge_cnt_reg[16]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[16:13]),
        .S(converge_cnt[16:13]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[17]),
        .Q(converge_cnt[17]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[18]),
        .Q(converge_cnt[18]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[19]),
        .Q(converge_cnt[19]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[1]),
        .Q(converge_cnt[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[20]),
        .Q(converge_cnt[20]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[20]_i_2__0 
       (.CI(\converge_cnt_reg[16]_i_2__0_n_0 ),
        .CO({\converge_cnt_reg[20]_i_2__0_n_0 ,\converge_cnt_reg[20]_i_2__0_n_1 ,\converge_cnt_reg[20]_i_2__0_n_2 ,\converge_cnt_reg[20]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[20:17]),
        .S(converge_cnt[20:17]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[21]),
        .Q(converge_cnt[21]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[22] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[22]),
        .Q(converge_cnt[22]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[22]_i_2__0 
       (.CI(\converge_cnt_reg[20]_i_2__0_n_0 ),
        .CO({\NLW_converge_cnt_reg[22]_i_2__0_CO_UNCONNECTED [3:1],\converge_cnt_reg[22]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[22]_i_2__0_O_UNCONNECTED [3:2],converge_cnt0[22:21]}),
        .S({1'b0,1'b0,converge_cnt[22:21]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[2]),
        .Q(converge_cnt[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[3]),
        .Q(converge_cnt[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[4]),
        .Q(converge_cnt[4]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[4]_i_2__0 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[4]_i_2__0_n_0 ,\converge_cnt_reg[4]_i_2__0_n_1 ,\converge_cnt_reg[4]_i_2__0_n_2 ,\converge_cnt_reg[4]_i_2__0_n_3 }),
        .CYINIT(converge_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[4:1]),
        .S(converge_cnt[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[5]),
        .Q(converge_cnt[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[6]),
        .Q(converge_cnt[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[7]),
        .Q(converge_cnt[7]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[8]),
        .Q(converge_cnt[8]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[8]_i_2__0 
       (.CI(\converge_cnt_reg[4]_i_2__0_n_0 ),
        .CO({\converge_cnt_reg[8]_i_2__0_n_0 ,\converge_cnt_reg[8]_i_2__0_n_1 ,\converge_cnt_reg[8]_i_2__0_n_2 ,\converge_cnt_reg[8]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[8:5]),
        .S(converge_cnt[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[9]),
        .Q(converge_cnt[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [0]),
        .Q(fs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [1]),
        .Q(fs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [2]),
        .Q(fs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [3]),
        .Q(fs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [4]),
        .Q(fs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [5]),
        .Q(fs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [0]),
        .Q(lf_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [1]),
        .Q(lf_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [2]),
        .Q(lf_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [3]),
        .Q(lf_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [4]),
        .Q(lf_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [5]),
        .Q(lf_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hAAAAAAFEAAAAAA02)) 
    lffs_sel_i_1__0
       (.I0(\FSM_onehot_fsm[3]_i_2__0_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(rxeqscan_lffs_sel),
        .O(lffs_sel_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    lffs_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lffs_sel_i_1__0_n_0),
        .Q(rxeqscan_lffs_sel),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hDDDDDDDC88888888)) 
    \new_txcoeff[2]_i_1__0 
       (.I0(\FSM_onehot_fsm[3]_i_2__0_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I5(new_txcoeff),
        .O(\new_txcoeff[2]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1__0
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \new_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\new_txcoeff[2]_i_1__0_n_0 ),
        .Q(new_txcoeff),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1_reg_0),
        .Q(new_txcoeff_req_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1__0
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(preset_valid_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(preset_done_1));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_done_1),
        .Q(preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [0]),
        .Q(preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [1]),
        .Q(preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [2]),
        .Q(preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hA800FFFFA8000000)) 
    rxeq_adapt_done_i_1__0
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg_reg_0),
        .I2(rxeqscan_adapt_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg),
        .I5(USER_RXEQ_ADAPT_DONE),
        .O(new_txcoeff_done_reg_0));
  LUT6 #(
    .INIT(64'hFF00FF33AA00A800)) 
    rxeq_adapt_done_reg_i_1__0
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg),
        .I2(rxeqscan_new_txcoeff_done),
        .I3(Q[3]),
        .I4(\rxeq_new_txcoeff_reg[2] ),
        .I5(rxeq_adapt_done_reg_reg_0),
        .O(adapt_done_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    rxeq_done_i_1__0
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(rxeqscan_new_txcoeff_done),
        .O(rxeq_done));
  LUT6 #(
    .INIT(64'h80FFFFFF80FF0000)) 
    rxeq_lffs_sel_i_1__0
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(rxeqscan_lffs_sel),
        .I3(rxeq_lffs_sel_reg),
        .I4(rxeq_adapt_done_reg),
        .I5(rxeq_lffs_sel_reg_0),
        .O(new_txcoeff_done_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT5 #(
    .INIT(32'hA3B3A080)) 
    \rxeq_new_txcoeff[2]_i_1__0 
       (.I0(new_txcoeff),
        .I1(\rxeq_new_txcoeff_reg[2] ),
        .I2(Q[3]),
        .I3(rxeqscan_new_txcoeff_done),
        .I4(\rxeq_new_txcoeff_reg[2]_0 ),
        .O(\new_txcoeff_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h2)) 
    rxeq_new_txcoeff_req_i_1__0
       (.I0(Q[3]),
        .I1(rxeqscan_new_txcoeff_done),
        .O(rxeq_new_txcoeff_req));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [0]),
        .Q(txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [10]),
        .Q(txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [11]),
        .Q(txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [12]),
        .Q(txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [13]),
        .Q(txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [14]),
        .Q(txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [15]),
        .Q(txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [16]),
        .Q(txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [17]),
        .Q(txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [1]),
        .Q(txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [2]),
        .Q(txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [3]),
        .Q(txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [4]),
        .Q(txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [5]),
        .Q(txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [6]),
        .Q(txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [7]),
        .Q(txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [8]),
        .Q(txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [9]),
        .Q(txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [0]),
        .Q(txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [1]),
        .Q(txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [2]),
        .Q(txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [3]),
        .Q(txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "vc709_fmc_ep_rxeq_scan" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_vc709_fmc_ep_rxeq_scan_22
   (\new_txcoeff_reg[2]_0 ,
    D,
    rxeq_new_txcoeff_req,
    rxeq_done,
    adapt_done_reg_0,
    new_txcoeff_done_reg_0,
    new_txcoeff_done_reg_1,
    RST_CPLLRESET,
    pipe_pclk_in,
    new_txcoeff_req_reg1_reg_0,
    rxeq_preset_valid,
    out,
    \rxeq_new_txcoeff_reg[2] ,
    Q,
    \rxeq_new_txcoeff_reg[2]_0 ,
    \FSM_onehot_fsm_rx_reg[5] ,
    rxeq_adapt_done_reg_reg,
    rxeq_adapt_done_reg_reg_0,
    rxeq_adapt_done_reg,
    pipe_rx0_eq_adapt_done,
    rxeq_lffs_sel_reg,
    rxeq_lffs_sel_reg_0,
    \preset_reg1_reg[2]_0 ,
    \txpreset_reg1_reg[3]_0 ,
    \txcoeff_reg1_reg[17]_0 ,
    \fs_reg1_reg[5]_0 ,
    \lf_reg1_reg[5]_0 );
  output \new_txcoeff_reg[2]_0 ;
  output [2:0]D;
  output rxeq_new_txcoeff_req;
  output rxeq_done;
  output adapt_done_reg_0;
  output new_txcoeff_done_reg_0;
  output new_txcoeff_done_reg_1;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input new_txcoeff_req_reg1_reg_0;
  input rxeq_preset_valid;
  input [1:0]out;
  input \rxeq_new_txcoeff_reg[2] ;
  input [4:0]Q;
  input \rxeq_new_txcoeff_reg[2]_0 ;
  input [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  input rxeq_adapt_done_reg_reg;
  input rxeq_adapt_done_reg_reg_0;
  input rxeq_adapt_done_reg;
  input pipe_rx0_eq_adapt_done;
  input rxeq_lffs_sel_reg;
  input rxeq_lffs_sel_reg_0;
  input [2:0]\preset_reg1_reg[2]_0 ;
  input [3:0]\txpreset_reg1_reg[3]_0 ;
  input [17:0]\txcoeff_reg1_reg[17]_0 ;
  input [5:0]\fs_reg1_reg[5]_0 ;
  input [5:0]\lf_reg1_reg[5]_0 ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_3_n_0 ;
  wire \FSM_onehot_fsm[4]_i_10_n_0 ;
  wire \FSM_onehot_fsm[4]_i_11_n_0 ;
  wire \FSM_onehot_fsm[4]_i_12_n_0 ;
  wire \FSM_onehot_fsm[4]_i_13_n_0 ;
  wire \FSM_onehot_fsm[4]_i_14_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8_n_0 ;
  wire \FSM_onehot_fsm[4]_i_9_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx[6]_i_2_n_0 ;
  wire [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  wire [4:0]Q;
  wire RST_CPLLRESET;
  wire adapt_done;
  wire adapt_done_cnt_i_1_n_0;
  wire adapt_done_cnt_i_2_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire adapt_done_reg_0;
  wire [22:0]converge_cnt;
  wire [22:1]converge_cnt0;
  wire [22:0]converge_cnt_0;
  wire \converge_cnt_reg[12]_i_2_n_0 ;
  wire \converge_cnt_reg[12]_i_2_n_1 ;
  wire \converge_cnt_reg[12]_i_2_n_2 ;
  wire \converge_cnt_reg[12]_i_2_n_3 ;
  wire \converge_cnt_reg[16]_i_2_n_0 ;
  wire \converge_cnt_reg[16]_i_2_n_1 ;
  wire \converge_cnt_reg[16]_i_2_n_2 ;
  wire \converge_cnt_reg[16]_i_2_n_3 ;
  wire \converge_cnt_reg[20]_i_2_n_0 ;
  wire \converge_cnt_reg[20]_i_2_n_1 ;
  wire \converge_cnt_reg[20]_i_2_n_2 ;
  wire \converge_cnt_reg[20]_i_2_n_3 ;
  wire \converge_cnt_reg[22]_i_2_n_3 ;
  wire \converge_cnt_reg[4]_i_2_n_0 ;
  wire \converge_cnt_reg[4]_i_2_n_1 ;
  wire \converge_cnt_reg[4]_i_2_n_2 ;
  wire \converge_cnt_reg[4]_i_2_n_3 ;
  wire \converge_cnt_reg[8]_i_2_n_0 ;
  wire \converge_cnt_reg[8]_i_2_n_1 ;
  wire \converge_cnt_reg[8]_i_2_n_2 ;
  wire \converge_cnt_reg[8]_i_2_n_3 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg1;
  wire [5:0]\fs_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg1;
  wire [5:0]\lf_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg2;
  wire lffs_sel_i_1_n_0;
  wire [2:2]new_txcoeff;
  wire \new_txcoeff[2]_i_1_n_0 ;
  wire new_txcoeff_done;
  wire new_txcoeff_done_reg_0;
  wire new_txcoeff_done_reg_1;
  wire \new_txcoeff_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg1;
  wire new_txcoeff_req_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pipe_pclk_in;
  wire pipe_rx0_eq_adapt_done;
  wire preset_done;
  wire preset_done_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg1;
  wire [2:0]\preset_reg1_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg2;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire rxeq_done;
  wire rxeq_lffs_sel_reg;
  wire rxeq_lffs_sel_reg_0;
  wire \rxeq_new_txcoeff_reg[2] ;
  wire \rxeq_new_txcoeff_reg[2]_0 ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_preset_valid;
  wire rxeqscan_adapt_done;
  wire rxeqscan_lffs_sel;
  wire rxeqscan_new_txcoeff_done;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg1;
  wire [17:0]\txcoeff_reg1_reg[17]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg1;
  wire [3:0]\txpreset_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg2;
  wire [3:1]\NLW_converge_cnt_reg[22]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[22]_i_2_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0F00CFCF0F11CFDD)) 
    \FSM_onehot_fsm[1]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I2(preset_valid_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABBBBBBBA)) 
    \FSM_onehot_fsm[3]_i_1 
       (.I0(\FSM_onehot_fsm[3]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm[3]_i_3_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_3_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_4_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_5_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_6_n_0 ),
        .O(\FSM_onehot_fsm[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_onehot_fsm[3]_i_2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(new_txcoeff_req_reg2),
        .I2(preset_valid_reg2),
        .O(\FSM_onehot_fsm[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_onehot_fsm[3]_i_3 
       (.I0(adapt_done_cnt_reg_n_0),
        .I1(out[1]),
        .I2(out[0]),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAAABAAAAAAAA)) 
    \FSM_onehot_fsm[4]_i_1 
       (.I0(\FSM_onehot_fsm[4]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_4_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_5_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_6_n_0 ),
        .I5(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    \FSM_onehot_fsm[4]_i_10 
       (.I0(converge_cnt[13]),
        .I1(converge_cnt[2]),
        .I2(converge_cnt[21]),
        .I3(converge_cnt[19]),
        .O(\FSM_onehot_fsm[4]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hBFFF)) 
    \FSM_onehot_fsm[4]_i_11 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(converge_cnt[11]),
        .I3(converge_cnt[8]),
        .O(\FSM_onehot_fsm[4]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_fsm[4]_i_12 
       (.I0(converge_cnt[22]),
        .I1(converge_cnt[0]),
        .I2(converge_cnt[7]),
        .O(\FSM_onehot_fsm[4]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF7FFFFFFFF)) 
    \FSM_onehot_fsm[4]_i_13 
       (.I0(converge_cnt[9]),
        .I1(converge_cnt[10]),
        .I2(converge_cnt[4]),
        .I3(converge_cnt[5]),
        .I4(converge_cnt[12]),
        .I5(converge_cnt[15]),
        .O(\FSM_onehot_fsm[4]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_14 
       (.I0(converge_cnt[17]),
        .I1(converge_cnt[18]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[1]),
        .O(\FSM_onehot_fsm[4]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888F88888)) 
    \FSM_onehot_fsm[4]_i_2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(out[0]),
        .I4(out[1]),
        .I5(adapt_done_cnt_reg_n_0),
        .O(\FSM_onehot_fsm[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \FSM_onehot_fsm[4]_i_3 
       (.I0(converge_cnt[1]),
        .I1(converge_cnt[20]),
        .I2(converge_cnt[18]),
        .I3(converge_cnt[17]),
        .I4(\FSM_onehot_fsm[4]_i_7_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFDFFFFFFFD)) 
    \FSM_onehot_fsm[4]_i_4 
       (.I0(converge_cnt[15]),
        .I1(converge_cnt[12]),
        .I2(converge_cnt[4]),
        .I3(converge_cnt[5]),
        .I4(out[1]),
        .I5(out[0]),
        .O(\FSM_onehot_fsm[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \FSM_onehot_fsm[4]_i_5 
       (.I0(converge_cnt[19]),
        .I1(converge_cnt[7]),
        .I2(converge_cnt[11]),
        .I3(\FSM_onehot_fsm[4]_i_8_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_9_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \FSM_onehot_fsm[4]_i_6 
       (.I0(\FSM_onehot_fsm[4]_i_10_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_11_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_12_n_0 ),
        .I3(\FSM_onehot_fsm[4]_i_13_n_0 ),
        .I4(\FSM_onehot_fsm[4]_i_14_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_7_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_7 
       (.I0(converge_cnt[16]),
        .I1(converge_cnt[3]),
        .I2(converge_cnt[14]),
        .I3(converge_cnt[6]),
        .O(\FSM_onehot_fsm[4]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_onehot_fsm[4]_i_8 
       (.I0(converge_cnt[9]),
        .I1(converge_cnt[10]),
        .I2(converge_cnt[8]),
        .I3(converge_cnt[0]),
        .O(\FSM_onehot_fsm[4]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_onehot_fsm[4]_i_9 
       (.I0(converge_cnt[22]),
        .I1(converge_cnt[13]),
        .I2(converge_cnt[2]),
        .I3(converge_cnt[21]),
        .O(\FSM_onehot_fsm[4]_i_9_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \FSM_onehot_fsm_rx[2]_i_1 
       (.I0(out[1]),
        .I1(Q[0]),
        .I2(out[0]),
        .I3(preset_done),
        .I4(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \FSM_onehot_fsm_rx[5]_i_1 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(\FSM_onehot_fsm_rx_reg[5] [2]),
        .I3(\FSM_onehot_fsm_rx_reg[5] [0]),
        .I4(\FSM_onehot_fsm_rx_reg[5] [1]),
        .I5(Q[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \FSM_onehot_fsm_rx[6]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .I3(preset_done),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_rx[6]_i_2_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm_rx[6]_i_2 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .O(\FSM_onehot_fsm_rx[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AAAFFFF0800)) 
    adapt_done_cnt_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .I5(adapt_done_cnt_i_2_n_0),
        .O(adapt_done_cnt_i_1_n_0));
  LUT5 #(
    .INIT(32'h55005503)) 
    adapt_done_cnt_i_2
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(adapt_done_cnt_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hF8000000)) 
    adapt_done_i_1
       (.I0(out[1]),
        .I1(out[0]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(new_txcoeff_req_reg2),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h44444044)) 
    \converge_cnt[0]_i_1 
       (.I0(converge_cnt[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[0]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[10]_i_1 
       (.I0(converge_cnt0[10]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[10]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[11]_i_1 
       (.I0(converge_cnt0[11]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[11]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[12]_i_1 
       (.I0(converge_cnt0[12]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[12]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[13]_i_1 
       (.I0(converge_cnt0[13]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[13]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[14]_i_1 
       (.I0(converge_cnt0[14]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[14]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[15]_i_1 
       (.I0(converge_cnt0[15]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[15]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[16]_i_1 
       (.I0(converge_cnt0[16]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[16]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[17]_i_1 
       (.I0(converge_cnt0[17]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[17]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[18]_i_1 
       (.I0(converge_cnt0[18]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[18]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[19]_i_1 
       (.I0(converge_cnt0[19]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[19]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[1]_i_1 
       (.I0(converge_cnt0[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[1]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[20]_i_1 
       (.I0(converge_cnt0[20]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[20]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[21]_i_1 
       (.I0(converge_cnt0[21]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[21]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[22]_i_1 
       (.I0(converge_cnt0[22]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[22]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[2]_i_1 
       (.I0(converge_cnt0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[2]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[3]_i_1 
       (.I0(converge_cnt0[3]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[3]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[4]_i_1 
       (.I0(converge_cnt0[4]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[4]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[5]_i_1 
       (.I0(converge_cnt0[5]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[5]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[6]_i_1 
       (.I0(converge_cnt0[6]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[6]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[7]_i_1 
       (.I0(converge_cnt0[7]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[7]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[8]_i_1 
       (.I0(converge_cnt0[8]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[8]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[9]_i_1 
       (.I0(converge_cnt0[9]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(out[0]),
        .I3(out[1]),
        .I4(adapt_done_cnt_reg_n_0),
        .O(converge_cnt_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[0]),
        .Q(converge_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[10]),
        .Q(converge_cnt[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[11]),
        .Q(converge_cnt[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[12]),
        .Q(converge_cnt[12]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[12]_i_2 
       (.CI(\converge_cnt_reg[8]_i_2_n_0 ),
        .CO({\converge_cnt_reg[12]_i_2_n_0 ,\converge_cnt_reg[12]_i_2_n_1 ,\converge_cnt_reg[12]_i_2_n_2 ,\converge_cnt_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[12:9]),
        .S(converge_cnt[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[13]),
        .Q(converge_cnt[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[14]),
        .Q(converge_cnt[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[15]),
        .Q(converge_cnt[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[16]),
        .Q(converge_cnt[16]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[16]_i_2 
       (.CI(\converge_cnt_reg[12]_i_2_n_0 ),
        .CO({\converge_cnt_reg[16]_i_2_n_0 ,\converge_cnt_reg[16]_i_2_n_1 ,\converge_cnt_reg[16]_i_2_n_2 ,\converge_cnt_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[16:13]),
        .S(converge_cnt[16:13]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[17]),
        .Q(converge_cnt[17]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[18]),
        .Q(converge_cnt[18]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[19]),
        .Q(converge_cnt[19]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[1]),
        .Q(converge_cnt[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[20]),
        .Q(converge_cnt[20]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[20]_i_2 
       (.CI(\converge_cnt_reg[16]_i_2_n_0 ),
        .CO({\converge_cnt_reg[20]_i_2_n_0 ,\converge_cnt_reg[20]_i_2_n_1 ,\converge_cnt_reg[20]_i_2_n_2 ,\converge_cnt_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[20:17]),
        .S(converge_cnt[20:17]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[21]),
        .Q(converge_cnt[21]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[22] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[22]),
        .Q(converge_cnt[22]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[22]_i_2 
       (.CI(\converge_cnt_reg[20]_i_2_n_0 ),
        .CO({\NLW_converge_cnt_reg[22]_i_2_CO_UNCONNECTED [3:1],\converge_cnt_reg[22]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[22]_i_2_O_UNCONNECTED [3:2],converge_cnt0[22:21]}),
        .S({1'b0,1'b0,converge_cnt[22:21]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[2]),
        .Q(converge_cnt[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[3]),
        .Q(converge_cnt[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[4]),
        .Q(converge_cnt[4]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[4]_i_2_n_0 ,\converge_cnt_reg[4]_i_2_n_1 ,\converge_cnt_reg[4]_i_2_n_2 ,\converge_cnt_reg[4]_i_2_n_3 }),
        .CYINIT(converge_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[4:1]),
        .S(converge_cnt[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[5]),
        .Q(converge_cnt[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[6]),
        .Q(converge_cnt[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[7]),
        .Q(converge_cnt[7]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[8]),
        .Q(converge_cnt[8]),
        .R(RST_CPLLRESET));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \converge_cnt_reg[8]_i_2 
       (.CI(\converge_cnt_reg[4]_i_2_n_0 ),
        .CO({\converge_cnt_reg[8]_i_2_n_0 ,\converge_cnt_reg[8]_i_2_n_1 ,\converge_cnt_reg[8]_i_2_n_2 ,\converge_cnt_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[8:5]),
        .S(converge_cnt[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[9]),
        .Q(converge_cnt[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [0]),
        .Q(fs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [1]),
        .Q(fs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [2]),
        .Q(fs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [3]),
        .Q(fs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [4]),
        .Q(fs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [5]),
        .Q(fs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [0]),
        .Q(lf_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [1]),
        .Q(lf_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [2]),
        .Q(lf_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [3]),
        .Q(lf_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [4]),
        .Q(lf_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [5]),
        .Q(lf_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hAAAAAAFEAAAAAA02)) 
    lffs_sel_i_1
       (.I0(\FSM_onehot_fsm[3]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(rxeqscan_lffs_sel),
        .O(lffs_sel_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    lffs_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lffs_sel_i_1_n_0),
        .Q(rxeqscan_lffs_sel),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hDDDDDDDC88888888)) 
    \new_txcoeff[2]_i_1 
       (.I0(\FSM_onehot_fsm[3]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I5(new_txcoeff),
        .O(\new_txcoeff[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \new_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\new_txcoeff[2]_i_1_n_0 ),
        .Q(new_txcoeff),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1_reg_0),
        .Q(new_txcoeff_req_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(preset_valid_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(preset_done_1));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_done_1),
        .Q(preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [0]),
        .Q(preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [1]),
        .Q(preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [2]),
        .Q(preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hA800FFFFA8000000)) 
    rxeq_adapt_done_i_1
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg_reg_0),
        .I2(rxeqscan_adapt_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg),
        .I5(pipe_rx0_eq_adapt_done),
        .O(new_txcoeff_done_reg_0));
  LUT6 #(
    .INIT(64'hFF00FF33AA00A800)) 
    rxeq_adapt_done_reg_i_1
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg),
        .I2(rxeqscan_new_txcoeff_done),
        .I3(Q[3]),
        .I4(\rxeq_new_txcoeff_reg[2] ),
        .I5(rxeq_adapt_done_reg_reg_0),
        .O(adapt_done_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    rxeq_done_i_1
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(rxeqscan_new_txcoeff_done),
        .O(rxeq_done));
  LUT6 #(
    .INIT(64'h80FFFFFF80FF0000)) 
    rxeq_lffs_sel_i_1
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(rxeqscan_lffs_sel),
        .I3(rxeq_lffs_sel_reg),
        .I4(rxeq_adapt_done_reg),
        .I5(rxeq_lffs_sel_reg_0),
        .O(new_txcoeff_done_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'hA3B3A080)) 
    \rxeq_new_txcoeff[2]_i_1 
       (.I0(new_txcoeff),
        .I1(\rxeq_new_txcoeff_reg[2] ),
        .I2(Q[3]),
        .I3(rxeqscan_new_txcoeff_done),
        .I4(\rxeq_new_txcoeff_reg[2]_0 ),
        .O(\new_txcoeff_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    rxeq_new_txcoeff_req_i_1
       (.I0(Q[3]),
        .I1(rxeqscan_new_txcoeff_done),
        .O(rxeq_new_txcoeff_req));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [0]),
        .Q(txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [10]),
        .Q(txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [11]),
        .Q(txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [12]),
        .Q(txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [13]),
        .Q(txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [14]),
        .Q(txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [15]),
        .Q(txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [16]),
        .Q(txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [17]),
        .Q(txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [1]),
        .Q(txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [2]),
        .Q(txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [3]),
        .Q(txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [4]),
        .Q(txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [5]),
        .Q(txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [6]),
        .Q(txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [7]),
        .Q(txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [8]),
        .Q(txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [9]),
        .Q(txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [0]),
        .Q(txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [1]),
        .Q(txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [2]),
        .Q(txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [3]),
        .Q(txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(RST_CPLLRESET));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
